;; Function switch_core_media_negotiate_sdp (switch_core_media_negotiate_sdp)

switch_core_media_negotiate_sdp (struct switch_core_session_t * session, const char * r_sdp, uint8_t * proceed, switch_sdp_type_t sdp_type)
{
  void * D.49988;
  unsigned int ivtmp.1090;
  struct matches[30] * D.49978;
  unsigned int ivtmp.1083;
  void * D.49971;
  unsigned int ivtmp.1076;
  void * D.49960;
  unsigned int ivtmp.1067;
  struct matches[30] * D.49951;
  unsigned int ivtmp.1062;
  _Bool prephitmp.1055;
  _Bool pretmp.1054;
  switch_rtp_bug_flag_t prephitmp.1053;
  struct switch_core_media_params_t * pretmp.1050;
  sdp_media_e prephitmp.1049;
  _Bool prephitmp.1047;
  _Bool pretmp.1046;
  const int prephitmp.1043;
  int prephitmp.1039;
  const int pretmp.1036;
  const char * prephitmp.1031;
  _Bool prephitmp.1026;
  int D.49755;
  switch_bool_t D.49754;
  int D.49753;
  int D.49752;
  int D.49751;
  int D.49750;
  int D.49749;
  int D.49748;
  int D.49747;
  int D.49743;
  switch_bool_t D.49742;
  int D.49741;
  int D.49740;
  int D.49739;
  int D.49738;
  int D.49737;
  int D.49736;
  int D.49735;
  int D.49731;
  switch_bool_t D.49730;
  int D.49729;
  int D.49728;
  int D.49727;
  int D.49726;
  int D.49725;
  int D.49724;
  int D.49723;
  int D.49719;
  switch_bool_t D.49718;
  int D.49717;
  int D.49716;
  int D.49715;
  int D.49714;
  int D.49713;
  int D.49712;
  int D.49711;
  int D.49707;
  switch_bool_t D.49706;
  int D.49705;
  int D.49704;
  int D.49703;
  int D.49702;
  int D.49701;
  int D.49700;
  int D.49699;
  int D.49695;
  switch_bool_t D.49694;
  int D.49693;
  int D.49692;
  int D.49691;
  int D.49690;
  int D.49689;
  int D.49688;
  int D.49687;
  int D.49683;
  switch_bool_t D.49682;
  int D.49681;
  int D.49680;
  int D.49679;
  int D.49678;
  int D.49677;
  int D.49676;
  int D.49675;
  uint32_t D.47965;
  uint32_t D.47964;
  struct switch_mutex_t * D.47963;
  struct switch_codec_interface_t * D.47962;
  const struct switch_codec_implementation_t * D.47961;
  const char D.47957;
  const char D.47950;
  int D.47946;
  const char D.47943;
  const char D.47939;
  uint32_t D.47934;
  uint32_t D.47933;
  struct switch_mutex_t * D.47932;
  struct switch_codec_interface_t * D.47931;
  const struct switch_codec_implementation_t * D.47930;
  const char D.47926;
  int D.47922;
  const char D.47919;
  const char D.47915;
  unsigned char csui.173;
  const char D.47900;
  int D.47890;
  const char D.47887;
  const char D.47877;
  uint8_t D.47874;
  struct payload_map_t * pmap;
  uint8_t D.47871;
  struct payload_map_t * pmap;
  struct payload_map_t * pmap;
  int j;
  char tmp[50];
  const struct switch_codec_implementation_t * imp;
  int crypto_tag;
  int i;
  int vmatch;
  const struct switch_codec_implementation_t * mimp;
  const char * rm_encoding;
  struct sdp_rtpmap_t * map;
  char tmp[50];
  struct payload_map_t * pmap;
  int j;
  const struct switch_codec_implementation_t * timp;
  int num;
  char tmp[80];
  char * prefs[1];
  const struct switch_codec_implementation_t * search[1];
  int j;
  uint32_t codec_rate;
  uint32_t bit_rate;
  const struct switch_codec_implementation_t * imp;
  struct switch_codec_fmtp_t codec_fmtp;
  uint32_t map_bit_rate;
  const char * rm_encoding;
  int32_t i;
  int crypto_tag;
  struct sdp_rtpmap_t * map;
  const char * err;
  char tmp[32];
  switch_port_t remote_port;
  char * remote_host;
  struct switch_core_session_message_t * msg;
  struct switch_channel_t * other_channel;
  int pass;
  const char * var;
  struct switch_t38_options_t * t38_options;
  struct switch_core_session_t * other_session;
  struct sdp_connection_t * connection;
  register int __result;
  static const char __func__[32] = "switch_core_media_negotiate_sdp";
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_negotiate_sdp";
  int nm_idx;
  int m_idx;
  const char * tmp;
  uint32_t fmtp_remote_codec_rate;
  uint32_t remote_codec_rate;
  int codec_ms;
  struct matches near_matches[30];
  struct matches matches[30];
  struct sdp_rtpmap_t * near_map;
  struct sdp_rtpmap_t * mmap;
  const struct switch_codec_implementation_t * near_match;
  const struct switch_codec_implementation_t * mimp;
  uint32_t near_rate;
  struct switch_media_handle_t * smh;
  int total_codecs;
  const struct switch_codec_implementation_t * * codec_array;
  int reneg;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  int scrooge;
  int got_webrtc;
  int got_udptl;
  int got_savp;
  int got_avp;
  int got_audio;
  int got_video_crypto;
  int got_crypto;
  const char * val;
  struct switch_channel_t * channel;
  int greedy;
  int recvonly;
  int sendonly;
  int dmaxptime;
  int maxptime;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  switch_payload_t cng_pt;
  switch_payload_t best_te;
  uint8_t match;
  switch_status_t D.45316;
  int D.45306;
  switch_payload_t D.45305;
  int D.45304;
  switch_payload_t D.45303;
  char * D.45302;
  char * D.45301;
  int D.45300;
  switch_port_t D.45299;
  char * D.45298;
  const char * D.45297;
  char * D.45296;
  uint32_t D.45295;
  int D.45294;
  const int D.45293;
  unsigned char D.45292;
  char * D.45291;
  switch_payload_t D.45290;
  struct switch_rtp_t * D.45287;
  struct payload_map_t * D.45286;
  uint32_t D.45283;
  int D.45282;
  const int D.45281;
  const uint32_t D.45280;
  const struct switch_codec_implementation_t * D.45279;
  uint32_t D.45278;
  <unnamed-unsigned:7> D.45277;
  const char * D.45276;
  const char * D.45275;
  struct sdp_rtpmap_t * D.45274;
  _Bool D.45267;
  _Bool D.45266;
  const uint32_t D.45263;
  long unsigned int D.45262;
  int D.45259;
  const char * D.45255;
  int D.45251;
  const switch_payload_t D.45250;
  char * const D.45249;
  int D.45248;
  <unnamed-unsigned:7> D.45247;
  uint32_t D.45244;
  switch_call_direction_t D.45241;
  const switch_codec_type_t D.45238;
  const char * D.45227;
  int D.45219;
  char * D.45214;
  short unsigned int D.45213;
  const unsigned char D.45185;
  const unsigned char D.45174;
  int D.45168;
  uint8_t D.45164;
  uint8_t D.45163;
  const char * D.45160;
  int D.45154;
  int D.45151;
  int D.45143;
  int D.45140;
  int D.45137;
  const char * D.45124;
  int D.45120;
  switch_call_direction_t D.45114;
  int D.45111;
  switch_payload_t D.45110;
  uint32_t D.45109;
  int32_t D.45107;
  switch_status_t D.45099;
  uint32_t D.45098;
  int D.45093;
  switch_payload_t D.45092;
  int D.45089;
  char * D.45088;
  short unsigned int D.45087;
  char * D.45086;
  const char * D.45085;
  const char * D.45082;
  const char * D.45079;
  int D.45070;
  const char * D.45066;
  uint32_t D.45064;
  const int D.45063;
  uint32_t D.45062;
  int D.45061;
  const int D.45060;
  const uint32_t D.45059;
  int D.45056;
  const uint32_t D.45055;
  unsigned char D.45054;
  <unnamed-unsigned:7> D.45053;
  char * D.45052;
  char * const D.45051;
  char * D.45050;
  const char * D.45049;
  switch_payload_t D.45048;
  uint32_t D.45043;
  int D.45042;
  const int D.45041;
  const uint32_t D.45040;
  const struct switch_codec_implementation_t * D.45039;
  uint32_t D.45038;
  <unnamed-unsigned:7> D.45037;
  const char * D.45036;
  const char * D.45035;
  struct sdp_rtpmap_t * D.45034;
  int near_rate.96;
  int D.45028;
  const uint32_t D.45027;
  char * const D.45026;
  const int D.45024;
  char * const D.45013;
  _Bool D.45009;
  _Bool D.45008;
  _Bool D.45007;
  _Bool D.45004;
  _Bool D.45003;
  _Bool D.45002;
  switch_rtp_crypto_mode_t D.45001;
  _Bool D.44999;
  _Bool D.44998;
  _Bool D.44997;
  int D.44996;
  int codec_rate.94;
  int D.44993;
  _Bool D.44991;
  _Bool D.44990;
  _Bool D.44989;
  const uint32_t D.44984;
  int D.44979;
  int D.44977;
  _Bool D.44974;
  _Bool D.44973;
  _Bool D.44972;
  _Bool D.44969;
  _Bool D.44968;
  int D.44963;
  int D.44960;
  _Bool D.44957;
  _Bool D.44956;
  _Bool D.44955;
  const uint32_t D.44947;
  int D.44944;
  int D.44937;
  int D.44936;
  int D.44930;
  const int D.44929;
  int D.44928;
  const switch_payload_t D.44927;
  char * const D.44926;
  int remote_codec_rate.92;
  int D.44924;
  const switch_codec_type_t D.44921;
  const int D.44920;
  int D.44911;
  int D.44908;
  switch_status_t D.44905;
  int D.44901;
  int D.44897;
  const char * D.44893;
  int D.44890;
  const char * D.44889;
  uint32_t D.44885;
  uint32_t D.44884;
  _Bool D.44879;
  _Bool D.44878;
  _Bool D.44877;
  switch_payload_t D.44869;
  int D.44868;
  int D.44863;
  int32_t D.44858;
  int D.44857;
  <unnamed-unsigned:7> D.44856;
  long unsigned int D.44855;
  long unsigned int D.44854;
  int D.44848;
  int D.44839;
  _Bool D.44836;
  _Bool D.44835;
  _Bool D.44834;
  _Bool D.44831;
  _Bool D.44830;
  _Bool D.44829;
  const char * D.44825;
  unsigned int D.44822;
  switch_core_media_NDLB_t D.44821;
  int D.44815;
  int D.44810;
  int D.44805;
  char * D.44800;
  short unsigned int D.44799;
  int D.44795;
  int D.44787;
  int D.44784;
  int D.44781;
  _Bool D.44779;
  _Bool D.44778;
  _Bool D.44777;
  char * D.44773;
  struct switch_channel_t * D.44772;
  const char * err.90;
  switch_status_t D.44768;
  int D.44767;
  int D.44766;
  char * D.44765;
  char * D.44764;
  switch_port_t D.44762;
  char * D.44760;
  int D.39032;
  _Bool D.44758;
  _Bool D.44757;
  _Bool D.44756;
  uint16_t D.44753;
  char * D.44752;
  const char * D.44751;
  struct payload_map_t * D.44750;
  int D.44747;
  const char * D.44746;
  int D.44743;
  const char * D.44742;
  char * D.44741;
  char * D.44740;
  uint32_t D.44737;
  struct switch_core_session_t * other_session.89;
  switch_status_t D.44733;
  uint8_t D.44730;
  uint32_t D.44728;
  uint32_t D.44726;
  uint32_t D.44724;
  uint32_t D.44723;
  int D.44716;
  int D.44707;
  uint32_t D.44706;
  int D.44703;
  const char * D.44702;
  int D.44699;
  long unsigned int D.44697;
  _Bool D.44678;
  _Bool D.44677;
  _Bool D.44676;
  sdp_proto_e D.44675;
  int D.44672;
  const char * D.44669;
  sdp_proto_e D.44666;
  const char * D.44665;
  const char * D.44663;
  const char * D.44661;
  int D.44655;
  struct switch_media_bug_t * D.44649;
  int D.44640;
  int D.44636;
  int32_t D.44631;
  _Bool D.44626;
  _Bool D.44624;
  int D.44621;
  const char * D.44619;
  int D.44616;
  int D.44614;
  uint8_t D.44606;
  struct switch_rtp_t * D.44605;
  int D.44602;
  int D.44598;
  int D.44594;
  const char * D.44590;
  const char * D.44548;
  struct sdp_connection_t * D.44546;
  _Bool D.44544;
  _Bool D.44543;
  _Bool D.44542;
  unsigned char D.44541;
  unsigned char D.44540;
  struct switch_channel_t * D.44530;
  unsigned int D.44529;
  char * D.44526;
  unsigned int D.44523;
  unsigned int D.44522;
  switch_rtp_bug_flag_t D.44521;
  char * D.44518;
  int D.44514;
  int D.44513;
  char * D.44509;
  char * D.44508;
  const char * D.44507;
  struct sdp_origin_t * D.44506;
  int D.44502;
  int D.44498;
  int D.44494;
  int32_t D.44491;
  int32_t D.44490;
  struct switch_channel_t * D.44482;
  struct switch_core_session_t * D.44481;
  int D.44478;
  int D.44473;
  size_t D.44472;
  struct switch_core_media_params_t * D.44471;

  # BLOCK 2 freq:23
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG match => 0
  # DEBUG best_te => 0
  # DEBUG te => 0
  # DEBUG cng_pt => 0
  # DEBUG ptime => 0
  # DEBUG dptime => 0
  # DEBUG maxptime => 0
  # DEBUG dmaxptime => 0
  # DEBUG sendonly => 0
  # DEBUG recvonly => 0
  # DEBUG greedy => 0
  # DEBUG x => 0
  # DEBUG skip => 0
  channel_162 = switch_core_session_get_channel (session_161(D));
  # DEBUG channel => channel_162
  # DEBUG crypto => 0B
  # DEBUG got_crypto => 0
  # DEBUG got_video_crypto => 0
  # DEBUG got_audio => 0
  # DEBUG got_avp => 0
  # DEBUG got_video_avp => 0
  # DEBUG got_video_savp => 0
  # DEBUG got_savp => 0
  # DEBUG got_udptl => 0
  # DEBUG got_webrtc => 0
  # DEBUG scrooge => 0
  # DEBUG parser => 0B
  # DEBUG reneg => 1
  # DEBUG near_rate => 0
  # DEBUG mimp => 0B
  # DEBUG near_match => 0B
  # DEBUG mmap => 0B
  # DEBUG near_map => 0B
  matches = {};
  near_matches = {};
  # DEBUG codec_ms => 0
  # DEBUG remote_codec_rate => 0
  # DEBUG fmtp_remote_codec_rate => 0
  # DEBUG m_idx => 0
  # DEBUG nm_idx => 0
  if (session_161(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 2922, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:23
  # PRED: 2 [100.0%]  (false,exec)
  smh_186 = session_161(D)->media_handle;
  # DEBUG smh => smh_186
  if (smh_186 == 0B)
    goto <bb 429>;
  else
    goto <bb 5>;
  # SUCC: 429 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:18
  # PRED: 4 [78.4%]  (false,exec)
  # DEBUG D#15 => &smh_186->engines
  # DEBUG a_engine => D#15
  # DEBUG D#14 => &smh_186->engines[1]
  # DEBUG v_engine => D#14
  codec_array_190 = &smh_186->codecs;
  # DEBUG codec_array => codec_array_190
  D.44471_191 = smh_186->mparams;
  total_codecs_192 = D.44471_191->num_codecs;
  # DEBUG total_codecs => total_codecs_192
  D.44472_194 = strlen (r_sdp_193(D));
  D.44473_195 = (int) D.44472_194;
  parser_196 = sdp_parse (0B, r_sdp_193(D), D.44473_195, 0);
  # DEBUG parser => parser_196
  if (parser_196 == 0B)
    goto <bb 429>;
  else
    goto <bb 6>;
  # SUCC: 429 [21.6%]  (true,exec) 6 [78.4%]  (false,exec)

  # BLOCK 6 freq:14
  # PRED: 5 [78.4%]  (false,exec)
  sdp_198 = sdp_session (parser_196);
  # DEBUG sdp => sdp_198
  if (sdp_198 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [10.1%]  (true,exec) 8 [89.9%]  (false,exec)

  # BLOCK 7 freq:1
  # PRED: 6 [10.1%]  (true,exec)
  sdp_parser_free (parser_196);
  goto <bb 429>;
  # SUCC: 429 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:13
  # PRED: 6 [89.9%]  (false,exec)
  D.44478_200 = dtls_ok (session_161(D));
  if (D.44478_200 != 0)
    goto <bb 9>;
  else
    goto <bb 20>;
  # SUCC: 9 [29.0%]  (true,exec) 20 [71.0%]  (false,exec)

  # BLOCK 9 freq:4
  # PRED: 8 [29.0%]  (true,exec)
  D.44481_201 = smh_186->session;
  D.44482_202 = D.44481_201->channel;
  tmp_203 = switch_channel_get_variable_dup (D.44482_202, "webrtc_enable_dtls", 1, -1);
  # DEBUG tmp => tmp_203
  if (tmp_203 != 0B)
    goto <bb 10>;
  else
    goto <bb 20>;
  # SUCC: 10 [69.8%]  (true,exec) 20 [30.2%]  (false,exec)

  # BLOCK 10 freq:2
  # PRED: 9 [69.8%]  (true,exec)
  # DEBUG expr => tmp_203
  D.49675_1550 = strcasecmp (tmp_203, "no");
  if (D.49675_1550 == 0)
    goto <bb 19>;
  else
    goto <bb 11>;
  # SUCC: 19 [39.0%]  (true,exec) 11 [61.0%]  (false,exec)

  # BLOCK 11 freq:1
  # PRED: 10 [61.0%]  (false,exec)
  D.49676_1551 = strcasecmp (tmp_203, "off");
  if (D.49676_1551 == 0)
    goto <bb 19>;
  else
    goto <bb 12>;
  # SUCC: 19 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

  # BLOCK 12 freq:1
  # PRED: 11 [61.0%]  (false,exec)
  D.49677_1552 = strcasecmp (tmp_203, "false");
  if (D.49677_1552 == 0)
    goto <bb 19>;
  else
    goto <bb 13>;
  # SUCC: 19 [39.0%]  (true,exec) 13 [61.0%]  (false,exec)

  # BLOCK 13
  # PRED: 12 [61.0%]  (false,exec)
  D.49678_1553 = strcasecmp (tmp_203, "f");
  if (D.49678_1553 == 0)
    goto <bb 19>;
  else
    goto <bb 14>;
  # SUCC: 19 [39.0%]  (true,exec) 14 [61.0%]  (false,exec)

  # BLOCK 14
  # PRED: 13 [61.0%]  (false,exec)
  D.49679_1554 = strcasecmp (tmp_203, "disabled");
  if (D.49679_1554 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;
  # SUCC: 19 [39.0%]  (true,exec) 15 [61.0%]  (false,exec)

  # BLOCK 15
  # PRED: 14 [61.0%]  (false,exec)
  D.49680_1555 = strcasecmp (tmp_203, "inactive");
  if (D.49680_1555 == 0)
    goto <bb 19>;
  else
    goto <bb 16>;
  # SUCC: 19 [39.0%]  (true,exec) 16 [61.0%]  (false,exec)

  # BLOCK 16
  # PRED: 15 [61.0%]  (false,exec)
  D.49681_1556 = strcasecmp (tmp_203, "disallow");
  if (D.49681_1556 == 0)
    goto <bb 19>;
  else
    goto <bb 17>;
  # SUCC: 19 [61.0%]  (true,exec) 17 [39.0%]  (false,exec)

  # BLOCK 17
  # PRED: 16 [39.0%]  (false,exec)
  D.49682_1557 = switch_is_number (tmp_203);
  if (D.49682_1557 != 0)
    goto <bb 18>;
  else
    goto <bb 430>;
  # SUCC: 18 [29.0%]  (true,exec) 430 [71.0%]  (false,exec)

  # BLOCK 18
  # PRED: 17 [29.0%]  (true,exec)
  # DEBUG __nptr => tmp_203
  D.49683_1558 = strtol (tmp_203, 0B, 10);
  if (D.49683_1558 == 0)
    goto <bb 19>;
  else
    goto <bb 430>;
  # SUCC: 19 [39.0%]  (true,exec) 430 [61.0%]  (false,exec)

  # BLOCK 19 freq:1
  # PRED: 10 [39.0%]  (true,exec) 11 [39.0%]  (true,exec) 12 [39.0%]  (true,exec) 13 [39.0%]  (true,exec) 14 [39.0%]  (true,exec) 15 [39.0%]  (true,exec) 16 [61.0%]  (true,exec) 18 [39.0%]  (true,exec)
  D.44481_205 = smh_186->session;
  D.44482_206 = D.44481_205->channel;
  switch_channel_clear_flag (D.44482_206, 111);
  D.44481_207 = smh_186->session;
  D.44482_208 = D.44481_207->channel;
  switch_channel_clear_flag (D.44482_208, 109);
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:13
  # PRED: 8 [71.0%]  (false,exec) 9 [30.2%]  (false,exec) 430 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec)
  switch_core_session_parse_crypto_prefs (session_161(D));
  # DEBUG engine => D#15
  pmap_1457 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].payload_map;
  # DEBUG pmap => pmap_1457
  # DEBUG pmap => pmap_1457
  if (pmap_1457 != 0B)
    goto <bb 21>;
  else
    goto <bb 25>;
  # SUCC: 21 [95.5%]  (true,exec) 25 [4.5%]  (false,exec)

  # BLOCK 21 freq:12
  # PRED: 20 [95.5%]  (true,exec)
  D.47871_1661 = pmap_1457->allocated;
  if (D.47871_1661 != 0)
    goto <bb 22>;
  else
    goto <bb 25>;
  # SUCC: 22 [95.5%]  (true,exec) 25 [4.5%]  (false,exec)

  # BLOCK 22 freq:12
  # PRED: 21 [95.5%]  (true,exec)
  # pmap_2093 = PHI <pmap_1457(21)>
  # SUCC: 23 [100.0%]  (fallthru)

  # BLOCK 23 freq:132
  # PRED: 22 [100.0%]  (fallthru) 24 [95.5%]  (true,exec)
  # pmap_1747 = PHI <pmap_2093(22), pmap_1459(24)>
  pmap_1747->negotiated = 0;
  pmap_1747->current = 0;
  pmap_1459 = pmap_1747->next;
  # DEBUG pmap => pmap_1459
  # DEBUG pmap => pmap_1459
  if (pmap_1459 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [95.5%]  (true,exec) 25 [4.5%]  (false,exec)

  # BLOCK 24 freq:126
  # PRED: 23 [95.5%]  (true,exec)
  D.47871_1460 = pmap_1459->allocated;
  if (D.47871_1460 != 0)
    goto <bb 23>;
  else
    goto <bb 25>;
  # SUCC: 23 [95.5%]  (true,exec) 25 [4.5%]  (false,exec)

  # BLOCK 25 freq:13
  # PRED: 24 [4.5%]  (false,exec) 23 [4.5%]  (false,exec) 20 [4.5%]  (false,exec) 21 [4.5%]  (false,exec)
  # DEBUG engine => D#14
  pmap_1461 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].payload_map;
  # DEBUG pmap => pmap_1461
  # DEBUG pmap => pmap_1461
  if (pmap_1461 != 0B)
    goto <bb 26>;
  else
    goto <bb 30>;
  # SUCC: 26 [95.5%]  (true,exec) 30 [4.5%]  (false,exec)

  # BLOCK 26 freq:12
  # PRED: 25 [95.5%]  (true,exec)
  D.47874_1670 = pmap_1461->allocated;
  if (D.47874_1670 != 0)
    goto <bb 27>;
  else
    goto <bb 30>;
  # SUCC: 27 [95.5%]  (true,exec) 30 [4.5%]  (false,exec)

  # BLOCK 27 freq:12
  # PRED: 26 [95.5%]  (true,exec)
  # pmap_2126 = PHI <pmap_1461(26)>
  # SUCC: 28 [100.0%]  (fallthru)

  # BLOCK 28 freq:132
  # PRED: 27 [100.0%]  (fallthru) 29 [95.5%]  (true,exec)
  # pmap_1672 = PHI <pmap_2126(27), pmap_1463(29)>
  pmap_1672->negotiated = 0;
  pmap_1672->current = 0;
  pmap_1463 = pmap_1672->next;
  # DEBUG pmap => pmap_1463
  # DEBUG pmap => pmap_1463
  if (pmap_1463 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
  # SUCC: 29 [95.5%]  (true,exec) 30 [4.5%]  (false,exec)

  # BLOCK 29 freq:126
  # PRED: 28 [95.5%]  (true,exec)
  D.47874_1464 = pmap_1463->allocated;
  if (D.47874_1464 != 0)
    goto <bb 28>;
  else
    goto <bb 30>;
  # SUCC: 28 [95.5%]  (true,exec) 30 [4.5%]  (false,exec)

  # BLOCK 30 freq:13
  # PRED: 29 [4.5%]  (false,exec) 28 [4.5%]  (false,exec) 25 [4.5%]  (false,exec) 26 [4.5%]  (false,exec)
  if (proceed_209(D) != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 [85.0%]  (true,exec) 32 [15.0%]  (false,exec)

  # BLOCK 31 freq:11
  # PRED: 30 [85.0%]  (true,exec)
  *proceed_209(D) = 1;
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:13
  # PRED: 30 [15.0%]  (false,exec) 31 [100.0%]  (fallthru,exec)
  D.44490_210 = switch_media_handle_test_media_flag (smh_186, 3);
  greedy_211 = D.44490_210 != 0;
  # DEBUG greedy => greedy_211
  D.44491_212 = switch_media_handle_test_media_flag (smh_186, 4);
  scrooge_213 = D.44491_212 != 0;
  # DEBUG scrooge => scrooge_213
  val_214 = switch_channel_get_variable_dup (channel_162, "rtp_codec_negotiation", 1, -1);
  # DEBUG val => val_214
  if (val_214 != 0B)
    goto <bb 33>;
  else
    goto <bb 37>;
  # SUCC: 33 [85.0%]  (true,exec) 37 [15.0%]  (false,exec)

  # BLOCK 33 freq:11
  # PRED: 32 [85.0%]  (true,exec)
  D.44494_215 = strcasecmp (val_214, "generous");
  if (D.44494_215 == 0)
    goto <bb 37>;
  else
    goto <bb 34>;
  # SUCC: 37 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 34 freq:5
  # PRED: 33 [50.0%]  (false,exec)
  D.44498_218 = strcasecmp (val_214, "greedy");
  if (D.44498_218 == 0)
    goto <bb 37>;
  else
    goto <bb 35>;
  # SUCC: 37 [50.0%]  (true,exec) 35 [50.0%]  (false,exec)

  # BLOCK 35 freq:3
  # PRED: 34 [50.0%]  (false,exec)
  D.44502_221 = strcasecmp (val_214, "scrooge");
  if (D.44502_221 == 0)
    goto <bb 37>;
  else
    goto <bb 36>;
  # SUCC: 37 [71.0%]  (true,exec) 36 [29.0%]  (false,exec)

  # BLOCK 36 freq:1
  # PRED: 35 [29.0%]  (false,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2969, session_161(D), 7, "rtp_codec_negotiation ignored invalid value : \'%s\' \n", val_214);
  # SUCC: 37 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:13
  # PRED: 32 [15.0%]  (false,exec) 33 [50.0%]  (true,exec) 34 [50.0%]  (true,exec) 35 [71.0%]  (true,exec) 36 [100.0%]  (fallthru,exec)
  # greedy_47 = PHI <greedy_211(32), 0(33), 1(34), 1(35), greedy_211(36)>
  # scrooge_80 = PHI <scrooge_213(32), 0(33), 0(34), 1(35), scrooge_213(36)>
  # DEBUG scrooge => scrooge_80
  # DEBUG greedy => greedy_47
  D.44506_224 = sdp_198->sdp_origin;
  D.44507_225 = D.44506_224->o_username;
  D.44508_226 = switch_core_perform_session_strdup (session_161(D), D.44507_225, "src/switch_core_media.c", &__func__, 2973);
  smh_186->origin = D.44508_226;
  if (D.44508_226 != 0B)
    goto <bb 38>;
  else
    goto <bb 44>;
  # SUCC: 38 [85.0%]  (true,exec) 44 [15.0%]  (false,exec)

  # BLOCK 38 freq:11
  # PRED: 37 [85.0%]  (true,exec)
  D.44471_228 = smh_186->mparams;
  prephitmp.1053_229 = D.44471_228->auto_rtp_bugs;
  D.44513_230 = (int) prephitmp.1053_229;
  D.44514_231 = D.44513_230 & 1;
  if (D.44514_231 != 0)
    goto <bb 39>;
  else
    goto <bb 41>;
  # SUCC: 39 [50.0%]  (true,exec) 41 [50.0%]  (false,exec)

  # BLOCK 39 freq:5
  # PRED: 38 [50.0%]  (true,exec)
  D.44518_234 = strstr (D.44508_226, "CiscoSystemsSIP-GW-UserAgent");
  if (D.44518_234 != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;
  # SUCC: 40 [69.8%]  (true,exec) 41 [30.2%]  (false,exec)

  # BLOCK 40 freq:4
  # PRED: 39 [69.8%]  (true,exec)
  D.44521_235 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;
  D.44522_236 = D.44521_235 | 1;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44522_236;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2979, session_161(D), 7, "Activate Buggy RFC2833 Mode!\n");
  pretmp.1050_1809 = smh_186->mparams;
  prephitmp.1053_323 = pretmp.1050_1809->auto_rtp_bugs;
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 41 freq:11
  # PRED: 38 [50.0%]  (false,exec) 39 [30.2%]  (false,exec) 40 [100.0%]  (fallthru,exec)
  # prephitmp.1053_326 = PHI <prephitmp.1053_229(38), prephitmp.1053_229(39), prephitmp.1053_323(40)>
  D.44523_239 = prephitmp.1053_326 & 2;
  if (D.44523_239 != 0)
    goto <bb 42>;
  else
    goto <bb 44>;
  # SUCC: 42 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

  # BLOCK 42 freq:5
  # PRED: 41 [50.0%]  (true,exec)
  D.44509_240 = smh_186->origin;
  D.44526_241 = strstr (D.44509_240, "Sonus_UAC");
  if (D.44526_241 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
  # SUCC: 43 [69.8%]  (true,exec) 44 [30.2%]  (false,exec)

  # BLOCK 43 freq:4
  # PRED: 42 [69.8%]  (true,exec)
  D.44521_242 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;
  D.44529_243 = D.44521_242 | 2;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44529_243;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2986, session_161(D), 4, "Hello,\nI see you have a Sonus!\nFYI, Sonus cannot follow the RFC on the proper way to send DTMF.\nSadly, my creator had to spend several hours figuring this out so I thought you\'d like to know that!\nDon\'t worry, DTMF will work but you may want to ask them to fix it......\n");
  # SUCC: 44 [100.0%]  (fallthru,exec)

  # BLOCK 44 freq:13
  # PRED: 37 [15.0%]  (false,exec) 41 [50.0%]  (false,exec) 42 [30.2%]  (false,exec) 43 [100.0%]  (fallthru,exec)
  D.44530_244 = session_161(D)->channel;
  val_245 = switch_channel_get_variable_dup (D.44530_244, "rtp_liberal_dtmf", 1, -1);
  # DEBUG val => val_245
  if (val_245 != 0B)
    goto <bb 45>;
  else
    goto <bb 55>;
  # SUCC: 45 [69.8%]  (true,exec) 55 [30.2%]  (false,exec)

  # BLOCK 45 freq:8
  # PRED: 44 [69.8%]  (true,exec)
  # DEBUG expr => val_245
  D.49687_1560 = strcasecmp (val_245, "yes");
  if (D.49687_1560 == 0)
    goto <bb 54>;
  else
    goto <bb 46>;
  # SUCC: 54 [39.0%]  (true,exec) 46 [61.0%]  (false,exec)

  # BLOCK 46 freq:5
  # PRED: 45 [61.0%]  (false,exec)
  D.49688_1561 = strcasecmp (val_245, "on");
  if (D.49688_1561 == 0)
    goto <bb 54>;
  else
    goto <bb 47>;
  # SUCC: 54 [39.0%]  (true,exec) 47 [61.0%]  (false,exec)

  # BLOCK 47 freq:3
  # PRED: 46 [61.0%]  (false,exec)
  D.49689_1562 = strcasecmp (val_245, "true");
  if (D.49689_1562 == 0)
    goto <bb 54>;
  else
    goto <bb 48>;
  # SUCC: 54 [39.0%]  (true,exec) 48 [61.0%]  (false,exec)

  # BLOCK 48 freq:2
  # PRED: 47 [61.0%]  (false,exec)
  D.49690_1563 = strcasecmp (val_245, "t");
  if (D.49690_1563 == 0)
    goto <bb 54>;
  else
    goto <bb 49>;
  # SUCC: 54 [39.0%]  (true,exec) 49 [61.0%]  (false,exec)

  # BLOCK 49 freq:1
  # PRED: 48 [61.0%]  (false,exec)
  D.49691_1564 = strcasecmp (val_245, "enabled");
  if (D.49691_1564 == 0)
    goto <bb 54>;
  else
    goto <bb 50>;
  # SUCC: 54 [39.0%]  (true,exec) 50 [61.0%]  (false,exec)

  # BLOCK 50 freq:1
  # PRED: 49 [61.0%]  (false,exec)
  D.49692_1565 = strcasecmp (val_245, "active");
  if (D.49692_1565 == 0)
    goto <bb 54>;
  else
    goto <bb 51>;
  # SUCC: 54 [39.0%]  (true,exec) 51 [61.0%]  (false,exec)

  # BLOCK 51
  # PRED: 50 [61.0%]  (false,exec)
  D.49693_1566 = strcasecmp (val_245, "allow");
  if (D.49693_1566 == 0)
    goto <bb 54>;
  else
    goto <bb 52>;
  # SUCC: 54 [61.0%]  (true,exec) 52 [39.0%]  (false,exec)

  # BLOCK 52
  # PRED: 51 [39.0%]  (false,exec)
  D.49694_1567 = switch_is_number (val_245);
  if (D.49694_1567 != 0)
    goto <bb 53>;
  else
    goto <bb 431>;
  # SUCC: 53 [29.0%]  (true,exec) 431 [71.0%]  (false,exec)

  # BLOCK 53
  # PRED: 52 [29.0%]  (true,exec)
  # DEBUG __nptr => val_245
  D.49695_1568 = strtol (val_245, 0B, 10);
  if (D.49695_1568 != 0)
    goto <bb 54>;
  else
    goto <bb 431>;
  # SUCC: 54 [39.0%]  (true,exec) 431 [61.0%]  (false,exec)

  # BLOCK 54 freq:3
  # PRED: 45 [39.0%]  (true,exec) 46 [39.0%]  (true,exec) 47 [39.0%]  (true,exec) 48 [39.0%]  (true,exec) 49 [39.0%]  (true,exec) 50 [39.0%]  (true,exec) 51 [61.0%]  (true,exec) 53 [39.0%]  (true,exec)
  D.44530_247 = session_161(D)->channel;
  switch_channel_set_flag_value (D.44530_247, 93, 1);
  # SUCC: 55 [100.0%]  (fallthru,exec)

  # BLOCK 55 freq:13
  # PRED: 44 [30.2%]  (false,exec) 431 [100.0%]  (fallthru,exec) 54 [100.0%]  (fallthru,exec)
  m_248 = sdp_198->sdp_media;
  # DEBUG m => m_248
  if (m_248 != 0B)
    goto <bb 56>;
  else
    goto <bb 61>;
  # SUCC: 56 [85.0%]  (true,exec) 61 [15.0%]  (false,exec)

  # BLOCK 56 freq:11
  # PRED: 55 [85.0%]  (true,exec)
  D.44540_249 = BIT_FIELD_REF <*m_248, 8, 544>;
  D.44541_250 = D.44540_249 & 6;
  D.44542_251 = D.44541_250 == 2;
  D.44543_252 = D.44541_250 == 0;
  D.44544_253 = D.44543_252 | D.44542_251;
  if (D.44544_253 != 0)
    goto <bb 61>;
  else
    goto <bb 57>;
  # SUCC: 61 [50.0%]  (true,exec) 57 [50.0%]  (false,exec)

  # BLOCK 57 freq:5
  # PRED: 56 [50.0%]  (false,exec)
  D.44546_254 = m_248->m_connections;
  if (D.44546_254 != 0B)
    goto <bb 58>;
  else
    goto <bb 61>;
  # SUCC: 58 [85.0%]  (true,exec) 61 [15.0%]  (false,exec)

  # BLOCK 58 freq:5
  # PRED: 57 [85.0%]  (true,exec)
  D.44548_256 = D.44546_254->c_address;
  if (D.44548_256 != 0B)
    goto <bb 59>;
  else
    goto <bb 61>;
  # SUCC: 59 [85.0%]  (true,exec) 61 [15.0%]  (false,exec)

  # BLOCK 59 freq:4
  # PRED: 58 [85.0%]  (true,exec)
  # DEBUG __s2_len => 7
  __result_300 = __builtin_strcmp (D.44548_256, "0.0.0.0");
  if (__result_300 == 0)
    goto <bb 61>;
  else
    goto <bb 60>;
  # SUCC: 61 [50.0%]  (true,exec) 60 [50.0%]  (false,exec)

  # BLOCK 60 freq:2
  # PRED: 59 [50.0%]  (false,exec)
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 61 freq:13
  # PRED: 55 [15.0%]  (false,exec) 57 [15.0%]  (false,exec) 58 [15.0%]  (false,exec) 60 [100.0%]  (fallthru,exec) 59 [50.0%]  (true,exec) 56 [50.0%]  (true,exec)
  # sendonly_42 = PHI <0(55), 0(57), 0(58), 0(60), 2(59), 2(56)>
  # DEBUG sendonly => sendonly_42
  attr_303 = sdp_198->sdp_attributes;
  # DEBUG attr => attr_303
  # DEBUG recvonly => 0
  # DEBUG sendonly => sendonly_42
  # DEBUG dmaxptime => 0
  # DEBUG dptime => 0
  # DEBUG attr => attr_303
  if (attr_303 != 0B)
    goto <bb 62>;
  else
    goto <bb 79>;
  # SUCC: 62 [91.0%]  (true,exec) 79 [9.0%]  (false,exec)

  # BLOCK 62 freq:128
  # PRED: 61 [91.0%]  (true,exec) 77 [91.0%]  (true,exec)
  # attr_1666 = PHI <attr_303(61), attr_334(77)>
  # dptime_1671 = PHI <0(61), dptime_36(77)>
  # dmaxptime_1865 = PHI <0(61), dmaxptime_40(77)>
  # sendonly_1689 = PHI <sendonly_42(61), sendonly_43(77)>
  # recvonly_1894 = PHI <0(61), recvonly_45(77)>
  D.44590_304 = attr_1666->a_name;
  # DEBUG s => D.44590_304
  if (D.44590_304 == 0B)
    goto <bb 77>;
  else
    goto <bb 63>;
  # SUCC: 77 [15.0%]  (true,exec) 63 [85.0%]  (false,exec)

  # BLOCK 63 freq:109
  # PRED: 62 [85.0%]  (false,exec)
  D.47877_1465 = *D.44590_304;
  if (D.47877_1465 == 0)
    goto <bb 77>;
  else
    goto <bb 432>;
  # SUCC: 77 [50.0%]  (true,exec) 432 [50.0%]  (false,exec)

  # BLOCK 64 freq:19
  # PRED: 432 [29.0%]  (true,exec)
  # DEBUG sendonly => 1
  D.44530_309 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_309, "media_audio_mode", "recvonly", 1);
  goto <bb 77>;
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 65 freq:46
  # PRED: 432 [71.0%]  (false,exec)
  D.44598_311 = strcasecmp (D.44590_304, "inactive");
  if (D.44598_311 == 0)
    goto <bb 66>;
  else
    goto <bb 67>;
  # SUCC: 66 [29.0%]  (true,exec) 67 [71.0%]  (false,exec)

  # BLOCK 66 freq:13
  # PRED: 65 [29.0%]  (true,exec)
  # DEBUG sendonly => 1
  D.44530_313 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_313, "media_audio_mode", "inactive", 1);
  goto <bb 77>;
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 67 freq:32
  # PRED: 65 [71.0%]  (false,exec)
  D.44602_315 = strcasecmp (D.44590_304, "recvonly");
  if (D.44602_315 == 0)
    goto <bb 68>;
  else
    goto <bb 71>;
  # SUCC: 68 [29.0%]  (true,exec) 71 [71.0%]  (false,exec)

  # BLOCK 68 freq:9
  # PRED: 67 [29.0%]  (true,exec)
  D.44530_316 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_316, "media_audio_mode", "sendonly", 1);
  # DEBUG recvonly => 1
  D.44605_318 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44606_319 = switch_rtp_ready (D.44605_318);
  if (D.44606_319 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;
  # SUCC: 69 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

  # BLOCK 69 freq:5
  # PRED: 68 [50.0%]  (true,exec)
  D.44605_320 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_max_missed_packets (D.44605_320, 0);
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_hold_packets = 0;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_packets = 0;
  goto <bb 77>;
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 70 freq:5
  # PRED: 68 [50.0%]  (false,exec)
  D.44530_321 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_321, "rtp_timeout_sec", "0", 1);
  D.44530_322 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_322, "rtp_hold_timeout_sec", "0", 1);
  goto <bb 77>;
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 71 freq:23
  # PRED: 67 [71.0%]  (false,exec)
  if (sendonly_1689 != 2)
    goto <bb 72>;
  else
    goto <bb 73>;
  # SUCC: 72 [27.0%]  (true,exec) 73 [73.0%]  (false,exec)

  # BLOCK 72 freq:6
  # PRED: 71 [27.0%]  (true,exec)
  D.44614_324 = strcasecmp (D.44590_304, "sendrecv");
  if (D.44614_324 == 0)
    goto <bb 77>;
  else
    goto <bb 73>;
  # SUCC: 77 [50.0%]  (true,exec) 73 [50.0%]  (false,exec)

  # BLOCK 73 freq:20
  # PRED: 71 [73.0%]  (false,exec) 72 [50.0%]  (false,exec)
  D.44616_327 = strcasecmp (D.44590_304, "ptime");
  if (D.44616_327 == 0)
    goto <bb 74>;
  else
    goto <bb 75>;
  # SUCC: 74 [29.0%]  (true,exec) 75 [71.0%]  (false,exec)

  # BLOCK 74 freq:6
  # PRED: 73 [29.0%]  (true,exec)
  D.44619_328 = attr_1666->a_value;
  # DEBUG __nptr => D.44619_328
  dptime_1467 = strtol (D.44619_328, 0B, 10);
  # DEBUG dptime => NULL
  goto <bb 77>;
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 75 freq:14
  # PRED: 73 [71.0%]  (false,exec)
  D.44621_331 = strcasecmp (D.44590_304, "maxptime");
  if (D.44621_331 == 0)
    goto <bb 76>;
  else
    goto <bb 77>;
  # SUCC: 76 [29.0%]  (true,exec) 77 [71.0%]  (false,exec)

  # BLOCK 76 freq:4
  # PRED: 75 [29.0%]  (true,exec)
  D.44619_332 = attr_1666->a_value;
  # DEBUG __nptr => D.44619_332
  dmaxptime_1468 = strtol (D.44619_332, 0B, 10);
  # DEBUG dmaxptime => NULL
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 77 freq:128
  # PRED: 63 [50.0%]  (true,exec) 64 [100.0%]  (fallthru,exec) 66 [100.0%]  (fallthru,exec) 70 [100.0%]  (fallthru,exec) 72 [50.0%]  (true,exec) 74 [100.0%]  (fallthru,exec) 75 [71.0%]  (false,exec) 76 [100.0%]  (fallthru,exec) 69 [100.0%]  (fallthru,exec) 62 [15.0%]  (true,exec)
  # dptime_36 = PHI <dptime_1671(63), dptime_1671(64), dptime_1671(66), dptime_1671(70), dptime_1671(72), dptime_1467(74), dptime_1671(75), dptime_1671(76), dptime_1671(69), dptime_1671(62)>
  # dmaxptime_40 = PHI <dmaxptime_1865(63), dmaxptime_1865(64), dmaxptime_1865(66), dmaxptime_1865(70), dmaxptime_1865(72), dmaxptime_1865(74), dmaxptime_1865(75), dmaxptime_1468(76), dmaxptime_1865(69), dmaxptime_1865(62)>
  # sendonly_43 = PHI <sendonly_1689(63), 1(64), 1(66), sendonly_1689(70), 0(72), sendonly_1689(74), sendonly_1689(75), sendonly_1689(76), sendonly_1689(69), sendonly_1689(62)>
  # recvonly_45 = PHI <recvonly_1894(63), recvonly_1894(64), recvonly_1894(66), 1(70), recvonly_1894(72), recvonly_1894(74), recvonly_1894(75), recvonly_1894(76), 1(69), recvonly_1894(62)>
  # DEBUG recvonly => recvonly_45
  # DEBUG sendonly => sendonly_43
  # DEBUG dmaxptime => dmaxptime_40
  # DEBUG dptime => dptime_36
  attr_334 = attr_1666->a_next;
  # DEBUG attr => attr_334
  # DEBUG recvonly => recvonly_45
  # DEBUG sendonly => sendonly_43
  # DEBUG dmaxptime => dmaxptime_40
  # DEBUG dptime => dptime_36
  # DEBUG attr => attr_334
  if (attr_334 != 0B)
    goto <bb 62>;
  else
    goto <bb 78>;
  # SUCC: 62 [91.0%]  (true,exec) 78 [9.0%]  (false,exec)

  # BLOCK 78 freq:12
  # PRED: 77 [9.0%]  (false,exec)
  # recvonly_869 = PHI <recvonly_45(77)>
  prephitmp.1026_1683 = recvonly_869 != 1;
  # SUCC: 79 [100.0%]  (fallthru,exec)

  # BLOCK 79 freq:13
  # PRED: 78 [100.0%]  (fallthru,exec) 61 [9.0%]  (false,exec)
  # dptime_1035 = PHI <dptime_36(78), 0(61)>
  # dmaxptime_1005 = PHI <dmaxptime_40(78), 0(61)>
  # sendonly_1006 = PHI <sendonly_43(78), sendonly_42(61)>
  # prephitmp.1026_1682 = PHI <prephitmp.1026_1683(78), 1(61)>
  D.44624_335 = sendonly_1006 != 1;
  D.44626_337 = D.44624_335 & prephitmp.1026_1682;
  if (D.44626_337 != 0)
    goto <bb 80>;
  else
    goto <bb 81>;
  # SUCC: 80 [29.0%]  (true,exec) 81 [71.0%]  (false,exec)

  # BLOCK 80 freq:4
  # PRED: 79 [29.0%]  (true,exec)
  D.44530_338 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_338, "media_audio_mode", 0B, 1);
  # SUCC: 81 [100.0%]  (fallthru,exec)

  # BLOCK 81 freq:13
  # PRED: 79 [71.0%]  (false,exec) 80 [100.0%]  (fallthru,exec)
  D.44631_339 = switch_media_handle_test_media_flag (smh_186, 5);
  if (D.44631_339 == 0)
    goto <bb 82>;
  else
    goto <bb 434>;
  # SUCC: 82 [29.0%]  (true,exec) 434 [71.0%]  (false,exec)

  # BLOCK 82 freq:4
  # PRED: 81 [29.0%]  (true,exec)
  D.44530_340 = session_161(D)->channel;
  val_341 = switch_channel_get_variable_dup (D.44530_340, "rtp_disable_hold", 1, -1);
  # DEBUG val => val_341
  if (val_341 == 0B)
    goto <bb 93>;
  else
    goto <bb 83>;
  # SUCC: 93 [30.2%]  (true,exec) 83 [69.8%]  (false,exec)

  # BLOCK 83 freq:2
  # PRED: 82 [69.8%]  (false,exec)
  # DEBUG expr => val_341
  D.49699_1570 = strcasecmp (val_341, "yes");
  if (D.49699_1570 == 0)
    goto <bb 92>;
  else
    goto <bb 84>;
  # SUCC: 92 [39.0%]  (true,exec) 84 [61.0%]  (false,exec)

  # BLOCK 84 freq:1
  # PRED: 83 [61.0%]  (false,exec)
  D.49700_1571 = strcasecmp (val_341, "on");
  if (D.49700_1571 == 0)
    goto <bb 92>;
  else
    goto <bb 85>;
  # SUCC: 92 [39.0%]  (true,exec) 85 [61.0%]  (false,exec)

  # BLOCK 85 freq:1
  # PRED: 84 [61.0%]  (false,exec)
  D.49701_1572 = strcasecmp (val_341, "true");
  if (D.49701_1572 == 0)
    goto <bb 92>;
  else
    goto <bb 86>;
  # SUCC: 92 [39.0%]  (true,exec) 86 [61.0%]  (false,exec)

  # BLOCK 86
  # PRED: 85 [61.0%]  (false,exec)
  D.49702_1573 = strcasecmp (val_341, "t");
  if (D.49702_1573 == 0)
    goto <bb 92>;
  else
    goto <bb 87>;
  # SUCC: 92 [39.0%]  (true,exec) 87 [61.0%]  (false,exec)

  # BLOCK 87
  # PRED: 86 [61.0%]  (false,exec)
  D.49703_1574 = strcasecmp (val_341, "enabled");
  if (D.49703_1574 == 0)
    goto <bb 92>;
  else
    goto <bb 88>;
  # SUCC: 92 [39.0%]  (true,exec) 88 [61.0%]  (false,exec)

  # BLOCK 88
  # PRED: 87 [61.0%]  (false,exec)
  D.49704_1575 = strcasecmp (val_341, "active");
  if (D.49704_1575 == 0)
    goto <bb 92>;
  else
    goto <bb 89>;
  # SUCC: 92 [39.0%]  (true,exec) 89 [61.0%]  (false,exec)

  # BLOCK 89
  # PRED: 88 [61.0%]  (false,exec)
  D.49705_1576 = strcasecmp (val_341, "allow");
  if (D.49705_1576 == 0)
    goto <bb 92>;
  else
    goto <bb 90>;
  # SUCC: 92 [61.0%]  (true,exec) 90 [39.0%]  (false,exec)

  # BLOCK 90
  # PRED: 89 [39.0%]  (false,exec)
  D.49706_1577 = switch_is_number (val_341);
  if (D.49706_1577 != 0)
    goto <bb 91>;
  else
    goto <bb 433>;
  # SUCC: 91 [29.0%]  (true,exec) 433 [71.0%]  (false,exec)

  # BLOCK 91
  # PRED: 90 [29.0%]  (true,exec)
  # DEBUG __nptr => val_341
  D.49707_1578 = strtol (val_341, 0B, 10);
  if (D.49707_1578 != 0)
    goto <bb 92>;
  else
    goto <bb 433>;
  # SUCC: 92 [39.0%]  (true,exec) 433 [61.0%]  (false,exec)

  # BLOCK 92 freq:1
  # PRED: 83 [39.0%]  (true,exec) 84 [39.0%]  (true,exec) 85 [39.0%]  (true,exec) 86 [39.0%]  (true,exec) 87 [39.0%]  (true,exec) 88 [39.0%]  (true,exec) 89 [61.0%]  (true,exec) 91 [39.0%]  (true,exec)
Invalid sum of outgoing probabilities 25.0%
  goto <bb 434>;
  # SUCC: 434 [25.0%]  (fallthru,exec)

  # BLOCK 93 freq:2
  # PRED: 82 [30.2%]  (true,exec) 433 [100.0%]  (fallthru,exec)
  D.44471_343 = smh_186->mparams;
  D.44636_344 = D.44471_343->hold_laps;
  if (D.44636_344 == 0)
    goto <bb 94>;
  else
    goto <bb 434>;
  # SUCC: 94 [29.0%]  (true,exec) 434 [71.0%]  (false,exec)

  # BLOCK 94 freq:1
  # PRED: 93 [29.0%]  (true,exec)
  D.44471_343->hold_laps = 1;
  D.44640_348 = switch_core_media_toggle_hold (session_161(D), sendonly_1006);
  if (D.44640_348 != 0)
    goto <bb 95>;
  else
    goto <bb 434>;
  # SUCC: 95 [29.0%]  (true,exec) 434 [71.0%]  (false,exec)

  # BLOCK 95
  # PRED: 94 [29.0%]  (true,exec)
  reneg_349 = switch_media_handle_test_media_flag (smh_186, 6);
  # DEBUG reneg => reneg_349
  D.44530_350 = session_161(D)->channel;
  val_351 = switch_channel_get_variable_dup (D.44530_350, "rtp_renegotiate_codec_on_hold", 1, -1);
  # DEBUG val => val_351
  if (val_351 != 0B)
    goto <bb 96>;
  else
    goto <bb 97>;
  # SUCC: 96 [69.8%]  (true,exec) 97 [30.2%]  (false,exec)

  # BLOCK 96
  # PRED: 95 [69.8%]  (true,exec)
  reneg_352 = switch_true (val_351);
  # DEBUG reneg => reneg_352
  # SUCC: 97 [100.0%]  (fallthru,exec)

  # BLOCK 97 freq:2
  # PRED: 95 [30.2%]  (false,exec) 96 [100.0%]  (fallthru,exec)
  # reneg_81 = PHI <reneg_349(95), reneg_352(96)>
  # DEBUG reneg => reneg_81
  if (reneg_81 != 0)
    goto <bb 98>;
  else
    goto <bb 110>;
  # SUCC: 98 (true,exec) 110 [100.0%]  (false,exec)

  # BLOCK 98 freq:4
  # PRED: 97 (true,exec) 434 [100.0%]  (fallthru,exec)
  reneg_353 = switch_media_handle_test_media_flag (smh_186, 7);
  # DEBUG reneg => reneg_353
  D.44530_354 = session_161(D)->channel;
  val_355 = switch_channel_get_variable_dup (D.44530_354, "rtp_renegotiate_codec_on_reinvite", 1, -1);
  # DEBUG val => val_355
  if (val_355 != 0B)
    goto <bb 99>;
  else
    goto <bb 110>;
  # SUCC: 99 [69.8%]  (true,exec) 110 [30.2%]  (false,exec)

  # BLOCK 99 freq:2
  # PRED: 98 [69.8%]  (true,exec)
  # DEBUG expr => val_355
  D.49711_1580 = strcasecmp (val_355, "yes");
  if (D.49711_1580 == 0)
    goto <bb 109>;
  else
    goto <bb 100>;
  # SUCC: 109 [39.0%]  (true,exec) 100 [61.0%]  (false,exec)

  # BLOCK 100 freq:1
  # PRED: 99 [61.0%]  (false,exec)
  D.49712_1581 = strcasecmp (val_355, "on");
  if (D.49712_1581 == 0)
    goto <bb 109>;
  else
    goto <bb 101>;
  # SUCC: 109 [39.0%]  (true,exec) 101 [61.0%]  (false,exec)

  # BLOCK 101 freq:1
  # PRED: 100 [61.0%]  (false,exec)
  D.49713_1582 = strcasecmp (val_355, "true");
  if (D.49713_1582 == 0)
    goto <bb 109>;
  else
    goto <bb 102>;
  # SUCC: 109 [39.0%]  (true,exec) 102 [61.0%]  (false,exec)

  # BLOCK 102
  # PRED: 101 [61.0%]  (false,exec)
  D.49714_1583 = strcasecmp (val_355, "t");
  if (D.49714_1583 == 0)
    goto <bb 109>;
  else
    goto <bb 103>;
  # SUCC: 109 [39.0%]  (true,exec) 103 [61.0%]  (false,exec)

  # BLOCK 103
  # PRED: 102 [61.0%]  (false,exec)
  D.49715_1584 = strcasecmp (val_355, "enabled");
  if (D.49715_1584 == 0)
    goto <bb 109>;
  else
    goto <bb 104>;
  # SUCC: 109 [39.0%]  (true,exec) 104 [61.0%]  (false,exec)

  # BLOCK 104
  # PRED: 103 [61.0%]  (false,exec)
  D.49716_1585 = strcasecmp (val_355, "active");
  if (D.49716_1585 == 0)
    goto <bb 109>;
  else
    goto <bb 105>;
  # SUCC: 109 [39.0%]  (true,exec) 105 [61.0%]  (false,exec)

  # BLOCK 105
  # PRED: 104 [61.0%]  (false,exec)
  D.49717_1586 = strcasecmp (val_355, "allow");
  if (D.49717_1586 == 0)
    goto <bb 109>;
  else
    goto <bb 106>;
  # SUCC: 109 [61.0%]  (true,exec) 106 [39.0%]  (false,exec)

  # BLOCK 106
  # PRED: 105 [39.0%]  (false,exec)
  D.49718_1587 = switch_is_number (val_355);
  if (D.49718_1587 != 0)
    goto <bb 107>;
  else
    goto <bb 109>;
  # SUCC: 107 [29.0%]  (true,exec) 109 [71.0%]  (false,exec)

  # BLOCK 107
  # PRED: 106 [29.0%]  (true,exec)
  # DEBUG __nptr => val_355
  D.49719_1588 = strtol (val_355, 0B, 10);
  if (D.49719_1588 != 0)
    goto <bb 108>;
  else
    goto <bb 109>;
  # SUCC: 108 [39.0%]  (true,exec) 109 [61.0%]  (false,exec)

  # BLOCK 108
  # PRED: 107 [39.0%]  (true,exec)
  # SUCC: 109 [100.0%]  (fallthru,exec)

  # BLOCK 109 freq:3
  # PRED: 99 [39.0%]  (true,exec) 100 [39.0%]  (true,exec) 101 [39.0%]  (true,exec) 102 [39.0%]  (true,exec) 103 [39.0%]  (true,exec) 104 [39.0%]  (true,exec) 105 [61.0%]  (true,exec) 108 [100.0%]  (fallthru,exec) 106 [71.0%]  (false,exec) 107 [61.0%]  (false,exec)
  # reneg_1589 = PHI <1(99), 1(100), 1(101), 1(102), 1(103), 1(104), 1(105), 1(108), 0(106), 0(107)>
  # DEBUG reneg => NULL
  # SUCC: 110 [100.0%]  (fallthru,exec)

  # BLOCK 110 freq:13
  # PRED: 97 [100.0%]  (false,exec) 98 [30.2%]  (false,exec) 109 [100.0%]  (fallthru,exec)
  # reneg_82 = PHI <reneg_81(97), reneg_353(98), reneg_1589(109)>
  # DEBUG reneg => reneg_82
  D.44649_357 = session_161(D)->bugs;
  if (D.44649_357 != 0B)
    goto <bb 111>;
  else
    goto <bb 112>;
  # SUCC: 111 [69.8%]  (true,exec) 112 [30.2%]  (false,exec)

  # BLOCK 111 freq:9
  # PRED: 110 [69.8%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3063, session_161(D), 7, "Session is connected to a media bug. Re-Negotiation implicitly disabled.\n");
  # DEBUG reneg => 0
  # DEBUG reneg => 0
  goto <bb 113>;
  # SUCC: 113 [100.0%]  (fallthru,exec)

  # BLOCK 112 freq:4
  # PRED: 110 [30.2%]  (false,exec)
  # DEBUG reneg => reneg_82
  if (reneg_82 == 0)
    goto <bb 113>;
  else
    goto <bb 115>;
  # SUCC: 113 (true,exec) 115 [100.0%]  (false,exec)

  # BLOCK 113 freq:6
  # PRED: 112 (true,exec) 111 [100.0%]  (fallthru,exec)
  total_codecs_359 = smh_186->num_negotiated_codecs;
  if (total_codecs_359 != 0)
    goto <bb 114>;
  else
    goto <bb 116>;
  # SUCC: 114 [50.0%]  (true,exec) 116 [50.0%]  (false,exec)

  # BLOCK 114 freq:3
  # PRED: 113 [50.0%]  (true,exec)
  codec_array_360 = &smh_186->negotiated_codecs;
  # DEBUG codec_array => codec_array_360
  # DEBUG total_codecs => total_codecs_359
  goto <bb 116>;
  # SUCC: 116 [100.0%]  (fallthru,exec)

  # BLOCK 115 freq:3
  # PRED: 112 [100.0%]  (false,exec)
  D.44471_362 = smh_186->mparams;
  D.44471_362->num_codecs = 0;
  switch_core_media_prepare_codecs (session_161(D), 0);
  # DEBUG codec_array => codec_array_190
  D.44471_364 = smh_186->mparams;
  total_codecs_365 = D.44471_364->num_codecs;
  # DEBUG total_codecs => total_codecs_365
  # SUCC: 116 [100.0%]  (fallthru,exec)

  # BLOCK 116 freq:13
  # PRED: 114 [100.0%]  (fallthru,exec) 113 [50.0%]  (false,exec) 115 [100.0%]  (fallthru,exec)
  # codec_array_84 = PHI <codec_array_360(114), codec_array_190(113), codec_array_190(115)>
  # total_codecs_85 = PHI <total_codecs_359(114), total_codecs_192(113), total_codecs_365(115)>
  # DEBUG total_codecs => total_codecs_85
  # DEBUG codec_array => codec_array_84
  D.44661_366 = switch_stristr ("T38FaxFillBitRemoval:", r_sdp_193(D));
  if (D.44661_366 != 0B)
    goto <bb 119>;
  else
    goto <bb 117>;
  # SUCC: 119 [85.0%]  (true,exec) 117 [15.0%]  (false,exec)

  # BLOCK 117 freq:2
  # PRED: 116 [15.0%]  (false,exec)
  D.44663_367 = switch_stristr ("T38FaxTranscodingMMR:", r_sdp_193(D));
  if (D.44663_367 != 0B)
    goto <bb 119>;
  else
    goto <bb 118>;
  # SUCC: 119 [93.3%]  (true,exec) 118 [6.7%]  (false,exec)

  # BLOCK 118
  # PRED: 117 [6.7%]  (false,exec)
  D.44665_368 = switch_stristr ("T38FaxTranscodingJBIG:", r_sdp_193(D));
  if (D.44665_368 != 0B)
    goto <bb 119>;
  else
    goto <bb 120>;
  # SUCC: 119 [85.0%]  (true,exec) 120 [15.0%]  (false,exec)

  # BLOCK 119 freq:13
  # PRED: 116 [85.0%]  (true,exec) 117 [93.3%]  (true,exec) 118 [85.0%]  (true,exec)
  D.44530_369 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_369, "t38_broken_boolean", "true", 1);
  # SUCC: 120 [100.0%]  (fallthru,exec)

  # BLOCK 120 freq:13
  # PRED: 118 [15.0%]  (false,exec) 119 [100.0%]  (fallthru,exec)
  switch_core_media_find_zrtp_hash (session_161(D), sdp_198);
  switch_core_media_pass_zrtp_hash (session_161(D));
  check_ice (smh_186, 0, sdp_198, 0B);
  check_ice (smh_186, 1, sdp_198, 0B);
  m_370 = sdp_198->sdp_media;
  # DEBUG m => m_370
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0
  # DEBUG codec_ms => 0
  # DEBUG got_webrtc => 0
  # DEBUG got_udptl => 0
  # DEBUG got_savp => 0
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => 0
  # DEBUG got_audio => 0
  # DEBUG got_video_crypto => 0
  # DEBUG got_crypto => 0
  # DEBUG m => m_370
  # DEBUG cng_pt => 0
  # DEBUG best_te => 0
  # DEBUG match => 0
  if (m_370 != 0B)
    goto <bb 121>;
  else
    goto <bb 428> (done);
  # SUCC: 121 [98.0%]  (true,exec) 428 [2.0%]  (false,exec)

  # BLOCK 121 freq:339
  # PRED: 120 [98.0%]  (true,exec) 427 [98.0%]  (true,exec)
  # match_1800 = PHI <0(120), match_15(427)>
  # best_te_680 = PHI <0(120), best_te_22(427)>
  # cng_pt_1717 = PHI <0(120), cng_pt_26(427)>
  # m_1764 = PHI <m_370(120), m_1093(427)>
  # got_crypto_1866 = PHI <0(120), got_crypto_55(427)>
  # got_video_crypto_1674 = PHI <0(120), got_video_crypto_63(427)>
  # got_audio_1693 = PHI <0(120), got_audio_66(427)>
  # got_avp_671 = PHI <0(120), got_avp_2186(427)>
  # got_savp_512 = PHI <0(120), got_savp_2166(427)>
  # got_udptl_1868 = PHI <0(120), got_udptl_2172(427)>
  # got_webrtc_452 = PHI <0(120), got_webrtc_78(427)>
  # codec_ms_477 = PHI <0(120), codec_ms_94(427)>
  # m_idx_1869 = PHI <0(120), m_idx_113(427)>
  # nm_idx_1749 = PHI <0(120), nm_idx_121(427)>
  # DEBUG ptime => dptime_1035
  # DEBUG maxptime => dmaxptime_1005
  D.44666_373 = m_1764->m_proto;
  if (D.44666_373 == 261)
    goto <bb 122>;
  else
    goto <bb 123>;
  # SUCC: 122 [13.7%]  (true,exec) 123 [86.3%]  (false,exec)

  # BLOCK 122 freq:47
  # PRED: 121 [13.7%]  (true,exec)
  got_webrtc_374 = got_webrtc_452 + 1;
  # DEBUG got_webrtc => got_webrtc_374
  switch_core_session_set_ice (session_161(D));
  # SUCC: 123 [100.0%]  (fallthru,exec)

  # BLOCK 123 freq:339
  # PRED: 121 [86.3%]  (false,exec) 122 [100.0%]  (fallthru,exec)
  # got_webrtc_78 = PHI <got_webrtc_452(121), got_webrtc_374(122)>
  # DEBUG got_webrtc => got_webrtc_78
  D.44669_375 = m_1764->m_proto_name;
  if (D.44669_375 != 0B)
    goto <bb 124>;
  else
    goto <bb 126>;
  # SUCC: 124 [85.0%]  (true,exec) 126 [15.0%]  (false,exec)

  # BLOCK 124 freq:289
  # PRED: 123 [85.0%]  (true,exec)
  D.44672_377 = strcasecmp (D.44669_375, "UDP/TLS/RTP/SAVPF");
  if (D.44672_377 == 0)
    goto <bb 125>;
  else
    goto <bb 126>;
  # SUCC: 125 [29.0%]  (true,exec) 126 [71.0%]  (false,exec)

  # BLOCK 125 freq:84
  # PRED: 124 [29.0%]  (true,exec)
  D.44530_378 = session_161(D)->channel;
  switch_channel_set_flag_value (D.44530_378, 107, 1);
  # SUCC: 126 [100.0%]  (fallthru,exec)

  # BLOCK 126 freq:339
  # PRED: 123 [15.0%]  (false,exec) 124 [71.0%]  (false,exec) 125 [100.0%]  (fallthru,exec)
  D.44675_379 = m_1764->m_proto;
  D.44676_380 = D.44675_379 == 257;
  D.44677_381 = D.44675_379 == 261;
  D.44678_382 = D.44677_381 | D.44676_380;
  if (D.44678_382 != 0)
    goto <bb 127>;
  else
    goto <bb 129>;
  # SUCC: 127 [50.0%]  (true,exec) 129 [50.0%]  (false,exec)

  # BLOCK 127 freq:170
  # PRED: 126 [50.0%]  (true,exec)
  prephitmp.1049_383 = m_1764->m_type;
  if (prephitmp.1049_383 == 2)
    goto <bb 128>;
  else
    goto <bb 135>;
  # SUCC: 128 [28.0%]  (true,exec) 135 [72.0%]  (false,exec)

  # BLOCK 128 freq:48
  # PRED: 127 [28.0%]  (true,exec)
  got_savp_384 = got_savp_512 + 1;
  # DEBUG got_savp => got_savp_384
  goto <bb 135>;
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 129 freq:170
  # PRED: 126 [50.0%]  (false,exec)
  if (D.44675_379 == 256)
    goto <bb 130>;
  else
    goto <bb 132>;
  # SUCC: 130 [28.0%]  (true,exec) 132 [72.0%]  (false,exec)

  # BLOCK 130 freq:48
  # PRED: 129 [28.0%]  (true,exec)
  prephitmp.1049_387 = m_1764->m_type;
  if (prephitmp.1049_387 == 2)
    goto <bb 131>;
  else
    goto <bb 135>;
  # SUCC: 131 [28.0%]  (true,exec) 135 [72.0%]  (false,exec)

  # BLOCK 131 freq:13
  # PRED: 130 [28.0%]  (true,exec)
  got_avp_388 = got_avp_671 + 1;
  # DEBUG got_avp => got_avp_388
  goto <bb 135>;
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 132 freq:122
  # PRED: 129 [72.0%]  (false,exec)
  if (D.44675_379 == 258)
    goto <bb 134>;
  else
    goto <bb 133>;
  # SUCC: 134 [28.0%]  (true,exec) 133 [72.0%]  (false,exec)

  # BLOCK 133 freq:88
  # PRED: 132 [72.0%]  (false,exec)
  prephitmp.1049_1673 = m_1764->m_type;
  goto <bb 135>;
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 134 freq:34
  # PRED: 132 [28.0%]  (true,exec)
  got_udptl_391 = got_udptl_1868 + 1;
  # DEBUG got_udptl => got_udptl_391
  # DEBUG got_udptl => got_udptl_391
  # DEBUG got_savp => got_savp_512
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => got_avp_671
  prephitmp.1049_346 = m_1764->m_type;
  goto <bb 136>;
  # SUCC: 136 [100.0%]  (fallthru,exec)

  # BLOCK 135 freq:305
  # PRED: 127 [72.0%]  (false,exec) 130 [72.0%]  (false,exec) 133 [100.0%]  (fallthru,exec) 131 [100.0%]  (fallthru,exec) 128 [100.0%]  (fallthru,exec)
  # got_avp_68 = PHI <got_avp_671(127), got_avp_671(130), got_avp_671(133), got_avp_388(131), got_avp_671(128)>
  # got_savp_74 = PHI <got_savp_512(127), got_savp_512(130), got_savp_512(133), got_savp_512(131), got_savp_384(128)>
  # prephitmp.1049_1808 = PHI <prephitmp.1049_383(127), prephitmp.1049_387(130), prephitmp.1049_1673(133), prephitmp.1049_387(131), prephitmp.1049_383(128)>
  # DEBUG got_udptl => got_udptl_1868
  # DEBUG got_savp => got_savp_74
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => got_avp_68
  if (got_udptl_1868 != 0)
    goto <bb 136>;
  else
    goto <bb 168>;
  # SUCC: 136 [44.4%]  (true,exec) 168 [55.6%]  (false,exec)

  # BLOCK 136 freq:170
  # PRED: 135 [44.4%]  (true,exec) 134 [100.0%]  (fallthru,exec)
  # got_avp_1740 = PHI <got_avp_68(135), got_avp_671(134)>
  # got_savp_1711 = PHI <got_savp_74(135), got_savp_512(134)>
  # got_udptl_774 = PHI <got_udptl_1868(135), got_udptl_391(134)>
  # prephitmp.1049_1805 = PHI <prephitmp.1049_1808(135), prephitmp.1049_346(134)>
  if (prephitmp.1049_1805 == 8)
    goto <bb 137>;
  else
    goto <bb 168>;
  # SUCC: 137 [28.0%]  (true,exec) 168 [72.0%]  (false,exec)

  # BLOCK 137 freq:48
  # PRED: 136 [28.0%]  (true,exec)
  D.44697_393 = m_1764->m_port;
  if (D.44697_393 != 0)
    goto <bb 138>;
  else
    goto <bb 427>;
  # SUCC: 138 [2.0%]  (true,exec) 427 [98.0%]  (false,exec)

  # BLOCK 138 freq:1
  # PRED: 137 [2.0%]  (true,exec)
  # m_1789 = PHI <m_1764(137)>
  t38_options_394 = switch_core_media_process_udptl (session_161(D), sdp_198, m_1789);
  # DEBUG t38_options => t38_options_394
  D.44530_395 = session_161(D)->channel;
  D.44699_396 = switch_channel_test_app_flag_key ("T38", D.44530_395, 16);
  if (D.44699_396 != 0)
    goto <bb 428> (done);
  else
    goto <bb 139>;
  # SUCC: 428 [71.0%]  (true,exec) 139 [29.0%]  (false,exec)

  # BLOCK 139
  # PRED: 138 [29.0%]  (false,exec)
  D.44702_398 = switch_channel_get_variable_dup (channel_162, "refuse_t38", 1, -1);
  D.44703_399 = switch_true (D.44702_398);
  if (D.44703_399 != 0)
    goto <bb 140>;
  else
    goto <bb 141>;
  # SUCC: 140 [50.0%]  (true,exec) 141 [50.0%]  (false,exec)

  # BLOCK 140
  # PRED: 139 [50.0%]  (true,exec)
  D.44530_400 = session_161(D)->channel;
  switch_channel_clear_app_flag_key ("T38", D.44530_400, 2);
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 141
  # PRED: 139 [50.0%]  (false,exec)
  var_402 = switch_channel_get_variable_dup (channel_162, "t38_passthru", 1, -1);
  # DEBUG var => var_402
  D.44481_403 = smh_186->session;
  D.44482_404 = D.44481_403->channel;
  D.44706_405 = switch_channel_test_flag (D.44482_404, 101);
  # DEBUG pass => (int) D.44706_405
  D.44530_407 = session_161(D)->channel;
  D.44707_408 = switch_channel_test_app_flag_key ("T38", D.44530_407, 2);
  if (D.44707_408 != 0)
    goto <bb 142>;
  else
    goto <bb 144>;
  # SUCC: 142 [50.0%]  (true,exec) 144 [50.0%]  (false,exec)

  # BLOCK 142
  # PRED: 141 [50.0%]  (true,exec)
  if (proceed_209(D) != 0B)
    goto <bb 143>;
  else
    goto <bb 144>;
  # SUCC: 143 [85.0%]  (true,exec) 144 [15.0%]  (false,exec)

  # BLOCK 143
  # PRED: 142 [85.0%]  (true,exec)
  *proceed_209(D) = 0;
  # SUCC: 144 [100.0%]  (fallthru,exec)

  # BLOCK 144
  # PRED: 141 [50.0%]  (false,exec) 142 [15.0%]  (false,exec) 143 [100.0%]  (fallthru,exec)
  if (var_402 != 0B)
    goto <bb 145>;
  else
    goto <bb 147>;
  # SUCC: 145 [69.8%]  (true,exec) 147 [30.2%]  (false,exec)

  # BLOCK 145
  # PRED: 144 [69.8%]  (true,exec)
  pass_409 = switch_true (var_402);
  # DEBUG pass => pass_409
  if (pass_409 == 0)
    goto <bb 146>;
  else
    goto <bb 148>;
  # SUCC: 146 [50.0%]  (true,exec) 148 [50.0%]  (false,exec)

  # BLOCK 146
  # PRED: 145 [50.0%]  (true,exec)
  D.44716_410 = strcasecmp (var_402, "once");
  if (D.44716_410 == 0)
    goto <bb 149>;
  else
    goto <bb 150>;
  # SUCC: 149 [50.0%]  (true,exec) 150 [50.0%]  (false,exec)

  # BLOCK 147
  # PRED: 144 [30.2%]  (false,exec)
  pass_406 = (int) D.44706_405;
  # SUCC: 148 [100.0%]  (fallthru,exec)

  # BLOCK 148
  # PRED: 147 [100.0%]  (fallthru,exec) 145 [50.0%]  (false,exec)
  # pass_126 = PHI <pass_406(147), pass_409(145)>
  # DEBUG pass => pass_126
  if (pass_126 == 2)
    goto <bb 149>;
  else
    goto <bb 150>;
  # SUCC: 149 [28.0%]  (true,exec) 150 [72.0%]  (false,exec)

  # BLOCK 149
  # PRED: 148 [28.0%]  (true,exec) 146 [50.0%]  (true,exec)
  D.44481_412 = smh_186->session;
  D.44482_413 = D.44481_412->channel;
  D.44723_414 = switch_channel_test_flag (D.44482_413, 101);
  if (D.44723_414 != 0)
    goto <bb 435>;
  else
    goto <bb 150>;
  # SUCC: 435 [50.0%]  (true,exec) 150 [50.0%]  (false,exec)

  # BLOCK 150
  # PRED: 146 [50.0%]  (false,exec) 149 [50.0%]  (false,exec) 148 [72.0%]  (false,exec)
  # pass_1848 = PHI <pass_409(146), 2(149), pass_126(148)>
  D.44530_415 = session_161(D)->channel;
  D.44724_416 = switch_channel_test_flag (D.44530_415, 103);
  if (D.44724_416 == 0)
    goto <bb 435>;
  else
    goto <bb 151>;
  # SUCC: 435 [71.0%]  (true,exec) 151 [29.0%]  (false,exec)

  # BLOCK 151
  # PRED: 150 [29.0%]  (false,exec)
  D.44530_417 = session_161(D)->channel;
  D.44726_418 = switch_channel_test_flag (D.44530_417, 15);
  if (D.44726_418 != 0)
    goto <bb 435>;
  else
    goto <bb 152>;
  # SUCC: 435 [71.0%]  (true,exec) 152 [29.0%]  (false,exec)

  # BLOCK 152
  # PRED: 151 [29.0%]  (false,exec)
  D.44530_419 = session_161(D)->channel;
  D.44728_420 = switch_channel_test_flag (D.44530_419, 29);
  if (D.44728_420 != 0)
    goto <bb 435>;
  else
    goto <bb 153>;
  # SUCC: 435 [71.0%]  (true,exec) 153 [29.0%]  (false,exec)

  # BLOCK 153
  # PRED: 152 [29.0%]  (false,exec)
  D.44605_421 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44730_422 = switch_rtp_ready (D.44605_421);
  if (D.44730_422 == 0)
    goto <bb 435>;
  else
    goto <bb 154>;
  # SUCC: 435 [50.0%]  (true,exec) 154 [50.0%]  (false,exec)

  # BLOCK 154
  # PRED: 153 [50.0%]  (false,exec)
  # DEBUG pass => pass_1848
  if (pass_1848 != 0)
    goto <bb 155>;
  else
    goto <bb 428> (done);
  # SUCC: 155 [29.0%]  (true,exec) 428 [71.0%]  (false,exec)

  # BLOCK 155
  # PRED: 154 [29.0%]  (true,exec)
  D.44733_424 = switch_core_session_perform_get_partner (session_161(D), &other_session, "src/switch_core_media.c", &__func__, 3161);
  if (D.44733_424 == 0)
    goto <bb 156>;
  else
    goto <bb 428> (done);
  # SUCC: 156 [29.0%]  (true,exec) 428 [71.0%]  (false,exec)

  # BLOCK 156
  # PRED: 155 [29.0%]  (true,exec)
  other_session.89_425 = other_session;
  other_channel_426 = switch_core_session_get_channel (other_session.89_425);
  # DEBUG other_channel => other_channel_426
  D.44605_427 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  remote_host_428 = switch_rtp_get_remote_host (D.44605_427);
  # DEBUG remote_host => remote_host_428
  D.44605_429 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  remote_port_430 = switch_rtp_get_remote_port (D.44605_429);
  # DEBUG remote_port => remote_port_430
  tmp = "";
  D.44737_431 = switch_channel_test_flag (other_channel_426, 1);
  if (D.44737_431 == 0)
    goto <bb 157>;
  else
    goto <bb 158>;
  # SUCC: 157 [50.0%]  (true,exec) 158 [50.0%]  (false,exec)

  # BLOCK 157
  # PRED: 156 [50.0%]  (true,exec)
  D.44530_432 = session_161(D)->channel;
  D.44740_433 = switch_channel_get_name (D.44530_432);
  D.44741_434 = switch_channel_get_name (other_channel_426);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3170, session_161(D), 4, "%s Error Passing T.38 to unanswered channel %s\n", D.44740_433, D.44741_434);
  other_session.89_435 = other_session;
  switch_core_session_rwunlock (other_session.89_435);
  # DEBUG pass => 0
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 158
  # PRED: 156 [50.0%]  (false,exec)
  D.44530_438 = session_161(D)->channel;
  D.44742_439 = switch_channel_get_variable_dup (D.44530_438, "t38_broken_boolean", 1, -1);
  D.44743_440 = switch_true (D.44742_439);
  if (D.44743_440 != 0)
    goto <bb 159>;
  else
    goto <bb 161>;
  # SUCC: 159 [29.0%]  (true,exec) 161 [71.0%]  (false,exec)

  # BLOCK 159
  # PRED: 158 [29.0%]  (true,exec)
  D.44530_441 = session_161(D)->channel;
  D.44746_442 = switch_channel_get_variable_dup (D.44530_441, "t38_pass_broken_boolean", 1, -1);
  D.44747_443 = switch_true (D.44746_442);
  if (D.44747_443 != 0)
    goto <bb 160>;
  else
    goto <bb 161>;
  # SUCC: 160 [29.0%]  (true,exec) 161 [71.0%]  (false,exec)

  # BLOCK 160
  # PRED: 159 [29.0%]  (true,exec)
  switch_channel_set_variable_var_check (other_channel_426, "t38_broken_boolean", "true", 1);
  # SUCC: 161 [100.0%]  (fallthru,exec)

  # BLOCK 161
  # PRED: 158 [71.0%]  (false,exec) 159 [71.0%]  (false,exec) 160 [100.0%]  (fallthru,exec)
  D.44750_444 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44751_445 = t38_options_394->remote_ip;
  D.44752_446 = switch_core_perform_session_strdup (session_161(D), D.44751_445, "src/switch_core_media.c", &__func__, 3186);
  D.44750_444->remote_sdp_ip = D.44752_446;
  D.44750_447 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44753_448 = t38_options_394->remote_port;
  D.44750_447->remote_sdp_port = D.44753_448;
  D.44756_449 = remote_host_428 != 0B;
  D.44757_450 = remote_port_430 != 0;
  D.44758_451 = D.44757_450 & D.44756_449;
  if (D.44758_451 != 0)
    goto <bb 162>;
  else
    goto <bb 165>;
  # SUCC: 162 [71.0%]  (true,exec) 165 [29.0%]  (false,exec)

  # BLOCK 162
  # PRED: 161 [71.0%]  (true,exec)
  D.44760_453 = D.44750_447->remote_sdp_ip;
  D.39032_454 = __builtin_strcmp (remote_host_428, D.44760_453);
  if (D.39032_454 == 0)
    goto <bb 163>;
  else
    goto <bb 165>;
  # SUCC: 163 [50.0%]  (true,exec) 165 [50.0%]  (false,exec)

  # BLOCK 163
  # PRED: 162 [50.0%]  (true,exec)
  if (remote_port_430 == D.44753_448)
    goto <bb 164>;
  else
    goto <bb 165>;
  # SUCC: 164 [13.7%]  (true,exec) 165 [86.3%]  (false,exec)

  # BLOCK 164
  # PRED: 163 [13.7%]  (true,exec)
  D.44530_457 = session_161(D)->channel;
  D.44764_458 = switch_channel_get_name (D.44530_457);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3190, session_161(D), 7, "Audio params are unchanged for %s.\n", D.44764_458);
  goto <bb 167>;
  # SUCC: 167 [100.0%]  (fallthru,exec)

  # BLOCK 165
  # PRED: 161 [29.0%]  (false,exec) 162 [50.0%]  (false,exec) 163 [86.3%]  (false,exec)
  err = 0B;
  D.44530_459 = session_161(D)->channel;
  D.44765_460 = switch_channel_get_name (D.44530_459);
  D.44766_461 = (int) remote_port_430;
  D.44750_462 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_463 = D.44750_462->remote_sdp_ip;
  D.44762_465 = D.44750_462->remote_sdp_port;
  D.44767_466 = (int) D.44762_465;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3195, session_161(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.44765_460, remote_host_428, D.44766_461, D.44760_463, D.44767_466);
  D.44750_467 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_468 = D.44750_467->remote_sdp_port;
  D.44767_469 = (int) D.44762_468;
  switch_snprintf (&tmp, 32, "%d", D.44767_469);
  D.44530_470 = session_161(D)->channel;
  D.44750_471 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_472 = D.44750_471->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_470, "remote_media_ip", D.44760_472, 1);
  D.44530_473 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_473, "remote_media_port", &tmp, 1);
  D.44605_474 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44750_475 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_476 = D.44750_475->remote_sdp_ip;
  D.44762_478 = D.44750_475->remote_sdp_port;
  D.44768_479 = switch_rtp_set_remote_address (D.44605_474, D.44760_476, D.44762_478, 0, 1, &err);
  if (D.44768_479 != 0)
    goto <bb 166>;
  else
    goto <bb 167>;
  # SUCC: 166 [29.0%]  (true,exec) 167 [71.0%]  (false,exec)

  # BLOCK 166
  # PRED: 165 [29.0%]  (true,exec)
  err.90_480 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3205, session_161(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.90_480);
  switch_channel_perform_hangup (channel_162, "src/switch_core_media.c", &__func__, 3206, 88);
  # SUCC: 167 [100.0%]  (fallthru,exec)

  # BLOCK 167
  # PRED: 164 [100.0%]  (fallthru,exec) 165 [71.0%]  (false,exec) 166 [100.0%]  (fallthru,exec)
  other_session.89_481 = other_session;
  switch_core_media_copy_t38_options (t38_options_394, other_session.89_481);
  D.44481_482 = smh_186->session;
  D.44482_483 = D.44481_482->channel;
  switch_channel_set_flag_value (D.44482_483, 101, 1);
  other_session.89_484 = other_session;
  D.44772_485 = other_session.89_484->channel;
  switch_channel_set_flag_value (D.44772_485, 101, 1);
  other_session.89_486 = other_session;
  msg_487 = switch_core_perform_session_alloc (other_session.89_486, 108, "src/switch_core_media.c", &__func__, 3218);
  # DEBUG msg => msg_487
  msg_487->message_id = 21;
  msg_487->from = "src/switch_core_media.c";
  other_session.89_488 = other_session;
  D.44773_489 = switch_core_perform_session_strdup (other_session.89_488, r_sdp_193(D), "src/switch_core_media.c", &__func__, 3221);
  msg_487->string_arg = D.44773_489;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3222, session_161(D), 7, "Passing T38 req to other leg.\n%s\n", r_sdp_193(D));
  other_session.89_490 = other_session;
  switch_core_session_queue_message (other_session.89_490, msg_487);
  other_session.89_491 = other_session;
  switch_core_session_rwunlock (other_session.89_491);
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 168 freq:291
  # PRED: 135 [55.6%]  (false,exec) 136 [72.0%]  (false,exec)
  # got_avp_1859 = PHI <got_avp_68(135), got_avp_1740(136)>
  # got_savp_1739 = PHI <got_savp_74(135), got_savp_1711(136)>
  # got_udptl_1743 = PHI <got_udptl_1868(135), got_udptl_774(136)>
  # prephitmp.1049_1814 = PHI <prephitmp.1049_1808(135), prephitmp.1049_1805(136)>
  if (prephitmp.1049_1814 == 2)
    goto <bb 169>;
  else
    goto <bb 344>;
  # SUCC: 169 [32.5%]  (true,exec) 344 [67.5%]  (false,exec)

  # BLOCK 169 freq:95
  # PRED: 168 [32.5%]  (true,exec)
  D.44697_494 = m_1764->m_port;
  D.44777_495 = D.44697_494 != 0;
  D.44778_496 = got_audio_1693 == 0;
  D.44779_497 = D.44778_496 & D.44777_495;
  if (D.44779_497 != 0)
    goto <bb 170>;
  else
    goto <bb 427>;
  # SUCC: 170 [29.0%]  (true,exec) 427 [71.0%]  (false,exec)

  # BLOCK 170 freq:27
  # PRED: 169 [29.0%]  (true,exec)
  D.44781_498 = switch_rtp_has_dtls ();
  if (D.44781_498 != 0)
    goto <bb 171>;
  else
    goto <bb 179>;
  # SUCC: 171 [29.0%]  (true,exec) 179 [71.0%]  (false,exec)

  # BLOCK 171 freq:8
  # PRED: 170 [29.0%]  (true,exec)
  D.44784_499 = dtls_ok (session_161(D));
  if (D.44784_499 != 0)
    goto <bb 172>;
  else
    goto <bb 179>;
  # SUCC: 172 [50.0%]  (true,exec) 179 [50.0%]  (false,exec)

  # BLOCK 172 freq:4
  # PRED: 171 [50.0%]  (true,exec)
  attr_500 = m_1764->m_attributes;
  # DEBUG attr => attr_500
  # DEBUG got_crypto => got_crypto_1866
  # DEBUG attr => attr_500
  if (attr_500 != 0B)
    goto <bb 173>;
  else
    goto <bb 208>;
  # SUCC: 173 [91.0%]  (true,exec) 208 [9.0%]  (false,exec)

  # BLOCK 173 freq:4
  # PRED: 172 [91.0%]  (true,exec)
  # attr_604 = PHI <attr_500(172)>
  # got_crypto_1724 = PHI <got_crypto_1866(172)>
  # SUCC: 174 [100.0%]  (fallthru)

  # BLOCK 174 freq:40
  # PRED: 173 [100.0%]  (fallthru) 178 [91.0%]  (true,exec)
  # attr_1559 = PHI <attr_604(173), attr_506(178)>
  # got_crypto_361 = PHI <got_crypto_1724(173), got_crypto_50(178)>
  D.44590_501 = attr_1559->a_name;
  D.44787_502 = strcasecmp (D.44590_501, "fingerprint");
  if (D.44787_502 == 0)
    goto <bb 175>;
  else
    goto <bb 178>;
  # SUCC: 175 [50.0%]  (true,exec) 178 [50.0%]  (false,exec)

  # BLOCK 175 freq:20
  # PRED: 174 [50.0%]  (true,exec)
  D.44619_503 = attr_1559->a_value;
  # DEBUG s => D.44619_503
  if (D.44619_503 == 0B)
    goto <bb 178>;
  else
    goto <bb 176>;
  # SUCC: 178 [15.0%]  (true,exec) 176 [85.0%]  (false,exec)

  # BLOCK 176 freq:17
  # PRED: 175 [85.0%]  (false,exec)
  D.47887_1469 = *D.44619_503;
  if (D.47887_1469 == 0)
    goto <bb 177>;
  else
    goto <bb 178>;
  # SUCC: 177 [50.0%]  (true,exec) 178 [50.0%]  (false,exec)

  # BLOCK 177 freq:9
  # PRED: 176 [50.0%]  (true,exec)
  # SUCC: 178 [100.0%]  (fallthru,exec)

  # BLOCK 178 freq:40
  # PRED: 174 [50.0%]  (false,exec) 177 [100.0%]  (fallthru,exec) 176 [50.0%]  (false,exec) 175 [15.0%]  (true,exec)
  # got_crypto_50 = PHI <got_crypto_361(174), got_crypto_361(177), 1(176), got_crypto_361(175)>
  # DEBUG got_crypto => got_crypto_50
  attr_506 = attr_1559->a_next;
  # DEBUG attr => attr_506
  # DEBUG got_crypto => got_crypto_50
  # DEBUG attr => attr_506
  if (attr_506 != 0B)
    goto <bb 174>;
  else
    goto <bb 449>;
  # SUCC: 174 [91.0%]  (true,exec) 449 [9.0%]  (false,exec)

  # BLOCK 179 freq:23
  # PRED: 170 [71.0%]  (false,exec) 171 [50.0%]  (false,exec)
  # DEBUG got_crypto => got_crypto_1866
  attr_507 = m_1764->m_attributes;
  # DEBUG attr => attr_507
  # DEBUG got_crypto => got_crypto_1866
  # DEBUG maxptime => dmaxptime_1005
  # DEBUG ptime => dptime_1035
  # DEBUG attr => attr_507
  if (attr_507 != 0B)
    goto <bb 449>;
  else
    goto <bb 208>;
  # SUCC: 449 [94.7%]  (true,exec) 208 [5.3%]  (false,exec)

  # BLOCK 180 freq:581
  # PRED: 449 [100.0%]  (fallthru,exec) 207 [95.5%]  (true,exec)
  # attr_1599 = PHI <attr_922(449), attr_548(207)>
  # ptime_1475 = PHI <dptime_1035(449), ptime_34(207)>
  # maxptime_1470 = PHI <dmaxptime_1005(449), maxptime_38(207)>
  # got_crypto_1118 = PHI <got_crypto_141(449), got_crypto_53(207)>
  D.44590_508 = attr_1599->a_name;
  D.44795_509 = strcasecmp (D.44590_508, "rtcp");
  if (D.44795_509 == 0)
    goto <bb 181>;
  else
    goto <bb 184>;
  # SUCC: 181 [50.0%]  (true,exec) 184 [50.0%]  (false,exec)

  # BLOCK 181 freq:290
  # PRED: 180 [50.0%]  (true,exec)
  D.44619_510 = attr_1599->a_value;
  if (D.44619_510 != 0B)
    goto <bb 182>;
  else
    goto <bb 184>;
  # SUCC: 182 [69.8%]  (true,exec) 184 [30.2%]  (false,exec)

  # BLOCK 182 freq:203
  # PRED: 181 [69.8%]  (true,exec)
  D.44530_511 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_511, "rtp_remote_audio_rtcp_port", D.44619_510, 1);
  D.44619_513 = attr_1599->a_value;
  # DEBUG __nptr => D.44619_513
  D.47890_1471 = strtol (D.44619_513, 0B, 10);
  D.44799_515 = (short unsigned int) D.47890_1471;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].remote_rtcp_port = D.44799_515;
  D.44471_516 = smh_186->mparams;
  D.44800_517 = D.44471_516->rtcp_audio_interval_msec;
  if (D.44800_517 == 0B)
    goto <bb 183>;
  else
    goto <bb 207>;
  # SUCC: 183 [15.0%]  (true,exec) 207 [85.0%]  (false,exec)

  # BLOCK 183 freq:30
  # PRED: 182 [15.0%]  (true,exec)
  D.44471_516->rtcp_audio_interval_msec = "5000";
  goto <bb 207>;
  # SUCC: 207 [100.0%]  (fallthru,exec)

  # BLOCK 184 freq:378
  # PRED: 180 [50.0%]  (false,exec) 181 [30.2%]  (false,exec)
  D.44805_520 = strcasecmp (D.44590_508, "ptime");
  if (D.44805_520 == 0)
    goto <bb 185>;
  else
    goto <bb 187>;
  # SUCC: 185 [50.0%]  (true,exec) 187 [50.0%]  (false,exec)

  # BLOCK 185 freq:189
  # PRED: 184 [50.0%]  (true,exec)
  D.44619_521 = attr_1599->a_value;
  if (D.44619_521 != 0B)
    goto <bb 186>;
  else
    goto <bb 187>;
  # SUCC: 186 [69.8%]  (true,exec) 187 [30.2%]  (false,exec)

  # BLOCK 186 freq:132
  # PRED: 185 [69.8%]  (true,exec)
  # DEBUG __nptr => D.44619_521
  ptime_1472 = strtol (D.44619_521, 0B, 10);
  # DEBUG ptime => NULL
  goto <bb 207>;
  # SUCC: 207 [100.0%]  (fallthru,exec)

  # BLOCK 187 freq:246
  # PRED: 184 [50.0%]  (false,exec) 185 [30.2%]  (false,exec)
  D.44810_525 = strcasecmp (D.44590_508, "maxptime");
  if (D.44810_525 == 0)
    goto <bb 188>;
  else
    goto <bb 190>;
  # SUCC: 188 [50.0%]  (true,exec) 190 [50.0%]  (false,exec)

  # BLOCK 188 freq:123
  # PRED: 187 [50.0%]  (true,exec)
  D.44619_526 = attr_1599->a_value;
  if (D.44619_526 != 0B)
    goto <bb 189>;
  else
    goto <bb 190>;
  # SUCC: 189 [69.8%]  (true,exec) 190 [30.2%]  (false,exec)

  # BLOCK 189 freq:86
  # PRED: 188 [69.8%]  (true,exec)
  # DEBUG __nptr => D.44619_526
  maxptime_1473 = strtol (D.44619_526, 0B, 10);
  # DEBUG maxptime => NULL
  goto <bb 207>;
  # SUCC: 207 [100.0%]  (fallthru,exec)

  # BLOCK 190 freq:160
  # PRED: 187 [50.0%]  (false,exec) 188 [30.2%]  (false,exec)
  if (got_crypto_1118 <= 0)
    goto <bb 191>;
  else
    goto <bb 207>;
  # SUCC: 191 [27.0%]  (true,exec) 207 [73.0%]  (false,exec)

  # BLOCK 191 freq:43
  # PRED: 190 [27.0%]  (true,exec)
  D.44815_530 = strcasecmp (D.44590_508, "crypto");
  if (D.44815_530 == 0)
    goto <bb 192>;
  else
    goto <bb 207>;
  # SUCC: 192 [50.0%]  (true,exec) 207 [50.0%]  (false,exec)

  # BLOCK 192 freq:22
  # PRED: 191 [50.0%]  (true,exec)
  prephitmp.1031_531 = attr_1599->a_value;
  # DEBUG s => prephitmp.1031_531
  if (prephitmp.1031_531 == 0B)
    goto <bb 207>;
  else
    goto <bb 193>;
  # SUCC: 207 [15.0%]  (true,exec) 193 [85.0%]  (false,exec)

  # BLOCK 193 freq:18
  # PRED: 192 [85.0%]  (false,exec)
  D.47900_1474 = *prephitmp.1031_531;
  if (D.47900_1474 == 0)
    goto <bb 207>;
  else
    goto <bb 436>;
  # SUCC: 207 [50.0%]  (true,exec) 436 [50.0%]  (false,exec)

  # BLOCK 194 freq:5
  # PRED: 436 [50.0%]  (true,exec)
  D.44530_536 = session_161(D)->channel;
  D.44825_537 = switch_channel_get_variable_dup (D.44530_536, "rtp_allow_crypto_in_avp", 1, -1);
  # DEBUG expr => D.44825_537
  if (D.44825_537 != 0B)
    goto <bb 195>;
  else
    goto <bb 437>;
  # SUCC: 195 [85.0%]  (true,exec) 437 [15.0%]  (false,exec)

  # BLOCK 195 freq:5
  # PRED: 194 [85.0%]  (true,exec)
  D.49723_1590 = strcasecmp (D.44825_537, "yes");
  if (D.49723_1590 == 0)
    goto <bb 204>;
  else
    goto <bb 196>;
  # SUCC: 204 [39.0%]  (true,exec) 196 [61.0%]  (false,exec)

  # BLOCK 196 freq:3
  # PRED: 195 [61.0%]  (false,exec)
  D.49724_1591 = strcasecmp (D.44825_537, "on");
  if (D.49724_1591 == 0)
    goto <bb 204>;
  else
    goto <bb 197>;
  # SUCC: 204 [39.0%]  (true,exec) 197 [61.0%]  (false,exec)

  # BLOCK 197 freq:2
  # PRED: 196 [61.0%]  (false,exec)
  D.49725_1592 = strcasecmp (D.44825_537, "true");
  if (D.49725_1592 == 0)
    goto <bb 204>;
  else
    goto <bb 198>;
  # SUCC: 204 [39.0%]  (true,exec) 198 [61.0%]  (false,exec)

  # BLOCK 198 freq:1
  # PRED: 197 [61.0%]  (false,exec)
  D.49726_1593 = strcasecmp (D.44825_537, "t");
  if (D.49726_1593 == 0)
    goto <bb 204>;
  else
    goto <bb 199>;
  # SUCC: 204 [39.0%]  (true,exec) 199 [61.0%]  (false,exec)

  # BLOCK 199 freq:1
  # PRED: 198 [61.0%]  (false,exec)
  D.49727_1594 = strcasecmp (D.44825_537, "enabled");
  if (D.49727_1594 == 0)
    goto <bb 204>;
  else
    goto <bb 200>;
  # SUCC: 204 [39.0%]  (true,exec) 200 [61.0%]  (false,exec)

  # BLOCK 200
  # PRED: 199 [61.0%]  (false,exec)
  D.49728_1595 = strcasecmp (D.44825_537, "active");
  if (D.49728_1595 == 0)
    goto <bb 204>;
  else
    goto <bb 201>;
  # SUCC: 204 [39.0%]  (true,exec) 201 [61.0%]  (false,exec)

  # BLOCK 201
  # PRED: 200 [61.0%]  (false,exec)
  D.49729_1596 = strcasecmp (D.44825_537, "allow");
  if (D.49729_1596 == 0)
    goto <bb 204>;
  else
    goto <bb 202>;
  # SUCC: 204 [61.0%]  (true,exec) 202 [39.0%]  (false,exec)

  # BLOCK 202
  # PRED: 201 [39.0%]  (false,exec)
  D.49730_1597 = switch_is_number (D.44825_537);
  if (D.49730_1597 != 0)
    goto <bb 203>;
  else
    goto <bb 437>;
  # SUCC: 203 [29.0%]  (true,exec) 437 [71.0%]  (false,exec)

  # BLOCK 203
  # PRED: 202 [29.0%]  (true,exec)
  # DEBUG __nptr => D.44825_537
  D.49731_1598 = strtol (D.44825_537, 0B, 10);
  if (D.49731_1598 != 0)
    goto <bb 204>;
  else
    goto <bb 437>;
  # SUCC: 204 [39.0%]  (true,exec) 437 [61.0%]  (false,exec)

  # BLOCK 204 freq:2
  # PRED: 195 [39.0%]  (true,exec) 196 [39.0%]  (true,exec) 197 [39.0%]  (true,exec) 198 [39.0%]  (true,exec) 199 [39.0%]  (true,exec) 200 [39.0%]  (true,exec) 201 [61.0%]  (true,exec) 203 [39.0%]  (true,exec)
Invalid sum of outgoing probabilities 0.0%
  prephitmp.1031_1639 = attr_1599->a_value;
  goto <bb 206>;
  # SUCC: 206 (fallthru,exec)

  # BLOCK 205
  # PRED: 437 [4.5%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3262, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 206 freq:11
  # PRED: 436 [50.0%]  (false,exec) 204 (fallthru,exec) 438 [100.0%]  (fallthru,exec)
  # prephitmp.1031_1892 = PHI <prephitmp.1031_531(436), prephitmp.1031_1639(204), prephitmp.1031_1895(438)>
  # DEBUG crypto => prephitmp.1031_1892
  # DEBUG __nptr => prephitmp.1031_1892
  crypto_tag_1476 = strtol (prephitmp.1031_1892, 0B, 10);
  # DEBUG crypto_tag => NULL
  got_crypto_547 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_crypto", 0, prephitmp.1031_1892, crypto_tag_1476, sdp_type_546(D));
  # DEBUG got_crypto => got_crypto_547
  # SUCC: 207 [100.0%]  (fallthru,exec)

  # BLOCK 207 freq:581
  # PRED: 183 [100.0%]  (fallthru,exec) 186 [100.0%]  (fallthru,exec) 189 [100.0%]  (fallthru,exec) 190 [73.0%]  (false,exec) 191 [50.0%]  (false,exec) 193 [50.0%]  (true,exec) 206 [100.0%]  (fallthru,exec) 182 [85.0%]  (false,exec) 192 [15.0%]  (true,exec)
  # ptime_34 = PHI <ptime_1475(183), ptime_1472(186), ptime_1475(189), ptime_1475(190), ptime_1475(191), ptime_1475(193), ptime_1475(206), ptime_1475(182), ptime_1475(192)>
  # maxptime_38 = PHI <maxptime_1470(183), maxptime_1470(186), maxptime_1473(189), maxptime_1470(190), maxptime_1470(191), maxptime_1470(193), maxptime_1470(206), maxptime_1470(182), maxptime_1470(192)>
  # got_crypto_53 = PHI <got_crypto_1118(183), got_crypto_1118(186), got_crypto_1118(189), got_crypto_1118(190), got_crypto_1118(191), got_crypto_1118(193), got_crypto_547(206), got_crypto_1118(182), got_crypto_1118(192)>
  # DEBUG got_crypto => got_crypto_53
  # DEBUG maxptime => maxptime_38
  # DEBUG ptime => ptime_34
  attr_548 = attr_1599->a_next;
  # DEBUG attr => attr_548
  # DEBUG got_crypto => got_crypto_53
  # DEBUG maxptime => maxptime_38
  # DEBUG ptime => ptime_34
  # DEBUG attr => attr_548
  if (attr_548 != 0B)
    goto <bb 180>;
  else
    goto <bb 208>;
  # SUCC: 180 [95.5%]  (true,exec) 208 [4.5%]  (false,exec)

  # BLOCK 208 freq:27
  # PRED: 207 [4.5%]  (false,exec) 179 [5.3%]  (false,exec) 172 [9.0%]  (false,exec)
  # ptime_1033 = PHI <ptime_34(207), dptime_1035(179), dptime_1035(172)>
  # maxptime_1040 = PHI <maxptime_38(207), dmaxptime_1005(179), dmaxptime_1005(172)>
  # got_crypto_969 = PHI <got_crypto_53(207), got_crypto_1866(179), got_crypto_1866(172)>
  D.44834_549 = got_crypto_969 == -1;
  D.44835_550 = got_savp_1739 != 0;
  D.44836_551 = D.44834_549 & D.44835_550;
  if (D.44836_551 != 0)
    goto <bb 209>;
  else
    goto <bb 211>;
  # SUCC: 209 [50.0%]  (true,exec) 211 [50.0%]  (false,exec)

  # BLOCK 209 freq:14
  # PRED: 208 [50.0%]  (true,exec)
  D.44839_552 = got_avp_1859 | got_webrtc_78;
  if (D.44839_552 == 0)
    goto <bb 210>;
  else
    goto <bb 211>;
  # SUCC: 210 [2.0%]  (true,exec) 211 [98.0%]  (false,exec)

  # BLOCK 210
  # PRED: 209 [2.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3277, session_161(D), 4, "Declining invite with only SAVP because secure media is administratively disabled\n");
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 211 freq:27
  # PRED: 208 [50.0%]  (false,exec) 209 [98.0%]  (false,exec)
  connection_554 = sdp_198->sdp_connection;
  # DEBUG connection => connection_554
  connection_555 = m_1764->m_connections;
  if (connection_555 != 0B)
    goto <bb 214>;
  else
    goto <bb 212>;
  # SUCC: 214 [85.0%]  (true,exec) 212 [15.0%]  (false,exec)

  # BLOCK 212 freq:4
  # PRED: 211 [15.0%]  (false,exec)
  # DEBUG connection => connection_554
  if (connection_554 == 0B)
    goto <bb 213>;
  else
    goto <bb 214>;
  # SUCC: 213 [13.5%]  (true,exec) 214 [86.5%]  (false,exec)

  # BLOCK 213 freq:1
  # PRED: 212 [13.5%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3288, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 214 freq:27
  # PRED: 212 [86.5%]  (false,exec) 211 [85.0%]  (true,exec)
  # connection_139 = PHI <connection_554(212), connection_555(211)>
  # DEBUG x => 0
  map_559 = m_1764->m_rtpmaps;
  # DEBUG map => map_559
  # DEBUG map => map_559
  # DEBUG nm_idx => nm_idx_1749
  # DEBUG m_idx => m_idx_1869
  # DEBUG codec_ms => codec_ms_477
  # DEBUG x => NULL
  # DEBUG cng_pt => cng_pt_1717
  # DEBUG best_te => best_te_680
  # DEBUG match => match_1800
  if (map_559 != 0B)
    goto <bb 215>;
  else
    goto <bb 282>;
  # SUCC: 215 [95.5%]  (true,exec) 282 [4.5%]  (false,exec)

  # BLOCK 215 freq:26
  # PRED: 214 [95.5%]  (true,exec)
  # match_1775 = PHI <match_1800(214)>
  # best_te_1701 = PHI <best_te_680(214)>
  # cng_pt_1702 = PHI <cng_pt_1717(214)>
  # codec_ms_386 = PHI <codec_ms_477(214)>
  # m_idx_863 = PHI <m_idx_1869(214)>
  # nm_idx_912 = PHI <nm_idx_1749(214)>
  # map_255 = PHI <map_559(214)>
  # SUCC: 216 [100.0%]  (fallthru)

  # BLOCK 216 freq:518
  # PRED: 215 [100.0%]  (fallthru) 281 [95.5%]  (true,exec)
  # match_1901 = PHI <match_1775(215), match_7(281)>
  # best_te_1898 = PHI <best_te_1701(215), best_te_19(281)>
  # cng_pt_1667 = PHI <cng_pt_1702(215), cng_pt_24(281)>
  # codec_ms_1720 = PHI <codec_ms_386(215), codec_ms_91(281)>
  # m_idx_792 = PHI <m_idx_863(215), m_idx_103(281)>
  # nm_idx_1755 = PHI <nm_idx_912(215), nm_idx_117(281)>
  # map_1728 = PHI <map_255(215), map_711(281)>
  # DEBUG map_bit_rate => 0
  codec_fmtp = {};
  rm_encoding_561 = map_1728->rm_encoding;
  # DEBUG rm_encoding => rm_encoding_561
  if (rm_encoding_561 == 0B)
    goto <bb 218>;
  else
    goto <bb 217>;
  # SUCC: 218 [15.0%]  (true,exec) 217 [85.0%]  (false,exec)

  # BLOCK 217 freq:440
  # PRED: 216 [85.0%]  (false,exec)
  # SUCC: 218 [100.0%]  (fallthru,exec)

  # BLOCK 218 freq:518
  # PRED: 217 [100.0%]  (fallthru,exec) 216 [15.0%]  (true,exec)
  # rm_encoding_130 = PHI <rm_encoding_561(217), ""(216)>
  # DEBUG rm_encoding => rm_encoding_130
  D.44848_563 = strcasecmp (rm_encoding_130, "telephone-event");
  if (D.44848_563 == 0)
    goto <bb 219>;
  else
    goto <bb 222>;
  # SUCC: 219 [71.0%]  (true,exec) 222 [29.0%]  (false,exec)

  # BLOCK 219 freq:368
  # PRED: 218 [71.0%]  (true,exec)
  if (best_te_1898 == 0)
    goto <bb 221>;
  else
    goto <bb 220>;
  # SUCC: 221 [29.0%]  (true,exec) 220 [71.0%]  (false,exec)

  # BLOCK 220 freq:261
  # PRED: 219 [71.0%]  (false,exec)
  D.44854_564 = map_1728->rm_rate;
  D.44750_565 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44855_566 = D.44750_565->rm_rate;
  if (D.44854_564 == D.44855_566)
    goto <bb 221>;
  else
    goto <bb 281>;
  # SUCC: 221 [28.0%]  (true,exec) 281 [72.0%]  (false,exec)

  # BLOCK 221 freq:180
  # PRED: 219 [29.0%]  (true,exec) 220 [28.0%]  (true,exec)
  D.44856_567 = map_1728->rm_pt;
  best_te_568 = (switch_payload_t) D.44856_567;
  # DEBUG best_te => best_te_568
  D.44857_569 = (int) best_te_568;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3309, session_161(D), 7, "Set telephone-event payload to %u\n", D.44857_569);
  goto <bb 281>;
  # SUCC: 281 [100.0%]  (fallthru,exec)

  # BLOCK 222 freq:150
  # PRED: 218 [29.0%]  (false,exec)
  D.44858_570 = switch_media_handle_test_media_flag (smh_186, 9);
  if (D.44858_570 == 0)
    goto <bb 223>;
  else
    goto <bb 227>;
  # SUCC: 223 [50.0%]  (true,exec) 227 [50.0%]  (false,exec)

  # BLOCK 223 freq:75
  # PRED: 222 [50.0%]  (true,exec)
  if (cng_pt_1667 == 0)
    goto <bb 224>;
  else
    goto <bb 227>;
  # SUCC: 224 [50.0%]  (true,exec) 227 [50.0%]  (false,exec)

  # BLOCK 224 freq:38
  # PRED: 223 [50.0%]  (true,exec)
  D.44863_571 = strcasecmp (rm_encoding_130, "CN");
  if (D.44863_571 == 0)
    goto <bb 225>;
  else
    goto <bb 227>;
  # SUCC: 225 [50.0%]  (true,exec) 227 [50.0%]  (false,exec)

  # BLOCK 225 freq:19
  # PRED: 224 [50.0%]  (true,exec)
  D.44856_572 = map_1728->rm_pt;
  cng_pt_573 = (switch_payload_t) D.44856_572;
  # DEBUG cng_pt => cng_pt_573
  D.44605_574 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_574 != 0B)
    goto <bb 226>;
  else
    goto <bb 281>;
  # SUCC: 226 [69.8%]  (true,exec) 281 [30.2%]  (false,exec)

  # BLOCK 226 freq:13
  # PRED: 225 [69.8%]  (true,exec)
  D.44868_575 = (int) cng_pt_573;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3317, session_161(D), 7, "Set comfort noise payload to %u\n", D.44868_575);
  D.44605_576 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44471_577 = smh_186->mparams;
  D.44869_578 = D.44471_577->cng_pt;
  switch_rtp_set_cng_pt (D.44605_576, D.44869_578);
  goto <bb 281>;
  # SUCC: 281 [100.0%]  (fallthru,exec)

  # BLOCK 227 freq:131
  # PRED: 222 [50.0%]  (false,exec) 223 [50.0%]  (false,exec) 224 [50.0%]  (false,exec)
  # DEBUG x => NULL
  if (match_1901 != 0)
    goto <bb 281>;
  else
    goto <bb 228>;
  # SUCC: 281 [50.0%]  (true,exec) 228 [50.0%]  (false,exec)

  # BLOCK 228 freq:48
  # PRED: 227 [50.0%]  (false,exec)
  # DEBUG codec_ms => ptime_1033
  if (maxptime_1040 != 0)
    goto <bb 229>;
  else
    goto <bb 231>;
  # SUCC: 229 [50.0%]  (true,exec) 231 [50.0%]  (false,exec)

  # BLOCK 229 freq:24
  # PRED: 228 [50.0%]  (true,exec)
  D.44877_582 = ptime_1033 == 0;
  D.44878_583 = ptime_1033 > maxptime_1040;
  D.44879_584 = D.44878_583 | D.44877_582;
  if (D.44879_584 != 0)
    goto <bb 439>;
  else
    goto <bb 230>;
  # SUCC: 439 [50.0%]  (true,exec) 230 [50.0%]  (false,exec)

  # BLOCK 230 freq:12
  # PRED: 229 [50.0%]  (false,exec)
  goto <bb 439>;
  # SUCC: 439 [100.0%]  (fallthru,exec)

  # BLOCK 231 freq:24
  # PRED: 228 [50.0%]  (false,exec)
  # DEBUG codec_ms => ptime_1033
  if (ptime_1033 == 0)
    goto <bb 232>;
  else
    goto <bb 233>;
  # SUCC: 232 [58.0%]  (true,exec) 233 [42.0%]  (false,exec)

  # BLOCK 232 freq:14
  # PRED: 231 [58.0%]  (true,exec)
  D.44856_586 = map_1728->rm_pt;
  D.44884_587 = (uint32_t) D.44856_586;
  D.44885_588 = switch_default_ptime (rm_encoding_130, D.44884_587);
  codec_ms_589 = (int) D.44885_588;
  # DEBUG codec_ms => codec_ms_589
  # SUCC: 233 [100.0%]  (fallthru,exec)

  # BLOCK 233 freq:48
  # PRED: 439 [100.0%]  (fallthru,exec) 232 [100.0%]  (fallthru,exec) 231 [42.0%]  (false,exec)
  # codec_ms_87 = PHI <codec_ms_1883(439), codec_ms_589(232), ptime_1033(231)>
  # DEBUG codec_ms => codec_ms_87
  D.44856_590 = map_1728->rm_pt;
  csui.173_591 = (unsigned char) D.44856_590;
  # DEBUG payload => csui.173_591
  if (csui.173_591 <= 18)
    goto <bb 234>;
  else
    goto <bb 235>;
  # SUCC: 235 [50.0%]  (false,exec) 234 [50.0%]  (true,exec)

  # BLOCK 234 freq:24
  # PRED: 233 [50.0%]  (true,exec)
  map_bit_rate_1479 = CSWTCH.174[csui.173_591];
  # SUCC: 235 [100.0%]  (fallthru,exec)

  # BLOCK 235 freq:48
  # PRED: 233 [50.0%]  (false,exec) 234 [100.0%]  (fallthru,exec)
  # map_bit_rate_1480 = PHI <0(233), map_bit_rate_1479(234)>
  # DEBUG map_bit_rate => NULL
  if (ptime_1033 == 0)
    goto <bb 236>;
  else
    goto <bb 238>;
  # SUCC: 236 [50.0%]  (true,exec) 238 [50.0%]  (false,exec)

  # BLOCK 236 freq:24
  # PRED: 235 [50.0%]  (true,exec)
  D.44889_593 = map_1728->rm_encoding;
  D.44890_594 = strcasecmp (D.44889_593, "g723");
  if (D.44890_594 == 0)
    goto <bb 238>;
  else
    goto <bb 237>;
  # SUCC: 238 [50.0%]  (true,exec) 237 [50.0%]  (false,exec)

  # BLOCK 237 freq:12
  # PRED: 236 [50.0%]  (false,exec)
  # SUCC: 238 [100.0%]  (fallthru,exec)

  # BLOCK 238 freq:48
  # PRED: 235 [50.0%]  (false,exec) 237 [100.0%]  (fallthru,exec) 236 [50.0%]  (true,exec)
  # codec_ms_88 = PHI <codec_ms_87(235), codec_ms_87(237), 33(236)>
  # DEBUG codec_ms => codec_ms_88
  remote_codec_rate_596 = map_1728->rm_rate;
  # DEBUG remote_codec_rate => remote_codec_rate_596
  # DEBUG fmtp_remote_codec_rate => 0
  memset (&codec_fmtp, 0, 16);
  D.44893_598 = map_1728->rm_fmtp;
  # DEBUG s => D.44893_598
  if (D.44893_598 == 0B)
    goto <bb 240>;
  else
    goto <bb 239>;
  # SUCC: 240 [15.0%]  (true,exec) 239 [85.0%]  (false,exec)

  # BLOCK 239 freq:41
  # PRED: 238 [85.0%]  (false,exec)
  D.47915_1481 = *D.44893_598;
  if (D.47915_1481 == 0)
    goto <bb 240>;
  else
    goto <bb 440>;
  # SUCC: 240 [50.0%]  (true,exec) 440 [50.0%]  (false,exec)

  # BLOCK 240 freq:7
  # PRED: 238 [15.0%]  (true,exec) 239 [50.0%]  (true,exec)
  D.44889_600 = map_1728->rm_encoding;
  D.44897_601 = strcasecmp (D.44889_600, "ilbc");
  if (D.44897_601 == 0)
    goto <bb 248>;
  else
    goto <bb 241>;
  # SUCC: 248 [50.0%]  (true,exec) 241 [50.0%]  (false,exec)

  # BLOCK 241 freq:17
  # PRED: 240 [50.0%]  (false,exec)
  D.44901_605 = strcasecmp (D.44889_600, "isac");
  if (D.44901_605 == 0)
    goto <bb 248>;
  else
    goto <bb 242>;
  # SUCC: 248 [50.0%]  (true,exec) 242 [50.0%]  (false,exec)

  # BLOCK 242 freq:9
  # PRED: 241 [50.0%]  (false,exec)
  goto <bb 248>;
  # SUCC: 248 [100.0%]  (fallthru,exec)

  # BLOCK 243 freq:7
  # PRED: 440 [50.0%]  (true,exec)
  D.44908_612 = codec_fmtp.bits_per_second;
  if (D.44908_612 != 0)
    goto <bb 244>;
  else
    goto <bb 245>;
  # SUCC: 244 [50.0%]  (true,exec) 245 [50.0%]  (false,exec)

  # BLOCK 244 freq:3
  # PRED: 243 [50.0%]  (true,exec)
  map_bit_rate_614 = (uint32_t) D.44908_612;
  # DEBUG map_bit_rate => map_bit_rate_614
  # SUCC: 245 [100.0%]  (fallthru,exec)

  # BLOCK 245 freq:7
  # PRED: 243 [50.0%]  (false,exec) 244 [100.0%]  (fallthru,exec)
  # map_bit_rate_131 = PHI <map_bit_rate_1480(243), map_bit_rate_614(244)>
  # DEBUG map_bit_rate => map_bit_rate_131
  D.44911_615 = codec_fmtp.microseconds_per_packet;
  if (D.44911_615 != 0)
    goto <bb 246>;
  else
    goto <bb 247>;
  # SUCC: 246 [50.0%]  (true,exec) 247 [50.0%]  (false,exec)

  # BLOCK 246 freq:3
  # PRED: 245 [50.0%]  (true,exec)
  codec_ms_617 = D.44911_615 / 1000;
  # DEBUG codec_ms => codec_ms_617
  # SUCC: 247 [100.0%]  (fallthru,exec)

  # BLOCK 247 freq:7
  # PRED: 245 [50.0%]  (false,exec) 246 [100.0%]  (fallthru,exec)
  # codec_ms_89 = PHI <codec_ms_88(245), codec_ms_617(246)>
  # DEBUG codec_ms => codec_ms_89
  fmtp_remote_codec_rate_618 = codec_fmtp.actual_samples_per_second;
  # SUCC: 248 [100.0%]  (fallthru)

  # BLOCK 248 freq:48
  # PRED: 242 [100.0%]  (fallthru,exec) 440 [50.0%]  (false,exec) 247 [100.0%]  (fallthru) 241 [50.0%]  (true,exec) 240 [50.0%]  (true,exec)
  # codec_ms_90 = PHI <codec_ms_88(242), codec_ms_88(440), codec_ms_89(247), 39(241), 32(240)>
  # fmtp_remote_codec_rate_99 = PHI <0(242), 0(440), fmtp_remote_codec_rate_618(247), 0(241), 0(240)>
  # map_bit_rate_132 = PHI <map_bit_rate_1480(242), map_bit_rate_1480(440), map_bit_rate_131(247), 32001(241), 13332(240)>
  # DEBUG map_bit_rate => map_bit_rate_132
  # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_99
  # DEBUG codec_ms => codec_ms_90
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG nm_idx => nm_idx_1755
  # DEBUG m_idx => m_idx_792
  # DEBUG remote_codec_rate => remote_codec_rate_596
  # DEBUG match => 0
  D.44471_1501 = smh_186->mparams;
  D.44996_1498 = D.44471_1501->num_codecs;
  D.44997_1496 = D.44996_1498 > 0;
  D.44998_1609 = total_codecs_85 > 0;
  D.44999_1152 = D.44998_1609 & D.44997_1496;
  if (D.44999_1152 != 0)
    goto <bb 249>;
  else
    goto <bb 280>;
  # SUCC: 249 [95.5%]  (true,exec) 280 [4.5%]  (false,exec)

  # BLOCK 249 freq:46
  # PRED: 248 [95.5%]  (true,exec)
  D.44993_692 = codec_ms_90 * 1000;
  ivtmp.1076_1045 = (unsigned int) codec_array_84;
  # SUCC: 250 [100.0%]  (fallthru,exec)

  # BLOCK 250 freq:962
  # PRED: 279 [95.5%]  (true,exec) 249 [100.0%]  (fallthru,exec)
  # remote_codec_rate_1493 = PHI <remote_codec_rate_97(279), remote_codec_rate_596(249)>
  # m_idx_1487 = PHI <m_idx_100(279), m_idx_792(249)>
  # nm_idx_1139 = PHI <nm_idx_115(279), nm_idx_1755(249)>
  # i_1622 = PHI <i_710(279), 0(249)>
  # ivtmp.1076_392 = PHI <ivtmp.1076_1813(279), ivtmp.1076_1045(249)>
  D.49971_95 = (void *) ivtmp.1076_392;
  imp_629 = MEM[base: D.49971_95, offset: 0B];
  ivtmp.1076_1813 = ivtmp.1076_392 + 4;
  # DEBUG imp => imp_629
  D.44920_630 = imp_629->bits_per_second;
  # DEBUG bit_rate => (uint32_t) D.44920_630
  codec_rate_632 = imp_629->samples_per_second;
  # DEBUG codec_rate => codec_rate_632
  D.44921_633 = imp_629->codec_type;
  if (D.44921_633 != 0)
    goto <bb 279>;
  else
    goto <bb 251>;
  # SUCC: 279 [71.0%]  (true,exec) 251 [29.0%]  (false,exec)

  # BLOCK 251 freq:279
  # PRED: 250 [29.0%]  (false,exec)
  bit_rate_631 = (uint32_t) D.44920_630;
  D.44856_634 = map_1728->rm_pt;
  D.44924_635 = (int) D.44856_634;
  remote_codec_rate.92_636 = (int) remote_codec_rate_1493;
  D.44926_637 = imp_629->iananame;
  D.44927_638 = imp_629->ianacode;
  D.44928_639 = (int) D.44927_638;
  D.44929_640 = imp_629->microseconds_per_packet;
  D.44930_641 = D.44929_640 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3383, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u]/[%s:%d:%u:%d:%u]\n", rm_encoding_130, D.44924_635, remote_codec_rate.92_636, codec_ms_90, map_bit_rate_132, D.44926_637, D.44928_639, codec_rate_632, D.44930_641, bit_rate_631);
  D.44889_642 = map_1728->rm_encoding;
  # DEBUG s => D.44889_642
  if (D.44889_642 == 0B)
    goto <bb 253>;
  else
    goto <bb 252>;
  # SUCC: 253 [15.0%]  (true,exec) 252 [85.0%]  (false,exec)

  # BLOCK 252 freq:237
  # PRED: 251 [85.0%]  (false,exec)
  D.47919_1483 = *D.44889_642;
  if (D.47919_1483 == 0)
    goto <bb 253>;
  else
    goto <bb 441>;
  # SUCC: 253 [50.0%]  (true,exec) 441 [50.0%]  (false,exec)

  # BLOCK 253 freq:209
  # PRED: 252 [50.0%]  (true,exec) 441 [50.0%]  (true,exec) 251 [15.0%]  (true,exec)
  D.44856_649 = map_1728->rm_pt;
  D.44924_650 = (int) D.44856_649;
  if (D.44924_650 <= 95)
    goto <bb 254>;
  else
    goto <bb 255>;
  # SUCC: 254 [50.0%]  (true,exec) 255 [50.0%]  (false,exec)

  # BLOCK 254 freq:105
  # PRED: 253 [50.0%]  (true,exec)
  D.44927_653 = imp_629->ianacode;
  D.44928_654 = (int) D.44927_653;
  match_655 = D.44924_650 == D.44928_654;
  # DEBUG match => match_655
  prephitmp.1055_1879 = (_Bool) match_655;
  pretmp.1054_1710 = bit_rate_631 != 0;
  prephitmp.1047_1734 = prephitmp.1055_1879 & pretmp.1054_1710;
  goto <bb 261>;
  # SUCC: 261 [100.0%]  (fallthru,exec)

  # BLOCK 255 freq:174
  # PRED: 441 [50.0%]  (false,exec) 253 [50.0%]  (false,exec)
  D.44926_656 = imp_629->iananame;
  D.44944_657 = strcasecmp (rm_encoding_130, D.44926_656);
  if (D.44944_657 == 0)
    goto <bb 256>;
  else
    goto <bb 259>;
  # SUCC: 256 [50.0%]  (true,exec) 259 [50.0%]  (false,exec)

  # BLOCK 256 freq:87
  # PRED: 255 [50.0%]  (true,exec)
  if (remote_codec_rate_1493 == codec_rate_632)
    goto <bb 257>;
  else
    goto <bb 258>;
  # SUCC: 257 [28.0%]  (true,exec) 258 [72.0%]  (false,exec)

  # BLOCK 257 freq:24
  # PRED: 256 [28.0%]  (true,exec)
  prephitmp.1047_1810 = bit_rate_631 != 0;
  goto <bb 259>;
  # SUCC: 259 [100.0%]  (fallthru,exec)

  # BLOCK 258 freq:63
  # PRED: 256 [72.0%]  (false,exec)
  D.44947_658 = imp_629->actual_samples_per_second;
  match_763 = fmtp_remote_codec_rate_99 == D.44947_658;
  prephitmp.1055_1735 = (_Bool) match_763;
  pretmp.1046_784 = bit_rate_631 != 0;
  prephitmp.1047_789 = prephitmp.1055_1735 & pretmp.1046_784;
  # SUCC: 259 [100.0%]  (fallthru,exec)

  # BLOCK 259 freq:174
  # PRED: 258 [100.0%]  (fallthru,exec) 255 [50.0%]  (false,exec) 257 [100.0%]  (fallthru,exec)
  # match_1678 = PHI <match_763(258), match_1901(255), 1(257)>
  # prephitmp.1055_1679 = PHI <prephitmp.1055_1735(258), 0(255), 1(257)>
  # prephitmp.1047_1677 = PHI <prephitmp.1047_789(258), 0(255), prephitmp.1047_1810(257)>
  # DEBUG match => match_1678
  if (fmtp_remote_codec_rate_99 != 0)
    goto <bb 261>;
  else
    goto <bb 260>;
  # SUCC: 261 [50.0%]  (true,exec) 260 [50.0%]  (false,exec)

  # BLOCK 260 freq:87
  # PRED: 259 [50.0%]  (false,exec)
  # SUCC: 261 [100.0%]  (fallthru,exec)

  # BLOCK 261 freq:279
  # PRED: 254 [100.0%]  (fallthru,exec) 260 [100.0%]  (fallthru,exec) 259 [50.0%]  (true,exec)
  # match_1 = PHI <match_655(254), match_1678(260), match_1678(259)>
  # remote_codec_rate_96 = PHI <remote_codec_rate_1493(254), remote_codec_rate_1493(260), fmtp_remote_codec_rate_99(259)>
  # prephitmp.1055_1807 = PHI <prephitmp.1055_1879(254), prephitmp.1055_1679(260), prephitmp.1055_1679(259)>
  # prephitmp.1047_1806 = PHI <prephitmp.1047_1734(254), prephitmp.1047_1677(260), prephitmp.1047_1677(259)>
  # DEBUG remote_codec_rate => remote_codec_rate_96
  # DEBUG match => match_1
  if (prephitmp.1047_1806 != 0)
    goto <bb 262>;
  else
    goto <bb 265>;
  # SUCC: 262 [50.0%]  (true,exec) 265 [50.0%]  (false,exec)

  # BLOCK 262 freq:139
  # PRED: 261 [50.0%]  (true,exec)
  D.44955_666 = map_bit_rate_132 != 0;
  D.44956_667 = map_bit_rate_132 != bit_rate_631;
  D.44957_668 = D.44956_667 & D.44955_666;
  if (D.44957_668 != 0)
    goto <bb 263>;
  else
    goto <bb 265>;
  # SUCC: 263 [50.0%]  (true,exec) 265 [50.0%]  (false,exec)

  # BLOCK 263 freq:70
  # PRED: 262 [50.0%]  (true,exec)
  D.44960_670 = strcasecmp (D.44889_642, "ilbc");
  if (D.44960_670 != 0)
    goto <bb 264>;
  else
    goto <bb 265>;
  # SUCC: 264 [50.0%]  (true,exec) 265 [50.0%]  (false,exec)

  # BLOCK 264 freq:35
  # PRED: 263 [50.0%]  (true,exec)
  D.44963_672 = strcasecmp (D.44889_642, "isac");
  if (D.44963_672 != 0)
    goto <bb 279>;
  else
    goto <bb 265>;
  # SUCC: 279 [50.0%]  (true,exec) 265 [50.0%]  (false,exec)

  # BLOCK 265 freq:262
  # PRED: 261 [50.0%]  (false,exec) 262 [50.0%]  (false,exec) 263 [50.0%]  (false,exec) 264 [50.0%]  (false,exec)
  # match_2 = PHI <match_1(261), 1(262), 1(263), 1(264)>
  # prephitmp.1055_749 = PHI <prephitmp.1055_1807(261), 1(262), 1(263), 1(264)>
  # DEBUG match => match_2
  D.44968_675 = remote_codec_rate_96 != 0;
  D.44969_676 = prephitmp.1055_749 & D.44968_675;
  if (D.44969_676 != 0)
    goto <bb 266>;
  else
    goto <bb 270>;
  # SUCC: 266 [53.2%]  (true,exec) 270 [46.8%]  (false,exec)

  # BLOCK 266 freq:139
  # PRED: 265 [53.2%]  (true,exec)
  D.44972_677 = codec_rate_632 != 0;
  D.44973_678 = remote_codec_rate_96 != codec_rate_632;
  D.44974_679 = D.44973_678 & D.44972_677;
  if (D.44974_679 != 0)
    goto <bb 267>;
  else
    goto <bb 271>;
  # SUCC: 267 [50.0%]  (true,exec) 271 [50.0%]  (false,exec)

  # BLOCK 267 freq:70
  # PRED: 266 [50.0%]  (true,exec)
  D.44977_681 = strcasecmp (D.44889_642, "pcma");
  if (D.44977_681 == 0)
    goto <bb 269>;
  else
    goto <bb 268>;
  # SUCC: 269 [29.0%]  (true,exec) 268 [71.0%]  (false,exec)

  # BLOCK 268 freq:50
  # PRED: 267 [71.0%]  (false,exec)
  D.44979_683 = strcasecmp (D.44889_642, "pcmu");
  if (D.44979_683 == 0)
    goto <bb 269>;
  else
    goto <bb 271>;
  # SUCC: 269 [50.0%]  (true,exec) 271 [50.0%]  (false,exec)

  # BLOCK 269 freq:45
  # PRED: 267 [29.0%]  (true,exec) 268 [50.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3405, session_161(D), 7, "sampling rates have to match for G.711\n");
  # DEBUG match => 0
  # DEBUG match => 0
  goto <bb 279>;
  # SUCC: 279 [100.0%]  (fallthru,exec)

  # BLOCK 270 freq:122
  # PRED: 265 [46.8%]  (false,exec)
  # DEBUG match => match_2
  if (match_2 != 0)
    goto <bb 271>;
  else
    goto <bb 279>;
  # SUCC: 271 [36.5%]  (true,exec) 279 [63.5%]  (false,exec)

  # BLOCK 271 freq:139
  # PRED: 270 [36.5%]  (true,exec) 266 [50.0%]  (false,exec) 268 [50.0%]  (false,exec)
  if (scrooge_80 != 0)
    goto <bb 272>;
  else
    goto <bb 273>;
  # SUCC: 272 [29.0%]  (true,exec) 273 [71.0%]  (false,exec)

  # BLOCK 272 freq:40
  # PRED: 271 [29.0%]  (true,exec)
  D.44926_685 = imp_629->iananame;
  D.44984_686 = imp_629->samples_per_second;
  D.44929_687 = imp_629->microseconds_per_packet;
  D.44930_688 = D.44929_687 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3411, session_161(D), 7, "Bah HUMBUG! Sticking with %s@%uh@%ui\n", D.44926_685, D.44984_686, D.44930_688);
  goto <bb 278>;
  # SUCC: 278 [100.0%]  (fallthru,exec)

  # BLOCK 273 freq:99
  # PRED: 271 [71.0%]  (false,exec)
  D.44989_689 = ptime_1033 != 0;
  D.44990_690 = codec_ms_90 != 0;
  D.44991_691 = D.44990_690 & D.44989_689;
  if (D.44991_691 != 0)
    goto <bb 274>;
  else
    goto <bb 275>;
  # SUCC: 274 [50.0%]  (true,exec) 275 [50.0%]  (false,exec)

  # BLOCK 274 freq:50
  # PRED: 273 [50.0%]  (true,exec)
  prephitmp.1043_693 = imp_629->microseconds_per_packet;
  if (D.44993_692 != prephitmp.1043_693)
    goto <bb 277>;
  else
    goto <bb 275>;
  # SUCC: 277 [72.0%]  (true,exec) 275 [28.0%]  (false,exec)

  # BLOCK 275 freq:63
  # PRED: 273 [50.0%]  (false,exec) 274 [28.0%]  (false,exec)
  if (remote_codec_rate_96 != codec_rate_632)
    goto <bb 276>;
  else
    goto <bb 278>;
  # SUCC: 276 [72.0%]  (true,exec) 278 [28.0%]  (false,exec)

  # BLOCK 276 freq:45
  # PRED: 275 [72.0%]  (true,exec)
  prephitmp.1043_1736 = imp_629->microseconds_per_packet;
  # SUCC: 277 [100.0%]  (fallthru,exec)

  # BLOCK 277 freq:81
  # PRED: 274 [72.0%]  (true,exec) 276 [100.0%]  (fallthru,exec)
  # prephitmp.1043_1680 = PHI <prephitmp.1043_693(274), prephitmp.1043_1736(276)>
  # DEBUG match => 0
  D.44926_695 = imp_629->iananame;
  D.44927_696 = imp_629->ianacode;
  D.44928_697 = (int) D.44927_696;
  D.44930_699 = prephitmp.1043_1680 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3418, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] is saved as a near-match\n", D.44926_695, D.44928_697, codec_rate_632, D.44930_699, bit_rate_631);
  near_matches[nm_idx_1139].codec_idx = i_1622;
  remote_codec_rate.92_700 = (int) remote_codec_rate_96;
  near_matches[nm_idx_1139].rate = remote_codec_rate.92_700;
  near_matches[nm_idx_1139].imp = imp_629;
  near_matches[nm_idx_1139].map = map_1728;
  nm_idx_701 = nm_idx_1139 + 1;
  # DEBUG nm_idx => nm_idx_701
  goto <bb 279>;
  # SUCC: 279 [100.0%]  (fallthru,exec)

  # BLOCK 278 freq:58
  # PRED: 272 [100.0%]  (fallthru,exec) 275 [28.0%]  (false,exec)
  matches[m_idx_1487].codec_idx = i_1622;
  codec_rate.94_702 = (int) codec_rate_632;
  matches[m_idx_1487].rate = codec_rate.94_702;
  matches[m_idx_1487].imp = imp_629;
  matches[m_idx_1487].map = map_1728;
  m_idx_703 = m_idx_1487 + 1;
  # DEBUG m_idx => m_idx_703
  D.44926_704 = imp_629->iananame;
  D.44927_705 = imp_629->ianacode;
  D.44928_706 = (int) D.44927_705;
  D.44929_707 = imp_629->microseconds_per_packet;
  D.44930_708 = D.44929_707 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3437, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] ++++ is saved as a match\n", D.44926_704, D.44928_706, codec_rate_632, D.44930_708, bit_rate_631);
  if (m_idx_703 > 29)
    goto <bb 282>;
  else
    goto <bb 279>;
  # SUCC: 282 [4.5%]  (true,exec) 279 [95.5%]  (false,exec)

  # BLOCK 279 freq:959
  # PRED: 250 [71.0%]  (true,exec) 269 [100.0%]  (fallthru,exec) 277 [100.0%]  (fallthru,exec) 278 [95.5%]  (false,exec) 270 [63.5%]  (false,exec) 264 [50.0%]  (true,exec)
  # remote_codec_rate_97 = PHI <remote_codec_rate_1493(250), remote_codec_rate_96(269), remote_codec_rate_96(277), remote_codec_rate_96(278), remote_codec_rate_96(270), remote_codec_rate_96(264)>
  # m_idx_100 = PHI <m_idx_1487(250), m_idx_1487(269), m_idx_1487(277), m_idx_703(278), m_idx_1487(270), m_idx_1487(264)>
  # nm_idx_115 = PHI <nm_idx_1139(250), nm_idx_1139(269), nm_idx_701(277), nm_idx_1139(278), nm_idx_1139(270), nm_idx_1139(264)>
  # DEBUG nm_idx => nm_idx_115
  # DEBUG m_idx => m_idx_100
  # DEBUG remote_codec_rate => remote_codec_rate_97
  # DEBUG match => 0
  i_710 = i_1622 + 1;
  # DEBUG i => i_710
  # DEBUG i => i_710
  # DEBUG nm_idx => nm_idx_115
  # DEBUG m_idx => m_idx_100
  # DEBUG remote_codec_rate => remote_codec_rate_97
  # DEBUG match => 0
  D.44471_621 = smh_186->mparams;
  D.44996_622 = D.44471_621->num_codecs;
  D.44997_623 = D.44996_622 > i_710;
  D.44998_624 = total_codecs_85 > i_710;
  D.44999_625 = D.44998_624 & D.44997_623;
  if (D.44999_625 != 0)
    goto <bb 250>;
  else
    goto <bb 280>;
  # SUCC: 250 [95.5%]  (true,exec) 280 [4.5%]  (false,exec)

  # BLOCK 280 freq:45
  # PRED: 279 [4.5%]  (false,exec) 248 [4.5%]  (false,exec)
  # m_idx_102 = PHI <m_idx_100(279), m_idx_792(248)>
  # nm_idx_901 = PHI <nm_idx_115(279), nm_idx_1755(248)>
  # DEBUG m_idx => m_idx_102
  # DEBUG match => 0
  if (m_idx_102 > 29)
    goto <bb 282>;
  else
    goto <bb 281>;
  # SUCC: 282 (true,exec) 281 [100.0%]  (false,exec)

  # BLOCK 281 freq:515
  # PRED: 221 [100.0%]  (fallthru,exec) 226 [100.0%]  (fallthru,exec) 220 [72.0%]  (false,exec) 227 [50.0%]  (true,exec) 280 [100.0%]  (false,exec) 225 [30.2%]  (false,exec)
  # match_7 = PHI <match_1901(221), match_1901(226), match_1901(220), match_1901(227), match_1901(280), match_1901(225)>
  # best_te_19 = PHI <best_te_568(221), best_te_1898(226), best_te_1898(220), best_te_1898(227), best_te_1898(280), best_te_1898(225)>
  # cng_pt_24 = PHI <cng_pt_1667(221), cng_pt_573(226), cng_pt_1667(220), cng_pt_1667(227), cng_pt_1667(280), cng_pt_573(225)>
  # codec_ms_91 = PHI <codec_ms_1720(221), codec_ms_1720(226), codec_ms_1720(220), codec_ms_1720(227), codec_ms_90(280), codec_ms_1720(225)>
  # m_idx_103 = PHI <m_idx_792(221), m_idx_792(226), m_idx_792(220), m_idx_792(227), m_idx_102(280), m_idx_792(225)>
  # nm_idx_117 = PHI <nm_idx_1755(221), nm_idx_1755(226), nm_idx_1755(220), nm_idx_1755(227), nm_idx_901(280), nm_idx_1755(225)>
  # DEBUG nm_idx => nm_idx_117
  # DEBUG m_idx => m_idx_103
  # DEBUG codec_ms => codec_ms_91
  # DEBUG x => NULL
  # DEBUG cng_pt => cng_pt_24
  # DEBUG best_te => best_te_19
  # DEBUG match => match_7
  map_711 = map_1728->rm_next;
  # DEBUG map => map_711
  # DEBUG map => map_711
  # DEBUG nm_idx => nm_idx_117
  # DEBUG m_idx => m_idx_103
  # DEBUG codec_ms => codec_ms_91
  # DEBUG x => NULL
  # DEBUG cng_pt => cng_pt_24
  # DEBUG best_te => best_te_19
  # DEBUG match => match_7
  if (map_711 != 0B)
    goto <bb 216>;
  else
    goto <bb 282>;
  # SUCC: 216 [95.5%]  (true,exec) 282 [4.5%]  (false,exec)

  # BLOCK 282 freq:27
  # PRED: 278 [4.5%]  (true,exec) 281 [4.5%]  (false,exec) 280 (true,exec) 214 [4.5%]  (false,exec)
  # match_9 = PHI <1(278), match_7(281), match_1901(280), match_1800(214)>
  # codec_ms_93 = PHI <codec_ms_90(278), codec_ms_91(281), codec_ms_90(280), codec_ms_477(214)>
  # m_idx_105 = PHI <m_idx_703(278), m_idx_103(281), m_idx_102(280), m_idx_1869(214)>
  # nm_idx_119 = PHI <nm_idx_1139(278), nm_idx_117(281), nm_idx_901(280), nm_idx_1749(214)>
  # best_te_1624 = PHI <best_te_1898(278), best_te_19(281), best_te_1898(280), best_te_680(214)>
  # cng_pt_1626 = PHI <cng_pt_1667(278), cng_pt_24(281), cng_pt_1667(280), cng_pt_1717(214)>
  # DEBUG nm_idx => nm_idx_119
  # DEBUG m_idx => m_idx_105
  # DEBUG codec_ms => codec_ms_93
  # DEBUG match => match_9
  D.45001_712 = smh_186->crypto_mode;
  D.45002_713 = D.45001_712 == 1;
  D.45003_714 = got_crypto_969 <= 0;
  D.45004_715 = D.45003_714 & D.45002_713;
  if (D.45004_715 != 0)
    goto <bb 283>;
  else
    goto <bb 284>;
  # SUCC: 283 [29.0%]  (true,exec) 284 [71.0%]  (false,exec)

  # BLOCK 283 freq:8
  # PRED: 282 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3455, session_161(D), 4, "Crypto not negotiated but required.\n");
  # DEBUG match => 0
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0
  # DEBUG match => 0
  # DEBUG m_idx => 0
  # DEBUG match => 0
  # DEBUG match => 0
  goto <bb 324>;
  # SUCC: 324 [100.0%]  (fallthru)

  # BLOCK 284 freq:19
  # PRED: 282 [71.0%]  (false,exec)
  # DEBUG nm_idx => nm_idx_119
  # DEBUG m_idx => m_idx_105
  # DEBUG match => match_9
  D.45007_719 = m_idx_105 == 0;
  D.45008_720 = nm_idx_119 != 0;
  D.45009_721 = D.45008_720 & D.45007_719;
  if (D.45009_721 != 0)
    goto <bb 285>;
  else
    goto <bb 295>;
  # SUCC: 285 [71.0%]  (true,exec) 295 [29.0%]  (false,exec)

  # BLOCK 285 freq:13
  # PRED: 284 [71.0%]  (true,exec)
  ivtmp.1067_237 = (unsigned int) &near_matches[0].rate;
  # SUCC: 286 [100.0%]  (fallthru,exec)

  # BLOCK 286 freq:147
  # PRED: 294 [96.7%]  (true,exec) 285 [100.0%]  (fallthru,exec)
  # j_1845 = PHI <j_736(294), 0(285)>
  # ivtmp.1067_1654 = PHI <ivtmp.1067_756(294), ivtmp.1067_237(285)>
  # DEBUG timp => 0B
  D.49960_238 = (void *) ivtmp.1067_1654;
  near_rate.96_724 = MEM[base: D.49960_238, offset: 0B];
  near_rate_725 = (uint32_t) near_rate.96_724;
  # DEBUG near_rate => near_rate_725
  near_match_726 = MEM[base: D.49960_238, offset: 4294967288B];
  # DEBUG near_match => near_match_726
  near_map_727 = MEM[base: D.49960_238, offset: 4294967292B];
  # DEBUG near_map => near_map_727
  D.45013_728 = near_match_726->iananame;
  if (near_rate_725 == 0)
    goto <bb 287>;
  else
    goto <bb 288>;
  # SUCC: 287 [50.0%]  (true,exec) 288 [50.0%]  (false,exec)

  # BLOCK 287 freq:74
  # PRED: 286 [50.0%]  (true,exec)
  near_rate_729 = near_match_726->samples_per_second;
  # SUCC: 288 [100.0%]  (fallthru,exec)

  # BLOCK 288 freq:147
  # PRED: 287 [100.0%]  (fallthru,exec) 286 [50.0%]  (false,exec)
  # near_rate_145 = PHI <near_rate_729(287), near_rate_725(286)>
  switch_snprintf (&tmp, 80, "%s@%uh@%ui", D.45013_728, near_rate_145, codec_ms_93);
  prefs[0] = &tmp;
  num_731 = switch_loadable_module_get_codecs_sorted (&search, 1, &prefs, 1);
  # DEBUG num => num_731
  if (num_731 != 0)
    goto <bb 289>;
  else
    goto <bb 290>;
  # SUCC: 289 [50.0%]  (true,exec) 290 [50.0%]  (false,exec)

  # BLOCK 289 freq:74
  # PRED: 288 [50.0%]  (true,exec)
  timp_732 = search[0];
  # DEBUG timp => timp_732
  # SUCC: 290 [100.0%]  (fallthru,exec)

  # BLOCK 290 freq:147
  # PRED: 289 [100.0%]  (fallthru,exec) 288 [50.0%]  (false,exec)
  # timp_134 = PHI <timp_732(289), near_match_726(288)>
  # DEBUG timp => timp_134
  if (maxptime_1040 == 0)
    goto <bb 291>;
  else
    goto <bb 292>;
  # SUCC: 291 [3.0%]  (true,exec) 292 [97.0%]  (false,exec)

  # BLOCK 291 freq:4
  # PRED: 290 [3.0%]  (true,exec)
  # timp_330 = PHI <timp_134(290)>
  pretmp.1036_1896 = timp_330->microseconds_per_packet;
  prephitmp.1039_846 = pretmp.1036_1896 / 1000;
  goto <bb 293>;
  # SUCC: 293 [100.0%]  (fallthru,exec)

  # BLOCK 292 freq:143
  # PRED: 290 [97.0%]  (false,exec)
  D.45024_734 = timp_134->microseconds_per_packet;
  prephitmp.1039_735 = D.45024_734 / 1000;
  if (prephitmp.1039_735 <= maxptime_1040)
    goto <bb 293>;
  else
    goto <bb 294>;
  # SUCC: 293 [3.0%]  (true,exec) 294 [97.0%]  (false,exec)

  # BLOCK 293 freq:9
  # PRED: 291 [100.0%]  (fallthru,exec) 292 [3.0%]  (true,exec)
  # prephitmp.1039_857 = PHI <prephitmp.1039_846(291), prephitmp.1039_735(292)>
  # timp_1785 = PHI <timp_134(291), timp_134(292)>
  # near_rate.96_616 = PHI <near_rate.96_724(291), near_rate.96_724(292)>
  # near_map_1787 = PHI <near_map_727(291), near_map_727(292)>
  # j_1786 = PHI <j_1845(291), j_1845(292)>
  D.45026_737 = timp_1785->iananame;
  D.45027_740 = timp_1785->actual_samples_per_second;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3488, session_161(D), 7, "Substituting codec %s@%ui@%uh\n", D.45026_737, prephitmp.1039_857, D.45027_740);
  # DEBUG match => 1
  D.45028_742 = near_matches[j_1786].codec_idx;
  matches[0].codec_idx = D.45028_742;
  matches[0].rate = near_rate.96_616;
  matches[0].imp = timp_1785;
  matches[0].map = near_map_1787;
  # DEBUG m_idx => 1
  # DEBUG m_idx => 1
  # DEBUG match => 1
  goto <bb 296>;
  # SUCC: 296 [100.0%]  (fallthru,exec)

  # BLOCK 294 freq:139
  # PRED: 292 [97.0%]  (false,exec)
  j_736 = j_1845 + 1;
  # DEBUG j => j_736
  # DEBUG j => j_736
  ivtmp.1067_756 = ivtmp.1067_1654 + 16;
  if (nm_idx_119 > j_736)
    goto <bb 286>;
  else
    goto <bb 316>;
  # SUCC: 286 [96.7%]  (true,exec) 316 [3.3%]  (false,exec)

  # BLOCK 295 freq:5
  # PRED: 284 [29.0%]  (false,exec)
  # DEBUG m_idx => m_idx_105
  # DEBUG match => match_9
  if (m_idx_105 != 0)
    goto <bb 296>;
  else
    goto <bb 316>;
  # SUCC: 296 [90.0%]  (true,exec) 316 [10.0%]  (false,exec)

  # BLOCK 296 freq:13
  # PRED: 295 [90.0%]  (true,exec) 293 [100.0%]  (fallthru,exec)
  # m_idx_1715 = PHI <m_idx_105(295), 1(293)>
  if (greedy_47 != 0)
    goto <bb 297>;
  else
    goto <bb 298>;
  # SUCC: 297 [29.0%]  (true,exec) 298 [71.0%]  (false,exec)

  # BLOCK 297 freq:4
  # PRED: 296 [29.0%]  (true,exec)
  greedy_sort (smh_186, &matches, m_idx_1715, codec_array_84, total_codecs_85);
  # SUCC: 298 [100.0%]  (fallthru,exec)

  # BLOCK 298 freq:13
  # PRED: 296 [71.0%]  (false,exec) 297 [100.0%]  (fallthru,exec)
  # DEBUG match => 1
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].codec_negotiated = 1;
  smh_186->num_negotiated_codecs = 0;
  # DEBUG j => 0
  # DEBUG j => 0
  # SUCC: 299 [100.0%]  (fallthru,exec)

  # BLOCK 299 freq:398
  # PRED: 298 [100.0%]  (fallthru,exec) 315 [96.8%]  (true,exec)
  # j_1881 = PHI <0(298), j_807(315)>
  # ivtmp.1062_1793 = PHI <0(298), ivtmp.1062_522(315)>
  D.49951_345 = &matches + ivtmp.1062_1793;
  D.45034_747 = MEM[base: D.49951_345, offset: 4B];
  D.45035_748 = D.45034_747->rm_encoding;
  D.45036_750 = D.45034_747->rm_fmtp;
  D.45037_752 = D.45034_747->rm_pt;
  D.45038_753 = (uint32_t) D.45037_752;
  D.45039_754 = MEM[symbol: matches, index: ivtmp.1062_1793, offset: 0B];
  D.45040_755 = D.45039_754->samples_per_second;
  D.45041_757 = D.45039_754->microseconds_per_packet;
  D.45042_758 = D.45041_757 / 1000;
  D.45043_759 = (uint32_t) D.45042_758;
  pmap_760 = switch_core_media_add_payload_map (session_161(D), 0, D.45035_748, D.45036_750, sdp_type_546(D), D.45038_753, D.45040_755, D.45043_759, 1);
  # DEBUG pmap => pmap_760
  mimp_761 = MEM[symbol: matches, index: ivtmp.1062_1793, offset: 0B];
  # DEBUG mimp => mimp_761
  mmap_762 = MEM[base: D.49951_345, offset: 4B];
  # DEBUG mmap => mmap_762
  if (j_1881 == 0)
    goto <bb 300>;
  else
    goto <bb 302>;
  # SUCC: 300 [50.0%]  (true,exec) 302 [50.0%]  (false,exec)

  # BLOCK 300 freq:199
  # PRED: 299 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map = pmap_760;
  pmap_760->current = 1;
  D.44605_764 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_764 != 0B)
    goto <bb 301>;
  else
    goto <bb 302>;
  # SUCC: 301 [69.8%]  (true,exec) 302 [30.2%]  (false,exec)

  # BLOCK 301 freq:139
  # PRED: 300 [69.8%]  (true,exec)
  D.45048_766 = pmap_760->pt;
  switch_rtp_set_default_payload (D.44605_764, D.45048_766);
  # SUCC: 302 [100.0%]  (fallthru,exec)

  # BLOCK 302 freq:398
  # PRED: 299 [50.0%]  (false,exec) 300 [30.2%]  (false,exec) 301 [100.0%]  (fallthru,exec)
  D.45049_767 = mmap_762->rm_encoding;
  D.45050_768 = switch_core_perform_session_strdup (session_161(D), D.45049_767, "src/switch_core_media.c", &__func__, 3535);
  pmap_760->rm_encoding = D.45050_768;
  D.45051_769 = mimp_761->iananame;
  D.45052_770 = switch_core_perform_session_strdup (session_161(D), D.45051_769, "src/switch_core_media.c", &__func__, 3536);
  pmap_760->iananame = D.45052_770;
  D.45053_771 = mmap_762->rm_pt;
  D.45054_772 = (unsigned char) D.45053_771;
  pmap_760->recv_pt = D.45054_772;
  D.45055_773 = mimp_761->samples_per_second;
  pmap_760->rm_rate = D.45055_773;
  pmap_760->adv_rm_rate = D.45055_773;
  D.45051_775 = mimp_761->iananame;
  D.45056_776 = strcasecmp (D.45051_775, "g722");
  if (D.45056_776 != 0)
    goto <bb 303>;
  else
    goto <bb 304>;
  # SUCC: 303 [50.0%]  (true,exec) 304 [50.0%]  (false,exec)

  # BLOCK 303 freq:199
  # PRED: 302 [50.0%]  (true,exec)
  D.45059_777 = mimp_761->actual_samples_per_second;
  pmap_760->rm_rate = D.45059_777;
  # SUCC: 304 [100.0%]  (fallthru,exec)

  # BLOCK 304 freq:398
  # PRED: 302 [50.0%]  (false,exec) 303 [100.0%]  (fallthru,exec)
  D.45060_778 = mimp_761->microseconds_per_packet;
  D.45061_779 = D.45060_778 / 1000;
  D.45062_780 = (uint32_t) D.45061_779;
  pmap_760->codec_ms = D.45062_780;
  D.45063_781 = mimp_761->bits_per_second;
  D.45064_782 = (uint32_t) D.45063_781;
  pmap_760->bitrate = D.45064_782;
  D.45066_783 = mmap_762->rm_params;
  if (D.45066_783 != 0B)
    goto <bb 305>;
  else
    goto <bb 306>;
  # SUCC: 305 [69.8%]  (true,exec) 306 [30.2%]  (false,exec)

  # BLOCK 305 freq:278
  # PRED: 304 [69.8%]  (true,exec)
  # DEBUG __nptr => D.45066_783
  D.47922_1485 = strtol (D.45066_783, 0B, 10);
  # SUCC: 306 [100.0%]  (fallthru,exec)

  # BLOCK 306 freq:398
  # PRED: 305 [100.0%]  (fallthru,exec) 304 [30.2%]  (false,exec)
  # D.47922_146 = PHI <D.47922_1485(305), 1(304)>
  pmap_760->channels = D.47922_146;
  D.45049_787 = mmap_762->rm_encoding;
  D.45070_788 = strcasecmp (D.45049_787, "opus");
  if (D.45070_788 == 0)
    goto <bb 307>;
  else
    goto <bb 314>;
  # SUCC: 307 [50.0%]  (true,exec) 314 [50.0%]  (false,exec)

  # BLOCK 307 freq:199
  # PRED: 306 [50.0%]  (true,exec)
  if (D.47922_146 == 1)
    goto <bb 308>;
  else
    goto <bb 309>;
  # SUCC: 308 [13.7%]  (true,exec) 309 [86.3%]  (false,exec)

  # BLOCK 308 freq:27
  # PRED: 307 [13.7%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3549, session_161(D), 4, "Invalid SDP for opus.  Don\'t ask.. but it needs a /2\n");
  pmap_760->adv_channels = 1;
  goto <bb 310>;
  # SUCC: 310 [100.0%]  (fallthru,exec)

  # BLOCK 309 freq:172
  # PRED: 307 [86.3%]  (false,exec)
  pmap_760->adv_channels = 2;
  # SUCC: 310 [100.0%]  (fallthru,exec)

  # BLOCK 310 freq:199
  # PRED: 308 [100.0%]  (fallthru,exec) 309 [100.0%]  (fallthru,exec)
  D.45079_790 = mmap_762->rm_fmtp;
  # DEBUG s => D.45079_790
  if (D.45079_790 == 0B)
    goto <bb 313>;
  else
    goto <bb 311>;
  # SUCC: 313 [15.0%]  (true,exec) 311 [85.0%]  (false,exec)

  # BLOCK 311 freq:169
  # PRED: 310 [85.0%]  (false,exec)
  D.47926_1486 = *D.45079_790;
  if (D.47926_1486 == 0)
    goto <bb 313>;
  else
    goto <bb 442>;
  # SUCC: 313 [50.0%]  (true,exec) 442 [50.0%]  (false,exec)

  # BLOCK 312 freq:49
  # PRED: 442 [85.0%]  (true,exec)
  pmap_760->channels = 2;
  goto <bb 315>;
  # SUCC: 315 [100.0%]  (fallthru,exec)

  # BLOCK 313 freq:150
  # PRED: 311 [50.0%]  (true,exec) 442 [15.0%]  (false,exec) 310 [15.0%]  (true,exec)
  pmap_760->channels = 1;
  goto <bb 315>;
  # SUCC: 315 [100.0%]  (fallthru,exec)

  # BLOCK 314 freq:199
  # PRED: 306 [50.0%]  (false,exec)
  pmap_760->adv_channels = D.47922_146;
  # SUCC: 315 [100.0%]  (fallthru,exec)

  # BLOCK 315 freq:398
  # PRED: 313 [100.0%]  (fallthru,exec) 314 [100.0%]  (fallthru,exec) 312 [100.0%]  (fallthru,exec)
  D.45085_795 = connection_139->c_address;
  D.45086_796 = switch_core_perform_session_strdup (session_161(D), D.45085_795, "src/switch_core_media.c", &__func__, 3563);
  pmap_760->remote_sdp_ip = D.45086_796;
  D.44697_797 = m_1764->m_port;
  D.45087_798 = (short unsigned int) D.44697_797;
  pmap_760->remote_sdp_port = D.45087_798;
  D.45079_799 = mmap_762->rm_fmtp;
  D.45088_800 = switch_core_perform_session_strdup (session_161(D), D.45079_799, "src/switch_core_media.c", &__func__, 3565);
  pmap_760->rm_fmtp = D.45088_800;
  D.45053_801 = mmap_762->rm_pt;
  D.45054_802 = (unsigned char) D.45053_801;
  pmap_760->agreed_pt = D.45054_802;
  D.44655_803 = smh_186->num_negotiated_codecs;
  smh_186->negotiated_codecs[D.44655_803] = mimp_761;
  D.45089_804 = D.44655_803 + 1;
  smh_186->num_negotiated_codecs = D.45089_804;
  D.45053_805 = mmap_762->rm_pt;
  D.45054_806 = (unsigned char) D.45053_805;
  pmap_760->recv_pt = D.45054_806;
  j_807 = j_1881 + 1;
  # DEBUG j => j_807
  # DEBUG j => j_807
  ivtmp.1062_522 = ivtmp.1062_1793 + 16;
  if (j_807 != m_idx_1715)
    goto <bb 299>;
  else
    goto <bb 317>;
  # SUCC: 299 [96.8%]  (true,exec) 317 [3.2%]  (false,exec)

  # BLOCK 316 freq:6
  # PRED: 294 [3.3%]  (false,exec) 295 [10.0%]  (false,exec)
  # DEBUG match => match_9
  if (match_9 != 0)
    goto <bb 317>;
  else
    goto <bb 324>;
  # SUCC: 317 (true,exec) 324 [100.0%]  (false,exec)

  # BLOCK 317 freq:8
  # PRED: 316 (true,exec) 315 [3.2%]  (false,exec)
  # match_1712 = PHI <match_9(316), 1(315)>
  # m_idx_1905 = PHI <0(316), m_idx_1715(315)>
  D.44750_808 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_809 = D.44750_808->remote_sdp_port;
  D.44767_810 = (int) D.44762_809;
  switch_snprintf (&tmp, 50, "%d", D.44767_810);
  D.44530_811 = session_161(D)->channel;
  D.44750_812 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_813 = D.44750_812->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_811, "remote_media_ip", D.44760_813, 1);
  D.44530_814 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_814, "remote_media_port", &tmp, 1);
  D.44750_815 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.45092_816 = D.44750_815->recv_pt;
  D.45093_817 = (int) D.45092_816;
  switch_snprintf (&tmp, 50, "%d", D.45093_817);
  D.44530_818 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_818, "rtp_audio_recv_pt", &tmp, 1);
  # DEBUG D#75 => &MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].read_codec
  # DEBUG codec => D#75
  D.47934_1488 = MEM[(struct switch_codec_t *)smh_186 + 1604B].flags;
  D.47933_1489 = D.47934_1488 & 256;
  if (D.47933_1489 != 0)
    goto <bb 318>;
  else
    goto <bb 322>;
  # SUCC: 318 [50.0%]  (true,exec) 322 [50.0%]  (false,exec)

  # BLOCK 318 freq:3
  # PRED: 317 [50.0%]  (true,exec)
  D.47932_1490 = MEM[(struct switch_codec_t *)smh_186 + 1604B].mutex;
  if (D.47932_1490 != 0B)
    goto <bb 319>;
  else
    goto <bb 322>;
  # SUCC: 319 [85.0%]  (true,exec) 322 [15.0%]  (false,exec)

  # BLOCK 319 freq:3
  # PRED: 318 [85.0%]  (true,exec)
  D.47931_1491 = MEM[(struct switch_codec_t *)smh_186 + 1604B].codec_interface;
  if (D.47931_1491 != 0B)
    goto <bb 320>;
  else
    goto <bb 322>;
  # SUCC: 320 [85.0%]  (true,exec) 322 [15.0%]  (false,exec)

  # BLOCK 320 freq:2
  # PRED: 319 [85.0%]  (true,exec)
  D.47930_1492 = MEM[(struct switch_codec_t *)smh_186 + 1604B].implementation;
  if (D.47930_1492 != 0B)
    goto <bb 321>;
  else
    goto <bb 322>;
  # SUCC: 321 [85.0%]  (true,exec) 322 [15.0%]  (false,exec)

  # BLOCK 321 freq:2
  # PRED: 320 [85.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].reset_codec = 1;
  # SUCC: 322 [100.0%]  (fallthru,exec)

  # BLOCK 322 freq:8
  # PRED: 320 [15.0%]  (false,exec) 321 [100.0%]  (fallthru,exec) 317 [50.0%]  (false,exec) 318 [15.0%]  (false,exec) 319 [15.0%]  (false,exec)
  D.44471_821 = smh_186->mparams;
  D.45098_822 = D.44471_821->codec_flags;
  D.45099_823 = switch_core_media_set_codec (session_161(D), 0, D.45098_822);
  if (D.45099_823 == 0)
    goto <bb 323>;
  else
    goto <bb 324>;
  # SUCC: 323 [29.0%]  (true,exec) 324 [71.0%]  (false,exec)

  # BLOCK 323 freq:2
  # PRED: 322 [29.0%]  (true,exec)
  # DEBUG got_audio => 1
  check_ice (smh_186, 0, sdp_198, m_1764);
  # SUCC: 324 [100.0%]  (fallthru,exec)

  # BLOCK 324 freq:27
  # PRED: 316 [100.0%]  (false,exec) 323 [100.0%]  (fallthru,exec) 322 [71.0%]  (false,exec) 283 [100.0%]  (fallthru)
  # match_13 = PHI <match_9(316), match_1712(323), 0(322), 0(283)>
  # got_audio_65 = PHI <0(316), 1(323), 0(322), 0(283)>
  # m_idx_1745 = PHI <0(316), m_idx_1905(323), m_idx_1905(322), 0(283)>
  # nm_idx_843 = PHI <nm_idx_119(316), nm_idx_119(323), nm_idx_119(322), 0(283)>
  # DEBUG got_audio => got_audio_65
  # DEBUG match => match_13
  if (best_te_1624 == 0)
    goto <bb 325>;
  else
    goto <bb 328>;
  # SUCC: 325 [29.0%]  (true,exec) 328 [71.0%]  (false,exec)

  # BLOCK 325 freq:8
  # PRED: 324 [29.0%]  (true,exec)
  D.45107_826 = switch_media_handle_test_media_flag (smh_186, 8);
  if (D.45107_826 != 0)
    goto <bb 327>;
  else
    goto <bb 326>;
  # SUCC: 327 [50.0%]  (true,exec) 326 [50.0%]  (false,exec)

  # BLOCK 326 freq:4
  # PRED: 325 [50.0%]  (false,exec)
  D.44530_827 = session_161(D)->channel;
  D.45109_828 = switch_channel_test_flag (D.44530_827, 93);
  if (D.45109_828 != 0)
    goto <bb 327>;
  else
    goto <bb 333>;
  # SUCC: 327 [50.0%]  (true,exec) 333 [50.0%]  (false,exec)

  # BLOCK 327 freq:6
  # PRED: 325 [50.0%]  (true,exec) 326 [50.0%]  (true,exec)
  D.44471_829 = smh_186->mparams;
  D.45110_830 = D.44471_829->te;
  D.45111_831 = (int) D.45110_830;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3609, session_161(D), 7, "No 2833 in SDP. Liberal DTMF mode adding %d as telephone-event.\n", D.45111_831);
  D.44471_832 = smh_186->mparams;
  best_te_833 = D.44471_832->te;
  # DEBUG best_te => best_te_833
  # DEBUG best_te => best_te_833
  if (best_te_833 != 0)
    goto <bb 328>;
  else
    goto <bb 333>;
  # SUCC: 328 (true,exec) 333 [100.0%]  (false,exec)

  # BLOCK 328 freq:13
  # PRED: 327 (true,exec) 324 [71.0%]  (false,exec)
  # best_te_1860 = PHI <best_te_833(327), best_te_1624(324)>
  D.45114_834 = switch_channel_direction (channel_162);
  if (D.45114_834 == 1)
    goto <bb 329>;
  else
    goto <bb 331>;
  # SUCC: 329 [28.0%]  (true,exec) 331 [72.0%]  (false,exec)

  # BLOCK 329 freq:4
  # PRED: 328 [28.0%]  (true,exec)
  D.44471_835 = smh_186->mparams;
  D.44471_835->te = best_te_1860;
  # DEBUG D#11 => D.44471_835->te
  # DEBUG te => D#11
  D.44857_837 = (int) best_te_1860;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3617, session_161(D), 7, "Set 2833 dtmf send payload to %u\n", D.44857_837);
  D.44530_838 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_838, "dtmf_type", "rfc2833", 1);
  D.44471_839 = smh_186->mparams;
  D.44471_839->dtmf_type = 0;
  D.44605_840 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_840 != 0B)
    goto <bb 330>;
  else
    goto <bb 427>;
  # SUCC: 330 [69.8%]  (true,exec) 427 [30.2%]  (false,exec)

  # BLOCK 330 freq:3
  # PRED: 329 [69.8%]  (true,exec)
  switch_rtp_set_telephony_event (D.44605_840, best_te_1860);
  D.44530_842 = session_161(D)->channel;
  switch_channel_set_variable_printf (D.44530_842, "rtp_2833_send_payload", "%d", D.44857_837);
  goto <bb 427>;
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 331 freq:10
  # PRED: 328 [72.0%]  (false,exec)
  D.44471_845 = smh_186->mparams;
  D.44471_845->te = best_te_1860;
  D.44471_845->recv_te = best_te_1860;
  # DEBUG te => best_te_1860
  D.45120_848 = (int) best_te_1860;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3626, session_161(D), 7, "Set 2833 dtmf send/recv payload to %u\n", D.45120_848);
  D.44530_849 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_849, "dtmf_type", "rfc2833", 1);
  D.44471_850 = smh_186->mparams;
  D.44471_850->dtmf_type = 0;
  D.44605_851 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_851 != 0B)
    goto <bb 332>;
  else
    goto <bb 427>;
  # SUCC: 332 [69.8%]  (true,exec) 427 [30.2%]  (false,exec)

  # BLOCK 332 freq:7
  # PRED: 331 [69.8%]  (true,exec)
  switch_rtp_set_telephony_event (D.44605_851, best_te_1860);
  D.44530_853 = session_161(D)->channel;
  switch_channel_set_variable_printf (D.44530_853, "rtp_2833_send_payload", "%d", D.45120_848);
  D.44605_855 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_telephony_recv_event (D.44605_855, best_te_1860);
  D.44530_856 = session_161(D)->channel;
  switch_channel_set_variable_printf (D.44530_856, "rtp_2833_recv_payload", "%d", D.45120_848);
  goto <bb 427>;
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 333 freq:13
  # PRED: 327 [100.0%]  (false,exec) 326 [50.0%]  (false,exec)
  D.45124_858 = switch_channel_get_variable_dup (channel_162, "rtp_info_when_no_2833", 1, -1);
  # DEBUG expr => D.45124_858
  if (D.45124_858 != 0B)
    goto <bb 334>;
  else
    goto <bb 443>;
  # SUCC: 334 [85.0%]  (true,exec) 443 [15.0%]  (false,exec)

  # BLOCK 334 freq:11
  # PRED: 333 [85.0%]  (true,exec)
  D.49735_1600 = strcasecmp (D.45124_858, "no");
  if (D.49735_1600 == 0)
    goto <bb 343>;
  else
    goto <bb 335>;
  # SUCC: 343 [39.0%]  (true,exec) 335 [61.0%]  (false,exec)

  # BLOCK 335 freq:7
  # PRED: 334 [61.0%]  (false,exec)
  D.49736_1601 = strcasecmp (D.45124_858, "off");
  if (D.49736_1601 == 0)
    goto <bb 343>;
  else
    goto <bb 336>;
  # SUCC: 343 [39.0%]  (true,exec) 336 [61.0%]  (false,exec)

  # BLOCK 336 freq:4
  # PRED: 335 [61.0%]  (false,exec)
  D.49737_1602 = strcasecmp (D.45124_858, "false");
  if (D.49737_1602 == 0)
    goto <bb 343>;
  else
    goto <bb 337>;
  # SUCC: 343 [39.0%]  (true,exec) 337 [61.0%]  (false,exec)

  # BLOCK 337 freq:3
  # PRED: 336 [61.0%]  (false,exec)
  D.49738_1603 = strcasecmp (D.45124_858, "f");
  if (D.49738_1603 == 0)
    goto <bb 343>;
  else
    goto <bb 338>;
  # SUCC: 343 [39.0%]  (true,exec) 338 [61.0%]  (false,exec)

  # BLOCK 338 freq:2
  # PRED: 337 [61.0%]  (false,exec)
  D.49739_1604 = strcasecmp (D.45124_858, "disabled");
  if (D.49739_1604 == 0)
    goto <bb 343>;
  else
    goto <bb 339>;
  # SUCC: 343 [39.0%]  (true,exec) 339 [61.0%]  (false,exec)

  # BLOCK 339 freq:1
  # PRED: 338 [61.0%]  (false,exec)
  D.49740_1605 = strcasecmp (D.45124_858, "inactive");
  if (D.49740_1605 == 0)
    goto <bb 343>;
  else
    goto <bb 340>;
  # SUCC: 343 [39.0%]  (true,exec) 340 [61.0%]  (false,exec)

  # BLOCK 340 freq:1
  # PRED: 339 [61.0%]  (false,exec)
  D.49741_1606 = strcasecmp (D.45124_858, "disallow");
  if (D.49741_1606 == 0)
    goto <bb 343>;
  else
    goto <bb 341>;
  # SUCC: 343 [61.0%]  (true,exec) 341 [39.0%]  (false,exec)

  # BLOCK 341
  # PRED: 340 [39.0%]  (false,exec)
  D.49742_1607 = switch_is_number (D.45124_858);
  if (D.49742_1607 != 0)
    goto <bb 342>;
  else
    goto <bb 443>;
  # SUCC: 342 [29.0%]  (true,exec) 443 [71.0%]  (false,exec)

  # BLOCK 342
  # PRED: 341 [29.0%]  (true,exec)
  # DEBUG __nptr => D.45124_858
  D.49743_1608 = strtol (D.45124_858, 0B, 10);
  if (D.49743_1608 == 0)
    goto <bb 343>;
  else
    goto <bb 443>;
  # SUCC: 343 [39.0%]  (true,exec) 443 [61.0%]  (false,exec)

  # BLOCK 343 freq:4
  # PRED: 334 [39.0%]  (true,exec) 335 [39.0%]  (true,exec) 336 [39.0%]  (true,exec) 337 [39.0%]  (true,exec) 338 [39.0%]  (true,exec) 339 [39.0%]  (true,exec) 340 [61.0%]  (true,exec) 342 [39.0%]  (true,exec)
  D.44530_866 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_866, "dtmf_type", "none", 1);
  D.44471_867 = smh_186->mparams;
  D.44471_867->dtmf_type = 2;
  D.44471_867->te = 0;
  D.44471_867->recv_te = 0;
  # DEBUG D#13 => D.44471_867->recv_te
  # DEBUG te => D#13
  goto <bb 427>;
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 344 freq:197
  # PRED: 168 [67.5%]  (false,exec)
  if (prephitmp.1049_1814 == 3)
    goto <bb 345>;
  else
    goto <bb 427>;
  # SUCC: 345 [44.2%]  (true,exec) 427 [55.8%]  (false,exec)

  # BLOCK 345 freq:87
  # PRED: 344 [44.2%]  (true,exec)
  D.44697_873 = m_1764->m_port;
  if (D.44697_873 != 0)
    goto <bb 346>;
  else
    goto <bb 427>;
  # SUCC: 346 [29.0%]  (true,exec) 427 [71.0%]  (false,exec)

  # BLOCK 346 freq:25
  # PRED: 345 [29.0%]  (true,exec)
  # DEBUG mimp => 0B
  # DEBUG vmatch => 0
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0
  memset (&matches, 0, 480);
  memset (&near_matches, 0, 480);
  D.44530_878 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_878, "video_possible", "true", 1);
  connection_879 = sdp_198->sdp_connection;
  # DEBUG connection => connection_879
  connection_880 = m_1764->m_connections;
  if (connection_880 != 0B)
    goto <bb 349>;
  else
    goto <bb 347>;
  # SUCC: 349 [85.0%]  (true,exec) 347 [15.0%]  (false,exec)

  # BLOCK 347 freq:4
  # PRED: 346 [15.0%]  (false,exec)
  # DEBUG connection => connection_879
  if (connection_879 == 0B)
    goto <bb 348>;
  else
    goto <bb 349>;
  # SUCC: 348 [12.5%]  (true,exec) 349 [87.5%]  (false,exec)

  # BLOCK 348 freq:1
  # PRED: 347 [12.5%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3669, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 349 freq:25
  # PRED: 347 [87.5%]  (false,exec) 346 [85.0%]  (true,exec)
  # connection_110 = PHI <connection_879(347), connection_880(346)>
  map_883 = m_1764->m_rtpmaps;
  # DEBUG map => map_883
  # DEBUG map => map_883
  # DEBUG m_idx => 0
  # DEBUG got_video_crypto => got_video_crypto_1674
  if (map_883 != 0B)
    goto <bb 350>;
  else
    goto <bb 408>;
  # SUCC: 350 [95.5%]  (true,exec) 408 [4.5%]  (false,exec)

  # BLOCK 350 freq:453
  # PRED: 349 [95.5%]  (true,exec) 407 [95.5%]  (true,exec)
  # got_video_crypto_556 = PHI <got_video_crypto_1674(349), got_video_crypto_960(407)>
  # m_idx_819 = PHI <0(349), m_idx_953(407)>
  # map_1620 = PHI <map_883(349), map_1021(407)>
  D.45137_884 = switch_rtp_has_dtls ();
  if (D.45137_884 != 0)
    goto <bb 351>;
  else
    goto <bb 359>;
  # SUCC: 351 [29.0%]  (true,exec) 359 [71.0%]  (false,exec)

  # BLOCK 351 freq:131
  # PRED: 350 [29.0%]  (true,exec)
  D.45140_885 = dtls_ok (session_161(D));
  if (D.45140_885 != 0)
    goto <bb 352>;
  else
    goto <bb 359>;
  # SUCC: 352 [50.0%]  (true,exec) 359 [50.0%]  (false,exec)

  # BLOCK 352 freq:66
  # PRED: 351 [50.0%]  (true,exec)
  attr_886 = m_1764->m_attributes;
  # DEBUG attr => attr_886
  # DEBUG got_video_crypto => got_video_crypto_556
  # DEBUG attr => attr_886
  if (attr_886 != 0B)
    goto <bb 353>;
  else
    goto <bb 391>;
  # SUCC: 353 [91.0%]  (true,exec) 391 [9.0%]  (false,exec)

  # BLOCK 353 freq:60
  # PRED: 352 [91.0%]  (true,exec)
  # attr_1791 = PHI <attr_886(352)>
  # got_video_crypto_2125 = PHI <got_video_crypto_556(352)>
  # SUCC: 354 [100.0%]  (fallthru)

  # BLOCK 354 freq:665
  # PRED: 353 [100.0%]  (fallthru) 358 [91.0%]  (true,exec)
  # attr_1850 = PHI <attr_1791(353), attr_892(358)>
  # got_video_crypto_1738 = PHI <got_video_crypto_2125(353), got_video_crypto_57(358)>
  D.44590_887 = attr_1850->a_name;
  D.45143_888 = strcasecmp (D.44590_887, "fingerprint");
  if (D.45143_888 == 0)
    goto <bb 355>;
  else
    goto <bb 358>;
  # SUCC: 355 [50.0%]  (true,exec) 358 [50.0%]  (false,exec)

  # BLOCK 355 freq:332
  # PRED: 354 [50.0%]  (true,exec)
  D.44619_889 = attr_1850->a_value;
  # DEBUG s => D.44619_889
  if (D.44619_889 == 0B)
    goto <bb 358>;
  else
    goto <bb 356>;
  # SUCC: 358 [15.0%]  (true,exec) 356 [85.0%]  (false,exec)

  # BLOCK 356 freq:283
  # PRED: 355 [85.0%]  (false,exec)
  D.47939_1495 = *D.44619_889;
  if (D.47939_1495 == 0)
    goto <bb 357>;
  else
    goto <bb 358>;
  # SUCC: 357 [50.0%]  (true,exec) 358 [50.0%]  (false,exec)

  # BLOCK 357 freq:142
  # PRED: 356 [50.0%]  (true,exec)
  # SUCC: 358 [100.0%]  (fallthru,exec)

  # BLOCK 358 freq:665
  # PRED: 354 [50.0%]  (false,exec) 357 [100.0%]  (fallthru,exec) 356 [50.0%]  (false,exec) 355 [15.0%]  (true,exec)
  # got_video_crypto_57 = PHI <got_video_crypto_1738(354), got_video_crypto_1738(357), 1(356), got_video_crypto_1738(355)>
  # DEBUG got_video_crypto => got_video_crypto_57
  attr_892 = attr_1850->a_next;
  # DEBUG attr => attr_892
  # DEBUG got_video_crypto => got_video_crypto_57
  # DEBUG attr => attr_892
  if (attr_892 != 0B)
    goto <bb 354>;
  else
    goto <bb 450>;
  # SUCC: 354 [91.0%]  (true,exec) 450 [9.0%]  (false,exec)

  # BLOCK 359 freq:387
  # PRED: 350 [71.0%]  (false,exec) 351 [50.0%]  (false,exec)
  # DEBUG got_video_crypto => got_video_crypto_556
  attr_893 = m_1764->m_attributes;
  # DEBUG attr => attr_893
  # DEBUG got_video_crypto => got_video_crypto_556
  # DEBUG attr => attr_893
  if (attr_893 != 0B)
    goto <bb 450>;
  else
    goto <bb 391>;
  # SUCC: 450 [96.3%]  (true,exec) 391 [3.7%]  (false,exec)

  # BLOCK 360 freq:9550
  # PRED: 450 [100.0%]  (fallthru,exec) 390 [95.5%]  (true,exec)
  # attr_619 = PHI <attr_1162(450), attr_978(390)>
  # got_video_crypto_1885 = PHI <got_video_crypto_743(450), got_video_crypto_60(390)>
  D.44590_894 = attr_619->a_name;
  D.45151_895 = strcasecmp (D.44590_894, "framerate");
  if (D.45151_895 == 0)
    goto <bb 361>;
  else
    goto <bb 362>;
  # SUCC: 361 [50.0%]  (true,exec) 362 [50.0%]  (false,exec)

  # BLOCK 361 freq:4775
  # PRED: 360 [50.0%]  (true,exec)
  D.44619_896 = attr_619->a_value;
  if (D.44619_896 != 0B)
    goto <bb 390>;
  else
    goto <bb 362>;
  # SUCC: 390 [85.0%]  (true,exec) 362 [15.0%]  (false,exec)

  # BLOCK 362 freq:5491
  # PRED: 360 [50.0%]  (false,exec) 361 [15.0%]  (false,exec)
  D.45154_898 = strcasecmp (D.44590_894, "rtcp-fb");
  if (D.45154_898 == 0)
    goto <bb 363>;
  else
    goto <bb 367>;
  # SUCC: 363 [50.0%]  (true,exec) 367 [50.0%]  (false,exec)

  # BLOCK 363 freq:2746
  # PRED: 362 [50.0%]  (true,exec)
  D.44619_899 = attr_619->a_value;
  # DEBUG s => D.44619_899
  if (D.44619_899 == 0B)
    goto <bb 390>;
  else
    goto <bb 364>;
  # SUCC: 390 [15.0%]  (true,exec) 364 [85.0%]  (false,exec)

  # BLOCK 364 freq:2334
  # PRED: 363 [85.0%]  (false,exec)
  D.47943_1497 = *D.44619_899;
  if (D.47943_1497 == 0)
    goto <bb 390>;
  else
    goto <bb 444>;
  # SUCC: 390 [50.0%]  (true,exec) 444 [50.0%]  (false,exec)

  # BLOCK 365 freq:677
  # PRED: 444 [85.0%]  (true,exec)
Invalid sum of incoming frequencies 992, should be 677
  D.45163_903 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir;
  D.45164_904 = D.45163_903 + 1;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir = D.45164_904;
  # SUCC: 366 [100.0%]  (fallthru,exec)

  # BLOCK 366 freq:796
  # PRED: 444 [15.0%]  (false,exec) 365 [100.0%]  (fallthru,exec)
  D.44471_905 = smh_186->mparams;
  D.44471_905->rtcp_video_interval_msec = "10000";
  goto <bb 390>;
  # SUCC: 390 [100.0%]  (fallthru,exec)

  # BLOCK 367 freq:2746
  # PRED: 362 [50.0%]  (false,exec)
  D.45168_907 = strcasecmp (D.44590_894, "rtcp");
  if (D.45168_907 == 0)
    goto <bb 368>;
  else
    goto <bb 373>;
  # SUCC: 368 [50.0%]  (true,exec) 373 [50.0%]  (false,exec)

  # BLOCK 368 freq:1373
  # PRED: 367 [50.0%]  (true,exec)
  D.44619_908 = attr_619->a_value;
  if (D.44619_908 != 0B)
    goto <bb 369>;
  else
    goto <bb 373>;
  # SUCC: 369 [85.0%]  (true,exec) 373 [15.0%]  (false,exec)

  # BLOCK 369 freq:1167
  # PRED: 368 [85.0%]  (true,exec)
  # DEBUG __s2_len => 1
  # DEBUG __s1 => D.44619_908
  D.45174_911 = MEM[(const unsigned char *)D.44619_908];
  # DEBUG D#78 => (int) D.45174_911
  # DEBUG __result => D#78 + -49
  if (D.45174_911 == 49)
    goto <bb 370>;
  else
    goto <bb 373>;
  # SUCC: 370 [50.0%]  (true,exec) 373 [50.0%]  (false,exec)

  # BLOCK 370 freq:583
  # PRED: 369 [50.0%]  (true,exec)
  D.45185_921 = MEM[(const unsigned char *)D.44619_908 + 1B];
  # DEBUG D#79 => (int) D.45185_921
  # DEBUG __result => D#79
  # DEBUG __result => D#79
  if (D.45185_921 == 0)
    goto <bb 371>;
  else
    goto <bb 373>;
  # SUCC: 371 [58.0%]  (true,exec) 373 [42.0%]  (false,exec)

  # BLOCK 371 freq:338
  # PRED: 370 [58.0%]  (true,exec)
  D.44530_952 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_952, "rtp_remote_video_rtcp_port", D.44619_908, 1);
  D.44619_954 = attr_619->a_value;
  # DEBUG __nptr => D.44619_954
  D.47946_1499 = strtol (D.44619_954, 0B, 10);
  D.45213_956 = (short unsigned int) D.47946_1499;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].remote_rtcp_port = D.45213_956;
  D.44471_957 = smh_186->mparams;
  D.45214_958 = D.44471_957->rtcp_video_interval_msec;
  if (D.45214_958 == 0B)
    goto <bb 372>;
  else
    goto <bb 390>;
  # SUCC: 372 [15.0%]  (true,exec) 390 [85.0%]  (false,exec)

  # BLOCK 372 freq:51
  # PRED: 371 [15.0%]  (true,exec)
  D.44471_957->rtcp_video_interval_msec = "5000";
  goto <bb 390>;
  # SUCC: 390 [100.0%]  (fallthru,exec)

  # BLOCK 373 freq:2407
  # PRED: 367 [50.0%]  (false,exec) 368 [15.0%]  (false,exec) 370 [42.0%]  (false,exec) 369 [50.0%]  (false,exec)
  if (got_video_crypto_1885 == 0)
    goto <bb 374>;
  else
    goto <bb 390>;
  # SUCC: 374 [50.0%]  (true,exec) 390 [50.0%]  (false,exec)

  # BLOCK 374 freq:1204
  # PRED: 373 [50.0%]  (true,exec)
  D.45219_961 = strcasecmp (D.44590_894, "crypto");
  if (D.45219_961 == 0)
    goto <bb 375>;
  else
    goto <bb 390>;
  # SUCC: 375 [50.0%]  (true,exec) 390 [50.0%]  (false,exec)

  # BLOCK 375 freq:602
  # PRED: 374 [50.0%]  (true,exec)
  prephitmp.1031_962 = attr_619->a_value;
  # DEBUG s => prephitmp.1031_962
  if (prephitmp.1031_962 == 0B)
    goto <bb 390>;
  else
    goto <bb 376>;
  # SUCC: 390 [15.0%]  (true,exec) 376 [85.0%]  (false,exec)

  # BLOCK 376 freq:512
  # PRED: 375 [85.0%]  (false,exec)
  D.47950_1500 = *prephitmp.1031_962;
  if (D.47950_1500 == 0)
    goto <bb 390>;
  else
    goto <bb 445>;
  # SUCC: 390 [50.0%]  (true,exec) 445 [50.0%]  (false,exec)

  # BLOCK 377 freq:150
  # PRED: 445 [50.0%]  (true,exec)
  D.44530_967 = session_161(D)->channel;
  D.45227_968 = switch_channel_get_variable_dup (D.44530_967, "rtp_allow_crypto_in_avp", 1, -1);
  # DEBUG expr => D.45227_968
  if (D.45227_968 != 0B)
    goto <bb 378>;
  else
    goto <bb 446>;
  # SUCC: 378 [85.0%]  (true,exec) 446 [15.0%]  (false,exec)

  # BLOCK 378 freq:128
  # PRED: 377 [85.0%]  (true,exec)
  D.49747_1610 = strcasecmp (D.45227_968, "yes");
  if (D.49747_1610 == 0)
    goto <bb 387>;
  else
    goto <bb 379>;
  # SUCC: 387 [39.0%]  (true,exec) 379 [61.0%]  (false,exec)

  # BLOCK 379 freq:78
  # PRED: 378 [61.0%]  (false,exec)
  D.49748_1611 = strcasecmp (D.45227_968, "on");
  if (D.49748_1611 == 0)
    goto <bb 387>;
  else
    goto <bb 380>;
  # SUCC: 387 [39.0%]  (true,exec) 380 [61.0%]  (false,exec)

  # BLOCK 380 freq:48
  # PRED: 379 [61.0%]  (false,exec)
  D.49749_1612 = strcasecmp (D.45227_968, "true");
  if (D.49749_1612 == 0)
    goto <bb 387>;
  else
    goto <bb 381>;
  # SUCC: 387 [39.0%]  (true,exec) 381 [61.0%]  (false,exec)

  # BLOCK 381 freq:29
  # PRED: 380 [61.0%]  (false,exec)
  D.49750_1613 = strcasecmp (D.45227_968, "t");
  if (D.49750_1613 == 0)
    goto <bb 387>;
  else
    goto <bb 382>;
  # SUCC: 387 [39.0%]  (true,exec) 382 [61.0%]  (false,exec)

  # BLOCK 382 freq:18
  # PRED: 381 [61.0%]  (false,exec)
  D.49751_1614 = strcasecmp (D.45227_968, "enabled");
  if (D.49751_1614 == 0)
    goto <bb 387>;
  else
    goto <bb 383>;
  # SUCC: 387 [39.0%]  (true,exec) 383 [61.0%]  (false,exec)

  # BLOCK 383 freq:11
  # PRED: 382 [61.0%]  (false,exec)
  D.49752_1615 = strcasecmp (D.45227_968, "active");
  if (D.49752_1615 == 0)
    goto <bb 387>;
  else
    goto <bb 384>;
  # SUCC: 387 [39.0%]  (true,exec) 384 [61.0%]  (false,exec)

  # BLOCK 384 freq:7
  # PRED: 383 [61.0%]  (false,exec)
  D.49753_1616 = strcasecmp (D.45227_968, "allow");
  if (D.49753_1616 == 0)
    goto <bb 387>;
  else
    goto <bb 385>;
  # SUCC: 387 [61.0%]  (true,exec) 385 [39.0%]  (false,exec)

  # BLOCK 385 freq:3
  # PRED: 384 [39.0%]  (false,exec)
  D.49754_1617 = switch_is_number (D.45227_968);
  if (D.49754_1617 != 0)
    goto <bb 386>;
  else
    goto <bb 446>;
  # SUCC: 386 [29.0%]  (true,exec) 446 [71.0%]  (false,exec)

  # BLOCK 386 freq:1
  # PRED: 385 [29.0%]  (true,exec)
  # DEBUG __nptr => D.45227_968
  D.49755_1618 = strtol (D.45227_968, 0B, 10);
  if (D.49755_1618 != 0)
    goto <bb 387>;
  else
    goto <bb 446>;
  # SUCC: 387 [39.0%]  (true,exec) 446 [61.0%]  (false,exec)

  # BLOCK 387 freq:50
  # PRED: 378 [39.0%]  (true,exec) 379 [39.0%]  (true,exec) 380 [39.0%]  (true,exec) 381 [39.0%]  (true,exec) 382 [39.0%]  (true,exec) 383 [39.0%]  (true,exec) 384 [61.0%]  (true,exec) 386 [39.0%]  (true,exec)
Invalid sum of outgoing probabilities 0.0%
  prephitmp.1031_1889 = attr_619->a_value;
  goto <bb 389>;
  # SUCC: 389 (fallthru,exec)

  # BLOCK 388 freq:3
  # PRED: 446 [4.5%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3711, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 389 freq:298
  # PRED: 445 [50.0%]  (false,exec) 387 (fallthru,exec) 447 [100.0%]  (fallthru,exec)
Invalid sum of incoming frequencies 153, should be 298
  # prephitmp.1031_1812 = PHI <prephitmp.1031_962(445), prephitmp.1031_1889(387), prephitmp.1031_1890(447)>
  # DEBUG crypto => prephitmp.1031_1812
  # DEBUG __nptr => prephitmp.1031_1812
  crypto_tag_1502 = strtol (prephitmp.1031_1812, 0B, 10);
  # DEBUG crypto_tag => NULL
  got_video_crypto_977 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_video_crypto", 1, prephitmp.1031_1812, crypto_tag_1502, sdp_type_546(D));
  # DEBUG got_video_crypto => got_video_crypto_977
  # SUCC: 390 [100.0%]  (fallthru,exec)

  # BLOCK 390 freq:9547
  # PRED: 361 [85.0%]  (true,exec) 366 [100.0%]  (fallthru,exec) 372 [100.0%]  (fallthru,exec) 373 [50.0%]  (false,exec) 374 [50.0%]  (false,exec) 376 [50.0%]  (true,exec) 389 [100.0%]  (fallthru,exec) 364 [50.0%]  (true,exec) 371 [85.0%]  (false,exec) 363 [15.0%]  (true,exec) 375 [15.0%]  (true,exec)
Invalid sum of incoming frequencies 9222, should be 9547
  # got_video_crypto_60 = PHI <got_video_crypto_1885(361), got_video_crypto_1885(366), got_video_crypto_1885(372), got_video_crypto_1885(373), got_video_crypto_1885(374), got_video_crypto_1885(376), got_video_crypto_977(389), got_video_crypto_1885(364), got_video_crypto_1885(371), got_video_crypto_1885(363), got_video_crypto_1885(375)>
  # DEBUG got_video_crypto => got_video_crypto_60
  attr_978 = attr_619->a_next;
  # DEBUG attr => attr_978
  # DEBUG got_video_crypto => got_video_crypto_60
  # DEBUG attr => attr_978
  if (attr_978 != 0B)
    goto <bb 360>;
  else
    goto <bb 391>;
  # SUCC: 360 [95.5%]  (true,exec) 391 [4.5%]  (false,exec)

  # BLOCK 391 freq:450
  # PRED: 390 [4.5%]  (false,exec) 359 [3.7%]  (false,exec) 352 [9.0%]  (false,exec)
  # got_video_crypto_960 = PHI <got_video_crypto_60(390), got_video_crypto_556(359), got_video_crypto_556(352)>
  rm_encoding_979 = map_1620->rm_encoding;
  # DEBUG rm_encoding => rm_encoding_979
  if (rm_encoding_979 == 0B)
    goto <bb 393>;
  else
    goto <bb 392>;
  # SUCC: 393 [15.0%]  (true,exec) 392 [85.0%]  (false,exec)

  # BLOCK 392 freq:383
  # PRED: 391 [85.0%]  (false,exec)
  # SUCC: 393 [100.0%]  (fallthru,exec)

  # BLOCK 393 freq:450
  # PRED: 392 [100.0%]  (fallthru,exec) 391 [15.0%]  (true,exec)
  # rm_encoding_137 = PHI <rm_encoding_979(392), ""(391)>
  # DEBUG rm_encoding => rm_encoding_137
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG m_idx => m_idx_819
  if (total_codecs_85 > 0)
    goto <bb 394>;
  else
    goto <bb 407>;
  # SUCC: 394 [91.0%]  (true,exec) 407 [9.0%]  (false,exec)

  # BLOCK 394 freq:410
  # PRED: 393 [91.0%]  (true,exec)
  ivtmp.1090_544 = (unsigned int) codec_array_84;
  # SUCC: 395 [100.0%]  (fallthru,exec)

  # BLOCK 395 freq:4550
  # PRED: 406 [91.0%]  (true,exec) 394 [100.0%]  (fallthru,exec)
  # m_idx_910 = PHI <m_idx_109(406), m_idx_819(394)>
  # i_864 = PHI <i_1020(406), 0(394)>
  # ivtmp.1090_136 = PHI <ivtmp.1090_62(406), ivtmp.1090_544(394)>
  D.49988_872 = (void *) ivtmp.1090_136;
  imp_985 = MEM[base: D.49988_872, offset: 0B];
  ivtmp.1090_62 = ivtmp.1090_136 + 4;
  # DEBUG imp => imp_985
  D.45238_986 = imp_985->codec_type;
  if (D.45238_986 != 1)
    goto <bb 406>;
  else
    goto <bb 396>;
  # SUCC: 406 [86.3%]  (true,exec) 396 [13.7%]  (false,exec)

  # BLOCK 396 freq:624
  # PRED: 395 [13.7%]  (false,exec)
  D.44530_987 = session_161(D)->channel;
  D.45241_988 = switch_channel_direction (D.44530_987);
  if (D.45241_988 == 0)
    goto <bb 397>;
  else
    goto <bb 398>;
  # SUCC: 397 [50.0%]  (true,exec) 398 [50.0%]  (false,exec)

  # BLOCK 397 freq:312
  # PRED: 396 [50.0%]  (true,exec)
  D.44530_989 = session_161(D)->channel;
  D.45244_990 = switch_channel_test_flag (D.44530_989, 114);
  if (D.45244_990 != 0)
    goto <bb 406>;
  else
    goto <bb 398>;
  # SUCC: 406 [50.0%]  (true,exec) 398 [50.0%]  (false,exec)

  # BLOCK 398 freq:468
  # PRED: 396 [50.0%]  (false,exec) 397 [50.0%]  (false,exec)
  D.45247_991 = map_1620->rm_pt;
  D.45248_992 = (int) D.45247_991;
  D.45249_993 = imp_985->iananame;
  D.45250_994 = imp_985->ianacode;
  D.45251_995 = (int) D.45250_994;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3743, session_161(D), 7, "Video Codec Compare [%s:%d]/[%s:%d]\n", rm_encoding_137, D.45248_992, D.45249_993, D.45251_995);
  D.45255_996 = map_1620->rm_encoding;
  # DEBUG s => D.45255_996
  if (D.45255_996 == 0B)
    goto <bb 400>;
  else
    goto <bb 399>;
  # SUCC: 400 [15.0%]  (true,exec) 399 [85.0%]  (false,exec)

  # BLOCK 399 freq:398
  # PRED: 398 [85.0%]  (false,exec)
  D.47957_1503 = *D.45255_996;
  if (D.47957_1503 == 0)
    goto <bb 400>;
  else
    goto <bb 448>;
  # SUCC: 400 [50.0%]  (true,exec) 448 [50.0%]  (false,exec)

  # BLOCK 400 freq:351
  # PRED: 399 [50.0%]  (true,exec) 448 [50.0%]  (true,exec) 398 [15.0%]  (true,exec)
  D.45247_1003 = map_1620->rm_pt;
  D.45248_1004 = (int) D.45247_1003;
  if (D.45248_1004 <= 95)
    goto <bb 401>;
  else
    goto <bb 402>;
  # SUCC: 401 [50.0%]  (true,exec) 402 [50.0%]  (false,exec)

  # BLOCK 401 freq:175
  # PRED: 400 [50.0%]  (true,exec)
  D.45250_1007 = imp_985->ianacode;
  D.45251_1008 = (int) D.45250_1007;
  vmatch_1009 = D.45248_1004 == D.45251_1008;
  # DEBUG vmatch => vmatch_1009
  goto <bb 403>;
  # SUCC: 403 [100.0%]  (fallthru,exec)

  # BLOCK 402 freq:292
  # PRED: 448 [50.0%]  (false,exec) 400 [50.0%]  (false,exec)
  D.45249_1010 = imp_985->iananame;
  D.45259_1011 = strcasecmp (rm_encoding_137, D.45249_1010);
  vmatch_1012 = D.45259_1011 == 0;
  # DEBUG vmatch => vmatch_1012
  # SUCC: 403 [100.0%]  (fallthru,exec)

  # BLOCK 403 freq:468
  # PRED: 401 [100.0%]  (fallthru,exec) 402 [100.0%]  (fallthru,exec)
  # vmatch_138 = PHI <vmatch_1009(401), vmatch_1012(402)>
  # DEBUG vmatch => vmatch_138
  if (vmatch_138 != 0)
    goto <bb 404>;
  else
    goto <bb 406>;
  # SUCC: 404 [50.0%]  (true,exec) 406 [50.0%]  (false,exec)

  # BLOCK 404 freq:234
  # PRED: 403 [50.0%]  (true,exec)
  D.45262_1013 = map_1620->rm_rate;
  D.45263_1014 = imp_985->samples_per_second;
  if (D.45262_1013 == D.45263_1014)
    goto <bb 405>;
  else
    goto <bb 406>;
  # SUCC: 405 [13.7%]  (true,exec) 406 [86.3%]  (false,exec)

  # BLOCK 405 freq:32
  # PRED: 404 [13.7%]  (true,exec)
  matches[m_idx_910].imp = imp_985;
  matches[m_idx_910].map = map_1620;
  D.45249_1015 = imp_985->iananame;
  D.45250_1016 = imp_985->ianacode;
  D.45251_1017 = (int) D.45250_1016;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3756, session_161(D), 7, "Video Codec Compare [%s:%d] +++ is saved as a match\n", D.45249_1015, D.45251_1017);
  m_idx_1018 = m_idx_910 + 1;
  # DEBUG m_idx => m_idx_1018
  # SUCC: 406 [100.0%]  (fallthru,exec)

  # BLOCK 406 freq:4550
  # PRED: 395 [86.3%]  (true,exec) 397 [50.0%]  (true,exec) 404 [86.3%]  (false,exec) 403 [50.0%]  (false,exec) 405 [100.0%]  (fallthru,exec)
  # m_idx_109 = PHI <m_idx_910(395), m_idx_910(397), m_idx_910(404), m_idx_910(403), m_idx_1018(405)>
  # DEBUG m_idx => m_idx_109
  i_1020 = i_864 + 1;
  # DEBUG i => i_1020
  # DEBUG i => i_1020
  # DEBUG m_idx => m_idx_109
  if (i_1020 != total_codecs_85)
    goto <bb 395>;
  else
    goto <bb 407>;
  # SUCC: 395 [91.0%]  (true,exec) 407 [9.0%]  (false,exec)

  # BLOCK 407 freq:450
  # PRED: 406 [9.0%]  (false,exec) 393 [9.0%]  (false,exec)
  # m_idx_953 = PHI <m_idx_109(406), m_idx_819(393)>
  map_1021 = map_1620->rm_next;
  # DEBUG map => map_1021
  # DEBUG map => map_1021
  # DEBUG m_idx => m_idx_953
  # DEBUG got_video_crypto => got_video_crypto_960
  if (map_1021 != 0B)
    goto <bb 350>;
  else
    goto <bb 408>;
  # SUCC: 350 [95.5%]  (true,exec) 408 [4.5%]  (false,exec)

  # BLOCK 408 freq:21
  # PRED: 407 [4.5%]  (false,exec) 349 [4.5%]  (false,exec)
  # got_video_crypto_959 = PHI <got_video_crypto_960(407), got_video_crypto_1674(349)>
  # m_idx_906 = PHI <m_idx_953(407), 0(349)>
  D.45001_1022 = smh_186->crypto_mode;
  D.45002_1023 = D.45001_1022 == 1;
  D.45266_1024 = got_video_crypto_959 <= 0;
  D.45267_1025 = D.45266_1024 & D.45002_1023;
  if (D.45267_1025 != 0)
    goto <bb 409>;
  else
    goto <bb 410>;
  # SUCC: 409 [29.0%]  (true,exec) 410 [71.0%]  (false,exec)

  # BLOCK 409 freq:6
  # PRED: 408 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3766, session_161(D), 4, "Crypto not negotiated but required.\n");
  # DEBUG vmatch => 0
  # DEBUG m_idx => 0
  # DEBUG m_idx => 0
  goto <bb 427>;
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 410 freq:15
  # PRED: 408 [71.0%]  (false,exec)
  # DEBUG m_idx => m_idx_906
  if (m_idx_906 != 0)
    goto <bb 411>;
  else
    goto <bb 427>;
  # SUCC: 411 [70.0%]  (true,exec) 427 [30.0%]  (false,exec)

  # BLOCK 411 freq:11
  # PRED: 410 [70.0%]  (true,exec)
  # DEBUG j => 0
  if (greedy_47 != 0)
    goto <bb 412>;
  else
    goto <bb 413>;
  # SUCC: 412 [29.0%]  (true,exec) 413 [71.0%]  (false,exec)

  # BLOCK 412 freq:3
  # PRED: 411 [29.0%]  (true,exec)
  greedy_sort (smh_186, &matches, m_idx_906, codec_array_84, total_codecs_85);
  # SUCC: 413 [100.0%]  (fallthru,exec)

  # BLOCK 413 freq:11
  # PRED: 411 [71.0%]  (false,exec) 412 [100.0%]  (fallthru,exec)
  # DEBUG vmatch => 1
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].codec_negotiated = 1;
  # DEBUG j => 0
  # DEBUG j => 0
  # SUCC: 414 [100.0%]  (fallthru,exec)

  # BLOCK 414 freq:320
  # PRED: 417 [96.7%]  (true,exec) 413 [100.0%]  (fallthru,exec)
  # j_1844 = PHI <j_1067(417), 0(413)>
  # ivtmp.1083_626 = PHI <ivtmp.1083_627(417), 0(413)>
  D.49978_628 = &matches + ivtmp.1083_626;
  D.45274_1031 = MEM[base: D.49978_628, offset: 4B];
  D.45275_1032 = D.45274_1031->rm_encoding;
  D.45276_1034 = D.45274_1031->rm_fmtp;
  D.45277_1036 = D.45274_1031->rm_pt;
  D.45278_1037 = (uint32_t) D.45277_1036;
  D.45279_1038 = MEM[symbol: matches, index: ivtmp.1083_626, offset: 0B];
  D.45280_1039 = D.45279_1038->samples_per_second;
  D.45281_1041 = D.45279_1038->microseconds_per_packet;
  D.45282_1042 = D.45281_1041 / 1000;
  D.45283_1043 = (uint32_t) D.45282_1042;
  pmap_1044 = switch_core_media_add_payload_map (session_161(D), 1, D.45275_1032, D.45276_1034, sdp_type_546(D), D.45278_1037, D.45280_1039, D.45283_1043, 1);
  # DEBUG pmap => pmap_1044
  if (j_1844 == 0)
    goto <bb 415>;
  else
    goto <bb 417>;
  # SUCC: 415 [50.0%]  (true,exec) 417 [50.0%]  (false,exec)

  # BLOCK 415 freq:160
  # PRED: 414 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map = pmap_1044;
  pmap_1044->current = 1;
  D.45287_1046 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session;
  if (D.45287_1046 != 0B)
    goto <bb 416>;
  else
    goto <bb 417>;
  # SUCC: 416 [69.8%]  (true,exec) 417 [30.2%]  (false,exec)

  # BLOCK 416 freq:112
  # PRED: 415 [69.8%]  (true,exec)
  D.45290_1048 = pmap_1044->pt;
  switch_rtp_set_default_payload (D.45287_1046, D.45290_1048);
  # SUCC: 417 [100.0%]  (fallthru,exec)

  # BLOCK 417 freq:320
  # PRED: 414 [50.0%]  (false,exec) 415 [30.2%]  (false,exec) 416 [100.0%]  (fallthru,exec)
  mimp_1049 = MEM[symbol: matches, index: ivtmp.1083_626, offset: 0B];
  # DEBUG mimp => mimp_1049
  map_1050 = MEM[base: D.49978_628, offset: 4B];
  # DEBUG map => map_1050
  D.45255_1051 = map_1050->rm_encoding;
  D.45291_1052 = switch_core_perform_session_strdup (session_161(D), D.45255_1051, "src/switch_core_media.c", &__func__, 3804);
  pmap_1044->rm_encoding = D.45291_1052;
  D.45247_1053 = map_1050->rm_pt;
  D.45292_1054 = (unsigned char) D.45247_1053;
  pmap_1044->recv_pt = D.45292_1054;
  D.45262_1055 = map_1050->rm_rate;
  pmap_1044->rm_rate = D.45262_1055;
  D.45293_1056 = mimp_1049->microseconds_per_packet;
  D.45294_1057 = D.45293_1056 / 1000;
  D.45295_1058 = (uint32_t) D.45294_1057;
  pmap_1044->codec_ms = D.45295_1058;
  D.45085_1059 = connection_110->c_address;
  D.45296_1060 = switch_core_perform_session_strdup (session_161(D), D.45085_1059, "src/switch_core_media.c", &__func__, 3810);
  pmap_1044->remote_sdp_ip = D.45296_1060;
  D.44697_1061 = m_1764->m_port;
  D.45087_1062 = (short unsigned int) D.44697_1061;
  pmap_1044->remote_sdp_port = D.45087_1062;
  D.45297_1063 = map_1050->rm_fmtp;
  D.45298_1064 = switch_core_perform_session_strdup (session_161(D), D.45297_1063, "src/switch_core_media.c", &__func__, 3813);
  pmap_1044->rm_fmtp = D.45298_1064;
  D.45247_1065 = map_1050->rm_pt;
  D.45292_1066 = (unsigned char) D.45247_1065;
  pmap_1044->agreed_pt = D.45292_1066;
  j_1067 = j_1844 + 1;
  # DEBUG j => j_1067
  # DEBUG j => j_1067
  ivtmp.1083_627 = ivtmp.1083_626 + 16;
  if (m_idx_906 > j_1067)
    goto <bb 414>;
  else
    goto <bb 418>;
  # SUCC: 414 [96.7%]  (true,exec) 418 [3.3%]  (false,exec)

  # BLOCK 418 freq:11
  # PRED: 417 [3.3%]  (false,exec)
  D.45286_1068 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45299_1069 = D.45286_1068->remote_sdp_port;
  D.45300_1070 = (int) D.45299_1069;
  switch_snprintf (&tmp, 50, "%d", D.45300_1070);
  D.44530_1071 = session_161(D)->channel;
  D.45286_1072 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45301_1073 = D.45286_1072->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_1071, "remote_video_ip", D.45301_1073, 1);
  D.44530_1074 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1074, "remote_video_port", &tmp, 1);
  D.44530_1075 = session_161(D)->channel;
  D.45286_1076 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45302_1077 = D.45286_1076->rm_fmtp;
  switch_channel_set_variable_var_check (D.44530_1075, "rtp_video_fmtp", D.45302_1077, 1);
  D.45286_1078 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45303_1079 = D.45286_1078->agreed_pt;
  D.45304_1080 = (int) D.45303_1079;
  switch_snprintf (&tmp, 50, "%d", D.45304_1080);
  D.44530_1081 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1081, "rtp_video_pt", &tmp, 1);
  switch_core_media_check_video_codecs (session_161(D));
  D.45286_1082 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45305_1083 = D.45286_1082->recv_pt;
  D.45306_1084 = (int) D.45305_1083;
  switch_snprintf (&tmp, 50, "%d", D.45306_1084);
  D.44530_1085 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1085, "rtp_video_recv_pt", &tmp, 1);
  if (match_1800 == 0)
    goto <bb 420>;
  else
    goto <bb 419>;
  # SUCC: 420 [50.0%]  (true,exec) 419 [50.0%]  (false,exec)

  # BLOCK 419 freq:6
  # PRED: 418 [50.0%]  (false,exec)
  # SUCC: 420 [100.0%]  (fallthru,exec)

  # BLOCK 420 freq:11
  # PRED: 419 [100.0%]  (fallthru,exec) 418 [50.0%]  (true,exec)
  # match_14 = PHI <match_1800(419), 1(418)>
  # DEBUG match => match_14
  # DEBUG D#74 => &MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].read_codec
  # DEBUG codec => D#74
  D.47965_1505 = MEM[(struct switch_codec_t *)smh_186 + 13020B].flags;
  D.47964_1506 = D.47965_1505 & 256;
  if (D.47964_1506 != 0)
    goto <bb 421>;
  else
    goto <bb 425>;
  # SUCC: 421 [50.0%]  (true,exec) 425 [50.0%]  (false,exec)

  # BLOCK 421 freq:5
  # PRED: 420 [50.0%]  (true,exec)
  D.47963_1507 = MEM[(struct switch_codec_t *)smh_186 + 13020B].mutex;
  if (D.47963_1507 != 0B)
    goto <bb 422>;
  else
    goto <bb 425>;
  # SUCC: 422 [85.0%]  (true,exec) 425 [15.0%]  (false,exec)

  # BLOCK 422 freq:4
  # PRED: 421 [85.0%]  (true,exec)
  D.47962_1508 = MEM[(struct switch_codec_t *)smh_186 + 13020B].codec_interface;
  if (D.47962_1508 != 0B)
    goto <bb 423>;
  else
    goto <bb 425>;
  # SUCC: 423 [85.0%]  (true,exec) 425 [15.0%]  (false,exec)

  # BLOCK 423 freq:3
  # PRED: 422 [85.0%]  (true,exec)
  D.47961_1509 = MEM[(struct switch_codec_t *)smh_186 + 13020B].implementation;
  if (D.47961_1509 != 0B)
    goto <bb 424>;
  else
    goto <bb 425>;
  # SUCC: 424 [85.0%]  (true,exec) 425 [15.0%]  (false,exec)

  # BLOCK 424 freq:3
  # PRED: 423 [85.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].reset_codec = 1;
  # SUCC: 425 [100.0%]  (fallthru,exec)

  # BLOCK 425 freq:11
  # PRED: 423 [15.0%]  (false,exec) 424 [100.0%]  (fallthru,exec) 420 [50.0%]  (false,exec) 421 [15.0%]  (false,exec) 422 [15.0%]  (false,exec)
  D.45316_1092 = switch_core_media_set_video_codec (session_161(D), 0);
  if (D.45316_1092 == 0)
    goto <bb 426>;
  else
    goto <bb 427>;
  # SUCC: 426 [29.0%]  (true,exec) 427 [71.0%]  (false,exec)

  # BLOCK 426 freq:3
  # PRED: 425 [29.0%]  (true,exec)
  check_ice (smh_186, 1, sdp_198, m_1764);
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 427 freq:334
  # PRED: 443 [100.0%]  (fallthru,exec) 344 [55.8%]  (false,exec) 345 [71.0%]  (false,exec) 409 [100.0%]  (fallthru,exec) 425 [71.0%]  (false,exec) 426 [100.0%]  (fallthru,exec) 331 [30.2%]  (false,exec) 332 [100.0%]  (fallthru,exec) 329 [30.2%]  (false,exec) 330 [100.0%]  (fallthru,exec) 343 [100.0%]  (fallthru,exec) 169 [71.0%]  (false,exec) 410 [30.0%]  (false,exec) 137 [98.0%]  (false,exec)
  # match_15 = PHI <match_13(443), match_1800(344), match_1800(345), match_1800(409), match_14(425), match_14(426), match_13(331), match_13(332), match_13(329), match_13(330), match_13(343), match_1800(169), match_1800(410), match_1800(137)>
  # best_te_22 = PHI <best_te_1624(443), best_te_680(344), best_te_680(345), best_te_680(409), best_te_680(425), best_te_680(426), best_te_1860(331), best_te_1860(332), best_te_1860(329), best_te_1860(330), best_te_1624(343), best_te_680(169), best_te_680(410), best_te_680(137)>
  # cng_pt_26 = PHI <cng_pt_1626(443), cng_pt_1717(344), cng_pt_1717(345), cng_pt_1717(409), cng_pt_1717(425), cng_pt_1717(426), cng_pt_1626(331), cng_pt_1626(332), cng_pt_1626(329), cng_pt_1626(330), cng_pt_1626(343), cng_pt_1717(169), cng_pt_1717(410), cng_pt_1717(137)>
  # got_crypto_55 = PHI <got_crypto_969(443), got_crypto_1866(344), got_crypto_1866(345), got_crypto_1866(409), got_crypto_1866(425), got_crypto_1866(426), got_crypto_969(331), got_crypto_969(332), got_crypto_969(329), got_crypto_969(330), got_crypto_969(343), got_crypto_1866(169), got_crypto_1866(410), got_crypto_1866(137)>
  # got_video_crypto_63 = PHI <got_video_crypto_1674(443), got_video_crypto_1674(344), got_video_crypto_1674(345), got_video_crypto_959(409), got_video_crypto_959(425), got_video_crypto_959(426), got_video_crypto_1674(331), got_video_crypto_1674(332), got_video_crypto_1674(329), got_video_crypto_1674(330), got_video_crypto_1674(343), got_video_crypto_1674(169), got_video_crypto_959(410), got_video_crypto_1674(137)>
  # got_audio_66 = PHI <got_audio_65(443), got_audio_1693(344), got_audio_1693(345), got_audio_1693(409), got_audio_1693(425), got_audio_1693(426), got_audio_65(331), got_audio_65(332), got_audio_65(329), got_audio_65(330), got_audio_65(343), got_audio_1693(169), got_audio_1693(410), got_audio_1693(137)>
  # codec_ms_94 = PHI <codec_ms_93(443), codec_ms_477(344), codec_ms_477(345), codec_ms_477(409), codec_ms_477(425), codec_ms_477(426), codec_ms_93(331), codec_ms_93(332), codec_ms_93(329), codec_ms_93(330), codec_ms_93(343), codec_ms_477(169), codec_ms_477(410), codec_ms_477(137)>
  # m_idx_113 = PHI <m_idx_1745(443), m_idx_1869(344), m_idx_1869(345), 0(409), m_idx_906(425), m_idx_906(426), m_idx_1745(331), m_idx_1745(332), m_idx_1745(329), m_idx_1745(330), m_idx_1745(343), m_idx_1869(169), m_idx_906(410), m_idx_1869(137)>
  # nm_idx_121 = PHI <nm_idx_843(443), nm_idx_1749(344), nm_idx_1749(345), 0(409), 0(425), 0(426), nm_idx_843(331), nm_idx_843(332), nm_idx_843(329), nm_idx_843(330), nm_idx_843(343), nm_idx_1749(169), 0(410), nm_idx_1749(137)>
  # got_savp_2166 = PHI <got_savp_1739(443), got_savp_1739(344), got_savp_1739(345), got_savp_1739(409), got_savp_1739(425), got_savp_1739(426), got_savp_1739(331), got_savp_1739(332), got_savp_1739(329), got_savp_1739(330), got_savp_1739(343), got_savp_1739(169), got_savp_1739(410), got_savp_1711(137)>
  # got_udptl_2172 = PHI <got_udptl_1743(443), got_udptl_1743(344), got_udptl_1743(345), got_udptl_1743(409), got_udptl_1743(425), got_udptl_1743(426), got_udptl_1743(331), got_udptl_1743(332), got_udptl_1743(329), got_udptl_1743(330), got_udptl_1743(343), got_udptl_1743(169), got_udptl_1743(410), got_udptl_774(137)>
  # got_avp_2186 = PHI <got_avp_1859(443), got_avp_1859(344), got_avp_1859(345), got_avp_1859(409), got_avp_1859(425), got_avp_1859(426), got_avp_1859(331), got_avp_1859(332), got_avp_1859(329), got_avp_1859(330), got_avp_1859(343), got_avp_1859(169), got_avp_1859(410), got_avp_1740(137)>
  # DEBUG nm_idx => nm_idx_121
  # DEBUG m_idx => m_idx_113
  # DEBUG codec_ms => codec_ms_94
  # DEBUG got_audio => got_audio_66
  # DEBUG got_video_crypto => got_video_crypto_63
  # DEBUG got_crypto => got_crypto_55
  # DEBUG cng_pt => cng_pt_26
  # DEBUG best_te => best_te_22
  # DEBUG match => match_15
  m_1093 = m_1764->m_next;
  # DEBUG m => m_1093
  # DEBUG nm_idx => nm_idx_121
  # DEBUG m_idx => m_idx_113
  # DEBUG codec_ms => codec_ms_94
  # DEBUG got_webrtc => got_webrtc_78
  # DEBUG got_udptl => got_udptl_2172
  # DEBUG got_savp => got_savp_2166
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => got_avp_2186
  # DEBUG got_audio => got_audio_66
  # DEBUG got_video_crypto => got_video_crypto_63
  # DEBUG got_crypto => got_crypto_55
  # DEBUG m => m_1093
  # DEBUG cng_pt => cng_pt_26
  # DEBUG best_te => best_te_22
  # DEBUG match => match_15
  if (m_1093 != 0B)
    goto <bb 121>;
  else
    goto <bb 428> (done);
  # SUCC: 121 [98.0%]  (true,exec) 428 [2.0%]  (false,exec)

  # BLOCK 428 freq:13
  # PRED: 138 [71.0%]  (true,exec) 140 [100.0%]  (fallthru,exec) 157 [100.0%]  (fallthru,exec) 155 [71.0%]  (false,exec) 205 [100.0%]  (fallthru,exec) 210 [100.0%]  (fallthru,exec) 213 [100.0%]  (fallthru,exec) 348 [100.0%]  (fallthru,exec) 388 [100.0%]  (fallthru,exec) 427 [2.0%]  (false,exec) 154 [71.0%]  (false,exec) 167 [100.0%]  (fallthru,exec) 435 [100.0%]  (fallthru,exec) 120 [2.0%]  (false,exec)
  # match_17 = PHI <1(138), 0(140), 0(157), 1(155), 0(205), 0(210), 0(213), 0(348), 0(388), match_15(427), 1(154), 1(167), 1(435), 0(120)>
  # cng_pt_1047 = PHI <cng_pt_1717(138), cng_pt_1717(140), cng_pt_1717(157), cng_pt_1717(155), cng_pt_1717(205), cng_pt_1717(210), cng_pt_1717(213), cng_pt_1717(348), cng_pt_1717(388), cng_pt_26(427), cng_pt_1717(154), cng_pt_1717(167), cng_pt_1717(435), 0(120)>
done:
  # DEBUG match => match_17
  sdp_parser_free (parser_196);
  D.44471_1094 = smh_186->mparams;
  D.44471_1094->cng_pt = cng_pt_1047;
  # SUCC: 429 [100.0%]  (fallthru,exec)

  # BLOCK 429 freq:23
  # PRED: 4 [21.6%]  (true,exec) 5 [21.6%]  (true,exec) 7 [100.0%]  (fallthru,exec) 428 [100.0%]  (fallthru,exec)
  # match_142 = PHI <0(4), 0(5), 0(7), match_17(428)>
  return match_142;
  # SUCC: EXIT [100.0%] 

  # BLOCK 430
  # PRED: 18 [61.0%]  (false,exec) 17 [71.0%]  (false,exec)
  goto <bb 20>;
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 431 freq:1
  # PRED: 53 [61.0%]  (false,exec) 52 [71.0%]  (false,exec)
  goto <bb 55>;
  # SUCC: 55 [100.0%]  (fallthru,exec)

  # BLOCK 432 freq:55
  # PRED: 63 [50.0%]  (false,exec)
  D.44594_307 = strcasecmp (D.44590_304, "sendonly");
  if (D.44594_307 == 0)
    goto <bb 64>;
  else
    goto <bb 65>;
  # SUCC: 64 [29.0%]  (true,exec) 65 [71.0%]  (false,exec)

  # BLOCK 433
  # PRED: 91 [61.0%]  (false,exec) 90 [71.0%]  (false,exec)
  goto <bb 93>;
  # SUCC: 93 [100.0%]  (fallthru,exec)

  # BLOCK 434 freq:11
  # PRED: 94 [71.0%]  (false,exec) 93 [71.0%]  (false,exec) 92 [25.0%]  (fallthru,exec) 81 [71.0%]  (false,exec)
  # DEBUG reneg => 1
  goto <bb 98>;
  # SUCC: 98 [100.0%]  (fallthru,exec)

  # BLOCK 435
  # PRED: 151 [71.0%]  (true,exec) 152 [71.0%]  (true,exec) 153 [50.0%]  (true,exec) 149 [50.0%]  (true,exec) 150 [71.0%]  (true,exec)
  # DEBUG pass => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 436 freq:9
  # PRED: 193 [50.0%]  (false,exec)
  D.44471_533 = smh_186->mparams;
  D.44821_534 = D.44471_533->ndlb;
  D.44822_535 = D.44821_534 & 4;
  if (D.44822_535 == 0)
    goto <bb 194>;
  else
    goto <bb 206>;
  # SUCC: 194 [50.0%]  (true,exec) 206 [50.0%]  (false,exec)

  # BLOCK 437 freq:1
  # PRED: 203 [61.0%]  (false,exec) 194 [15.0%]  (false,exec) 202 [71.0%]  (false,exec)
  D.44666_539 = m_1764->m_proto;
  D.44829_540 = D.44666_539 != 257;
  D.44830_541 = got_webrtc_78 == 0;
  D.44831_542 = D.44830_541 & D.44829_540;
  if (D.44831_542 != 0)
    goto <bb 205>;
  else
    goto <bb 438>;
  # SUCC: 205 [4.5%]  (true,exec) 438 [95.5%]  (false,exec)

  # BLOCK 438 freq:1
  # PRED: 437 [95.5%]  (false,exec)
  prephitmp.1031_1895 = attr_1599->a_value;
  goto <bb 206>;
  # SUCC: 206 [100.0%]  (fallthru,exec)

  # BLOCK 439 freq:24
  # PRED: 229 [50.0%]  (true,exec) 230 [100.0%]  (fallthru,exec)
  # codec_ms_1883 = PHI <maxptime_1040(229), ptime_1033(230)>
  # DEBUG codec_ms => codec_ms_1883
  goto <bb 233>;
  # SUCC: 233 [100.0%]  (fallthru,exec)

  # BLOCK 440 freq:20
  # PRED: 239 [50.0%]  (false,exec)
  D.44889_608 = map_1728->rm_encoding;
  D.44854_610 = map_1728->rm_rate;
  D.44905_611 = switch_core_codec_parse_fmtp (D.44889_608, D.44893_598, D.44854_610, &codec_fmtp);
  if (D.44905_611 == 0)
    goto <bb 243>;
  else
    goto <bb 248>;
  # SUCC: 243 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

  # BLOCK 441 freq:119
  # PRED: 252 [50.0%]  (false,exec)
  D.44471_644 = smh_186->mparams;
  D.44821_645 = D.44471_644->ndlb;
  D.44936_646 = (int) D.44821_645;
  D.44937_647 = D.44936_646 & 1;
  if (D.44937_647 != 0)
    goto <bb 253>;
  else
    goto <bb 255>;
  # SUCC: 253 [50.0%]  (true,exec) 255 [50.0%]  (false,exec)

  # BLOCK 442 freq:85
  # PRED: 311 [50.0%]  (false,exec)
  D.45082_793 = switch_stristr ("stereo=1", D.45079_790);
  if (D.45082_793 != 0B)
    goto <bb 312>;
  else
    goto <bb 313>;
  # SUCC: 312 [85.0%]  (true,exec) 313 [15.0%]  (false,exec)

  # BLOCK 443 freq:2
  # PRED: 342 [61.0%]  (false,exec) 333 [15.0%]  (false,exec) 341 [71.0%]  (false,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3639, session_161(D), 7, "No 2833 in SDP.  Disable 2833 dtmf and switch to INFO\n");
  D.44530_860 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_860, "dtmf_type", "info", 1);
  D.44471_861 = smh_186->mparams;
  D.44471_861->dtmf_type = 1;
  D.44471_861->te = 0;
  D.44471_861->recv_te = 0;
  # DEBUG D#12 => D.44471_861->recv_te
  # DEBUG te => D#12
  goto <bb 427>;
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 444 freq:1167
  # PRED: 364 [50.0%]  (false,exec)
  D.45160_902 = switch_stristr ("fir", D.44619_899);
  if (D.45160_902 != 0B)
    goto <bb 365>;
  else
    goto <bb 366>;
  # SUCC: 365 [85.0%]  (true,exec) 366 [15.0%]  (false,exec)

  # BLOCK 445 freq:256
  # PRED: 376 [50.0%]  (false,exec)
  D.44471_964 = smh_186->mparams;
  D.44821_965 = D.44471_964->ndlb;
  D.44822_966 = D.44821_965 & 4;
  if (D.44822_966 == 0)
    goto <bb 377>;
  else
    goto <bb 389>;
  # SUCC: 377 [50.0%]  (true,exec) 389 [50.0%]  (false,exec)

  # BLOCK 446 freq:26
  # PRED: 386 [61.0%]  (false,exec) 377 [15.0%]  (false,exec) 385 [71.0%]  (false,exec)
  D.44666_970 = m_1764->m_proto;
  D.44829_971 = D.44666_970 != 257;
  D.44830_972 = got_webrtc_78 == 0;
  D.44831_973 = D.44830_972 & D.44829_971;
  if (D.44831_973 != 0)
    goto <bb 388>;
  else
    goto <bb 447>;
  # SUCC: 388 [4.5%]  (true,exec) 447 [95.5%]  (false,exec)

  # BLOCK 447 freq:25
  # PRED: 446 [95.5%]  (false,exec)
  prephitmp.1031_1890 = attr_619->a_value;
  goto <bb 389>;
  # SUCC: 389 [100.0%]  (fallthru,exec)

  # BLOCK 448 freq:199
  # PRED: 399 [50.0%]  (false,exec)
  D.44471_998 = smh_186->mparams;
  D.44821_999 = D.44471_998->ndlb;
  D.44936_1000 = (int) D.44821_999;
  D.44937_1001 = D.44936_1000 & 1;
  if (D.44937_1001 != 0)
    goto <bb 400>;
  else
    goto <bb 402>;
  # SUCC: 400 [50.0%]  (true,exec) 402 [50.0%]  (false,exec)

  # BLOCK 449 freq:26
  # PRED: 178 [9.0%]  (false,exec) 179 [94.7%]  (true,exec)
  # attr_922 = PHI <attr_500(178), attr_507(179)>
  # got_crypto_141 = PHI <got_crypto_50(178), got_crypto_1866(179)>
  goto <bb 180>;
  # SUCC: 180 [100.0%]  (fallthru,exec)

  # BLOCK 450 freq:433
  # PRED: 358 [9.0%]  (false,exec) 359 [96.3%]  (true,exec)
  # attr_1162 = PHI <attr_886(358), attr_893(359)>
  # got_video_crypto_743 = PHI <got_video_crypto_57(358), got_video_crypto_556(359)>
  goto <bb 360>;
  # SUCC: 360 [100.0%]  (fallthru,exec)

}



Partition map 

Partition 1 (match_1 - 1 )
Partition 2 (match_2 - 2 )
Partition 3 (pretmp.881_3 - 3 )
Partition 4 (pretmp.914_4 - 4 )
Partition 5 (pretmp.915_5 - 5 )
Partition 6 (pretmp.884_6 - 6 )
Partition 7 (match_7 - 7 )
Partition 8 (pretmp.931_8 - 8 )
Partition 9 (match_9 - 9 )
Partition 10 (pretmp.896_10 - 10 )
Partition 11 (pretmp.889_11 - 11 )
Partition 13 (match_13 - 13 )
Partition 14 (match_14 - 14 )
Partition 15 (match_15 - 15 )
Partition 16 (pretmp.900_16 - 16 )
Partition 17 (match_17 - 17 )
Partition 18 (pretmp.879_18 - 18 )
Partition 19 (best_te_19 - 19 )
Partition 20 (pretmp.930_20 - 20 )
Partition 21 (pretmp.973_21 - 21 )
Partition 22 (best_te_22 - 22 )
Partition 23 (pretmp.901_23 - 23 )
Partition 24 (cng_pt_24 - 24 )
Partition 25 (pretmp.929_25 - 25 )
Partition 26 (cng_pt_26 - 26 )
Partition 27 (pretmp.907_27 - 27 )
Partition 28 (pretmp.885_28 - 28 )
Partition 29 (pretmp.979_29 - 29 )
Partition 30 (pretmp.960_30 - 30 )
Partition 31 (pretmp.953_31 - 31 )
Partition 32 (pretmp.918_32 - 32 )
Partition 33 (pretmp.913_33 - 33 )
Partition 34 (ptime_34 - 34 )
Partition 35 (pretmp.952_35 - 35 )
Partition 36 (dptime_36 - 36 )
Partition 37 (pretmp.978_37 - 37 )
Partition 38 (maxptime_38 - 38 )
Partition 39 (pretmp.951_39 - 39 )
Partition 40 (dmaxptime_40 - 40 )
Partition 41 (pretmp.977_41 - 41 )
Partition 42 (sendonly_42 - 42 )
Partition 43 (sendonly_43 - 43 )
Partition 44 (pretmp.976_44 - 44 )
Partition 45 (recvonly_45 - 45 )
Partition 46 (pretmp.975_46 - 46 )
Partition 47 (greedy_47 - 47 )
Partition 48 (pretmp.958_48 - 48 )
Partition 50 (got_crypto_50 - 50 )
Partition 51 (pretmp.959_51 - 51 )
Partition 52 (pretmp.879_52 - 52 )
Partition 53 (got_crypto_53 - 53 )
Partition 54 (pretmp.950_54 - 54 )
Partition 55 (got_crypto_55 - 55 )
Partition 56 (pretmp.885_56 - 56 )
Partition 57 (got_video_crypto_57 - 57 )
Partition 58 (pretmp.917_58 - 58 )
Partition 59 (pretmp.902_59 - 59 )
Partition 60 (got_video_crypto_60 - 60 )
Partition 61 (pretmp.912_61 - 61 )
Partition 62 (ivtmp.1090_62 - 62 )
Partition 63 (got_video_crypto_63 - 63 )
Partition 64 (pretmp.885_64 - 64 )
Partition 65 (got_audio_65 - 65 )
Partition 66 (got_audio_66 - 66 )
Partition 67 (pretmp.885_67 - 67 )
Partition 68 (got_avp_68 - 68 )
Partition 69 (pretmp.880_69 - 69 )
Partition 74 (got_savp_74 - 74 )
Partition 75 (pretmp.897_75 - 75 )
Partition 76 (pretmp.874_76 - 76 )
Partition 78 (got_webrtc_78 - 78 )
Partition 79 (pretmp.878_79 - 79 )
Partition 80 (scrooge_80 - 80 )
Partition 81 (reneg_81 - 81 )
Partition 82 (reneg_82 - 82 )
Partition 83 (pretmp.874_83 - 83 )
Partition 84 (codec_array_84 - 84 )
Partition 85 (total_codecs_85 - 85 )
Partition 86 (pretmp.880_86 - 86 )
Partition 87 (codec_ms_87 - 87 )
Partition 88 (codec_ms_88 - 88 )
Partition 89 (codec_ms_89 - 89 )
Partition 90 (codec_ms_90 - 90 )
Partition 91 (codec_ms_91 - 91 )
Partition 92 (pretmp.928_92 - 92 )
Partition 93 (codec_ms_93 - 93 )
Partition 94 (codec_ms_94 - 94 )
Partition 95 (D.49971_95 - 95 )
Partition 96 (remote_codec_rate_96 - 96 )
Partition 97 (remote_codec_rate_97 - 97 )
Partition 98 (pretmp.936_98 - 98 )
Partition 99 (fmtp_remote_codec_rate_99 - 99 )
Partition 100 (m_idx_100 - 100 )
Partition 101 (pretmp.935_101 - 101 )
Partition 102 (m_idx_102 - 102 )
Partition 103 (m_idx_103 - 103 )
Partition 104 (pretmp.927_104 - 104 )
Partition 105 (m_idx_105 - 105 )
Partition 106 (pretmp.895_106 - 106 )
Partition 107 (pretmp.888_107 - 107 )
Partition 109 (m_idx_109 - 109 )
Partition 110 (connection_110 - 110 )
Partition 111 (pretmp.899_111 - 111 )
Partition 112 (pretmp.906_112 - 112 )
Partition 113 (m_idx_113 - 113 )
Partition 115 (nm_idx_115 - 115 )
Partition 116 (pretmp.934_116 - 116 )
Partition 117 (nm_idx_117 - 117 )
Partition 118 (pretmp.926_118 - 118 )
Partition 119 (nm_idx_119 - 119 )
Partition 120 (pretmp.894_120 - 120 )
Partition 121 (nm_idx_121 - 121 )
Partition 122 (pretmp.878_122 - 122 )
Partition 124 (pretmp.880_124 - 124 )
Partition 125 (pretmp.898_125 - 125 )
Partition 126 (pass_126 - 126 )
Partition 127 (pretmp.876_127 - 127 )
Partition 128 (pretmp.925_128 - 128 )
Partition 129 (pretmp.933_129 - 129 )
Partition 130 (rm_encoding_130 - 130 )
Partition 131 (map_bit_rate_131 - 131 )
Partition 132 (map_bit_rate_132 - 132 )
Partition 133 (pretmp.972_133 - 133 )
Partition 134 (timp_134 - 134 )
Partition 135 (pretmp.923_135 - 135 )
Partition 136 (ivtmp.1090_136 - 136 )
Partition 137 (rm_encoding_137 - 137 )
Partition 138 (vmatch_138 - 138 )
Partition 139 (connection_139 - 139 )
Partition 140 (pretmp.903_140 - 140 )
Partition 141 (got_crypto_141 - 141 )
Partition 142 (match_142 - 142 )
Partition 145 (near_rate_145 - 145 )
Partition 146 (D.47922_146 - 146 )
Partition 161 (session_161(D) - 161 )
Partition 162 (channel_162 - 162 )
Partition 186 (smh_186 - 186 )
Partition 190 (codec_array_190 - 190 )
Partition 191 (D.44471_191 - 191 )
Partition 192 (total_codecs_192 - 192 )
Partition 193 (r_sdp_193(D) - 193 )
Partition 194 (D.44472_194 - 194 )
Partition 195 (D.44473_195 - 195 )
Partition 196 (parser_196 - 196 )
Partition 198 (sdp_198 - 198 )
Partition 200 (D.44478_200 - 200 )
Partition 201 (D.44481_201 - 201 )
Partition 202 (D.44482_202 - 202 )
Partition 203 (tmp_203 - 203 )
Partition 204 (pretmp.1000_204 - 204 )
Partition 205 (D.44481_205 - 205 )
Partition 206 (D.44482_206 - 206 )
Partition 207 (D.44481_207 - 207 )
Partition 208 (D.44482_208 - 208 )
Partition 209 (proceed_209(D) - 209 )
Partition 210 (D.44490_210 - 210 )
Partition 211 (greedy_211 - 211 )
Partition 212 (D.44491_212 - 212 )
Partition 213 (scrooge_213 - 213 )
Partition 214 (val_214 - 214 )
Partition 215 (D.44494_215 - 215 )
Partition 218 (D.44498_218 - 218 )
Partition 221 (D.44502_221 - 221 )
Partition 224 (D.44506_224 - 224 )
Partition 225 (D.44507_225 - 225 )
Partition 226 (D.44508_226 - 226 )
Partition 227 (pretmp.992_227 - 227 )
Partition 228 (D.44471_228 - 228 )
Partition 229 (prephitmp.1053_229 - 229 )
Partition 230 (D.44513_230 - 230 )
Partition 231 (D.44514_231 - 231 )
Partition 233 (pretmp.995_233 - 233 )
Partition 234 (D.44518_234 - 234 )
Partition 235 (D.44521_235 - 235 )
Partition 236 (D.44522_236 - 236 )
Partition 237 (ivtmp.1067_237 - 237 )
Partition 238 (D.49960_238 - 238 )
Partition 239 (D.44523_239 - 239 )
Partition 240 (D.44509_240 - 240 )
Partition 241 (D.44526_241 - 241 )
Partition 242 (D.44521_242 - 242 )
Partition 243 (D.44529_243 - 243 )
Partition 244 (D.44530_244 - 244 )
Partition 245 (val_245 - 245 )
Partition 246 (pretmp.997_246 - 246 )
Partition 247 (D.44530_247 - 247 )
Partition 248 (m_248 - 248 )
Partition 249 (D.44540_249 - 249 )
Partition 250 (D.44541_250 - 250 )
Partition 251 (D.44542_251 - 251 )
Partition 252 (D.44543_252 - 252 )
Partition 253 (D.44544_253 - 253 )
Partition 254 (D.44546_254 - 254 )
Partition 255 (map_255 - 255 )
Partition 256 (D.44548_256 - 256 )
Partition 299 (pretmp.1020_299 - 299 )
Partition 300 (__result_300 - 300 )
Partition 303 (attr_303 - 303 )
Partition 304 (D.44590_304 - 304 )
Partition 307 (D.44594_307 - 307 )
Partition 309 (D.44530_309 - 309 )
Partition 311 (D.44598_311 - 311 )
Partition 313 (D.44530_313 - 313 )
Partition 315 (D.44602_315 - 315 )
Partition 316 (D.44530_316 - 316 )
Partition 318 (D.44605_318 - 318 )
Partition 319 (D.44606_319 - 319 )
Partition 320 (D.44605_320 - 320 )
Partition 321 (D.44530_321 - 321 )
Partition 322 (D.44530_322 - 322 )
Partition 323 (prephitmp.1053_323 - 323 )
Partition 324 (D.44614_324 - 324 )
Partition 326 (prephitmp.1053_326 - 326 )
Partition 327 (D.44616_327 - 327 )
Partition 328 (D.44619_328 - 328 )
Partition 330 (timp_330 - 330 )
Partition 331 (D.44621_331 - 331 )
Partition 332 (D.44619_332 - 332 )
Partition 334 (attr_334 - 334 )
Partition 335 (D.44624_335 - 335 )
Partition 337 (D.44626_337 - 337 )
Partition 338 (D.44530_338 - 338 )
Partition 339 (D.44631_339 - 339 )
Partition 340 (D.44530_340 - 340 )
Partition 341 (val_341 - 341 )
Partition 342 (pretmp.969_342 - 342 )
Partition 343 (D.44471_343 - 343 )
Partition 344 (D.44636_344 - 344 )
Partition 345 (D.49951_345 - 345 )
Partition 346 (prephitmp.1049_346 - 346 )
Partition 347 (pretmp.922_347 - 347 )
Partition 348 (D.44640_348 - 348 )
Partition 349 (reneg_349 - 349 )
Partition 350 (D.44530_350 - 350 )
Partition 351 (val_351 - 351 )
Partition 352 (reneg_352 - 352 )
Partition 353 (reneg_353 - 353 )
Partition 354 (D.44530_354 - 354 )
Partition 355 (val_355 - 355 )
Partition 356 (pretmp.923_356 - 356 )
Partition 357 (D.44649_357 - 357 )
Partition 359 (total_codecs_359 - 359 )
Partition 360 (codec_array_360 - 360 )
Partition 361 (got_crypto_361 - 361 )
Partition 362 (D.44471_362 - 362 )
Partition 363 (pretmp.923_363 - 363 )
Partition 364 (D.44471_364 - 364 )
Partition 365 (total_codecs_365 - 365 )
Partition 366 (D.44661_366 - 366 )
Partition 367 (D.44663_367 - 367 )
Partition 368 (D.44665_368 - 368 )
Partition 369 (D.44530_369 - 369 )
Partition 370 (m_370 - 370 )
Partition 373 (D.44666_373 - 373 )
Partition 374 (got_webrtc_374 - 374 )
Partition 375 (D.44669_375 - 375 )
Partition 377 (D.44672_377 - 377 )
Partition 378 (D.44530_378 - 378 )
Partition 379 (D.44675_379 - 379 )
Partition 380 (D.44676_380 - 380 )
Partition 381 (D.44677_381 - 381 )
Partition 382 (D.44678_382 - 382 )
Partition 383 (prephitmp.1049_383 - 383 )
Partition 384 (got_savp_384 - 384 )
Partition 386 (codec_ms_386 - 386 )
Partition 387 (prephitmp.1049_387 - 387 )
Partition 388 (got_avp_388 - 388 )
Partition 391 (got_udptl_391 - 391 )
Partition 392 (ivtmp.1076_392 - 392 )
Partition 393 (D.44697_393 - 393 )
Partition 394 (t38_options_394 - 394 )
Partition 395 (D.44530_395 - 395 )
Partition 396 (D.44699_396 - 396 )
Partition 398 (D.44702_398 - 398 )
Partition 399 (D.44703_399 - 399 )
Partition 400 (D.44530_400 - 400 )
Partition 402 (var_402 - 402 )
Partition 403 (D.44481_403 - 403 )
Partition 404 (D.44482_404 - 404 )
Partition 405 (D.44706_405 - 405 )
Partition 406 (pass_406 - 406 )
Partition 407 (D.44530_407 - 407 )
Partition 408 (D.44707_408 - 408 )
Partition 409 (pass_409 - 409 )
Partition 410 (D.44716_410 - 410 )
Partition 412 (D.44481_412 - 412 )
Partition 413 (D.44482_413 - 413 )
Partition 414 (D.44723_414 - 414 )
Partition 415 (D.44530_415 - 415 )
Partition 416 (D.44724_416 - 416 )
Partition 417 (D.44530_417 - 417 )
Partition 418 (D.44726_418 - 418 )
Partition 419 (D.44530_419 - 419 )
Partition 420 (D.44728_420 - 420 )
Partition 421 (D.44605_421 - 421 )
Partition 422 (D.44730_422 - 422 )
Partition 424 (D.44733_424 - 424 )
Partition 425 (other_session.89_425 - 425 )
Partition 426 (other_channel_426 - 426 )
Partition 427 (D.44605_427 - 427 )
Partition 428 (remote_host_428 - 428 )
Partition 429 (D.44605_429 - 429 )
Partition 430 (remote_port_430 - 430 )
Partition 431 (D.44737_431 - 431 )
Partition 432 (D.44530_432 - 432 )
Partition 433 (D.44740_433 - 433 )
Partition 434 (D.44741_434 - 434 )
Partition 435 (other_session.89_435 - 435 )
Partition 438 (D.44530_438 - 438 )
Partition 439 (D.44742_439 - 439 )
Partition 440 (D.44743_440 - 440 )
Partition 441 (D.44530_441 - 441 )
Partition 442 (D.44746_442 - 442 )
Partition 443 (D.44747_443 - 443 )
Partition 444 (D.44750_444 - 444 )
Partition 445 (D.44751_445 - 445 )
Partition 446 (D.44752_446 - 446 )
Partition 447 (D.44750_447 - 447 )
Partition 448 (D.44753_448 - 448 )
Partition 449 (D.44756_449 - 449 )
Partition 450 (D.44757_450 - 450 )
Partition 451 (D.44758_451 - 451 )
Partition 452 (got_webrtc_452 - 452 )
Partition 453 (D.44760_453 - 453 )
Partition 454 (D.39032_454 - 454 )
Partition 455 (pretmp.892_455 - 455 )
Partition 456 (pretmp.882_456 - 456 )
Partition 457 (D.44530_457 - 457 )
Partition 458 (D.44764_458 - 458 )
Partition 459 (D.44530_459 - 459 )
Partition 460 (D.44765_460 - 460 )
Partition 461 (D.44766_461 - 461 )
Partition 462 (D.44750_462 - 462 )
Partition 463 (D.44760_463 - 463 )
Partition 464 (pretmp.890_464 - 464 )
Partition 465 (D.44762_465 - 465 )
Partition 466 (D.44767_466 - 466 )
Partition 467 (D.44750_467 - 467 )
Partition 468 (D.44762_468 - 468 )
Partition 469 (D.44767_469 - 469 )
Partition 470 (D.44530_470 - 470 )
Partition 471 (D.44750_471 - 471 )
Partition 472 (D.44760_472 - 472 )
Partition 473 (D.44530_473 - 473 )
Partition 474 (D.44605_474 - 474 )
Partition 475 (D.44750_475 - 475 )
Partition 476 (D.44760_476 - 476 )
Partition 477 (codec_ms_477 - 477 )
Partition 478 (D.44762_478 - 478 )
Partition 479 (D.44768_479 - 479 )
Partition 480 (err.90_480 - 480 )
Partition 481 (other_session.89_481 - 481 )
Partition 482 (D.44481_482 - 482 )
Partition 483 (D.44482_483 - 483 )
Partition 484 (other_session.89_484 - 484 )
Partition 485 (D.44772_485 - 485 )
Partition 486 (other_session.89_486 - 486 )
Partition 487 (msg_487 - 487 )
Partition 488 (other_session.89_488 - 488 )
Partition 489 (D.44773_489 - 489 )
Partition 490 (other_session.89_490 - 490 )
Partition 491 (other_session.89_491 - 491 )
Partition 494 (D.44697_494 - 494 )
Partition 495 (D.44777_495 - 495 )
Partition 496 (D.44778_496 - 496 )
Partition 497 (D.44779_497 - 497 )
Partition 498 (D.44781_498 - 498 )
Partition 499 (D.44784_499 - 499 )
Partition 500 (attr_500 - 500 )
Partition 501 (D.44590_501 - 501 )
Partition 502 (D.44787_502 - 502 )
Partition 503 (D.44619_503 - 503 )
Partition 506 (attr_506 - 506 )
Partition 507 (attr_507 - 507 )
Partition 508 (D.44590_508 - 508 )
Partition 509 (D.44795_509 - 509 )
Partition 510 (D.44619_510 - 510 )
Partition 511 (D.44530_511 - 511 )
Partition 512 (got_savp_512 - 512 )
Partition 513 (D.44619_513 - 513 )
Partition 515 (D.44799_515 - 515 )
Partition 516 (D.44471_516 - 516 )
Partition 517 (D.44800_517 - 517 )
Partition 518 (pretmp.896_518 - 518 )
Partition 520 (D.44805_520 - 520 )
Partition 521 (D.44619_521 - 521 )
Partition 522 (ivtmp.1062_522 - 522 )
Partition 525 (D.44810_525 - 525 )
Partition 526 (D.44619_526 - 526 )
Partition 530 (D.44815_530 - 530 )
Partition 531 (prephitmp.1031_531 - 531 )
Partition 533 (D.44471_533 - 533 )
Partition 534 (D.44821_534 - 534 )
Partition 535 (D.44822_535 - 535 )
Partition 536 (D.44530_536 - 536 )
Partition 537 (D.44825_537 - 537 )
Partition 539 (D.44666_539 - 539 )
Partition 540 (D.44829_540 - 540 )
Partition 541 (D.44830_541 - 541 )
Partition 542 (D.44831_542 - 542 )
Partition 544 (ivtmp.1090_544 - 544 )
Partition 546 (sdp_type_546(D) - 546 )
Partition 547 (got_crypto_547 - 547 )
Partition 548 (attr_548 - 548 )
Partition 549 (D.44834_549 - 549 )
Partition 550 (D.44835_550 - 550 )
Partition 551 (D.44836_551 - 551 )
Partition 552 (D.44839_552 - 552 )
Partition 554 (connection_554 - 554 )
Partition 555 (connection_555 - 555 )
Partition 556 (got_video_crypto_556 - 556 )
Partition 559 (map_559 - 559 )
Partition 561 (rm_encoding_561 - 561 )
Partition 563 (D.44848_563 - 563 )
Partition 564 (D.44854_564 - 564 )
Partition 565 (D.44750_565 - 565 )
Partition 566 (D.44855_566 - 566 )
Partition 567 (D.44856_567 - 567 )
Partition 568 (best_te_568 - 568 )
Partition 569 (D.44857_569 - 569 )
Partition 570 (D.44858_570 - 570 )
Partition 571 (D.44863_571 - 571 )
Partition 572 (D.44856_572 - 572 )
Partition 573 (cng_pt_573 - 573 )
Partition 574 (D.44605_574 - 574 )
Partition 575 (D.44868_575 - 575 )
Partition 576 (D.44605_576 - 576 )
Partition 577 (D.44471_577 - 577 )
Partition 578 (D.44869_578 - 578 )
Partition 580 (pretmp.908_580 - 580 )
Partition 582 (D.44877_582 - 582 )
Partition 583 (D.44878_583 - 583 )
Partition 584 (D.44879_584 - 584 )
Partition 586 (D.44856_586 - 586 )
Partition 587 (D.44884_587 - 587 )
Partition 588 (D.44885_588 - 588 )
Partition 589 (codec_ms_589 - 589 )
Partition 590 (D.44856_590 - 590 )
Partition 591 (csui.173_591 - 591 )
Partition 593 (D.44889_593 - 593 )
Partition 594 (D.44890_594 - 594 )
Partition 596 (remote_codec_rate_596 - 596 )
Partition 598 (D.44893_598 - 598 )
Partition 600 (D.44889_600 - 600 )
Partition 601 (D.44897_601 - 601 )
Partition 604 (attr_604 - 604 )
Partition 605 (D.44901_605 - 605 )
Partition 608 (D.44889_608 - 608 )
Partition 610 (D.44854_610 - 610 )
Partition 611 (D.44905_611 - 611 )
Partition 612 (D.44908_612 - 612 )
Partition 614 (map_bit_rate_614 - 614 )
Partition 615 (D.44911_615 - 615 )
Partition 616 (near_rate.96_616 - 616 )
Partition 617 (codec_ms_617 - 617 )
Partition 618 (fmtp_remote_codec_rate_618 - 618 )
Partition 619 (attr_619 - 619 )
Partition 621 (D.44471_621 - 621 )
Partition 622 (D.44996_622 - 622 )
Partition 623 (D.44997_623 - 623 )
Partition 624 (D.44998_624 - 624 )
Partition 625 (D.44999_625 - 625 )
Partition 626 (ivtmp.1083_626 - 626 )
Partition 627 (ivtmp.1083_627 - 627 )
Partition 628 (D.49978_628 - 628 )
Partition 629 (imp_629 - 629 )
Partition 630 (D.44920_630 - 630 )
Partition 631 (bit_rate_631 - 631 )
Partition 632 (codec_rate_632 - 632 )
Partition 633 (D.44921_633 - 633 )
Partition 634 (D.44856_634 - 634 )
Partition 635 (D.44924_635 - 635 )
Partition 636 (remote_codec_rate.92_636 - 636 )
Partition 637 (D.44926_637 - 637 )
Partition 638 (D.44927_638 - 638 )
Partition 639 (D.44928_639 - 639 )
Partition 640 (D.44929_640 - 640 )
Partition 641 (D.44930_641 - 641 )
Partition 642 (D.44889_642 - 642 )
Partition 644 (D.44471_644 - 644 )
Partition 645 (D.44821_645 - 645 )
Partition 646 (D.44936_646 - 646 )
Partition 647 (D.44937_647 - 647 )
Partition 649 (D.44856_649 - 649 )
Partition 650 (D.44924_650 - 650 )
Partition 653 (D.44927_653 - 653 )
Partition 654 (D.44928_654 - 654 )
Partition 655 (match_655 - 655 )
Partition 656 (D.44926_656 - 656 )
Partition 657 (D.44944_657 - 657 )
Partition 658 (D.44947_658 - 658 )
Partition 666 (D.44955_666 - 666 )
Partition 667 (D.44956_667 - 667 )
Partition 668 (D.44957_668 - 668 )
Partition 670 (D.44960_670 - 670 )
Partition 671 (got_avp_671 - 671 )
Partition 672 (D.44963_672 - 672 )
Partition 675 (D.44968_675 - 675 )
Partition 676 (D.44969_676 - 676 )
Partition 677 (D.44972_677 - 677 )
Partition 678 (D.44973_678 - 678 )
Partition 679 (D.44974_679 - 679 )
Partition 680 (best_te_680 - 680 )
Partition 681 (D.44977_681 - 681 )
Partition 683 (D.44979_683 - 683 )
Partition 685 (D.44926_685 - 685 )
Partition 686 (D.44984_686 - 686 )
Partition 687 (D.44929_687 - 687 )
Partition 688 (D.44930_688 - 688 )
Partition 689 (D.44989_689 - 689 )
Partition 690 (D.44990_690 - 690 )
Partition 691 (D.44991_691 - 691 )
Partition 692 (D.44993_692 - 692 )
Partition 693 (prephitmp.1043_693 - 693 )
Partition 695 (D.44926_695 - 695 )
Partition 696 (D.44927_696 - 696 )
Partition 697 (D.44928_697 - 697 )
Partition 699 (D.44930_699 - 699 )
Partition 700 (remote_codec_rate.92_700 - 700 )
Partition 701 (nm_idx_701 - 701 )
Partition 702 (codec_rate.94_702 - 702 )
Partition 703 (m_idx_703 - 703 )
Partition 704 (D.44926_704 - 704 )
Partition 705 (D.44927_705 - 705 )
Partition 706 (D.44928_706 - 706 )
Partition 707 (D.44929_707 - 707 )
Partition 708 (D.44930_708 - 708 )
Partition 710 (i_710 - 710 )
Partition 711 (map_711 - 711 )
Partition 712 (D.45001_712 - 712 )
Partition 713 (D.45002_713 - 713 )
Partition 714 (D.45003_714 - 714 )
Partition 715 (D.45004_715 - 715 )
Partition 719 (D.45007_719 - 719 )
Partition 720 (D.45008_720 - 720 )
Partition 721 (D.45009_721 - 721 )
Partition 724 (near_rate.96_724 - 724 )
Partition 725 (near_rate_725 - 725 )
Partition 726 (near_match_726 - 726 )
Partition 727 (near_map_727 - 727 )
Partition 728 (D.45013_728 - 728 )
Partition 729 (near_rate_729 - 729 )
Partition 731 (num_731 - 731 )
Partition 732 (timp_732 - 732 )
Partition 734 (D.45024_734 - 734 )
Partition 735 (prephitmp.1039_735 - 735 )
Partition 736 (j_736 - 736 )
Partition 737 (D.45026_737 - 737 )
Partition 740 (D.45027_740 - 740 )
Partition 742 (D.45028_742 - 742 )
Partition 743 (got_video_crypto_743 - 743 )
Partition 744 (pretmp.916_744 - 744 )
Partition 747 (D.45034_747 - 747 )
Partition 748 (D.45035_748 - 748 )
Partition 749 (prephitmp.1055_749 - 749 )
Partition 750 (D.45036_750 - 750 )
Partition 752 (D.45037_752 - 752 )
Partition 753 (D.45038_753 - 753 )
Partition 754 (D.45039_754 - 754 )
Partition 755 (D.45040_755 - 755 )
Partition 756 (ivtmp.1067_756 - 756 )
Partition 757 (D.45041_757 - 757 )
Partition 758 (D.45042_758 - 758 )
Partition 759 (D.45043_759 - 759 )
Partition 760 (pmap_760 - 760 )
Partition 761 (mimp_761 - 761 )
Partition 762 (mmap_762 - 762 )
Partition 763 (match_763 - 763 )
Partition 764 (D.44605_764 - 764 )
Partition 766 (D.45048_766 - 766 )
Partition 767 (D.45049_767 - 767 )
Partition 768 (D.45050_768 - 768 )
Partition 769 (D.45051_769 - 769 )
Partition 770 (D.45052_770 - 770 )
Partition 771 (D.45053_771 - 771 )
Partition 772 (D.45054_772 - 772 )
Partition 773 (D.45055_773 - 773 )
Partition 774 (got_udptl_774 - 774 )
Partition 775 (D.45051_775 - 775 )
Partition 776 (D.45056_776 - 776 )
Partition 777 (D.45059_777 - 777 )
Partition 778 (D.45060_778 - 778 )
Partition 779 (D.45061_779 - 779 )
Partition 780 (D.45062_780 - 780 )
Partition 781 (D.45063_781 - 781 )
Partition 782 (D.45064_782 - 782 )
Partition 783 (D.45066_783 - 783 )
Partition 784 (pretmp.1046_784 - 784 )
Partition 787 (D.45049_787 - 787 )
Partition 788 (D.45070_788 - 788 )
Partition 789 (prephitmp.1047_789 - 789 )
Partition 790 (D.45079_790 - 790 )
Partition 792 (m_idx_792 - 792 )
Partition 793 (D.45082_793 - 793 )
Partition 795 (D.45085_795 - 795 )
Partition 796 (D.45086_796 - 796 )
Partition 797 (D.44697_797 - 797 )
Partition 798 (D.45087_798 - 798 )
Partition 799 (D.45079_799 - 799 )
Partition 800 (D.45088_800 - 800 )
Partition 801 (D.45053_801 - 801 )
Partition 802 (D.45054_802 - 802 )
Partition 803 (D.44655_803 - 803 )
Partition 804 (D.45089_804 - 804 )
Partition 805 (D.45053_805 - 805 )
Partition 806 (D.45054_806 - 806 )
Partition 807 (j_807 - 807 )
Partition 808 (D.44750_808 - 808 )
Partition 809 (D.44762_809 - 809 )
Partition 810 (D.44767_810 - 810 )
Partition 811 (D.44530_811 - 811 )
Partition 812 (D.44750_812 - 812 )
Partition 813 (D.44760_813 - 813 )
Partition 814 (D.44530_814 - 814 )
Partition 815 (D.44750_815 - 815 )
Partition 816 (D.45092_816 - 816 )
Partition 817 (D.45093_817 - 817 )
Partition 818 (D.44530_818 - 818 )
Partition 819 (m_idx_819 - 819 )
Partition 821 (D.44471_821 - 821 )
Partition 822 (D.45098_822 - 822 )
Partition 823 (D.45099_823 - 823 )
Partition 826 (D.45107_826 - 826 )
Partition 827 (D.44530_827 - 827 )
Partition 828 (D.45109_828 - 828 )
Partition 829 (D.44471_829 - 829 )
Partition 830 (D.45110_830 - 830 )
Partition 831 (D.45111_831 - 831 )
Partition 832 (D.44471_832 - 832 )
Partition 833 (best_te_833 - 833 )
Partition 834 (D.45114_834 - 834 )
Partition 835 (D.44471_835 - 835 )
Partition 837 (D.44857_837 - 837 )
Partition 838 (D.44530_838 - 838 )
Partition 839 (D.44471_839 - 839 )
Partition 840 (D.44605_840 - 840 )
Partition 842 (D.44530_842 - 842 )
Partition 843 (nm_idx_843 - 843 )
Partition 845 (D.44471_845 - 845 )
Partition 846 (prephitmp.1039_846 - 846 )
Partition 847 (pretmp.909_847 - 847 )
Partition 848 (D.45120_848 - 848 )
Partition 849 (D.44530_849 - 849 )
Partition 850 (D.44471_850 - 850 )
Partition 851 (D.44605_851 - 851 )
Partition 852 (pretmp.999_852 - 852 )
Partition 853 (D.44530_853 - 853 )
Partition 854 (pretmp.999_854 - 854 )
Partition 855 (D.44605_855 - 855 )
Partition 856 (D.44530_856 - 856 )
Partition 857 (prephitmp.1039_857 - 857 )
Partition 858 (D.45124_858 - 858 )
Partition 859 (pretmp.1000_859 - 859 )
Partition 860 (D.44530_860 - 860 )
Partition 861 (D.44471_861 - 861 )
Partition 863 (m_idx_863 - 863 )
Partition 864 (i_864 - 864 )
Partition 866 (D.44530_866 - 866 )
Partition 867 (D.44471_867 - 867 )
Partition 869 (recvonly_869 - 869 )
Partition 872 (D.49988_872 - 872 )
Partition 873 (D.44697_873 - 873 )
Partition 878 (D.44530_878 - 878 )
Partition 879 (connection_879 - 879 )
Partition 880 (connection_880 - 880 )
Partition 881 (pretmp.921_881 - 881 )
Partition 883 (map_883 - 883 )
Partition 884 (D.45137_884 - 884 )
Partition 885 (D.45140_885 - 885 )
Partition 886 (attr_886 - 886 )
Partition 887 (D.44590_887 - 887 )
Partition 888 (D.45143_888 - 888 )
Partition 889 (D.44619_889 - 889 )
Partition 892 (attr_892 - 892 )
Partition 893 (attr_893 - 893 )
Partition 894 (D.44590_894 - 894 )
Partition 895 (D.45151_895 - 895 )
Partition 896 (D.44619_896 - 896 )
Partition 898 (D.45154_898 - 898 )
Partition 899 (D.44619_899 - 899 )
Partition 901 (nm_idx_901 - 901 )
Partition 902 (D.45160_902 - 902 )
Partition 903 (D.45163_903 - 903 )
Partition 904 (D.45164_904 - 904 )
Partition 905 (D.44471_905 - 905 )
Partition 906 (m_idx_906 - 906 )
Partition 907 (D.45168_907 - 907 )
Partition 908 (D.44619_908 - 908 )
Partition 910 (m_idx_910 - 910 )
Partition 911 (D.45174_911 - 911 )
Partition 912 (nm_idx_912 - 912 )
Partition 921 (D.45185_921 - 921 )
Partition 922 (attr_922 - 922 )
Partition 952 (D.44530_952 - 952 )
Partition 953 (m_idx_953 - 953 )
Partition 954 (D.44619_954 - 954 )
Partition 956 (D.45213_956 - 956 )
Partition 957 (D.44471_957 - 957 )
Partition 958 (D.45214_958 - 958 )
Partition 959 (got_video_crypto_959 - 959 )
Partition 960 (got_video_crypto_960 - 960 )
Partition 961 (D.45219_961 - 961 )
Partition 962 (prephitmp.1031_962 - 962 )
Partition 964 (D.44471_964 - 964 )
Partition 965 (D.44821_965 - 965 )
Partition 966 (D.44822_966 - 966 )
Partition 967 (D.44530_967 - 967 )
Partition 968 (D.45227_968 - 968 )
Partition 969 (got_crypto_969 - 969 )
Partition 970 (D.44666_970 - 970 )
Partition 971 (D.44829_971 - 971 )
Partition 972 (D.44830_972 - 972 )
Partition 973 (D.44831_973 - 973 )
Partition 977 (got_video_crypto_977 - 977 )
Partition 978 (attr_978 - 978 )
Partition 979 (rm_encoding_979 - 979 )
Partition 985 (imp_985 - 985 )
Partition 986 (D.45238_986 - 986 )
Partition 987 (D.44530_987 - 987 )
Partition 988 (D.45241_988 - 988 )
Partition 989 (D.44530_989 - 989 )
Partition 990 (D.45244_990 - 990 )
Partition 991 (D.45247_991 - 991 )
Partition 992 (D.45248_992 - 992 )
Partition 993 (D.45249_993 - 993 )
Partition 994 (D.45250_994 - 994 )
Partition 995 (D.45251_995 - 995 )
Partition 996 (D.45255_996 - 996 )
Partition 998 (D.44471_998 - 998 )
Partition 999 (D.44821_999 - 999 )
Partition 1000 (D.44936_1000 - 1000 )
Partition 1001 (D.44937_1001 - 1001 )
Partition 1003 (D.45247_1003 - 1003 )
Partition 1004 (D.45248_1004 - 1004 )
Partition 1005 (dmaxptime_1005 - 1005 )
Partition 1006 (sendonly_1006 - 1006 )
Partition 1007 (D.45250_1007 - 1007 )
Partition 1008 (D.45251_1008 - 1008 )
Partition 1009 (vmatch_1009 - 1009 )
Partition 1010 (D.45249_1010 - 1010 )
Partition 1011 (D.45259_1011 - 1011 )
Partition 1012 (vmatch_1012 - 1012 )
Partition 1013 (D.45262_1013 - 1013 )
Partition 1014 (D.45263_1014 - 1014 )
Partition 1015 (D.45249_1015 - 1015 )
Partition 1016 (D.45250_1016 - 1016 )
Partition 1017 (D.45251_1017 - 1017 )
Partition 1018 (m_idx_1018 - 1018 )
Partition 1020 (i_1020 - 1020 )
Partition 1021 (map_1021 - 1021 )
Partition 1022 (D.45001_1022 - 1022 )
Partition 1023 (D.45002_1023 - 1023 )
Partition 1024 (D.45266_1024 - 1024 )
Partition 1025 (D.45267_1025 - 1025 )
Partition 1031 (D.45274_1031 - 1031 )
Partition 1032 (D.45275_1032 - 1032 )
Partition 1033 (ptime_1033 - 1033 )
Partition 1034 (D.45276_1034 - 1034 )
Partition 1035 (dptime_1035 - 1035 )
Partition 1036 (D.45277_1036 - 1036 )
Partition 1037 (D.45278_1037 - 1037 )
Partition 1038 (D.45279_1038 - 1038 )
Partition 1039 (D.45280_1039 - 1039 )
Partition 1040 (maxptime_1040 - 1040 )
Partition 1041 (D.45281_1041 - 1041 )
Partition 1042 (D.45282_1042 - 1042 )
Partition 1043 (D.45283_1043 - 1043 )
Partition 1044 (pmap_1044 - 1044 )
Partition 1045 (ivtmp.1076_1045 - 1045 )
Partition 1046 (D.45287_1046 - 1046 )
Partition 1047 (cng_pt_1047 - 1047 )
Partition 1048 (D.45290_1048 - 1048 )
Partition 1049 (mimp_1049 - 1049 )
Partition 1050 (map_1050 - 1050 )
Partition 1051 (D.45255_1051 - 1051 )
Partition 1052 (D.45291_1052 - 1052 )
Partition 1053 (D.45247_1053 - 1053 )
Partition 1054 (D.45292_1054 - 1054 )
Partition 1055 (D.45262_1055 - 1055 )
Partition 1056 (D.45293_1056 - 1056 )
Partition 1057 (D.45294_1057 - 1057 )
Partition 1058 (D.45295_1058 - 1058 )
Partition 1059 (D.45085_1059 - 1059 )
Partition 1060 (D.45296_1060 - 1060 )
Partition 1061 (D.44697_1061 - 1061 )
Partition 1062 (D.45087_1062 - 1062 )
Partition 1063 (D.45297_1063 - 1063 )
Partition 1064 (D.45298_1064 - 1064 )
Partition 1065 (D.45247_1065 - 1065 )
Partition 1066 (D.45292_1066 - 1066 )
Partition 1067 (j_1067 - 1067 )
Partition 1068 (D.45286_1068 - 1068 )
Partition 1069 (D.45299_1069 - 1069 )
Partition 1070 (D.45300_1070 - 1070 )
Partition 1071 (D.44530_1071 - 1071 )
Partition 1072 (D.45286_1072 - 1072 )
Partition 1073 (D.45301_1073 - 1073 )
Partition 1074 (D.44530_1074 - 1074 )
Partition 1075 (D.44530_1075 - 1075 )
Partition 1076 (D.45286_1076 - 1076 )
Partition 1077 (D.45302_1077 - 1077 )
Partition 1078 (D.45286_1078 - 1078 )
Partition 1079 (D.45303_1079 - 1079 )
Partition 1080 (D.45304_1080 - 1080 )
Partition 1081 (D.44530_1081 - 1081 )
Partition 1082 (D.45286_1082 - 1082 )
Partition 1083 (D.45305_1083 - 1083 )
Partition 1084 (D.45306_1084 - 1084 )
Partition 1085 (D.44530_1085 - 1085 )
Partition 1092 (D.45316_1092 - 1092 )
Partition 1093 (m_1093 - 1093 )
Partition 1094 (D.44471_1094 - 1094 )
Partition 1103 (pretmp.974_1103 - 1103 )
Partition 1118 (got_crypto_1118 - 1118 )
Partition 1125 (pretmp.950_1125 - 1125 )
Partition 1126 (pretmp.879_1126 - 1126 )
Partition 1127 (pretmp.880_1127 - 1127 )
Partition 1130 (pretmp.956_1130 - 1130 )
Partition 1133 (pretmp.932_1133 - 1133 )
Partition 1134 (pretmp.957_1134 - 1134 )
Partition 1136 (pretmp.924_1136 - 1136 )
Partition 1139 (nm_idx_1139 - 1139 )
Partition 1140 (pretmp.887_1140 - 1140 )
Partition 1147 (pretmp.923_1147 - 1147 )
Partition 1152 (D.44999_1152 - 1152 )
Partition 1157 (pretmp.911_1157 - 1157 )
Partition 1161 (pretmp.904_1161 - 1161 )
Partition 1162 (attr_1162 - 1162 )
Partition 1163 (pretmp.939_1163 - 1163 )
Partition 1166 (pretmp.940_1166 - 1166 )
Partition 1169 (pretmp.879_1169 - 1169 )
Partition 1172 (.MEM_1172(D) - 1172 )
Partition 1173 (.MEM_1173 - 1173 )
Partition 1174 (.MEM_1174 - 1174 )
Partition 1175 (.MEM_1175 - 1175 )
Partition 1176 (.MEM_1176 - 1176 )
Partition 1177 (.MEM_1177 - 1177 )
Partition 1178 (.MEM_1178 - 1178 )
Partition 1179 (.MEM_1179 - 1179 )
Partition 1180 (.MEM_1180 - 1180 )
Partition 1181 (.MEM_1181 - 1181 )
Partition 1182 (.MEM_1182 - 1182 )
Partition 1183 (.MEM_1183 - 1183 )
Partition 1184 (.MEM_1184 - 1184 )
Partition 1185 (.MEM_1185 - 1185 )
Partition 1186 (.MEM_1186 - 1186 )
Partition 1187 (.MEM_1187 - 1187 )
Partition 1188 (.MEM_1188 - 1188 )
Partition 1189 (.MEM_1189 - 1189 )
Partition 1190 (.MEM_1190 - 1190 )
Partition 1191 (.MEM_1191 - 1191 )
Partition 1192 (.MEM_1192 - 1192 )
Partition 1193 (.MEM_1193 - 1193 )
Partition 1194 (.MEM_1194 - 1194 )
Partition 1195 (.MEM_1195 - 1195 )
Partition 1196 (.MEM_1196 - 1196 )
Partition 1197 (.MEM_1197 - 1197 )
Partition 1198 (.MEM_1198 - 1198 )
Partition 1199 (.MEM_1199 - 1199 )
Partition 1200 (.MEM_1200 - 1200 )
Partition 1201 (.MEM_1201 - 1201 )
Partition 1202 (.MEM_1202 - 1202 )
Partition 1203 (.MEM_1203 - 1203 )
Partition 1204 (.MEM_1204 - 1204 )
Partition 1205 (.MEM_1205 - 1205 )
Partition 1206 (.MEM_1206 - 1206 )
Partition 1207 (.MEM_1207 - 1207 )
Partition 1208 (.MEM_1208 - 1208 )
Partition 1209 (.MEM_1209 - 1209 )
Partition 1210 (.MEM_1210 - 1210 )
Partition 1211 (.MEM_1211 - 1211 )
Partition 1212 (.MEM_1212 - 1212 )
Partition 1213 (.MEM_1213 - 1213 )
Partition 1214 (.MEM_1214 - 1214 )
Partition 1215 (.MEM_1215 - 1215 )
Partition 1216 (.MEM_1216 - 1216 )
Partition 1217 (.MEM_1217 - 1217 )
Partition 1218 (.MEM_1218 - 1218 )
Partition 1219 (.MEM_1219 - 1219 )
Partition 1220 (.MEM_1220 - 1220 )
Partition 1221 (.MEM_1221 - 1221 )
Partition 1222 (.MEM_1222 - 1222 )
Partition 1223 (.MEM_1223 - 1223 )
Partition 1224 (.MEM_1224 - 1224 )
Partition 1225 (.MEM_1225 - 1225 )
Partition 1226 (.MEM_1226 - 1226 )
Partition 1227 (.MEM_1227 - 1227 )
Partition 1228 (.MEM_1228 - 1228 )
Partition 1229 (.MEM_1229 - 1229 )
Partition 1230 (.MEM_1230 - 1230 )
Partition 1231 (.MEM_1231 - 1231 )
Partition 1232 (.MEM_1232 - 1232 )
Partition 1233 (.MEM_1233 - 1233 )
Partition 1234 (.MEM_1234 - 1234 )
Partition 1235 (.MEM_1235 - 1235 )
Partition 1236 (.MEM_1236 - 1236 )
Partition 1237 (.MEM_1237 - 1237 )
Partition 1238 (.MEM_1238 - 1238 )
Partition 1239 (.MEM_1239 - 1239 )
Partition 1240 (.MEM_1240 - 1240 )
Partition 1241 (.MEM_1241 - 1241 )
Partition 1242 (.MEM_1242 - 1242 )
Partition 1243 (.MEM_1243 - 1243 )
Partition 1244 (.MEM_1244 - 1244 )
Partition 1245 (.MEM_1245 - 1245 )
Partition 1246 (.MEM_1246 - 1246 )
Partition 1247 (.MEM_1247 - 1247 )
Partition 1248 (.MEM_1248 - 1248 )
Partition 1249 (.MEM_1249 - 1249 )
Partition 1250 (.MEM_1250 - 1250 )
Partition 1251 (.MEM_1251 - 1251 )
Partition 1252 (.MEM_1252 - 1252 )
Partition 1253 (.MEM_1253 - 1253 )
Partition 1254 (.MEM_1254 - 1254 )
Partition 1255 (.MEM_1255 - 1255 )
Partition 1256 (.MEM_1256 - 1256 )
Partition 1257 (.MEM_1257 - 1257 )
Partition 1258 (.MEM_1258 - 1258 )
Partition 1259 (.MEM_1259 - 1259 )
Partition 1260 (.MEM_1260 - 1260 )
Partition 1261 (.MEM_1261 - 1261 )
Partition 1262 (.MEM_1262 - 1262 )
Partition 1263 (.MEM_1263 - 1263 )
Partition 1264 (.MEM_1264 - 1264 )
Partition 1265 (.MEM_1265 - 1265 )
Partition 1266 (.MEM_1266 - 1266 )
Partition 1267 (.MEM_1267 - 1267 )
Partition 1268 (.MEM_1268 - 1268 )
Partition 1269 (.MEM_1269 - 1269 )
Partition 1270 (.MEM_1270 - 1270 )
Partition 1271 (.MEM_1271 - 1271 )
Partition 1272 (.MEM_1272 - 1272 )
Partition 1273 (.MEM_1273 - 1273 )
Partition 1274 (.MEM_1274 - 1274 )
Partition 1275 (.MEM_1275 - 1275 )
Partition 1276 (.MEM_1276 - 1276 )
Partition 1277 (.MEM_1277 - 1277 )
Partition 1278 (.MEM_1278 - 1278 )
Partition 1279 (.MEM_1279 - 1279 )
Partition 1280 (.MEM_1280 - 1280 )
Partition 1281 (.MEM_1281 - 1281 )
Partition 1282 (.MEM_1282 - 1282 )
Partition 1283 (.MEM_1283 - 1283 )
Partition 1284 (.MEM_1284 - 1284 )
Partition 1285 (.MEM_1285 - 1285 )
Partition 1286 (.MEM_1286 - 1286 )
Partition 1287 (.MEM_1287 - 1287 )
Partition 1288 (.MEM_1288 - 1288 )
Partition 1289 (.MEM_1289 - 1289 )
Partition 1290 (.MEM_1290 - 1290 )
Partition 1291 (.MEM_1291 - 1291 )
Partition 1292 (.MEM_1292 - 1292 )
Partition 1293 (.MEM_1293 - 1293 )
Partition 1294 (.MEM_1294 - 1294 )
Partition 1295 (.MEM_1295 - 1295 )
Partition 1296 (.MEM_1296 - 1296 )
Partition 1297 (.MEM_1297 - 1297 )
Partition 1298 (.MEM_1298 - 1298 )
Partition 1299 (.MEM_1299 - 1299 )
Partition 1300 (.MEM_1300 - 1300 )
Partition 1301 (.MEM_1301 - 1301 )
Partition 1302 (.MEM_1302 - 1302 )
Partition 1303 (.MEM_1303 - 1303 )
Partition 1304 (.MEM_1304 - 1304 )
Partition 1305 (.MEM_1305 - 1305 )
Partition 1306 (.MEM_1306 - 1306 )
Partition 1307 (.MEM_1307 - 1307 )
Partition 1308 (.MEM_1308 - 1308 )
Partition 1309 (.MEM_1309 - 1309 )
Partition 1310 (.MEM_1310 - 1310 )
Partition 1311 (.MEM_1311 - 1311 )
Partition 1312 (.MEM_1312 - 1312 )
Partition 1313 (.MEM_1313 - 1313 )
Partition 1314 (.MEM_1314 - 1314 )
Partition 1315 (.MEM_1315 - 1315 )
Partition 1316 (.MEM_1316 - 1316 )
Partition 1317 (.MEM_1317 - 1317 )
Partition 1318 (.MEM_1318 - 1318 )
Partition 1319 (.MEM_1319 - 1319 )
Partition 1320 (.MEM_1320 - 1320 )
Partition 1321 (.MEM_1321 - 1321 )
Partition 1322 (.MEM_1322 - 1322 )
Partition 1323 (.MEM_1323 - 1323 )
Partition 1324 (.MEM_1324 - 1324 )
Partition 1325 (.MEM_1325 - 1325 )
Partition 1326 (.MEM_1326 - 1326 )
Partition 1327 (.MEM_1327 - 1327 )
Partition 1328 (.MEM_1328 - 1328 )
Partition 1329 (.MEM_1329 - 1329 )
Partition 1330 (.MEM_1330 - 1330 )
Partition 1331 (.MEM_1331 - 1331 )
Partition 1332 (.MEM_1332 - 1332 )
Partition 1333 (.MEM_1333 - 1333 )
Partition 1334 (.MEM_1334 - 1334 )
Partition 1335 (.MEM_1335 - 1335 )
Partition 1336 (.MEM_1336 - 1336 )
Partition 1337 (.MEM_1337 - 1337 )
Partition 1338 (.MEM_1338 - 1338 )
Partition 1339 (.MEM_1339 - 1339 )
Partition 1340 (.MEM_1340 - 1340 )
Partition 1341 (.MEM_1341 - 1341 )
Partition 1342 (.MEM_1342 - 1342 )
Partition 1343 (.MEM_1343 - 1343 )
Partition 1344 (.MEM_1344 - 1344 )
Partition 1345 (.MEM_1345 - 1345 )
Partition 1346 (.MEM_1346 - 1346 )
Partition 1347 (.MEM_1347 - 1347 )
Partition 1348 (.MEM_1348 - 1348 )
Partition 1349 (.MEM_1349 - 1349 )
Partition 1350 (.MEM_1350 - 1350 )
Partition 1351 (.MEM_1351 - 1351 )
Partition 1352 (.MEM_1352 - 1352 )
Partition 1353 (.MEM_1353 - 1353 )
Partition 1354 (.MEM_1354 - 1354 )
Partition 1355 (.MEM_1355 - 1355 )
Partition 1356 (.MEM_1356 - 1356 )
Partition 1357 (.MEM_1357 - 1357 )
Partition 1358 (.MEM_1358 - 1358 )
Partition 1359 (.MEM_1359 - 1359 )
Partition 1360 (.MEM_1360 - 1360 )
Partition 1361 (.MEM_1361 - 1361 )
Partition 1362 (.MEM_1362 - 1362 )
Partition 1363 (.MEM_1363 - 1363 )
Partition 1364 (.MEM_1364 - 1364 )
Partition 1365 (.MEM_1365 - 1365 )
Partition 1366 (.MEM_1366 - 1366 )
Partition 1367 (.MEM_1367 - 1367 )
Partition 1368 (.MEM_1368 - 1368 )
Partition 1369 (.MEM_1369 - 1369 )
Partition 1370 (.MEM_1370 - 1370 )
Partition 1371 (.MEM_1371 - 1371 )
Partition 1372 (.MEM_1372 - 1372 )
Partition 1373 (.MEM_1373 - 1373 )
Partition 1374 (.MEM_1374 - 1374 )
Partition 1375 (.MEM_1375 - 1375 )
Partition 1376 (.MEM_1376 - 1376 )
Partition 1377 (.MEM_1377 - 1377 )
Partition 1378 (.MEM_1378 - 1378 )
Partition 1379 (.MEM_1379 - 1379 )
Partition 1380 (.MEM_1380 - 1380 )
Partition 1381 (.MEM_1381 - 1381 )
Partition 1382 (.MEM_1382 - 1382 )
Partition 1383 (.MEM_1383 - 1383 )
Partition 1384 (.MEM_1384 - 1384 )
Partition 1385 (.MEM_1385 - 1385 )
Partition 1386 (.MEM_1386 - 1386 )
Partition 1387 (.MEM_1387 - 1387 )
Partition 1388 (.MEM_1388 - 1388 )
Partition 1389 (.MEM_1389 - 1389 )
Partition 1390 (.MEM_1390 - 1390 )
Partition 1391 (.MEM_1391 - 1391 )
Partition 1392 (.MEM_1392 - 1392 )
Partition 1393 (.MEM_1393 - 1393 )
Partition 1394 (.MEM_1394 - 1394 )
Partition 1395 (.MEM_1395 - 1395 )
Partition 1396 (.MEM_1396 - 1396 )
Partition 1397 (.MEM_1397 - 1397 )
Partition 1398 (.MEM_1398 - 1398 )
Partition 1399 (.MEM_1399 - 1399 )
Partition 1400 (.MEM_1400 - 1400 )
Partition 1401 (.MEM_1401 - 1401 )
Partition 1402 (.MEM_1402 - 1402 )
Partition 1403 (.MEM_1403 - 1403 )
Partition 1404 (.MEM_1404 - 1404 )
Partition 1405 (.MEM_1405 - 1405 )
Partition 1406 (.MEM_1406 - 1406 )
Partition 1407 (.MEM_1407 - 1407 )
Partition 1408 (.MEM_1408 - 1408 )
Partition 1409 (.MEM_1409 - 1409 )
Partition 1410 (.MEM_1410 - 1410 )
Partition 1411 (.MEM_1411 - 1411 )
Partition 1412 (.MEM_1412 - 1412 )
Partition 1413 (.MEM_1413 - 1413 )
Partition 1414 (.MEM_1414 - 1414 )
Partition 1415 (.MEM_1415 - 1415 )
Partition 1416 (.MEM_1416 - 1416 )
Partition 1417 (.MEM_1417 - 1417 )
Partition 1418 (.MEM_1418 - 1418 )
Partition 1419 (.MEM_1419 - 1419 )
Partition 1420 (.MEM_1420 - 1420 )
Partition 1421 (.MEM_1421 - 1421 )
Partition 1422 (.MEM_1422 - 1422 )
Partition 1423 (.MEM_1423 - 1423 )
Partition 1424 (.MEM_1424 - 1424 )
Partition 1425 (.MEM_1425 - 1425 )
Partition 1426 (.MEM_1426 - 1426 )
Partition 1427 (.MEM_1427 - 1427 )
Partition 1428 (.MEM_1428 - 1428 )
Partition 1429 (.MEM_1429 - 1429 )
Partition 1430 (.MEM_1430 - 1430 )
Partition 1431 (.MEM_1431 - 1431 )
Partition 1432 (.MEM_1432 - 1432 )
Partition 1433 (.MEM_1433 - 1433 )
Partition 1434 (.MEM_1434 - 1434 )
Partition 1435 (.MEM_1435 - 1435 )
Partition 1436 (.MEM_1436 - 1436 )
Partition 1437 (.MEM_1437 - 1437 )
Partition 1438 (.MEM_1438 - 1438 )
Partition 1439 (.MEM_1439 - 1439 )
Partition 1440 (.MEM_1440 - 1440 )
Partition 1441 (.MEM_1441 - 1441 )
Partition 1442 (.MEM_1442 - 1442 )
Partition 1443 (.MEM_1443 - 1443 )
Partition 1444 (.MEM_1444 - 1444 )
Partition 1445 (.MEM_1445 - 1445 )
Partition 1446 (.MEM_1446 - 1446 )
Partition 1447 (.MEM_1447 - 1447 )
Partition 1448 (.MEM_1448 - 1448 )
Partition 1449 (.MEM_1449 - 1449 )
Partition 1450 (.MEM_1450 - 1450 )
Partition 1451 (.MEM_1451 - 1451 )
Partition 1452 (.MEM_1452 - 1452 )
Partition 1453 (.MEM_1453 - 1453 )
Partition 1454 (.MEM_1454 - 1454 )
Partition 1455 (.MEM_1455 - 1455 )
Partition 1456 (.MEM_1456 - 1456 )
Partition 1457 (pmap_1457 - 1457 )
Partition 1458 (pretmp.991_1458 - 1458 )
Partition 1459 (pmap_1459 - 1459 )
Partition 1460 (D.47871_1460 - 1460 )
Partition 1461 (pmap_1461 - 1461 )
Partition 1462 (pretmp.987_1462 - 1462 )
Partition 1463 (pmap_1463 - 1463 )
Partition 1464 (D.47874_1464 - 1464 )
Partition 1465 (D.47877_1465 - 1465 )
Partition 1466 (pretmp.960_1466 - 1466 )
Partition 1467 (dptime_1467 - 1467 )
Partition 1468 (dmaxptime_1468 - 1468 )
Partition 1469 (D.47887_1469 - 1469 )
Partition 1470 (maxptime_1470 - 1470 )
Partition 1471 (D.47890_1471 - 1471 )
Partition 1472 (ptime_1472 - 1472 )
Partition 1473 (maxptime_1473 - 1473 )
Partition 1474 (D.47900_1474 - 1474 )
Partition 1475 (ptime_1475 - 1475 )
Partition 1476 (crypto_tag_1476 - 1476 )
Partition 1479 (map_bit_rate_1479 - 1479 )
Partition 1480 (map_bit_rate_1480 - 1480 )
Partition 1481 (D.47915_1481 - 1481 )
Partition 1482 (pretmp.954_1482 - 1482 )
Partition 1483 (D.47919_1483 - 1483 )
Partition 1484 (pretmp.955_1484 - 1484 )
Partition 1485 (D.47922_1485 - 1485 )
Partition 1486 (D.47926_1486 - 1486 )
Partition 1487 (m_idx_1487 - 1487 )
Partition 1488 (D.47934_1488 - 1488 )
Partition 1489 (D.47933_1489 - 1489 )
Partition 1490 (D.47932_1490 - 1490 )
Partition 1491 (D.47931_1491 - 1491 )
Partition 1492 (D.47930_1492 - 1492 )
Partition 1493 (remote_codec_rate_1493 - 1493 )
Partition 1495 (D.47939_1495 - 1495 )
Partition 1496 (D.44997_1496 - 1496 )
Partition 1497 (D.47943_1497 - 1497 )
Partition 1498 (D.44996_1498 - 1498 )
Partition 1499 (D.47946_1499 - 1499 )
Partition 1500 (D.47950_1500 - 1500 )
Partition 1501 (D.44471_1501 - 1501 )
Partition 1502 (crypto_tag_1502 - 1502 )
Partition 1503 (D.47957_1503 - 1503 )
Partition 1504 (pretmp.938_1504 - 1504 )
Partition 1505 (D.47965_1505 - 1505 )
Partition 1506 (D.47964_1506 - 1506 )
Partition 1507 (D.47963_1507 - 1507 )
Partition 1508 (D.47962_1508 - 1508 )
Partition 1509 (D.47961_1509 - 1509 )
Partition 1510 (pretmp.941_1510 - 1510 )
Partition 1512 (pretmp.990_1512 - 1512 )
Partition 1513 (pretmp.986_1513 - 1513 )
Partition 1515 (.MEM_1515 - 1515 )
Partition 1516 (.MEM_1516 - 1516 )
Partition 1517 (.MEM_1517 - 1517 )
Partition 1518 (.MEM_1518 - 1518 )
Partition 1520 (.MEM_1520 - 1520 )
Partition 1522 (.MEM_1522 - 1522 )
Partition 1525 (.MEM_1525 - 1525 )
Partition 1527 (.MEM_1527 - 1527 )
Partition 1529 (.MEM_1529 - 1529 )
Partition 1532 (.MEM_1532 - 1532 )
Partition 1537 (.MEM_1537 - 1537 )
Partition 1543 (.MEM_1543 - 1543 )
Partition 1546 (.MEM_1546 - 1546 )
Partition 1550 (D.49675_1550 - 1550 )
Partition 1551 (D.49676_1551 - 1551 )
Partition 1552 (D.49677_1552 - 1552 )
Partition 1553 (D.49678_1553 - 1553 )
Partition 1554 (D.49679_1554 - 1554 )
Partition 1555 (D.49680_1555 - 1555 )
Partition 1556 (D.49681_1556 - 1556 )
Partition 1557 (D.49682_1557 - 1557 )
Partition 1558 (D.49683_1558 - 1558 )
Partition 1559 (attr_1559 - 1559 )
Partition 1560 (D.49687_1560 - 1560 )
Partition 1561 (D.49688_1561 - 1561 )
Partition 1562 (D.49689_1562 - 1562 )
Partition 1563 (D.49690_1563 - 1563 )
Partition 1564 (D.49691_1564 - 1564 )
Partition 1565 (D.49692_1565 - 1565 )
Partition 1566 (D.49693_1566 - 1566 )
Partition 1567 (D.49694_1567 - 1567 )
Partition 1568 (D.49695_1568 - 1568 )
Partition 1569 (pretmp.960_1569 - 1569 )
Partition 1570 (D.49699_1570 - 1570 )
Partition 1571 (D.49700_1571 - 1571 )
Partition 1572 (D.49701_1572 - 1572 )
Partition 1573 (D.49702_1573 - 1573 )
Partition 1574 (D.49703_1574 - 1574 )
Partition 1575 (D.49704_1575 - 1575 )
Partition 1576 (D.49705_1576 - 1576 )
Partition 1577 (D.49706_1577 - 1577 )
Partition 1578 (D.49707_1578 - 1578 )
Partition 1580 (D.49711_1580 - 1580 )
Partition 1581 (D.49712_1581 - 1581 )
Partition 1582 (D.49713_1582 - 1582 )
Partition 1583 (D.49714_1583 - 1583 )
Partition 1584 (D.49715_1584 - 1584 )
Partition 1585 (D.49716_1585 - 1585 )
Partition 1586 (D.49717_1586 - 1586 )
Partition 1587 (D.49718_1587 - 1587 )
Partition 1588 (D.49719_1588 - 1588 )
Partition 1589 (reneg_1589 - 1589 )
Partition 1590 (D.49723_1590 - 1590 )
Partition 1591 (D.49724_1591 - 1591 )
Partition 1592 (D.49725_1592 - 1592 )
Partition 1593 (D.49726_1593 - 1593 )
Partition 1594 (D.49727_1594 - 1594 )
Partition 1595 (D.49728_1595 - 1595 )
Partition 1596 (D.49729_1596 - 1596 )
Partition 1597 (D.49730_1597 - 1597 )
Partition 1598 (D.49731_1598 - 1598 )
Partition 1599 (attr_1599 - 1599 )
Partition 1600 (D.49735_1600 - 1600 )
Partition 1601 (D.49736_1601 - 1601 )
Partition 1602 (D.49737_1602 - 1602 )
Partition 1603 (D.49738_1603 - 1603 )
Partition 1604 (D.49739_1604 - 1604 )
Partition 1605 (D.49740_1605 - 1605 )
Partition 1606 (D.49741_1606 - 1606 )
Partition 1607 (D.49742_1607 - 1607 )
Partition 1608 (D.49743_1608 - 1608 )
Partition 1609 (D.44998_1609 - 1609 )
Partition 1610 (D.49747_1610 - 1610 )
Partition 1611 (D.49748_1611 - 1611 )
Partition 1612 (D.49749_1612 - 1612 )
Partition 1613 (D.49750_1613 - 1613 )
Partition 1614 (D.49751_1614 - 1614 )
Partition 1615 (D.49752_1615 - 1615 )
Partition 1616 (D.49753_1616 - 1616 )
Partition 1617 (D.49754_1617 - 1617 )
Partition 1618 (D.49755_1618 - 1618 )
Partition 1619 (pretmp.937_1619 - 1619 )
Partition 1620 (map_1620 - 1620 )
Partition 1622 (i_1622 - 1622 )
Partition 1624 (best_te_1624 - 1624 )
Partition 1626 (cng_pt_1626 - 1626 )
Partition 1628 (pretmp.877_1628 - 1628 )
Partition 1630 (pretmp.898_1630 - 1630 )
Partition 1632 (pretmp.905_1632 - 1632 )
Partition 1634 (.MEM_1634 - 1634 )
Partition 1635 (.MEM_1635 - 1635 )
Partition 1636 (pretmp.999_1636 - 1636 )
Partition 1637 (.MEM_1637 - 1637 )
Partition 1638 (.MEM_1638 - 1638 )
Partition 1639 (prephitmp.1031_1639 - 1639 )
Partition 1640 (.MEM_1640 - 1640 )
Partition 1641 (.MEM_1641 - 1641 )
Partition 1642 (pretmp.968_1642 - 1642 )
Partition 1643 (.MEM_1643 - 1643 )
Partition 1644 (.MEM_1644 - 1644 )
Partition 1646 (.MEM_1646 - 1646 )
Partition 1647 (.MEM_1647 - 1647 )
Partition 1649 (.MEM_1649 - 1649 )
Partition 1650 (.MEM_1650 - 1650 )
Partition 1651 (pretmp.1003_1651 - 1651 )
Partition 1652 (.MEM_1652 - 1652 )
Partition 1653 (.MEM_1653 - 1653 )
Partition 1654 (ivtmp.1067_1654 - 1654 )
Partition 1655 (pretmp.1011_1655 - 1655 )
Partition 1656 (pretmp.1009_1656 - 1656 )
Partition 1657 (pretmp.1004_1657 - 1657 )
Partition 1658 (pretmp.1005_1658 - 1658 )
Partition 1659 (pretmp.1007_1659 - 1659 )
Partition 1660 (pretmp.1006_1660 - 1660 )
Partition 1661 (D.47871_1661 - 1661 )
Partition 1662 (pretmp.992_1662 - 1662 )
Partition 1665 (pretmp.980_1665 - 1665 )
Partition 1666 (attr_1666 - 1666 )
Partition 1667 (cng_pt_1667 - 1667 )
Partition 1668 (pretmp.944_1668 - 1668 )
Partition 1670 (D.47874_1670 - 1670 )
Partition 1671 (dptime_1671 - 1671 )
Partition 1672 (pmap_1672 - 1672 )
Partition 1673 (prephitmp.1049_1673 - 1673 )
Partition 1674 (got_video_crypto_1674 - 1674 )
Partition 1677 (prephitmp.1047_1677 - 1677 )
Partition 1678 (match_1678 - 1678 )
Partition 1679 (prephitmp.1055_1679 - 1679 )
Partition 1680 (prephitmp.1043_1680 - 1680 )
Partition 1682 (prephitmp.1026_1682 - 1682 )
Partition 1683 (prephitmp.1026_1683 - 1683 )
Partition 1686 (pretmp.1019_1686 - 1686 )
Partition 1687 (pretmp.1018_1687 - 1687 )
Partition 1688 (pretmp.988_1688 - 1688 )
Partition 1689 (sendonly_1689 - 1689 )
Partition 1690 (pretmp.985_1690 - 1690 )
Partition 1691 (pretmp.984_1691 - 1691 )
Partition 1692 (pretmp.981_1692 - 1692 )
Partition 1693 (got_audio_1693 - 1693 )
Partition 1694 (pretmp.949_1694 - 1694 )
Partition 1695 (pretmp.947_1695 - 1695 )
Partition 1697 (pretmp.967_1697 - 1697 )
Partition 1698 (pretmp.875_1698 - 1698 )
Partition 1699 (pretmp.943_1699 - 1699 )
Partition 1701 (best_te_1701 - 1701 )
Partition 1702 (cng_pt_1702 - 1702 )
Partition 1710 (pretmp.1054_1710 - 1710 )
Partition 1711 (got_savp_1711 - 1711 )
Partition 1712 (match_1712 - 1712 )
Partition 1713 (pretmp.893_1713 - 1713 )
Partition 1714 (pretmp.961_1714 - 1714 )
Partition 1715 (m_idx_1715 - 1715 )
Partition 1717 (cng_pt_1717 - 1717 )
Partition 1718 (pretmp.883_1718 - 1718 )
Partition 1720 (codec_ms_1720 - 1720 )
Partition 1724 (got_crypto_1724 - 1724 )
Partition 1728 (map_1728 - 1728 )
Partition 1734 (prephitmp.1047_1734 - 1734 )
Partition 1735 (prephitmp.1055_1735 - 1735 )
Partition 1736 (prephitmp.1043_1736 - 1736 )
Partition 1737 (pretmp.992_1737 - 1737 )
Partition 1738 (got_video_crypto_1738 - 1738 )
Partition 1739 (got_savp_1739 - 1739 )
Partition 1740 (got_avp_1740 - 1740 )
Partition 1741 (pretmp.962_1741 - 1741 )
Partition 1742 (pretmp.960_1742 - 1742 )
Partition 1743 (got_udptl_1743 - 1743 )
Partition 1745 (m_idx_1745 - 1745 )
Partition 1746 (pretmp.886_1746 - 1746 )
Partition 1747 (pmap_1747 - 1747 )
Partition 1748 (pretmp.891_1748 - 1748 )
Partition 1749 (nm_idx_1749 - 1749 )
Partition 1751 (pretmp.883_1751 - 1751 )
Partition 1752 (pretmp.880_1752 - 1752 )
Partition 1753 (pretmp.946_1753 - 1753 )
Partition 1755 (nm_idx_1755 - 1755 )
Partition 1764 (m_1764 - 1764 )
Partition 1775 (match_1775 - 1775 )
Partition 1785 (timp_1785 - 1785 )
Partition 1786 (j_1786 - 1786 )
Partition 1787 (near_map_1787 - 1787 )
Partition 1789 (m_1789 - 1789 )
Partition 1791 (attr_1791 - 1791 )
Partition 1793 (ivtmp.1062_1793 - 1793 )
Partition 1800 (match_1800 - 1800 )
Partition 1805 (prephitmp.1049_1805 - 1805 )
Partition 1806 (prephitmp.1047_1806 - 1806 )
Partition 1807 (prephitmp.1055_1807 - 1807 )
Partition 1808 (prephitmp.1049_1808 - 1808 )
Partition 1809 (pretmp.1050_1809 - 1809 )
Partition 1810 (prephitmp.1047_1810 - 1810 )
Partition 1812 (prephitmp.1031_1812 - 1812 )
Partition 1813 (ivtmp.1076_1813 - 1813 )
Partition 1814 (prephitmp.1049_1814 - 1814 )
Partition 1815 (pretmp.1024_1815 - 1815 )
Partition 1816 (pretmp.1023_1816 - 1816 )
Partition 1817 (pretmp.1021_1817 - 1817 )
Partition 1818 (pretmp.1022_1818 - 1818 )
Partition 1819 (pretmp.1017_1819 - 1819 )
Partition 1820 (pretmp.998_1820 - 1820 )
Partition 1821 (pretmp.993_1821 - 1821 )
Partition 1822 (pretmp.996_1822 - 1822 )
Partition 1823 (pretmp.1013_1823 - 1823 )
Partition 1824 (pretmp.1012_1824 - 1824 )
Partition 1825 (pretmp.1001_1825 - 1825 )
Partition 1826 (pretmp.1002_1826 - 1826 )
Partition 1827 (pretmp.994_1827 - 1827 )
Partition 1828 (pretmp.992_1828 - 1828 )
Partition 1829 (pretmp.999_1829 - 1829 )
Partition 1830 (pretmp.999_1830 - 1830 )
Partition 1831 (pretmp.1010_1831 - 1831 )
Partition 1832 (pretmp.1008_1832 - 1832 )
Partition 1833 (pretmp.1015_1833 - 1833 )
Partition 1834 (pretmp.1016_1834 - 1834 )
Partition 1835 (pretmp.1014_1835 - 1835 )
Partition 1840 (pretmp.989_1840 - 1840 )
Partition 1841 (pretmp.982_1841 - 1841 )
Partition 1842 (pretmp.983_1842 - 1842 )
Partition 1844 (j_1844 - 1844 )
Partition 1845 (j_1845 - 1845 )
Partition 1847 (pretmp.884_1847 - 1847 )
Partition 1848 (pass_1848 - 1848 )
Partition 1850 (attr_1850 - 1850 )
Partition 1853 (pretmp.920_1853 - 1853 )
Partition 1855 (pretmp.919_1855 - 1855 )
Partition 1859 (got_avp_1859 - 1859 )
Partition 1860 (best_te_1860 - 1860 )
Partition 1861 (pretmp.964_1861 - 1861 )
Partition 1862 (pretmp.963_1862 - 1862 )
Partition 1863 (pretmp.962_1863 - 1863 )
Partition 1865 (dmaxptime_1865 - 1865 )
Partition 1866 (got_crypto_1866 - 1866 )
Partition 1868 (got_udptl_1868 - 1868 )
Partition 1869 (m_idx_1869 - 1869 )
Partition 1870 (pretmp.971_1870 - 1870 )
Partition 1871 (pretmp.910_1871 - 1871 )
Partition 1874 (pretmp.970_1874 - 1874 )
Partition 1875 (pretmp.945_1875 - 1875 )
Partition 1876 (pretmp.924_1876 - 1876 )
Partition 1877 (pretmp.923_1877 - 1877 )
Partition 1879 (prephitmp.1055_1879 - 1879 )
Partition 1881 (j_1881 - 1881 )
Partition 1883 (codec_ms_1883 - 1883 )
Partition 1885 (got_video_crypto_1885 - 1885 )
Partition 1886 (pretmp.948_1886 - 1886 )
Partition 1888 (pretmp.876_1888 - 1888 )
Partition 1889 (prephitmp.1031_1889 - 1889 )
Partition 1890 (prephitmp.1031_1890 - 1890 )
Partition 1892 (prephitmp.1031_1892 - 1892 )
Partition 1893 (pretmp.942_1893 - 1893 )
Partition 1894 (recvonly_1894 - 1894 )
Partition 1895 (prephitmp.1031_1895 - 1895 )
Partition 1896 (pretmp.1036_1896 - 1896 )
Partition 1898 (best_te_1898 - 1898 )
Partition 1899 (pretmp.966_1899 - 1899 )
Partition 1900 (pretmp.965_1900 - 1900 )
Partition 1901 (match_1901 - 1901 )
Partition 1905 (m_idx_1905 - 1905 )
Partition 2093 (pmap_2093 - 2093 )
Partition 2125 (got_video_crypto_2125 - 2125 )
Partition 2126 (pmap_2126 - 2126 )
Partition 2166 (got_savp_2166 - 2166 )
Partition 2172 (got_udptl_2172 - 2172 )
Partition 2186 (got_avp_2186 - 2186 )


Partition map 

Partition 0 (match_1 - 1 )
Partition 1 (match_2 - 2 )
Partition 2 (match_7 - 7 )
Partition 3 (match_9 - 9 )
Partition 4 (match_13 - 13 )
Partition 5 (match_14 - 14 )
Partition 6 (match_15 - 15 )
Partition 7 (match_17 - 17 )
Partition 8 (best_te_19 - 19 )
Partition 9 (best_te_22 - 22 )
Partition 10 (cng_pt_24 - 24 )
Partition 11 (cng_pt_26 - 26 )
Partition 12 (ptime_34 - 34 )
Partition 13 (dptime_36 - 36 )
Partition 14 (maxptime_38 - 38 )
Partition 15 (dmaxptime_40 - 40 )
Partition 16 (sendonly_42 - 42 )
Partition 17 (sendonly_43 - 43 )
Partition 18 (recvonly_45 - 45 )
Partition 19 (greedy_47 - 47 )
Partition 20 (got_crypto_50 - 50 )
Partition 21 (got_crypto_53 - 53 )
Partition 22 (got_crypto_55 - 55 )
Partition 23 (got_video_crypto_57 - 57 )
Partition 24 (got_video_crypto_60 - 60 )
Partition 25 (ivtmp.1090_62 - 62 )
Partition 26 (got_video_crypto_63 - 63 )
Partition 27 (got_audio_65 - 65 )
Partition 28 (got_audio_66 - 66 )
Partition 29 (got_avp_68 - 68 )
Partition 30 (got_savp_74 - 74 )
Partition 31 (got_webrtc_78 - 78 )
Partition 32 (scrooge_80 - 80 )
Partition 33 (reneg_81 - 81 )
Partition 34 (reneg_82 - 82 )
Partition 35 (codec_array_84 - 84 )
Partition 36 (total_codecs_85 - 85 )
Partition 37 (codec_ms_87 - 87 )
Partition 38 (codec_ms_88 - 88 )
Partition 39 (codec_ms_89 - 89 )
Partition 40 (codec_ms_90 - 90 )
Partition 41 (codec_ms_91 - 91 )
Partition 42 (codec_ms_93 - 93 )
Partition 43 (codec_ms_94 - 94 )
Partition 44 (remote_codec_rate_96 - 96 )
Partition 45 (remote_codec_rate_97 - 97 )
Partition 46 (fmtp_remote_codec_rate_99 - 99 )
Partition 47 (m_idx_100 - 100 )
Partition 48 (m_idx_102 - 102 )
Partition 49 (m_idx_103 - 103 )
Partition 50 (m_idx_105 - 105 )
Partition 51 (m_idx_109 - 109 )
Partition 52 (connection_110 - 110 )
Partition 53 (m_idx_113 - 113 )
Partition 54 (nm_idx_115 - 115 )
Partition 55 (nm_idx_117 - 117 )
Partition 56 (nm_idx_119 - 119 )
Partition 57 (nm_idx_121 - 121 )
Partition 58 (pass_126 - 126 )
Partition 59 (rm_encoding_130 - 130 )
Partition 60 (map_bit_rate_131 - 131 )
Partition 61 (map_bit_rate_132 - 132 )
Partition 62 (timp_134 - 134 )
Partition 63 (ivtmp.1090_136 - 136 )
Partition 64 (rm_encoding_137 - 137 )
Partition 65 (vmatch_138 - 138 )
Partition 66 (connection_139 - 139 )
Partition 67 (got_crypto_141 - 141 )
Partition 68 (match_142 - 142 )
Partition 69 (near_rate_145 - 145 )
Partition 70 (D.47922_146 - 146 )
Partition 71 (session_161(D) - 161 )
Partition 72 (codec_array_190 - 190 )
Partition 73 (total_codecs_192 - 192 )
Partition 74 (r_sdp_193(D) - 193 )
Partition 75 (proceed_209(D) - 209 )
Partition 76 (greedy_211 - 211 )
Partition 77 (scrooge_213 - 213 )
Partition 78 (prephitmp.1053_229 - 229 )
Partition 79 (ivtmp.1067_237 - 237 )
Partition 80 (map_255 - 255 )
Partition 81 (attr_303 - 303 )
Partition 82 (prephitmp.1053_323 - 323 )
Partition 83 (prephitmp.1053_326 - 326 )
Partition 84 (timp_330 - 330 )
Partition 85 (attr_334 - 334 )
Partition 86 (prephitmp.1049_346 - 346 )
Partition 87 (reneg_349 - 349 )
Partition 88 (reneg_352 - 352 )
Partition 89 (reneg_353 - 353 )
Partition 90 (total_codecs_359 - 359 )
Partition 91 (codec_array_360 - 360 )
Partition 92 (got_crypto_361 - 361 )
Partition 93 (total_codecs_365 - 365 )
Partition 94 (m_370 - 370 )
Partition 95 (got_webrtc_374 - 374 )
Partition 96 (prephitmp.1049_383 - 383 )
Partition 97 (got_savp_384 - 384 )
Partition 98 (codec_ms_386 - 386 )
Partition 99 (prephitmp.1049_387 - 387 )
Partition 100 (got_avp_388 - 388 )
Partition 101 (got_udptl_391 - 391 )
Partition 102 (ivtmp.1076_392 - 392 )
Partition 103 (pass_406 - 406 )
Partition 104 (pass_409 - 409 )
Partition 105 (got_webrtc_452 - 452 )
Partition 106 (codec_ms_477 - 477 )
Partition 107 (attr_500 - 500 )
Partition 108 (attr_506 - 506 )
Partition 109 (attr_507 - 507 )
Partition 110 (got_savp_512 - 512 )
Partition 111 (ivtmp.1062_522 - 522 )
Partition 112 (prephitmp.1031_531 - 531 )
Partition 113 (ivtmp.1090_544 - 544 )
Partition 114 (sdp_type_546(D) - 546 )
Partition 115 (got_crypto_547 - 547 )
Partition 116 (attr_548 - 548 )
Partition 117 (connection_554 - 554 )
Partition 118 (connection_555 - 555 )
Partition 119 (got_video_crypto_556 - 556 )
Partition 120 (map_559 - 559 )
Partition 121 (rm_encoding_561 - 561 )
Partition 122 (best_te_568 - 568 )
Partition 123 (cng_pt_573 - 573 )
Partition 124 (codec_ms_589 - 589 )
Partition 125 (remote_codec_rate_596 - 596 )
Partition 126 (attr_604 - 604 )
Partition 127 (map_bit_rate_614 - 614 )
Partition 128 (near_rate.96_616 - 616 )
Partition 129 (codec_ms_617 - 617 )
Partition 130 (fmtp_remote_codec_rate_618 - 618 )
Partition 131 (attr_619 - 619 )
Partition 132 (ivtmp.1083_626 - 626 )
Partition 133 (ivtmp.1083_627 - 627 )
Partition 134 (match_655 - 655 )
Partition 135 (got_avp_671 - 671 )
Partition 136 (best_te_680 - 680 )
Partition 137 (prephitmp.1043_693 - 693 )
Partition 138 (nm_idx_701 - 701 )
Partition 139 (m_idx_703 - 703 )
Partition 140 (i_710 - 710 )
Partition 141 (map_711 - 711 )
Partition 142 (near_rate.96_724 - 724 )
Partition 143 (near_rate_725 - 725 )
Partition 144 (near_map_727 - 727 )
Partition 145 (near_rate_729 - 729 )
Partition 146 (timp_732 - 732 )
Partition 147 (prephitmp.1039_735 - 735 )
Partition 148 (j_736 - 736 )
Partition 149 (got_video_crypto_743 - 743 )
Partition 150 (prephitmp.1055_749 - 749 )
Partition 151 (ivtmp.1067_756 - 756 )
Partition 152 (match_763 - 763 )
Partition 153 (got_udptl_774 - 774 )
Partition 154 (prephitmp.1047_789 - 789 )
Partition 155 (m_idx_792 - 792 )
Partition 156 (j_807 - 807 )
Partition 157 (m_idx_819 - 819 )
Partition 158 (best_te_833 - 833 )
Partition 159 (nm_idx_843 - 843 )
Partition 160 (prephitmp.1039_846 - 846 )
Partition 161 (prephitmp.1039_857 - 857 )
Partition 162 (m_idx_863 - 863 )
Partition 163 (i_864 - 864 )
Partition 164 (recvonly_869 - 869 )
Partition 165 (connection_879 - 879 )
Partition 166 (connection_880 - 880 )
Partition 167 (map_883 - 883 )
Partition 168 (attr_886 - 886 )
Partition 169 (attr_892 - 892 )
Partition 170 (attr_893 - 893 )
Partition 171 (nm_idx_901 - 901 )
Partition 172 (m_idx_906 - 906 )
Partition 173 (m_idx_910 - 910 )
Partition 174 (nm_idx_912 - 912 )
Partition 175 (attr_922 - 922 )
Partition 176 (m_idx_953 - 953 )
Partition 177 (got_video_crypto_959 - 959 )
Partition 178 (got_video_crypto_960 - 960 )
Partition 179 (prephitmp.1031_962 - 962 )
Partition 180 (got_crypto_969 - 969 )
Partition 181 (got_video_crypto_977 - 977 )
Partition 182 (attr_978 - 978 )
Partition 183 (rm_encoding_979 - 979 )
Partition 184 (dmaxptime_1005 - 1005 )
Partition 185 (sendonly_1006 - 1006 )
Partition 186 (vmatch_1009 - 1009 )
Partition 187 (vmatch_1012 - 1012 )
Partition 188 (m_idx_1018 - 1018 )
Partition 189 (i_1020 - 1020 )
Partition 190 (map_1021 - 1021 )
Partition 191 (ptime_1033 - 1033 )
Partition 192 (dptime_1035 - 1035 )
Partition 193 (maxptime_1040 - 1040 )
Partition 194 (ivtmp.1076_1045 - 1045 )
Partition 195 (cng_pt_1047 - 1047 )
Partition 196 (j_1067 - 1067 )
Partition 197 (m_1093 - 1093 )
Partition 198 (got_crypto_1118 - 1118 )
Partition 199 (nm_idx_1139 - 1139 )
Partition 200 (attr_1162 - 1162 )
Partition 201 (pmap_1457 - 1457 )
Partition 202 (pmap_1459 - 1459 )
Partition 203 (pmap_1461 - 1461 )
Partition 204 (pmap_1463 - 1463 )
Partition 205 (dptime_1467 - 1467 )
Partition 206 (dmaxptime_1468 - 1468 )
Partition 207 (maxptime_1470 - 1470 )
Partition 208 (ptime_1472 - 1472 )
Partition 209 (maxptime_1473 - 1473 )
Partition 210 (ptime_1475 - 1475 )
Partition 211 (map_bit_rate_1479 - 1479 )
Partition 212 (map_bit_rate_1480 - 1480 )
Partition 213 (D.47922_1485 - 1485 )
Partition 214 (m_idx_1487 - 1487 )
Partition 215 (remote_codec_rate_1493 - 1493 )
Partition 216 (attr_1559 - 1559 )
Partition 217 (reneg_1589 - 1589 )
Partition 218 (attr_1599 - 1599 )
Partition 219 (map_1620 - 1620 )
Partition 220 (i_1622 - 1622 )
Partition 221 (best_te_1624 - 1624 )
Partition 222 (cng_pt_1626 - 1626 )
Partition 223 (prephitmp.1031_1639 - 1639 )
Partition 224 (ivtmp.1067_1654 - 1654 )
Partition 225 (attr_1666 - 1666 )
Partition 226 (cng_pt_1667 - 1667 )
Partition 227 (dptime_1671 - 1671 )
Partition 228 (pmap_1672 - 1672 )
Partition 229 (prephitmp.1049_1673 - 1673 )
Partition 230 (got_video_crypto_1674 - 1674 )
Partition 231 (prephitmp.1047_1677 - 1677 )
Partition 232 (match_1678 - 1678 )
Partition 233 (prephitmp.1055_1679 - 1679 )
Partition 234 (prephitmp.1043_1680 - 1680 )
Partition 235 (prephitmp.1026_1682 - 1682 )
Partition 236 (prephitmp.1026_1683 - 1683 )
Partition 237 (sendonly_1689 - 1689 )
Partition 238 (got_audio_1693 - 1693 )
Partition 239 (best_te_1701 - 1701 )
Partition 240 (cng_pt_1702 - 1702 )
Partition 241 (got_savp_1711 - 1711 )
Partition 242 (match_1712 - 1712 )
Partition 243 (m_idx_1715 - 1715 )
Partition 244 (cng_pt_1717 - 1717 )
Partition 245 (codec_ms_1720 - 1720 )
Partition 246 (got_crypto_1724 - 1724 )
Partition 247 (map_1728 - 1728 )
Partition 248 (prephitmp.1047_1734 - 1734 )
Partition 249 (prephitmp.1055_1735 - 1735 )
Partition 250 (prephitmp.1043_1736 - 1736 )
Partition 251 (got_video_crypto_1738 - 1738 )
Partition 252 (got_savp_1739 - 1739 )
Partition 253 (got_avp_1740 - 1740 )
Partition 254 (got_udptl_1743 - 1743 )
Partition 255 (m_idx_1745 - 1745 )
Partition 256 (pmap_1747 - 1747 )
Partition 257 (nm_idx_1749 - 1749 )
Partition 258 (nm_idx_1755 - 1755 )
Partition 259 (m_1764 - 1764 )
Partition 260 (match_1775 - 1775 )
Partition 261 (timp_1785 - 1785 )
Partition 262 (j_1786 - 1786 )
Partition 263 (near_map_1787 - 1787 )
Partition 264 (m_1789 - 1789 )
Partition 265 (attr_1791 - 1791 )
Partition 266 (ivtmp.1062_1793 - 1793 )
Partition 267 (match_1800 - 1800 )
Partition 268 (prephitmp.1049_1805 - 1805 )
Partition 269 (prephitmp.1047_1806 - 1806 )
Partition 270 (prephitmp.1055_1807 - 1807 )
Partition 271 (prephitmp.1049_1808 - 1808 )
Partition 272 (prephitmp.1047_1810 - 1810 )
Partition 273 (prephitmp.1031_1812 - 1812 )
Partition 274 (ivtmp.1076_1813 - 1813 )
Partition 275 (prephitmp.1049_1814 - 1814 )
Partition 276 (j_1844 - 1844 )
Partition 277 (j_1845 - 1845 )
Partition 278 (pass_1848 - 1848 )
Partition 279 (attr_1850 - 1850 )
Partition 280 (got_avp_1859 - 1859 )
Partition 281 (best_te_1860 - 1860 )
Partition 282 (dmaxptime_1865 - 1865 )
Partition 283 (got_crypto_1866 - 1866 )
Partition 284 (got_udptl_1868 - 1868 )
Partition 285 (m_idx_1869 - 1869 )
Partition 286 (prephitmp.1055_1879 - 1879 )
Partition 287 (j_1881 - 1881 )
Partition 288 (codec_ms_1883 - 1883 )
Partition 289 (got_video_crypto_1885 - 1885 )
Partition 290 (prephitmp.1031_1889 - 1889 )
Partition 291 (prephitmp.1031_1890 - 1890 )
Partition 292 (prephitmp.1031_1892 - 1892 )
Partition 293 (recvonly_1894 - 1894 )
Partition 294 (prephitmp.1031_1895 - 1895 )
Partition 295 (best_te_1898 - 1898 )
Partition 296 (match_1901 - 1901 )
Partition 297 (m_idx_1905 - 1905 )
Partition 298 (pmap_2093 - 2093 )
Partition 299 (got_video_crypto_2125 - 2125 )
Partition 300 (pmap_2126 - 2126 )
Partition 301 (got_savp_2166 - 2166 )
Partition 302 (got_udptl_2172 - 2172 )
Partition 303 (got_avp_2186 - 2186 )


Live on entry to BB2 : session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB3 : 

Live on entry to BB4 : session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB5 : session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB6 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB7 : 

Live on entry to BB8 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB9 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB10 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB11 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB12 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB13 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB14 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB15 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB16 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB17 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB18 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB19 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB20 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB21 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  pmap_1457  

Live on entry to BB22 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB23 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB24 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  pmap_1459  

Live on entry to BB25 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB26 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  pmap_1461  

Live on entry to BB27 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB28 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB29 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  pmap_1463  

Live on entry to BB30 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB31 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB32 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB33 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  greedy_211  scrooge_213  sdp_type_546(D)  

Live on entry to BB34 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  greedy_211  scrooge_213  sdp_type_546(D)  

Live on entry to BB35 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  greedy_211  scrooge_213  sdp_type_546(D)  

Live on entry to BB36 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  greedy_211  scrooge_213  sdp_type_546(D)  

Live on entry to BB37 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB38 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB39 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  prephitmp.1053_229  sdp_type_546(D)  

Live on entry to BB40 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB41 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB42 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB43 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB44 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB45 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB46 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB47 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB48 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB49 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB50 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB51 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB52 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB53 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB54 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB55 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB56 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB57 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB58 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB59 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB60 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB61 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB62 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB63 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  dmaxptime_1865  recvonly_1894  

Live on entry to BB64 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  dmaxptime_1865  recvonly_1894  

Live on entry to BB65 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  dmaxptime_1865  recvonly_1894  

Live on entry to BB66 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  dmaxptime_1865  recvonly_1894  

Live on entry to BB67 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  dmaxptime_1865  recvonly_1894  

Live on entry to BB68 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  dmaxptime_1865  

Live on entry to BB69 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  dmaxptime_1865  

Live on entry to BB70 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  dmaxptime_1865  

Live on entry to BB71 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  dmaxptime_1865  recvonly_1894  

Live on entry to BB72 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  dmaxptime_1865  recvonly_1894  

Live on entry to BB73 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  dmaxptime_1865  recvonly_1894  

Live on entry to BB74 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  sendonly_1689  dmaxptime_1865  recvonly_1894  

Live on entry to BB75 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  dmaxptime_1865  recvonly_1894  

Live on entry to BB76 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  recvonly_1894  

Live on entry to BB77 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  

Live on entry to BB78 : dptime_36  dmaxptime_40  sendonly_43  greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB79 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB80 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB81 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB82 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB83 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB84 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB85 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB86 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB87 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB88 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB89 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB90 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB91 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB92 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB93 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB94 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB95 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB96 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB97 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB98 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB99 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB100 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB101 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB102 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB103 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB104 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB105 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB106 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB107 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB108 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB109 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB110 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB111 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB112 : greedy_47  scrooge_80  reneg_82  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB113 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB114 : greedy_47  scrooge_80  session_161(D)  r_sdp_193(D)  proceed_209(D)  total_codecs_359  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB115 : greedy_47  scrooge_80  session_161(D)  codec_array_190  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB116 : greedy_47  scrooge_80  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB117 : greedy_47  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB118 : greedy_47  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB119 : greedy_47  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB120 : greedy_47  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB121 : greedy_47  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB122 : greedy_47  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  got_webrtc_452  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB123 : greedy_47  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB124 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB125 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB126 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB127 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB128 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  prephitmp.1049_383  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB129 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB130 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB131 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  prephitmp.1049_387  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB132 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB133 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB134 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  got_savp_512  sdp_type_546(D)  got_avp_671  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB135 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  got_udptl_1868  m_idx_1869  

Live on entry to BB136 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  m_idx_1869  

Live on entry to BB137 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  got_udptl_774  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  got_savp_1711  cng_pt_1717  got_avp_1740  nm_idx_1749  m_1764  match_1800  got_crypto_1866  m_idx_1869  

Live on entry to BB138 : session_161(D)  r_sdp_193(D)  proceed_209(D)  cng_pt_1717  

Live on entry to BB139 : session_161(D)  r_sdp_193(D)  proceed_209(D)  cng_pt_1717  

Live on entry to BB140 : session_161(D)  cng_pt_1717  

Live on entry to BB141 : session_161(D)  r_sdp_193(D)  proceed_209(D)  cng_pt_1717  

Live on entry to BB142 : session_161(D)  r_sdp_193(D)  proceed_209(D)  cng_pt_1717  

Live on entry to BB143 : session_161(D)  r_sdp_193(D)  proceed_209(D)  cng_pt_1717  

Live on entry to BB144 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB145 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB146 : session_161(D)  r_sdp_193(D)  pass_409  cng_pt_1717  

Live on entry to BB147 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB148 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB149 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB150 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB151 : session_161(D)  r_sdp_193(D)  cng_pt_1717  pass_1848  

Live on entry to BB152 : session_161(D)  r_sdp_193(D)  cng_pt_1717  pass_1848  

Live on entry to BB153 : session_161(D)  r_sdp_193(D)  cng_pt_1717  pass_1848  

Live on entry to BB154 : session_161(D)  r_sdp_193(D)  cng_pt_1717  pass_1848  

Live on entry to BB155 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB156 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB157 : session_161(D)  cng_pt_1717  

Live on entry to BB158 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB159 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB160 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB161 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB162 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB163 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB164 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB165 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB166 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB167 : session_161(D)  r_sdp_193(D)  cng_pt_1717  

Live on entry to BB168 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  nm_idx_1749  m_1764  match_1800  got_crypto_1866  m_idx_1869  

Live on entry to BB169 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  got_crypto_1866  m_idx_1869  

Live on entry to BB170 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  got_crypto_1866  m_idx_1869  

Live on entry to BB171 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  got_crypto_1866  m_idx_1869  

Live on entry to BB172 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  got_crypto_1866  m_idx_1869  

Live on entry to BB173 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  attr_500  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB174 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  attr_500  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB175 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  got_crypto_361  codec_ms_477  attr_500  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  attr_1559  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB176 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  got_crypto_361  codec_ms_477  attr_500  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  attr_1559  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB177 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  got_crypto_361  codec_ms_477  attr_500  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  attr_1559  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB178 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  attr_500  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  attr_1559  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB179 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  got_crypto_1866  m_idx_1869  

Live on entry to BB180 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB181 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB182 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB183 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB184 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB185 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB186 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB187 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB188 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB189 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB190 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB191 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB192 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB193 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  prephitmp.1031_531  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_crypto_1118  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB194 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB195 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB196 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB197 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB198 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB199 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB200 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB201 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB202 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB203 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB204 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB205 : session_161(D)  cng_pt_1717  

Live on entry to BB206 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB207 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB208 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB209 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB210 : session_161(D)  cng_pt_1717  

Live on entry to BB211 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB212 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  connection_554  best_te_680  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB213 : session_161(D)  cng_pt_1717  

Live on entry to BB214 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB215 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB216 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB217 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  rm_encoding_561  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  codec_ms_1720  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB218 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  codec_ms_1720  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB219 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  codec_ms_1720  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB220 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  codec_ms_1720  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB221 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  codec_ms_1720  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  match_1901  

Live on entry to BB222 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  codec_ms_1720  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB223 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  codec_ms_1720  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB224 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  codec_ms_1720  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB225 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  got_video_crypto_1674  codec_ms_1720  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB226 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  cng_pt_573  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  got_video_crypto_1674  codec_ms_1720  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB227 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  codec_ms_1720  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB228 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB229 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB230 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB231 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB232 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB233 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB234 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_87  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB235 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_87  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB236 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_87  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  map_bit_rate_1480  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB237 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_87  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  map_bit_rate_1480  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB238 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  map_bit_rate_1480  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB239 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_88  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  map_bit_rate_1480  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB240 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_88  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  map_bit_rate_1480  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB241 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_88  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  map_bit_rate_1480  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB242 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_88  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  map_bit_rate_1480  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB243 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_88  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  map_bit_rate_1480  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB244 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_88  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB245 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_88  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB246 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  map_bit_rate_131  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB247 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  map_bit_rate_131  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB248 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB249 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB250 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB251 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  remote_codec_rate_1493  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB252 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  remote_codec_rate_1493  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB253 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  remote_codec_rate_1493  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB254 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  remote_codec_rate_1493  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB255 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  remote_codec_rate_1493  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB256 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  remote_codec_rate_1493  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB257 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  remote_codec_rate_1493  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB258 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  remote_codec_rate_1493  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB259 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  remote_codec_rate_1493  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB260 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  remote_codec_rate_1493  i_1622  cng_pt_1667  got_video_crypto_1674  prephitmp.1047_1677  match_1678  prephitmp.1055_1679  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB261 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB262 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB263 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB264 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB265 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB266 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB267 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB268 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB269 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB270 : match_2  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB271 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB272 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB273 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB274 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB275 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB276 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB277 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB278 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  remote_codec_rate_96  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB279 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB280 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB281 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB282 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  maxptime_1040  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB283 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB284 : match_9  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  m_idx_105  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  maxptime_1040  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB285 : match_9  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  maxptime_1040  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB286 : match_9  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  maxptime_1040  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB287 : match_9  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  near_rate.96_724  near_map_727  got_crypto_969  dmaxptime_1005  dptime_1035  maxptime_1040  best_te_1624  cng_pt_1626  ivtmp.1067_1654  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  j_1845  got_avp_1859  

Live on entry to BB288 : match_9  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  near_rate.96_724  near_map_727  got_crypto_969  dmaxptime_1005  dptime_1035  maxptime_1040  best_te_1624  cng_pt_1626  ivtmp.1067_1654  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  j_1845  got_avp_1859  

Live on entry to BB289 : match_9  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  near_rate.96_724  near_map_727  got_crypto_969  dmaxptime_1005  dptime_1035  maxptime_1040  best_te_1624  cng_pt_1626  ivtmp.1067_1654  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  j_1845  got_avp_1859  

Live on entry to BB290 : match_9  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  near_rate.96_724  near_map_727  got_crypto_969  dmaxptime_1005  dptime_1035  maxptime_1040  best_te_1624  cng_pt_1626  ivtmp.1067_1654  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  j_1845  got_avp_1859  

Live on entry to BB291 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  timp_134  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  near_rate.96_724  near_map_727  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  j_1845  got_avp_1859  

Live on entry to BB292 : match_9  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  timp_134  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  near_rate.96_724  near_map_727  got_crypto_969  dmaxptime_1005  dptime_1035  maxptime_1040  best_te_1624  cng_pt_1626  ivtmp.1067_1654  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  j_1845  got_avp_1859  

Live on entry to BB293 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB294 : match_9  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  maxptime_1040  best_te_1624  cng_pt_1626  ivtmp.1067_1654  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  j_1845  got_avp_1859  

Live on entry to BB295 : match_9  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  m_idx_105  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB296 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB297 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB298 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB299 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB300 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB301 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB302 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB303 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB304 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB305 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB306 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB307 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  D.47922_146  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB308 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB309 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB310 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB311 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB312 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB313 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB314 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  D.47922_146  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB315 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB316 : match_9  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB317 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB318 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  match_1712  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  m_idx_1905  

Live on entry to BB319 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  match_1712  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  m_idx_1905  

Live on entry to BB320 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  match_1712  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  m_idx_1905  

Live on entry to BB321 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  match_1712  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  m_idx_1905  

Live on entry to BB322 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  match_1712  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  m_idx_1905  

Live on entry to BB323 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  match_1712  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  m_idx_1905  

Live on entry to BB324 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  

Live on entry to BB325 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB326 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB327 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB328 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB329 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  best_te_1860  

Live on entry to BB330 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  best_te_1860  

Live on entry to BB331 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  best_te_1860  

Live on entry to BB332 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  best_te_1860  

Live on entry to BB333 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB334 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB335 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB336 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB337 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB338 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB339 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB340 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB341 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB342 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB343 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB344 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  prephitmp.1049_1814  got_avp_1859  got_crypto_1866  m_idx_1869  

Live on entry to BB345 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  got_crypto_1866  m_idx_1869  

Live on entry to BB346 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB347 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  connection_879  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB348 : session_161(D)  cng_pt_1717  

Live on entry to BB349 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB350 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB351 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  got_video_crypto_556  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB352 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  got_video_crypto_556  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB353 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  attr_886  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB354 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  attr_886  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB355 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  attr_886  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_video_crypto_1738  got_savp_1739  got_udptl_1743  m_1764  match_1800  attr_1850  got_avp_1859  got_crypto_1866  

Live on entry to BB356 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  attr_886  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_video_crypto_1738  got_savp_1739  got_udptl_1743  m_1764  match_1800  attr_1850  got_avp_1859  got_crypto_1866  

Live on entry to BB357 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  attr_886  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_video_crypto_1738  got_savp_1739  got_udptl_1743  m_1764  match_1800  attr_1850  got_avp_1859  got_crypto_1866  

Live on entry to BB358 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  attr_886  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  attr_1850  got_avp_1859  got_crypto_1866  

Live on entry to BB359 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  got_video_crypto_556  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB360 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB361 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB362 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB363 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB364 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB365 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB366 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB367 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB368 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB369 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB370 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB371 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB372 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB373 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB374 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB375 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB376 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  prephitmp.1031_962  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB377 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB378 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB379 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB380 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB381 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB382 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB383 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB384 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB385 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB386 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB387 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB388 : session_161(D)  cng_pt_1717  

Live on entry to BB389 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB390 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB391 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB392 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  got_video_crypto_960  rm_encoding_979  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB393 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB394 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB395 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB396 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  m_idx_910  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB397 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  m_idx_910  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB398 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  m_idx_910  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB399 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  m_idx_910  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB400 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  m_idx_910  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB401 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  m_idx_910  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB402 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  m_idx_910  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB403 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  m_idx_910  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB404 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  m_idx_910  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB405 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  m_idx_910  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB406 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB407 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB408 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB409 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB410 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB411 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB412 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB413 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB414 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB415 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  ivtmp.1083_626  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  j_1844  got_avp_1859  got_crypto_1866  

Live on entry to BB416 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  ivtmp.1083_626  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  j_1844  got_avp_1859  got_crypto_1866  

Live on entry to BB417 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  ivtmp.1083_626  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  j_1844  got_avp_1859  got_crypto_1866  

Live on entry to BB418 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB419 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB420 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  got_crypto_1866  

Live on entry to BB421 : match_14  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  got_crypto_1866  

Live on entry to BB422 : match_14  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  got_crypto_1866  

Live on entry to BB423 : match_14  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  got_crypto_1866  

Live on entry to BB424 : match_14  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  got_crypto_1866  

Live on entry to BB425 : match_14  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  got_crypto_1866  

Live on entry to BB426 : match_14  greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_906  got_video_crypto_959  dmaxptime_1005  dptime_1035  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  got_avp_1859  got_crypto_1866  

Live on entry to BB427 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  m_1764  

Live on entry to BB428 : 

Live on entry to BB429 : 

Live on entry to BB430 : session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB431 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  

Live on entry to BB432 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  attr_1666  dptime_1671  sendonly_1689  dmaxptime_1865  recvonly_1894  

Live on entry to BB433 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  sendonly_1006  dptime_1035  

Live on entry to BB434 : greedy_47  scrooge_80  session_161(D)  codec_array_190  total_codecs_192  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  dmaxptime_1005  dptime_1035  

Live on entry to BB435 : cng_pt_1717  

Live on entry to BB436 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  prephitmp.1031_531  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB437 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB438 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  maxptime_1470  ptime_1475  attr_1599  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB439 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB440 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_88  rm_encoding_130  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  remote_codec_rate_596  m_idx_792  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  map_bit_rate_1480  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  nm_idx_1755  m_1764  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB441 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_90  fmtp_remote_codec_rate_99  rm_encoding_130  map_bit_rate_132  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  ptime_1033  dptime_1035  maxptime_1040  nm_idx_1139  m_idx_1487  remote_codec_rate_1493  i_1622  cng_pt_1667  got_video_crypto_1674  map_1728  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1076_1813  got_avp_1859  best_te_1898  match_1901  

Live on entry to BB442 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  nm_idx_119  connection_139  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  m_idx_1715  got_savp_1739  got_udptl_1743  m_1764  ivtmp.1062_1793  got_avp_1859  j_1881  

Live on entry to BB443 : match_13  greedy_47  got_audio_65  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  codec_ms_93  session_161(D)  r_sdp_193(D)  proceed_209(D)  sdp_type_546(D)  nm_idx_843  got_crypto_969  dmaxptime_1005  dptime_1035  best_te_1624  cng_pt_1626  got_video_crypto_1674  got_savp_1739  got_udptl_1743  m_idx_1745  m_1764  got_avp_1859  

Live on entry to BB444 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  got_video_crypto_1885  

Live on entry to BB445 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  prephitmp.1031_962  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB446 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB447 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  attr_619  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB448 : greedy_47  ivtmp.1090_62  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  rm_encoding_137  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  i_864  m_idx_910  got_video_crypto_960  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Live on entry to BB449 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  dmaxptime_1005  dptime_1035  got_video_crypto_1674  cng_pt_1717  got_savp_1739  got_udptl_1743  nm_idx_1749  m_1764  match_1800  got_avp_1859  m_idx_1869  

Live on entry to BB450 : greedy_47  got_webrtc_78  scrooge_80  codec_array_84  total_codecs_85  connection_110  session_161(D)  r_sdp_193(D)  proceed_209(D)  codec_ms_477  sdp_type_546(D)  best_te_680  m_idx_819  dmaxptime_1005  dptime_1035  map_1620  got_audio_1693  cng_pt_1717  got_savp_1739  got_udptl_1743  m_1764  match_1800  got_avp_1859  got_crypto_1866  

Conflict graph:
0: 296
1: 296
62: 84
73: 90
84: 62
90: 73
107: 108, 126, 216
108: 107
117: 118
118: 117
126: 107
134: 296
152: 296
158: 221
165: 166
166: 165
168: 169, 265, 279
169: 168
216: 107
221: 158
232: 296
265: 168
279: 168
296: 0, 1, 134, 152, 232

After sorting:
Sorted Coalesce list:
(35235) got_video_crypto_60 <-> got_video_crypto_1885
(18234) attr_619 <-> attr_978
(17318) m_idx_109 <-> m_idx_910
(8282) ivtmp.1090_62 <-> ivtmp.1090_136
(8282) i_864 <-> i_1020
(3543) nm_idx_115 <-> nm_idx_1139
(3514) m_idx_100 <-> m_idx_1487
(3198) remote_codec_rate_97 <-> remote_codec_rate_1493
(2118) got_video_crypto_57 <-> got_video_crypto_1738
(2006) got_crypto_53 <-> got_crypto_1118
(1931) maxptime_38 <-> maxptime_1470
(1885) ptime_34 <-> ptime_1475
(1832) ivtmp.1076_392 <-> ivtmp.1076_1813
(1832) i_710 <-> i_1622
(1787) match_7 <-> match_1901
(1762) cng_pt_24 <-> cng_pt_1667
(1697) codec_ms_91 <-> codec_ms_1720
(1697) m_idx_103 <-> m_idx_792
(1697) nm_idx_117 <-> nm_idx_1755
(1607) best_te_19 <-> best_te_1898
(1261) best_te_22 <-> best_te_680
(1261) cng_pt_26 <-> cng_pt_1717
(1261) got_crypto_55 <-> got_crypto_1866
(1261) got_audio_66 <-> got_audio_1693
(1261) codec_ms_94 <-> codec_ms_477
(1250) got_video_crypto_63 <-> got_video_crypto_1674
(1242) match_15 <-> match_1800
(1240) got_webrtc_78 <-> got_webrtc_452
(1226) m_idx_113 <-> m_idx_1869
(1226) nm_idx_121 <-> nm_idx_1749
(1210) attr_892 <-> attr_1850
(1110) attr_548 <-> attr_1599
(984) map_711 <-> map_1728
(942) m_idx_819 <-> m_idx_953
(900) got_video_crypto_556 <-> got_video_crypto_960
(860) got_video_crypto_60 <-> got_video_crypto_960
(860) map_1021 <-> map_1620
(820) m_idx_109 <-> m_idx_953
(770) ivtmp.1062_522 <-> ivtmp.1062_1793
(770) j_807 <-> j_1881
(746) got_video_crypto_556 <-> got_video_crypto_743
(746) attr_893 <-> attr_1162
(654) got_savp_512 <-> got_savp_2166
(654) got_avp_671 <-> got_avp_2186
(654) m_1093 <-> m_1764
(654) got_udptl_1868 <-> got_udptl_2172
(618) ivtmp.1083_626 <-> ivtmp.1083_627
(618) j_1067 <-> j_1844
(537) got_savp_1739 <-> got_savp_2166
(537) got_udptl_1743 <-> got_udptl_2172
(537) got_avp_1859 <-> got_avp_2186
(454) dmaxptime_40 <-> dmaxptime_1865
(452) dptime_36 <-> dptime_1671
(450) got_avp_68 <-> got_avp_671
(448) recvonly_45 <-> recvonly_1894
(440) rm_encoding_130 <-> rm_encoding_561
(433) attr_619 <-> attr_1162
(433) got_video_crypto_743 <-> got_video_crypto_1885
(426) remote_codec_rate_96 <-> remote_codec_rate_97
(420) sendonly_43 <-> sendonly_1689
(415) got_savp_74 <-> got_savp_512
(410) ivtmp.1090_136 <-> ivtmp.1090_544
(410) m_idx_819 <-> m_idx_910
(383) rm_encoding_137 <-> rm_encoding_979
(338) got_avp_68 <-> got_avp_1859
(338) got_savp_74 <-> got_savp_1739
(338) got_udptl_1743 <-> got_udptl_1868
(338) prephitmp.1049_1808 <-> prephitmp.1049_1814
(298) got_video_crypto_60 <-> got_video_crypto_977
(292) vmatch_138 <-> vmatch_1012
(292) prephitmp.1049_383 <-> prephitmp.1049_1808
(280) match_1 <-> match_2
(280) prephitmp.1055_749 <-> prephitmp.1055_1807
(278) D.47922_146 <-> D.47922_1485
(272) got_avp_68 <-> got_avp_1740
(272) got_savp_74 <-> got_savp_1711
(272) got_udptl_774 <-> got_udptl_1868
(272) prephitmp.1049_1805 <-> prephitmp.1049_1808
(268) j_736 <-> j_1845
(268) ivtmp.1067_756 <-> ivtmp.1067_1654
(261) match_1 <-> match_1678
(261) prephitmp.1047_1677 <-> prephitmp.1047_1806
(261) prephitmp.1055_1679 <-> prephitmp.1055_1807
(256) prephitmp.1031_962 <-> prephitmp.1031_1812
(244) got_udptl_774 <-> got_udptl_1743
(244) got_savp_1711 <-> got_savp_1739
(244) got_avp_1740 <-> got_avp_1859
(244) prephitmp.1049_1805 <-> prephitmp.1049_1814
(240) pmap_1459 <-> pmap_1747
(240) pmap_1463 <-> pmap_1672
(232) attr_334 <-> attr_1666
(192) remote_codec_rate_96 <-> remote_codec_rate_1493
(180) best_te_19 <-> best_te_568
(175) vmatch_138 <-> vmatch_1009
(174) match_1678 <-> match_1901
(148) near_rate_145 <-> near_rate_725
(132) ptime_34 <-> ptime_1472
(127) got_crypto_50 <-> got_crypto_361
(120) got_video_crypto_57 <-> got_video_crypto_743
(120) attr_886 <-> attr_1162
(110) m_idx_100 <-> m_idx_703
(105) match_1 <-> match_655
(105) prephitmp.1047_1734 <-> prephitmp.1047_1806
(105) prephitmp.1055_1807 <-> prephitmp.1055_1879
(94) got_udptl_774 <-> got_udptl_2172
(94) got_savp_1711 <-> got_savp_2166
(94) got_avp_1740 <-> got_avp_2186
(90) codec_ms_90 <-> codec_ms_91
(90) m_idx_102 <-> m_idx_103
(90) nm_idx_117 <-> nm_idx_901
(88) prephitmp.1049_1673 <-> prephitmp.1049_1808
(86) maxptime_38 <-> maxptime_1473
(86) m_idx_100 <-> m_idx_102
(86) nm_idx_115 <-> nm_idx_901
(83) prephitmp.1049_387 <-> prephitmp.1049_1808
(81) nm_idx_115 <-> nm_idx_701
(74) timp_134 <-> timp_732
(74) near_rate_145 <-> near_rate_729
(72) attr_506 <-> attr_1559
(72) prephitmp.1043_693 <-> prephitmp.1043_1680
(63) match_763 <-> match_1678
(63) prephitmp.1047_789 <-> prephitmp.1047_1677
(63) prephitmp.1055_1679 <-> prephitmp.1055_1735
(60) codec_ms_87 <-> codec_ms_88
(60) got_video_crypto_556 <-> got_video_crypto_2125
(60) attr_886 <-> attr_1791
(60) got_video_crypto_1738 <-> got_video_crypto_2125
(60) attr_1791 <-> attr_1850
(52) ptime_34 <-> ptime_1033
(52) maxptime_38 <-> maxptime_1040
(52) got_crypto_53 <-> got_crypto_969
(48) got_savp_74 <-> got_savp_384
(48) got_video_crypto_556 <-> got_video_crypto_1674
(48) map_883 <-> map_1620
(47) got_webrtc_78 <-> got_webrtc_374
(46) match_7 <-> match_9
(46) best_te_19 <-> best_te_1624
(46) cng_pt_24 <-> cng_pt_1626
(46) codec_ms_91 <-> codec_ms_93
(46) m_idx_103 <-> m_idx_105
(46) nm_idx_117 <-> nm_idx_119
(46) connection_139 <-> connection_555
(46) ivtmp.1076_392 <-> ivtmp.1076_1045
(46) remote_codec_rate_596 <-> remote_codec_rate_1493
(46) m_idx_792 <-> m_idx_1487
(46) nm_idx_1139 <-> nm_idx_1755
(45) prephitmp.1043_1680 <-> prephitmp.1043_1736
(44) got_crypto_141 <-> got_crypto_1866
(44) attr_507 <-> attr_922
(42) connection_110 <-> connection_880
(40) m_idx_906 <-> m_idx_953
(40) got_video_crypto_959 <-> got_video_crypto_960
(38) best_te_1624 <-> best_te_1860
(35) got_video_crypto_63 <-> got_video_crypto_959
(34) prephitmp.1049_346 <-> prephitmp.1049_1805
(34) got_udptl_391 <-> got_udptl_774
(34) got_savp_512 <-> got_savp_1711
(34) got_avp_671 <-> got_avp_1740
(32) m_idx_109 <-> m_idx_1018
(29) codec_ms_88 <-> codec_ms_90
(29) m_idx_113 <-> m_idx_906
(29) map_bit_rate_132 <-> map_bit_rate_1480
(26) nm_idx_119 <-> nm_idx_843
(26) got_crypto_141 <-> got_crypto_1118
(26) map_255 <-> map_559
(26) map_255 <-> map_1728
(26) m_370 <-> m_1764
(26) codec_ms_386 <-> codec_ms_477
(26) codec_ms_386 <-> codec_ms_1720
(26) best_te_680 <-> best_te_1701
(26) m_idx_792 <-> m_idx_863
(26) m_idx_863 <-> m_idx_1869
(26) nm_idx_912 <-> nm_idx_1749
(26) nm_idx_912 <-> nm_idx_1755
(26) attr_922 <-> attr_1599
(26) cng_pt_1667 <-> cng_pt_1702
(26) best_te_1701 <-> best_te_1898
(26) cng_pt_1702 <-> cng_pt_1717
(26) m_idx_1715 <-> m_idx_1905
(26) match_1775 <-> match_1800
(26) match_1775 <-> match_1901
(25) cng_pt_24 <-> cng_pt_573
(25) prephitmp.1031_1812 <-> prephitmp.1031_1890
(24) match_13 <-> match_15
(24) cng_pt_26 <-> cng_pt_1626
(24) sendonly_42 <-> sendonly_1689
(24) got_crypto_55 <-> got_crypto_969
(24) got_audio_65 <-> got_audio_66
(24) codec_ms_87 <-> codec_ms_1883
(24) codec_ms_93 <-> codec_ms_94
(24) m_idx_113 <-> m_idx_1745
(24) nm_idx_121 <-> nm_idx_843
(24) attr_303 <-> attr_1666
(24) map_bit_rate_1479 <-> map_bit_rate_1480
(24) prephitmp.1047_1677 <-> prephitmp.1047_1810
(19) match_14 <-> match_15
(18) best_te_22 <-> best_te_1860
(17) cng_pt_1047 <-> cng_pt_1717
(16) prephitmp.1053_229 <-> prephitmp.1053_326
(14) match_15 <-> match_17
(14) cng_pt_26 <-> cng_pt_1047
(14) codec_ms_87 <-> codec_ms_589
(14) m_idx_1745 <-> m_idx_1905
(13) match_17 <-> match_142
(13) got_avp_68 <-> got_avp_388
(13) ivtmp.1067_237 <-> ivtmp.1067_1654
(12) match_9 <-> match_13
(12) dptime_36 <-> dptime_1035
(12) dmaxptime_40 <-> dmaxptime_1005
(12) sendonly_43 <-> sendonly_1006
(12) recvonly_45 <-> recvonly_869
(12) timp_134 <-> timp_1785
(12) near_rate.96_616 <-> near_rate.96_724
(12) near_map_727 <-> near_map_1787
(12) pmap_1672 <-> pmap_2126
(12) prephitmp.1026_1682 <-> prephitmp.1026_1683
(12) pmap_1747 <-> pmap_2093
(12) j_1786 <-> j_1845
(11) got_crypto_53 <-> got_crypto_547
(11) pmap_1457 <-> pmap_2093
(11) pmap_1461 <-> pmap_2126
(10) prephitmp.1031_531 <-> prephitmp.1031_1892
(9) codec_array_84 <-> codec_array_190
(8) got_crypto_50 <-> got_crypto_141
(8) codec_ms_88 <-> codec_ms_89
(8) codec_ms_90 <-> codec_ms_93
(8) m_idx_105 <-> m_idx_1715
(8) connection_110 <-> connection_879
(8) map_bit_rate_131 <-> map_bit_rate_1480
(8) attr_500 <-> attr_922
(8) prephitmp.1039_735 <-> prephitmp.1039_857
(8) best_te_1624 <-> best_te_1898
(8) cng_pt_1626 <-> cng_pt_1667
(7) codec_ms_89 <-> codec_ms_90
(7) fmtp_remote_codec_rate_99 <-> fmtp_remote_codec_rate_618
(7) map_bit_rate_131 <-> map_bit_rate_132
(6) match_14 <-> match_1800
(6) best_te_22 <-> best_te_1624
(6) dptime_36 <-> dptime_1467
(6) total_codecs_85 <-> total_codecs_192
(6) m_idx_105 <-> m_idx_703
(6) nm_idx_119 <-> nm_idx_1139
(6) connection_139 <-> connection_554
(5) greedy_47 <-> greedy_211
(5) scrooge_80 <-> scrooge_213
(4) dmaxptime_40 <-> dmaxptime_1468
(4) reneg_81 <-> reneg_82
(4) m_idx_102 <-> m_idx_792
(4) timp_134 <-> timp_330
(4) prephitmp.1053_323 <-> prephitmp.1053_326
(4) got_crypto_361 <-> got_crypto_1724
(4) attr_500 <-> attr_604
(4) attr_604 <-> attr_1559
(4) prephitmp.1039_846 <-> prephitmp.1039_857
(4) nm_idx_901 <-> nm_idx_1755
(4) got_crypto_969 <-> got_crypto_1866
(4) got_crypto_1724 <-> got_crypto_1866
(3) reneg_82 <-> reneg_1589
(3) codec_array_84 <-> codec_array_360
(3) total_codecs_85 <-> total_codecs_359
(3) total_codecs_85 <-> total_codecs_365
(3) codec_ms_89 <-> codec_ms_617
(3) map_bit_rate_131 <-> map_bit_rate_614
(2) match_9 <-> match_1712
(2) match_9 <-> match_1800
(2) match_9 <-> match_1901
(2) match_13 <-> match_1712
(2) sendonly_42 <-> sendonly_1006
(2) reneg_81 <-> reneg_349
(2) reneg_82 <-> reneg_353
(2) codec_ms_93 <-> codec_ms_477
(2) m_idx_102 <-> m_idx_105
(2) m_idx_105 <-> m_idx_1869
(2) nm_idx_119 <-> nm_idx_901
(2) nm_idx_119 <-> nm_idx_1749
(2) pass_126 <-> pass_409
(2) pass_126 <-> pass_1848
(2) pass_409 <-> pass_1848
(2) best_te_680 <-> best_te_1624
(2) best_te_833 <-> best_te_1860
(2) got_video_crypto_959 <-> got_video_crypto_1674
(2) cng_pt_1626 <-> cng_pt_1717
(1) m_1764 <-> m_1789

Partition map 

Partition 0 (match_1 - 1 )
Partition 1 (match_2 - 2 )
Partition 2 (match_7 - 7 )
Partition 3 (match_9 - 9 )
Partition 4 (match_13 - 13 )
Partition 5 (match_14 - 14 )
Partition 6 (match_15 - 15 )
Partition 7 (match_17 - 17 )
Partition 8 (best_te_19 - 19 )
Partition 9 (best_te_22 - 22 )
Partition 10 (cng_pt_24 - 24 )
Partition 11 (cng_pt_26 - 26 )
Partition 12 (ptime_34 - 34 )
Partition 13 (dptime_36 - 36 )
Partition 14 (maxptime_38 - 38 )
Partition 15 (dmaxptime_40 - 40 )
Partition 16 (sendonly_42 - 42 )
Partition 17 (sendonly_43 - 43 )
Partition 18 (recvonly_45 - 45 )
Partition 19 (greedy_47 - 47 )
Partition 20 (got_crypto_50 - 50 )
Partition 21 (got_crypto_53 - 53 )
Partition 22 (got_crypto_55 - 55 )
Partition 23 (got_video_crypto_57 - 57 )
Partition 24 (got_video_crypto_60 - 60 )
Partition 25 (ivtmp.1090_62 - 62 )
Partition 26 (got_video_crypto_63 - 63 )
Partition 27 (got_audio_65 - 65 )
Partition 28 (got_audio_66 - 66 )
Partition 29 (got_avp_68 - 68 )
Partition 30 (got_savp_74 - 74 )
Partition 31 (got_webrtc_78 - 78 )
Partition 32 (scrooge_80 - 80 )
Partition 33 (reneg_81 - 81 )
Partition 34 (reneg_82 - 82 )
Partition 35 (codec_array_84 - 84 )
Partition 36 (total_codecs_85 - 85 )
Partition 37 (codec_ms_87 - 87 )
Partition 38 (codec_ms_88 - 88 )
Partition 39 (codec_ms_89 - 89 )
Partition 40 (codec_ms_90 - 90 )
Partition 41 (codec_ms_91 - 91 )
Partition 42 (codec_ms_93 - 93 )
Partition 43 (codec_ms_94 - 94 )
Partition 44 (remote_codec_rate_96 - 96 )
Partition 45 (remote_codec_rate_97 - 97 )
Partition 46 (fmtp_remote_codec_rate_99 - 99 )
Partition 47 (m_idx_100 - 100 )
Partition 48 (m_idx_102 - 102 )
Partition 49 (m_idx_103 - 103 )
Partition 50 (m_idx_105 - 105 )
Partition 51 (m_idx_109 - 109 )
Partition 52 (connection_110 - 110 )
Partition 53 (m_idx_113 - 113 )
Partition 54 (nm_idx_115 - 115 )
Partition 55 (nm_idx_117 - 117 )
Partition 56 (nm_idx_119 - 119 )
Partition 57 (nm_idx_121 - 121 )
Partition 58 (pass_126 - 126 )
Partition 59 (rm_encoding_130 - 130 )
Partition 60 (map_bit_rate_131 - 131 )
Partition 61 (map_bit_rate_132 - 132 )
Partition 62 (timp_134 - 134 )
Partition 63 (ivtmp.1090_136 - 136 )
Partition 64 (rm_encoding_137 - 137 )
Partition 65 (vmatch_138 - 138 )
Partition 66 (connection_139 - 139 )
Partition 67 (got_crypto_141 - 141 )
Partition 68 (match_142 - 142 )
Partition 69 (near_rate_145 - 145 )
Partition 70 (D.47922_146 - 146 )
Partition 71 (session_161(D) - 161 )
Partition 72 (codec_array_190 - 190 )
Partition 73 (total_codecs_192 - 192 )
Partition 74 (r_sdp_193(D) - 193 )
Partition 75 (proceed_209(D) - 209 )
Partition 76 (greedy_211 - 211 )
Partition 77 (scrooge_213 - 213 )
Partition 78 (prephitmp.1053_229 - 229 )
Partition 79 (ivtmp.1067_237 - 237 )
Partition 80 (map_255 - 255 )
Partition 81 (attr_303 - 303 )
Partition 82 (prephitmp.1053_323 - 323 )
Partition 83 (prephitmp.1053_326 - 326 )
Partition 84 (timp_330 - 330 )
Partition 85 (attr_334 - 334 )
Partition 86 (prephitmp.1049_346 - 346 )
Partition 87 (reneg_349 - 349 )
Partition 88 (reneg_352 - 352 )
Partition 89 (reneg_353 - 353 )
Partition 90 (total_codecs_359 - 359 )
Partition 91 (codec_array_360 - 360 )
Partition 92 (got_crypto_361 - 361 )
Partition 93 (total_codecs_365 - 365 )
Partition 94 (m_370 - 370 )
Partition 95 (got_webrtc_374 - 374 )
Partition 96 (prephitmp.1049_383 - 383 )
Partition 97 (got_savp_384 - 384 )
Partition 98 (codec_ms_386 - 386 )
Partition 99 (prephitmp.1049_387 - 387 )
Partition 100 (got_avp_388 - 388 )
Partition 101 (got_udptl_391 - 391 )
Partition 102 (ivtmp.1076_392 - 392 )
Partition 103 (pass_406 - 406 )
Partition 104 (pass_409 - 409 )
Partition 105 (got_webrtc_452 - 452 )
Partition 106 (codec_ms_477 - 477 )
Partition 107 (attr_500 - 500 )
Partition 108 (attr_506 - 506 )
Partition 109 (attr_507 - 507 )
Partition 110 (got_savp_512 - 512 )
Partition 111 (ivtmp.1062_522 - 522 )
Partition 112 (prephitmp.1031_531 - 531 )
Partition 113 (ivtmp.1090_544 - 544 )
Partition 114 (sdp_type_546(D) - 546 )
Partition 115 (got_crypto_547 - 547 )
Partition 116 (attr_548 - 548 )
Partition 117 (connection_554 - 554 )
Partition 118 (connection_555 - 555 )
Partition 119 (got_video_crypto_556 - 556 )
Partition 120 (map_559 - 559 )
Partition 121 (rm_encoding_561 - 561 )
Partition 122 (best_te_568 - 568 )
Partition 123 (cng_pt_573 - 573 )
Partition 124 (codec_ms_589 - 589 )
Partition 125 (remote_codec_rate_596 - 596 )
Partition 126 (attr_604 - 604 )
Partition 127 (map_bit_rate_614 - 614 )
Partition 128 (near_rate.96_616 - 616 )
Partition 129 (codec_ms_617 - 617 )
Partition 130 (fmtp_remote_codec_rate_618 - 618 )
Partition 131 (attr_619 - 619 )
Partition 132 (ivtmp.1083_626 - 626 )
Partition 133 (ivtmp.1083_627 - 627 )
Partition 134 (match_655 - 655 )
Partition 135 (got_avp_671 - 671 )
Partition 136 (best_te_680 - 680 )
Partition 137 (prephitmp.1043_693 - 693 )
Partition 138 (nm_idx_701 - 701 )
Partition 139 (m_idx_703 - 703 )
Partition 140 (i_710 - 710 )
Partition 141 (map_711 - 711 )
Partition 142 (near_rate.96_724 - 724 )
Partition 143 (near_rate_725 - 725 )
Partition 144 (near_map_727 - 727 )
Partition 145 (near_rate_729 - 729 )
Partition 146 (timp_732 - 732 )
Partition 147 (prephitmp.1039_735 - 735 )
Partition 148 (j_736 - 736 )
Partition 149 (got_video_crypto_743 - 743 )
Partition 150 (prephitmp.1055_749 - 749 )
Partition 151 (ivtmp.1067_756 - 756 )
Partition 152 (match_763 - 763 )
Partition 153 (got_udptl_774 - 774 )
Partition 154 (prephitmp.1047_789 - 789 )
Partition 155 (m_idx_792 - 792 )
Partition 156 (j_807 - 807 )
Partition 157 (m_idx_819 - 819 )
Partition 158 (best_te_833 - 833 )
Partition 159 (nm_idx_843 - 843 )
Partition 160 (prephitmp.1039_846 - 846 )
Partition 161 (prephitmp.1039_857 - 857 )
Partition 162 (m_idx_863 - 863 )
Partition 163 (i_864 - 864 )
Partition 164 (recvonly_869 - 869 )
Partition 165 (connection_879 - 879 )
Partition 166 (connection_880 - 880 )
Partition 167 (map_883 - 883 )
Partition 168 (attr_886 - 886 )
Partition 169 (attr_892 - 892 )
Partition 170 (attr_893 - 893 )
Partition 171 (nm_idx_901 - 901 )
Partition 172 (m_idx_906 - 906 )
Partition 173 (m_idx_910 - 910 )
Partition 174 (nm_idx_912 - 912 )
Partition 175 (attr_922 - 922 )
Partition 176 (m_idx_953 - 953 )
Partition 177 (got_video_crypto_959 - 959 )
Partition 178 (got_video_crypto_960 - 960 )
Partition 179 (prephitmp.1031_962 - 962 )
Partition 180 (got_crypto_969 - 969 )
Partition 181 (got_video_crypto_977 - 977 )
Partition 182 (attr_978 - 978 )
Partition 183 (rm_encoding_979 - 979 )
Partition 184 (dmaxptime_1005 - 1005 )
Partition 185 (sendonly_1006 - 1006 )
Partition 186 (vmatch_1009 - 1009 )
Partition 187 (vmatch_1012 - 1012 )
Partition 188 (m_idx_1018 - 1018 )
Partition 189 (i_1020 - 1020 )
Partition 190 (map_1021 - 1021 )
Partition 191 (ptime_1033 - 1033 )
Partition 192 (dptime_1035 - 1035 )
Partition 193 (maxptime_1040 - 1040 )
Partition 194 (ivtmp.1076_1045 - 1045 )
Partition 195 (cng_pt_1047 - 1047 )
Partition 196 (j_1067 - 1067 )
Partition 197 (m_1093 - 1093 )
Partition 198 (got_crypto_1118 - 1118 )
Partition 199 (nm_idx_1139 - 1139 )
Partition 200 (attr_1162 - 1162 )
Partition 201 (pmap_1457 - 1457 )
Partition 202 (pmap_1459 - 1459 )
Partition 203 (pmap_1461 - 1461 )
Partition 204 (pmap_1463 - 1463 )
Partition 205 (dptime_1467 - 1467 )
Partition 206 (dmaxptime_1468 - 1468 )
Partition 207 (maxptime_1470 - 1470 )
Partition 208 (ptime_1472 - 1472 )
Partition 209 (maxptime_1473 - 1473 )
Partition 210 (ptime_1475 - 1475 )
Partition 211 (map_bit_rate_1479 - 1479 )
Partition 212 (map_bit_rate_1480 - 1480 )
Partition 213 (D.47922_1485 - 1485 )
Partition 214 (m_idx_1487 - 1487 )
Partition 215 (remote_codec_rate_1493 - 1493 )
Partition 216 (attr_1559 - 1559 )
Partition 217 (reneg_1589 - 1589 )
Partition 218 (attr_1599 - 1599 )
Partition 219 (map_1620 - 1620 )
Partition 220 (i_1622 - 1622 )
Partition 221 (best_te_1624 - 1624 )
Partition 222 (cng_pt_1626 - 1626 )
Partition 223 (prephitmp.1031_1639 - 1639 )
Partition 224 (ivtmp.1067_1654 - 1654 )
Partition 225 (attr_1666 - 1666 )
Partition 226 (cng_pt_1667 - 1667 )
Partition 227 (dptime_1671 - 1671 )
Partition 228 (pmap_1672 - 1672 )
Partition 229 (prephitmp.1049_1673 - 1673 )
Partition 230 (got_video_crypto_1674 - 1674 )
Partition 231 (prephitmp.1047_1677 - 1677 )
Partition 232 (match_1678 - 1678 )
Partition 233 (prephitmp.1055_1679 - 1679 )
Partition 234 (prephitmp.1043_1680 - 1680 )
Partition 235 (prephitmp.1026_1682 - 1682 )
Partition 236 (prephitmp.1026_1683 - 1683 )
Partition 237 (sendonly_1689 - 1689 )
Partition 238 (got_audio_1693 - 1693 )
Partition 239 (best_te_1701 - 1701 )
Partition 240 (cng_pt_1702 - 1702 )
Partition 241 (got_savp_1711 - 1711 )
Partition 242 (match_1712 - 1712 )
Partition 243 (m_idx_1715 - 1715 )
Partition 244 (cng_pt_1717 - 1717 )
Partition 245 (codec_ms_1720 - 1720 )
Partition 246 (got_crypto_1724 - 1724 )
Partition 247 (map_1728 - 1728 )
Partition 248 (prephitmp.1047_1734 - 1734 )
Partition 249 (prephitmp.1055_1735 - 1735 )
Partition 250 (prephitmp.1043_1736 - 1736 )
Partition 251 (got_video_crypto_1738 - 1738 )
Partition 252 (got_savp_1739 - 1739 )
Partition 253 (got_avp_1740 - 1740 )
Partition 254 (got_udptl_1743 - 1743 )
Partition 255 (m_idx_1745 - 1745 )
Partition 256 (pmap_1747 - 1747 )
Partition 257 (nm_idx_1749 - 1749 )
Partition 258 (nm_idx_1755 - 1755 )
Partition 259 (m_1764 - 1764 )
Partition 260 (match_1775 - 1775 )
Partition 261 (timp_1785 - 1785 )
Partition 262 (j_1786 - 1786 )
Partition 263 (near_map_1787 - 1787 )
Partition 264 (m_1789 - 1789 )
Partition 265 (attr_1791 - 1791 )
Partition 266 (ivtmp.1062_1793 - 1793 )
Partition 267 (match_1800 - 1800 )
Partition 268 (prephitmp.1049_1805 - 1805 )
Partition 269 (prephitmp.1047_1806 - 1806 )
Partition 270 (prephitmp.1055_1807 - 1807 )
Partition 271 (prephitmp.1049_1808 - 1808 )
Partition 272 (prephitmp.1047_1810 - 1810 )
Partition 273 (prephitmp.1031_1812 - 1812 )
Partition 274 (ivtmp.1076_1813 - 1813 )
Partition 275 (prephitmp.1049_1814 - 1814 )
Partition 276 (j_1844 - 1844 )
Partition 277 (j_1845 - 1845 )
Partition 278 (pass_1848 - 1848 )
Partition 279 (attr_1850 - 1850 )
Partition 280 (got_avp_1859 - 1859 )
Partition 281 (best_te_1860 - 1860 )
Partition 282 (dmaxptime_1865 - 1865 )
Partition 283 (got_crypto_1866 - 1866 )
Partition 284 (got_udptl_1868 - 1868 )
Partition 285 (m_idx_1869 - 1869 )
Partition 286 (prephitmp.1055_1879 - 1879 )
Partition 287 (j_1881 - 1881 )
Partition 288 (codec_ms_1883 - 1883 )
Partition 289 (got_video_crypto_1885 - 1885 )
Partition 290 (prephitmp.1031_1889 - 1889 )
Partition 291 (prephitmp.1031_1890 - 1890 )
Partition 292 (prephitmp.1031_1892 - 1892 )
Partition 293 (recvonly_1894 - 1894 )
Partition 294 (prephitmp.1031_1895 - 1895 )
Partition 295 (best_te_1898 - 1898 )
Partition 296 (match_1901 - 1901 )
Partition 297 (m_idx_1905 - 1905 )
Partition 298 (pmap_2093 - 2093 )
Partition 299 (got_video_crypto_2125 - 2125 )
Partition 300 (pmap_2126 - 2126 )
Partition 301 (got_savp_2166 - 2166 )
Partition 302 (got_udptl_2172 - 2172 )
Partition 303 (got_avp_2186 - 2186 )

Coalesce list: (60)got_video_crypto_60 & (1885)got_video_crypto_1885 [map: 24, 289] : Success -> 24
Coalesce list: (619)attr_619 & (978)attr_978 [map: 131, 182] : Success -> 131
Coalesce list: (109)m_idx_109 & (910)m_idx_910 [map: 51, 173] : Success -> 51
Coalesce list: (62)ivtmp.1090_62 & (136)ivtmp.1090_136 [map: 25, 63] : Success -> 25
Coalesce list: (864)i_864 & (1020)i_1020 [map: 163, 189] : Success -> 163
Coalesce list: (115)nm_idx_115 & (1139)nm_idx_1139 [map: 54, 199] : Success -> 54
Coalesce list: (100)m_idx_100 & (1487)m_idx_1487 [map: 47, 214] : Success -> 47
Coalesce list: (97)remote_codec_rate_97 & (1493)remote_codec_rate_1493 [map: 45, 215] : Success -> 45
Coalesce list: (57)got_video_crypto_57 & (1738)got_video_crypto_1738 [map: 23, 251] : Success -> 23
Coalesce list: (53)got_crypto_53 & (1118)got_crypto_1118 [map: 21, 198] : Success -> 21
Coalesce list: (38)maxptime_38 & (1470)maxptime_1470 [map: 14, 207] : Success -> 14
Coalesce list: (34)ptime_34 & (1475)ptime_1475 [map: 12, 210] : Success -> 12
Coalesce list: (392)ivtmp.1076_392 & (1813)ivtmp.1076_1813 [map: 102, 274] : Success -> 102
Coalesce list: (710)i_710 & (1622)i_1622 [map: 140, 220] : Success -> 140
Coalesce list: (7)match_7 & (1901)match_1901 [map: 2, 296] : Success -> 2
Coalesce list: (24)cng_pt_24 & (1667)cng_pt_1667 [map: 10, 226] : Success -> 10
Coalesce list: (91)codec_ms_91 & (1720)codec_ms_1720 [map: 41, 245] : Success -> 41
Coalesce list: (103)m_idx_103 & (792)m_idx_792 [map: 49, 155] : Success -> 49
Coalesce list: (117)nm_idx_117 & (1755)nm_idx_1755 [map: 55, 258] : Success -> 55
Coalesce list: (19)best_te_19 & (1898)best_te_1898 [map: 8, 295] : Success -> 8
Coalesce list: (22)best_te_22 & (680)best_te_680 [map: 9, 136] : Success -> 9
Coalesce list: (26)cng_pt_26 & (1717)cng_pt_1717 [map: 11, 244] : Success -> 11
Coalesce list: (55)got_crypto_55 & (1866)got_crypto_1866 [map: 22, 283] : Success -> 22
Coalesce list: (66)got_audio_66 & (1693)got_audio_1693 [map: 28, 238] : Success -> 28
Coalesce list: (94)codec_ms_94 & (477)codec_ms_477 [map: 43, 106] : Success -> 43
Coalesce list: (63)got_video_crypto_63 & (1674)got_video_crypto_1674 [map: 26, 230] : Success -> 26
Coalesce list: (15)match_15 & (1800)match_1800 [map: 6, 267] : Success -> 6
Coalesce list: (78)got_webrtc_78 & (452)got_webrtc_452 [map: 31, 105] : Success -> 31
Coalesce list: (113)m_idx_113 & (1869)m_idx_1869 [map: 53, 285] : Success -> 53
Coalesce list: (121)nm_idx_121 & (1749)nm_idx_1749 [map: 57, 257] : Success -> 57
Coalesce list: (892)attr_892 & (1850)attr_1850 [map: 169, 279] : Success -> 169
Coalesce list: (548)attr_548 & (1599)attr_1599 [map: 116, 218] : Success -> 116
Coalesce list: (711)map_711 & (1728)map_1728 [map: 141, 247] : Success -> 141
Coalesce list: (819)m_idx_819 & (953)m_idx_953 [map: 157, 176] : Success -> 157
Coalesce list: (556)got_video_crypto_556 & (960)got_video_crypto_960 [map: 119, 178] : Success -> 119
Coalesce list: (60)got_video_crypto_60 & (960)got_video_crypto_556 [map: 24, 119] : Success -> 24
Coalesce list: (1021)map_1021 & (1620)map_1620 [map: 190, 219] : Success -> 190
Coalesce list: (109)m_idx_109 & (953)m_idx_819 [map: 51, 157] : Success -> 51
Coalesce list: (522)ivtmp.1062_522 & (1793)ivtmp.1062_1793 [map: 111, 266] : Success -> 111
Coalesce list: (807)j_807 & (1881)j_1881 [map: 156, 287] : Success -> 156
Coalesce list: (556)got_video_crypto_60 & (743)got_video_crypto_743 [map: 24, 149] : Success -> 24
Coalesce list: (893)attr_893 & (1162)attr_1162 [map: 170, 200] : Success -> 170
Coalesce list: (512)got_savp_512 & (2166)got_savp_2166 [map: 110, 301] : Success -> 110
Coalesce list: (671)got_avp_671 & (2186)got_avp_2186 [map: 135, 303] : Success -> 135
Coalesce list: (1093)m_1093 & (1764)m_1764 [map: 197, 259] : Success -> 197
Coalesce list: (1868)got_udptl_1868 & (2172)got_udptl_2172 [map: 284, 302] : Success -> 284
Coalesce list: (626)ivtmp.1083_626 & (627)ivtmp.1083_627 [map: 132, 133] : Success -> 132
Coalesce list: (1067)j_1067 & (1844)j_1844 [map: 196, 276] : Success -> 196
Coalesce list: (1739)got_savp_1739 & (2166)got_savp_512 [map: 252, 110] : Success -> 110
Coalesce list: (1743)got_udptl_1743 & (2172)got_udptl_1868 [map: 254, 284] : Success -> 284
Coalesce list: (1859)got_avp_1859 & (2186)got_avp_671 [map: 280, 135] : Success -> 135
Coalesce list: (40)dmaxptime_40 & (1865)dmaxptime_1865 [map: 15, 282] : Success -> 15
Coalesce list: (36)dptime_36 & (1671)dptime_1671 [map: 13, 227] : Success -> 13
Coalesce list: (68)got_avp_68 & (671)got_avp_671 [map: 29, 135] : Success -> 135
Coalesce list: (45)recvonly_45 & (1894)recvonly_1894 [map: 18, 293] : Success -> 18
Coalesce list: (130)rm_encoding_130 & (561)rm_encoding_561 [map: 59, 121] : Success -> 59
Coalesce list: (619)attr_619 & (1162)attr_893 [map: 131, 170] : Success -> 131
Coalesce list: (743)got_video_crypto_60 & (1885)got_video_crypto_60: Already Coalesced.
Coalesce list: (96)remote_codec_rate_96 & (97)remote_codec_rate_97 [map: 44, 45] : Success -> 45
Coalesce list: (43)sendonly_43 & (1689)sendonly_1689 [map: 17, 237] : Success -> 17
Coalesce list: (74)got_savp_74 & (512)got_savp_512 [map: 30, 110] : Success -> 110
Coalesce list: (136)ivtmp.1090_62 & (544)ivtmp.1090_544 [map: 25, 113] : Success -> 25
Coalesce list: (819)m_idx_109 & (910)m_idx_109: Already Coalesced.
Coalesce list: (137)rm_encoding_137 & (979)rm_encoding_979 [map: 64, 183] : Success -> 64
Coalesce list: (68)got_avp_671 & (1859)got_avp_671: Already Coalesced.
Coalesce list: (74)got_savp_512 & (1739)got_savp_512: Already Coalesced.
Coalesce list: (1743)got_udptl_1868 & (1868)got_udptl_1868: Already Coalesced.
Coalesce list: (1808)prephitmp.1049_1808 & (1814)prephitmp.1049_1814 [map: 271, 275] : Success -> 271
Coalesce list: (60)got_video_crypto_60 & (977)got_video_crypto_977 [map: 24, 181] : Success -> 24
Coalesce list: (138)vmatch_138 & (1012)vmatch_1012 [map: 65, 187] : Success -> 65
Coalesce list: (383)prephitmp.1049_383 & (1808)prephitmp.1049_1808 [map: 96, 271] : Success -> 271
Coalesce list: (1)match_1 & (2)match_2 [map: 0, 1] : Success -> 0
Coalesce list: (749)prephitmp.1055_749 & (1807)prephitmp.1055_1807 [map: 150, 270] : Success -> 150
Coalesce list: (146)D.47922_146 & (1485)D.47922_1485 [map: 70, 213] : Success -> 70
Coalesce list: (68)got_avp_671 & (1740)got_avp_1740 [map: 135, 253] : Success -> 135
Coalesce list: (74)got_savp_512 & (1711)got_savp_1711 [map: 110, 241] : Success -> 110
Coalesce list: (774)got_udptl_774 & (1868)got_udptl_1868 [map: 153, 284] : Success -> 284
Coalesce list: (1805)prephitmp.1049_1805 & (1808)prephitmp.1049_1808 [map: 268, 271] : Success -> 271
Coalesce list: (736)j_736 & (1845)j_1845 [map: 148, 277] : Success -> 148
Coalesce list: (756)ivtmp.1067_756 & (1654)ivtmp.1067_1654 [map: 151, 224] : Success -> 151
Coalesce list: (1)match_1 & (1678)match_1678 [map: 0, 232] : Success -> 0
Coalesce list: (1677)prephitmp.1047_1677 & (1806)prephitmp.1047_1806 [map: 231, 269] : Success -> 231
Coalesce list: (1679)prephitmp.1055_1679 & (1807)prephitmp.1055_749 [map: 233, 150] : Success -> 150
Coalesce list: (962)prephitmp.1031_962 & (1812)prephitmp.1031_1812 [map: 179, 273] : Success -> 179
Coalesce list: (774)got_udptl_1868 & (1743)got_udptl_1868: Already Coalesced.
Coalesce list: (1711)got_savp_512 & (1739)got_savp_512: Already Coalesced.
Coalesce list: (1740)got_avp_671 & (1859)got_avp_671: Already Coalesced.
Coalesce list: (1805)prephitmp.1049_1808 & (1814)prephitmp.1049_1808: Already Coalesced.
Coalesce list: (1459)pmap_1459 & (1747)pmap_1747 [map: 202, 256] : Success -> 202
Coalesce list: (1463)pmap_1463 & (1672)pmap_1672 [map: 204, 228] : Success -> 204
Coalesce list: (334)attr_334 & (1666)attr_1666 [map: 85, 225] : Success -> 85
Coalesce list: (96)remote_codec_rate_97 & (1493)remote_codec_rate_97: Already Coalesced.
Coalesce list: (19)best_te_19 & (568)best_te_568 [map: 8, 122] : Success -> 8
Coalesce list: (138)vmatch_138 & (1009)vmatch_1009 [map: 65, 186] : Success -> 65
Coalesce list: (1678)match_1 & (1901)match_7 [map: 0, 2] : Fail due to conflict
Coalesce list: (145)near_rate_145 & (725)near_rate_725 [map: 69, 143] : Success -> 69
Coalesce list: (34)ptime_34 & (1472)ptime_1472 [map: 12, 208] : Success -> 12
Coalesce list: (50)got_crypto_50 & (361)got_crypto_361 [map: 20, 92] : Success -> 20
Coalesce list: (57)got_video_crypto_57 & (743)got_video_crypto_60 [map: 23, 24] : Success -> 24
Coalesce list: (886)attr_886 & (1162)attr_619 [map: 168, 131] : Success -> 131
Coalesce list: (100)m_idx_100 & (703)m_idx_703 [map: 47, 139] : Success -> 47
Coalesce list: (1)match_1 & (655)match_655 [map: 0, 134] : Success -> 0
Coalesce list: (1734)prephitmp.1047_1734 & (1806)prephitmp.1047_1677 [map: 248, 231] : Success -> 231
Coalesce list: (1807)prephitmp.1055_749 & (1879)prephitmp.1055_1879 [map: 150, 286] : Success -> 150
Coalesce list: (774)got_udptl_1868 & (2172)got_udptl_1868: Already Coalesced.
Coalesce list: (1711)got_savp_512 & (2166)got_savp_512: Already Coalesced.
Coalesce list: (1740)got_avp_671 & (2186)got_avp_671: Already Coalesced.
Coalesce list: (90)codec_ms_90 & (91)codec_ms_91 [map: 40, 41] : Success -> 41
Coalesce list: (102)m_idx_102 & (103)m_idx_103 [map: 48, 49] : Success -> 49
Coalesce list: (117)nm_idx_117 & (901)nm_idx_901 [map: 55, 171] : Success -> 55
Coalesce list: (1673)prephitmp.1049_1673 & (1808)prephitmp.1049_1808 [map: 229, 271] : Success -> 271
Coalesce list: (38)maxptime_38 & (1473)maxptime_1473 [map: 14, 209] : Success -> 14
Coalesce list: (100)m_idx_100 & (102)m_idx_103 [map: 47, 49] : Success -> 47
Coalesce list: (115)nm_idx_115 & (901)nm_idx_117 [map: 54, 55] : Success -> 55
Coalesce list: (387)prephitmp.1049_387 & (1808)prephitmp.1049_1808 [map: 99, 271] : Success -> 271
Coalesce list: (115)nm_idx_117 & (701)nm_idx_701 [map: 55, 138] : Success -> 55
Coalesce list: (134)timp_134 & (732)timp_732 [map: 62, 146] : Success -> 62
Coalesce list: (145)near_rate_145 & (729)near_rate_729 [map: 69, 145] : Success -> 69
Coalesce list: (506)attr_506 & (1559)attr_1559 [map: 108, 216] : Success -> 108
Coalesce list: (693)prephitmp.1043_693 & (1680)prephitmp.1043_1680 [map: 137, 234] : Success -> 137
Coalesce list: (763)match_763 & (1678)match_1 [map: 152, 0] : Success -> 0
Coalesce list: (789)prephitmp.1047_789 & (1677)prephitmp.1047_1677 [map: 154, 231] : Success -> 231
Coalesce list: (1679)prephitmp.1055_749 & (1735)prephitmp.1055_1735 [map: 150, 249] : Success -> 150
Coalesce list: (87)codec_ms_87 & (88)codec_ms_88 [map: 37, 38] : Success -> 37
Coalesce list: (556)got_video_crypto_60 & (2125)got_video_crypto_2125 [map: 24, 299] : Success -> 24
Coalesce list: (886)attr_619 & (1791)attr_1791 [map: 131, 265] : Fail due to conflict
Coalesce list: (1738)got_video_crypto_60 & (2125)got_video_crypto_60: Already Coalesced.
Coalesce list: (1791)attr_1791 & (1850)attr_892 [map: 265, 169] : Success -> 169
Coalesce list: (34)ptime_34 & (1033)ptime_1033 [map: 12, 191] : Success -> 12
Coalesce list: (38)maxptime_38 & (1040)maxptime_1040 [map: 14, 193] : Success -> 14
Coalesce list: (53)got_crypto_53 & (969)got_crypto_969 [map: 21, 180] : Success -> 21
Coalesce list: (74)got_savp_512 & (384)got_savp_384 [map: 110, 97] : Success -> 110
Coalesce list: (556)got_video_crypto_60 & (1674)got_video_crypto_63 [map: 24, 26] : Success -> 24
Coalesce list: (883)map_883 & (1620)map_1021 [map: 167, 190] : Success -> 190
Coalesce list: (78)got_webrtc_78 & (374)got_webrtc_374 [map: 31, 95] : Success -> 31
Coalesce list: (7)match_7 & (9)match_9 [map: 2, 3] : Success -> 2
Coalesce list: (19)best_te_19 & (1624)best_te_1624 [map: 8, 221] : Success -> 8
Coalesce list: (24)cng_pt_24 & (1626)cng_pt_1626 [map: 10, 222] : Success -> 10
Coalesce list: (91)codec_ms_91 & (93)codec_ms_93 [map: 41, 42] : Success -> 41
Coalesce list: (103)m_idx_100 & (105)m_idx_105 [map: 47, 50] : Success -> 47
Coalesce list: (117)nm_idx_117 & (119)nm_idx_119 [map: 55, 56] : Success -> 55
Coalesce list: (139)connection_139 & (555)connection_555 [map: 66, 118] : Success -> 66
Coalesce list: (392)ivtmp.1076_392 & (1045)ivtmp.1076_1045 [map: 102, 194] : Success -> 102
Coalesce list: (596)remote_codec_rate_596 & (1493)remote_codec_rate_97 [map: 125, 45] : Success -> 45
Coalesce list: (792)m_idx_100 & (1487)m_idx_100: Already Coalesced.
Coalesce list: (1139)nm_idx_117 & (1755)nm_idx_117: Already Coalesced.
Coalesce list: (1680)prephitmp.1043_693 & (1736)prephitmp.1043_1736 [map: 137, 250] : Success -> 137
Coalesce list: (141)got_crypto_141 & (1866)got_crypto_55 [map: 67, 22] : Success -> 22
Coalesce list: (507)attr_507 & (922)attr_922 [map: 109, 175] : Success -> 109
Coalesce list: (110)connection_110 & (880)connection_880 [map: 52, 166] : Success -> 52
Coalesce list: (906)m_idx_906 & (953)m_idx_109 [map: 172, 51] : Success -> 51
Coalesce list: (959)got_video_crypto_959 & (960)got_video_crypto_60 [map: 177, 24] : Success -> 24
Coalesce list: (1624)best_te_19 & (1860)best_te_1860 [map: 8, 281] : Success -> 8
Coalesce list: (63)got_video_crypto_60 & (959)got_video_crypto_60: Already Coalesced.
Coalesce list: (346)prephitmp.1049_346 & (1805)prephitmp.1049_1808 [map: 86, 271] : Success -> 271
Coalesce list: (391)got_udptl_391 & (774)got_udptl_1868 [map: 101, 284] : Success -> 284
Coalesce list: (512)got_savp_512 & (1711)got_savp_512: Already Coalesced.
Coalesce list: (671)got_avp_671 & (1740)got_avp_671: Already Coalesced.
Coalesce list: (109)m_idx_109 & (1018)m_idx_1018 [map: 51, 188] : Success -> 51
Coalesce list: (88)codec_ms_87 & (90)codec_ms_91 [map: 37, 41] : Success -> 41
Coalesce list: (113)m_idx_113 & (906)m_idx_109 [map: 53, 51] : Success -> 51
Coalesce list: (132)map_bit_rate_132 & (1480)map_bit_rate_1480 [map: 61, 212] : Success -> 61
Coalesce list: (119)nm_idx_117 & (843)nm_idx_843 [map: 55, 159] : Success -> 55
Coalesce list: (141)got_crypto_55 & (1118)got_crypto_53 [map: 22, 21] : Success -> 22
Coalesce list: (255)map_255 & (559)map_559 [map: 80, 120] : Success -> 80
Coalesce list: (255)map_255 & (1728)map_711 [map: 80, 141] : Success -> 80
Coalesce list: (370)m_370 & (1764)m_1093 [map: 94, 197] : Success -> 197
Coalesce list: (386)codec_ms_386 & (477)codec_ms_94 [map: 98, 43] : Success -> 43
Coalesce list: (386)codec_ms_94 & (1720)codec_ms_91 [map: 43, 41] : Success -> 41
Coalesce list: (680)best_te_22 & (1701)best_te_1701 [map: 9, 239] : Success -> 9
Coalesce list: (792)m_idx_100 & (863)m_idx_863 [map: 47, 162] : Success -> 47
Coalesce list: (863)m_idx_100 & (1869)m_idx_109 [map: 47, 51] : Success -> 47
Coalesce list: (912)nm_idx_912 & (1749)nm_idx_121 [map: 174, 57] : Success -> 57
Coalesce list: (912)nm_idx_121 & (1755)nm_idx_117 [map: 57, 55] : Success -> 55
Coalesce list: (922)attr_507 & (1599)attr_548 [map: 109, 116] : Success -> 109
Coalesce list: (1667)cng_pt_24 & (1702)cng_pt_1702 [map: 10, 240] : Success -> 10
Coalesce list: (1701)best_te_22 & (1898)best_te_19 [map: 9, 8] : Success -> 8
Coalesce list: (1702)cng_pt_24 & (1717)cng_pt_26 [map: 10, 11] : Success -> 10
Coalesce list: (1715)m_idx_1715 & (1905)m_idx_1905 [map: 243, 297] : Success -> 243
Coalesce list: (1775)match_1775 & (1800)match_15 [map: 260, 6] : Success -> 6
Coalesce list: (1775)match_15 & (1901)match_7 [map: 6, 2] : Success -> 6
Coalesce list: (24)cng_pt_24 & (573)cng_pt_573 [map: 10, 123] : Success -> 10
Coalesce list: (1812)prephitmp.1031_962 & (1890)prephitmp.1031_1890 [map: 179, 291] : Success -> 179
Coalesce list: (13)match_13 & (15)match_15 [map: 4, 6] : Success -> 6
Coalesce list: (26)cng_pt_24 & (1626)cng_pt_24: Already Coalesced.
Coalesce list: (42)sendonly_42 & (1689)sendonly_43 [map: 16, 17] : Success -> 17
Coalesce list: (55)got_crypto_55 & (969)got_crypto_55: Already Coalesced.
Coalesce list: (65)got_audio_65 & (66)got_audio_66 [map: 27, 28] : Success -> 28
Coalesce list: (87)codec_ms_91 & (1883)codec_ms_1883 [map: 41, 288] : Success -> 41
Coalesce list: (93)codec_ms_91 & (94)codec_ms_91: Already Coalesced.
Coalesce list: (113)m_idx_100 & (1745)m_idx_1745 [map: 47, 255] : Success -> 47
Coalesce list: (121)nm_idx_117 & (843)nm_idx_117: Already Coalesced.
Coalesce list: (303)attr_303 & (1666)attr_334 [map: 81, 85] : Success -> 85
Coalesce list: (1479)map_bit_rate_1479 & (1480)map_bit_rate_132 [map: 211, 61] : Success -> 61
Coalesce list: (1677)prephitmp.1047_1677 & (1810)prephitmp.1047_1810 [map: 231, 272] : Success -> 231
Coalesce list: (14)match_14 & (15)match_15 [map: 5, 6] : Success -> 6
Coalesce list: (22)best_te_19 & (1860)best_te_19: Already Coalesced.
Coalesce list: (1047)cng_pt_1047 & (1717)cng_pt_24 [map: 195, 10] : Success -> 10
Coalesce list: (229)prephitmp.1053_229 & (326)prephitmp.1053_326 [map: 78, 83] : Success -> 78
Coalesce list: (15)match_15 & (17)match_17 [map: 6, 7] : Success -> 6
Coalesce list: (26)cng_pt_24 & (1047)cng_pt_24: Already Coalesced.
Coalesce list: (87)codec_ms_91 & (589)codec_ms_589 [map: 41, 124] : Success -> 41
Coalesce list: (1745)m_idx_100 & (1905)m_idx_1715 [map: 47, 243] : Success -> 47
Coalesce list: (17)match_15 & (142)match_142 [map: 6, 68] : Success -> 6
Coalesce list: (68)got_avp_671 & (388)got_avp_388 [map: 135, 100] : Success -> 135
Coalesce list: (237)ivtmp.1067_237 & (1654)ivtmp.1067_756 [map: 79, 151] : Success -> 151
Coalesce list: (9)match_15 & (13)match_15: Already Coalesced.
Coalesce list: (36)dptime_36 & (1035)dptime_1035 [map: 13, 192] : Success -> 13
Coalesce list: (40)dmaxptime_40 & (1005)dmaxptime_1005 [map: 15, 184] : Success -> 15
Coalesce list: (43)sendonly_43 & (1006)sendonly_1006 [map: 17, 185] : Success -> 17
Coalesce list: (45)recvonly_45 & (869)recvonly_869 [map: 18, 164] : Success -> 18
Coalesce list: (134)timp_134 & (1785)timp_1785 [map: 62, 261] : Success -> 62
Coalesce list: (616)near_rate.96_616 & (724)near_rate.96_724 [map: 128, 142] : Success -> 128
Coalesce list: (727)near_map_727 & (1787)near_map_1787 [map: 144, 263] : Success -> 144
Coalesce list: (1672)pmap_1463 & (2126)pmap_2126 [map: 204, 300] : Success -> 204
Coalesce list: (1682)prephitmp.1026_1682 & (1683)prephitmp.1026_1683 [map: 235, 236] : Success -> 235
Coalesce list: (1747)pmap_1459 & (2093)pmap_2093 [map: 202, 298] : Success -> 202
Coalesce list: (1786)j_1786 & (1845)j_736 [map: 262, 148] : Success -> 148
Coalesce list: (53)got_crypto_55 & (547)got_crypto_547 [map: 22, 115] : Success -> 22
Coalesce list: (1457)pmap_1457 & (2093)pmap_1459 [map: 201, 202] : Success -> 202
Coalesce list: (1461)pmap_1461 & (2126)pmap_1463 [map: 203, 204] : Success -> 204
Coalesce list: (531)prephitmp.1031_531 & (1892)prephitmp.1031_1892 [map: 112, 292] : Success -> 112
Coalesce list: (84)codec_array_84 & (190)codec_array_190 [map: 35, 72] : Success -> 35
Coalesce list: (50)got_crypto_50 & (141)got_crypto_55 [map: 20, 22] : Success -> 22
Coalesce list: (88)codec_ms_91 & (89)codec_ms_89 [map: 41, 39] : Success -> 41
Coalesce list: (90)codec_ms_91 & (93)codec_ms_91: Already Coalesced.
Coalesce list: (105)m_idx_100 & (1715)m_idx_100: Already Coalesced.
Coalesce list: (110)connection_110 & (879)connection_879 [map: 52, 165] : Fail due to conflict
Coalesce list: (131)map_bit_rate_131 & (1480)map_bit_rate_132 [map: 60, 61] : Success -> 61
Coalesce list: (500)attr_500 & (922)attr_507 [map: 107, 109] : Success -> 109
Coalesce list: (735)prephitmp.1039_735 & (857)prephitmp.1039_857 [map: 147, 161] : Success -> 147
Coalesce list: (1624)best_te_19 & (1898)best_te_19: Already Coalesced.
Coalesce list: (1626)cng_pt_24 & (1667)cng_pt_24: Already Coalesced.
Coalesce list: (89)codec_ms_91 & (90)codec_ms_91: Already Coalesced.
Coalesce list: (99)fmtp_remote_codec_rate_99 & (618)fmtp_remote_codec_rate_618 [map: 46, 130] : Success -> 46
Coalesce list: (131)map_bit_rate_132 & (132)map_bit_rate_132: Already Coalesced.
Coalesce list: (14)match_15 & (1800)match_15: Already Coalesced.
Coalesce list: (22)best_te_19 & (1624)best_te_19: Already Coalesced.
Coalesce list: (36)dptime_36 & (1467)dptime_1467 [map: 13, 205] : Success -> 13
Coalesce list: (85)total_codecs_85 & (192)total_codecs_192 [map: 36, 73] : Success -> 36
Coalesce list: (105)m_idx_100 & (703)m_idx_100: Already Coalesced.
Coalesce list: (119)nm_idx_117 & (1139)nm_idx_117: Already Coalesced.
Coalesce list: (139)connection_139 & (554)connection_554 [map: 66, 117] : Fail due to conflict
Coalesce list: (47)greedy_47 & (211)greedy_211 [map: 19, 76] : Success -> 19
Coalesce list: (80)scrooge_80 & (213)scrooge_213 [map: 32, 77] : Success -> 32
Coalesce list: (40)dmaxptime_40 & (1468)dmaxptime_1468 [map: 15, 206] : Success -> 15
Coalesce list: (81)reneg_81 & (82)reneg_82 [map: 33, 34] : Success -> 33
Coalesce list: (102)m_idx_100 & (792)m_idx_100: Already Coalesced.
Coalesce list: (134)timp_134 & (330)timp_330 [map: 62, 84] : Fail due to conflict
Coalesce list: (323)prephitmp.1053_323 & (326)prephitmp.1053_229 [map: 82, 78] : Success -> 78
Coalesce list: (361)got_crypto_55 & (1724)got_crypto_1724 [map: 22, 246] : Success -> 22
Coalesce list: (500)attr_507 & (604)attr_604 [map: 109, 126] : Fail due to conflict
Coalesce list: (604)attr_604 & (1559)attr_506 [map: 126, 108] : Success -> 108
Coalesce list: (846)prephitmp.1039_846 & (857)prephitmp.1039_735 [map: 160, 147] : Success -> 147
Coalesce list: (901)nm_idx_117 & (1755)nm_idx_117: Already Coalesced.
Coalesce list: (969)got_crypto_55 & (1866)got_crypto_55: Already Coalesced.
Coalesce list: (1724)got_crypto_55 & (1866)got_crypto_55: Already Coalesced.
Coalesce list: (82)reneg_81 & (1589)reneg_1589 [map: 33, 217] : Success -> 33
Coalesce list: (84)codec_array_84 & (360)codec_array_360 [map: 35, 91] : Success -> 35
Coalesce list: (85)total_codecs_85 & (359)total_codecs_359 [map: 36, 90] : Fail due to conflict
Coalesce list: (85)total_codecs_85 & (365)total_codecs_365 [map: 36, 93] : Success -> 36
Coalesce list: (89)codec_ms_91 & (617)codec_ms_617 [map: 41, 129] : Success -> 41
Coalesce list: (131)map_bit_rate_132 & (614)map_bit_rate_614 [map: 61, 127] : Success -> 61
Coalesce list: (9)match_15 & (1712)match_1712 [map: 6, 242] : Success -> 6
Coalesce list: (9)match_15 & (1800)match_15: Already Coalesced.
Coalesce list: (9)match_15 & (1901)match_15: Already Coalesced.
Coalesce list: (13)match_15 & (1712)match_15: Already Coalesced.
Coalesce list: (42)sendonly_43 & (1006)sendonly_43: Already Coalesced.
Coalesce list: (81)reneg_81 & (349)reneg_349 [map: 33, 87] : Success -> 33
Coalesce list: (82)reneg_81 & (353)reneg_353 [map: 33, 89] : Success -> 33
Coalesce list: (93)codec_ms_91 & (477)codec_ms_91: Already Coalesced.
Coalesce list: (102)m_idx_100 & (105)m_idx_100: Already Coalesced.
Coalesce list: (105)m_idx_100 & (1869)m_idx_100: Already Coalesced.
Coalesce list: (119)nm_idx_117 & (901)nm_idx_117: Already Coalesced.
Coalesce list: (119)nm_idx_117 & (1749)nm_idx_117: Already Coalesced.
Coalesce list: (126)pass_126 & (409)pass_409 [map: 58, 104] : Success -> 58
Coalesce list: (126)pass_126 & (1848)pass_1848 [map: 58, 278] : Success -> 58
Coalesce list: (409)pass_126 & (1848)pass_126: Already Coalesced.
Coalesce list: (680)best_te_19 & (1624)best_te_19: Already Coalesced.
Coalesce list: (833)best_te_833 & (1860)best_te_19 [map: 158, 8] : Fail due to conflict
Coalesce list: (959)got_video_crypto_60 & (1674)got_video_crypto_60: Already Coalesced.
Coalesce list: (1626)cng_pt_24 & (1717)cng_pt_24: Already Coalesced.
Coalesce list: (1764)m_1093 & (1789)m_1789 [map: 197, 264] : Success -> 197
Coalesce list: (1812)prephitmp.1031_962 & (1889)prephitmp.1031_1889 [map: 179, 290] : Success -> 179
Coalesce list: (1892)prephitmp.1031_531 & (1895)prephitmp.1031_1895 [map: 112, 294] : Success -> 112
Coalesce list: (1892)prephitmp.1031_531 & (1639)prephitmp.1031_1639 [map: 112, 223] : Success -> 112
Coalesce list: (126)pass_126 & (406)pass_406 [map: 58, 103] : Success -> 58
Coalesce list: (81)reneg_81 & (352)reneg_352 [map: 33, 88] : Success -> 33
After Coalescing:

Partition map 

Partition 0 (match_1 - 1 2 655 763 1678 )
Partition 1 (pretmp.881_3 - 3 )
Partition 2 (pretmp.914_4 - 4 )
Partition 3 (pretmp.915_5 - 5 )
Partition 4 (pretmp.884_6 - 6 )
Partition 5 (pretmp.931_8 - 8 )
Partition 6 (pretmp.896_10 - 10 )
Partition 7 (pretmp.889_11 - 11 )
Partition 8 (match_15 - 7 9 13 14 15 17 142 1712 1775 1800 1901 )
Partition 9 (pretmp.900_16 - 16 )
Partition 10 (pretmp.879_18 - 18 )
Partition 11 (best_te_19 - 19 22 568 680 1624 1701 1860 1898 )
Partition 12 (pretmp.930_20 - 20 )
Partition 13 (pretmp.973_21 - 21 )
Partition 14 (pretmp.901_23 - 23 )
Partition 15 (cng_pt_24 - 24 26 573 1047 1626 1667 1702 1717 )
Partition 16 (pretmp.929_25 - 25 )
Partition 17 (pretmp.907_27 - 27 )
Partition 18 (pretmp.885_28 - 28 )
Partition 19 (pretmp.979_29 - 29 )
Partition 20 (pretmp.960_30 - 30 )
Partition 21 (pretmp.953_31 - 31 )
Partition 22 (pretmp.918_32 - 32 )
Partition 23 (pretmp.913_33 - 33 )
Partition 24 (ptime_34 - 34 1033 1472 1475 )
Partition 25 (pretmp.952_35 - 35 )
Partition 26 (dptime_36 - 36 1035 1467 1671 )
Partition 27 (pretmp.978_37 - 37 )
Partition 28 (maxptime_38 - 38 1040 1470 1473 )
Partition 29 (pretmp.951_39 - 39 )
Partition 30 (dmaxptime_40 - 40 1005 1468 1865 )
Partition 31 (pretmp.977_41 - 41 )
Partition 32 (sendonly_43 - 42 43 1006 1689 )
Partition 33 (pretmp.976_44 - 44 )
Partition 34 (recvonly_45 - 45 869 1894 )
Partition 35 (pretmp.975_46 - 46 )
Partition 36 (greedy_47 - 47 211 )
Partition 37 (pretmp.958_48 - 48 )
Partition 38 (pretmp.959_51 - 51 )
Partition 39 (pretmp.879_52 - 52 )
Partition 40 (pretmp.950_54 - 54 )
Partition 41 (got_crypto_55 - 50 53 55 141 361 547 969 1118 1724 1866 )
Partition 42 (pretmp.885_56 - 56 )
Partition 43 (pretmp.917_58 - 58 )
Partition 44 (pretmp.902_59 - 59 )
Partition 45 (got_video_crypto_60 - 57 60 63 556 743 959 960 977 1674 1738 1885 2125 )
Partition 46 (pretmp.912_61 - 61 )
Partition 47 (ivtmp.1090_62 - 62 136 544 )
Partition 48 (pretmp.885_64 - 64 )
Partition 49 (got_audio_66 - 65 66 1693 )
Partition 50 (pretmp.885_67 - 67 )
Partition 51 (pretmp.880_69 - 69 )
Partition 52 (pretmp.897_75 - 75 )
Partition 53 (pretmp.874_76 - 76 )
Partition 54 (got_webrtc_78 - 78 374 452 )
Partition 55 (pretmp.878_79 - 79 )
Partition 56 (scrooge_80 - 80 213 )
Partition 57 (reneg_81 - 81 82 349 352 353 1589 )
Partition 58 (pretmp.874_83 - 83 )
Partition 59 (codec_array_84 - 84 190 360 )
Partition 60 (total_codecs_85 - 85 192 365 )
Partition 61 (pretmp.880_86 - 86 )
Partition 62 (codec_ms_91 - 87 88 89 90 91 93 94 386 477 589 617 1720 1883 )
Partition 63 (pretmp.928_92 - 92 )
Partition 64 (D.49971_95 - 95 )
Partition 65 (remote_codec_rate_97 - 96 97 596 1493 )
Partition 66 (pretmp.936_98 - 98 )
Partition 67 (fmtp_remote_codec_rate_99 - 99 618 )
Partition 68 (m_idx_100 - 100 102 103 105 109 113 703 792 819 863 906 910 953 1018 1487 1715 1745 1869 1905 )
Partition 69 (pretmp.935_101 - 101 )
Partition 70 (pretmp.927_104 - 104 )
Partition 71 (pretmp.895_106 - 106 )
Partition 72 (pretmp.888_107 - 107 )
Partition 73 (connection_110 - 110 880 )
Partition 74 (pretmp.899_111 - 111 )
Partition 75 (pretmp.906_112 - 112 )
Partition 76 (pretmp.934_116 - 116 )
Partition 77 (nm_idx_117 - 115 117 119 121 701 843 901 912 1139 1749 1755 )
Partition 78 (pretmp.926_118 - 118 )
Partition 79 (pretmp.894_120 - 120 )
Partition 80 (pretmp.878_122 - 122 )
Partition 81 (pretmp.880_124 - 124 )
Partition 82 (pretmp.898_125 - 125 )
Partition 83 (pass_126 - 126 406 409 1848 )
Partition 84 (pretmp.876_127 - 127 )
Partition 85 (pretmp.925_128 - 128 )
Partition 86 (pretmp.933_129 - 129 )
Partition 87 (rm_encoding_130 - 130 561 )
Partition 88 (map_bit_rate_132 - 131 132 614 1479 1480 )
Partition 89 (pretmp.972_133 - 133 )
Partition 90 (timp_134 - 134 732 1785 )
Partition 91 (pretmp.923_135 - 135 )
Partition 92 (rm_encoding_137 - 137 979 )
Partition 93 (vmatch_138 - 138 1009 1012 )
Partition 94 (connection_139 - 139 555 )
Partition 95 (pretmp.903_140 - 140 )
Partition 96 (near_rate_145 - 145 725 729 )
Partition 97 (D.47922_146 - 146 1485 )
Partition 98 (session_161(D) - 161 )
Partition 99 (channel_162 - 162 )
Partition 100 (smh_186 - 186 )
Partition 101 (D.44471_191 - 191 )
Partition 102 (r_sdp_193(D) - 193 )
Partition 103 (D.44472_194 - 194 )
Partition 104 (D.44473_195 - 195 )
Partition 105 (parser_196 - 196 )
Partition 106 (sdp_198 - 198 )
Partition 107 (D.44478_200 - 200 )
Partition 108 (D.44481_201 - 201 )
Partition 109 (D.44482_202 - 202 )
Partition 110 (tmp_203 - 203 )
Partition 111 (pretmp.1000_204 - 204 )
Partition 112 (D.44481_205 - 205 )
Partition 113 (D.44482_206 - 206 )
Partition 114 (D.44481_207 - 207 )
Partition 115 (D.44482_208 - 208 )
Partition 116 (proceed_209(D) - 209 )
Partition 117 (D.44490_210 - 210 )
Partition 118 (D.44491_212 - 212 )
Partition 119 (val_214 - 214 )
Partition 120 (D.44494_215 - 215 )
Partition 121 (D.44498_218 - 218 )
Partition 122 (D.44502_221 - 221 )
Partition 123 (D.44506_224 - 224 )
Partition 124 (D.44507_225 - 225 )
Partition 125 (D.44508_226 - 226 )
Partition 126 (pretmp.992_227 - 227 )
Partition 127 (D.44471_228 - 228 )
Partition 128 (prephitmp.1053_229 - 229 323 326 )
Partition 129 (D.44513_230 - 230 )
Partition 130 (D.44514_231 - 231 )
Partition 131 (pretmp.995_233 - 233 )
Partition 132 (D.44518_234 - 234 )
Partition 133 (D.44521_235 - 235 )
Partition 134 (D.44522_236 - 236 )
Partition 135 (D.49960_238 - 238 )
Partition 136 (D.44523_239 - 239 )
Partition 137 (D.44509_240 - 240 )
Partition 138 (D.44526_241 - 241 )
Partition 139 (D.44521_242 - 242 )
Partition 140 (D.44529_243 - 243 )
Partition 141 (D.44530_244 - 244 )
Partition 142 (val_245 - 245 )
Partition 143 (pretmp.997_246 - 246 )
Partition 144 (D.44530_247 - 247 )
Partition 145 (m_248 - 248 )
Partition 146 (D.44540_249 - 249 )
Partition 147 (D.44541_250 - 250 )
Partition 148 (D.44542_251 - 251 )
Partition 149 (D.44543_252 - 252 )
Partition 150 (D.44544_253 - 253 )
Partition 151 (D.44546_254 - 254 )
Partition 152 (map_255 - 255 559 711 1728 )
Partition 153 (D.44548_256 - 256 )
Partition 154 (pretmp.1020_299 - 299 )
Partition 155 (__result_300 - 300 )
Partition 156 (D.44590_304 - 304 )
Partition 157 (D.44594_307 - 307 )
Partition 158 (D.44530_309 - 309 )
Partition 159 (D.44598_311 - 311 )
Partition 160 (D.44530_313 - 313 )
Partition 161 (D.44602_315 - 315 )
Partition 162 (D.44530_316 - 316 )
Partition 163 (D.44605_318 - 318 )
Partition 164 (D.44606_319 - 319 )
Partition 165 (D.44605_320 - 320 )
Partition 166 (D.44530_321 - 321 )
Partition 167 (D.44530_322 - 322 )
Partition 168 (D.44614_324 - 324 )
Partition 169 (D.44616_327 - 327 )
Partition 170 (D.44619_328 - 328 )
Partition 171 (timp_330 - 330 )
Partition 172 (D.44621_331 - 331 )
Partition 173 (D.44619_332 - 332 )
Partition 174 (attr_334 - 303 334 1666 )
Partition 175 (D.44624_335 - 335 )
Partition 176 (D.44626_337 - 337 )
Partition 177 (D.44530_338 - 338 )
Partition 178 (D.44631_339 - 339 )
Partition 179 (D.44530_340 - 340 )
Partition 180 (val_341 - 341 )
Partition 181 (pretmp.969_342 - 342 )
Partition 182 (D.44471_343 - 343 )
Partition 183 (D.44636_344 - 344 )
Partition 184 (D.49951_345 - 345 )
Partition 185 (pretmp.922_347 - 347 )
Partition 186 (D.44640_348 - 348 )
Partition 187 (D.44530_350 - 350 )
Partition 188 (val_351 - 351 )
Partition 189 (D.44530_354 - 354 )
Partition 190 (val_355 - 355 )
Partition 191 (pretmp.923_356 - 356 )
Partition 192 (D.44649_357 - 357 )
Partition 193 (total_codecs_359 - 359 )
Partition 194 (D.44471_362 - 362 )
Partition 195 (pretmp.923_363 - 363 )
Partition 196 (D.44471_364 - 364 )
Partition 197 (D.44661_366 - 366 )
Partition 198 (D.44663_367 - 367 )
Partition 199 (D.44665_368 - 368 )
Partition 200 (D.44530_369 - 369 )
Partition 201 (D.44666_373 - 373 )
Partition 202 (D.44669_375 - 375 )
Partition 203 (D.44672_377 - 377 )
Partition 204 (D.44530_378 - 378 )
Partition 205 (D.44675_379 - 379 )
Partition 206 (D.44676_380 - 380 )
Partition 207 (D.44677_381 - 381 )
Partition 208 (D.44678_382 - 382 )
Partition 209 (ivtmp.1076_392 - 392 1045 1813 )
Partition 210 (D.44697_393 - 393 )
Partition 211 (t38_options_394 - 394 )
Partition 212 (D.44530_395 - 395 )
Partition 213 (D.44699_396 - 396 )
Partition 214 (D.44702_398 - 398 )
Partition 215 (D.44703_399 - 399 )
Partition 216 (D.44530_400 - 400 )
Partition 217 (var_402 - 402 )
Partition 218 (D.44481_403 - 403 )
Partition 219 (D.44482_404 - 404 )
Partition 220 (D.44706_405 - 405 )
Partition 221 (D.44530_407 - 407 )
Partition 222 (D.44707_408 - 408 )
Partition 223 (D.44716_410 - 410 )
Partition 224 (D.44481_412 - 412 )
Partition 225 (D.44482_413 - 413 )
Partition 226 (D.44723_414 - 414 )
Partition 227 (D.44530_415 - 415 )
Partition 228 (D.44724_416 - 416 )
Partition 229 (D.44530_417 - 417 )
Partition 230 (D.44726_418 - 418 )
Partition 231 (D.44530_419 - 419 )
Partition 232 (D.44728_420 - 420 )
Partition 233 (D.44605_421 - 421 )
Partition 234 (D.44730_422 - 422 )
Partition 235 (D.44733_424 - 424 )
Partition 236 (other_session.89_425 - 425 )
Partition 237 (other_channel_426 - 426 )
Partition 238 (D.44605_427 - 427 )
Partition 239 (remote_host_428 - 428 )
Partition 240 (D.44605_429 - 429 )
Partition 241 (remote_port_430 - 430 )
Partition 242 (D.44737_431 - 431 )
Partition 243 (D.44530_432 - 432 )
Partition 244 (D.44740_433 - 433 )
Partition 245 (D.44741_434 - 434 )
Partition 246 (other_session.89_435 - 435 )
Partition 247 (D.44530_438 - 438 )
Partition 248 (D.44742_439 - 439 )
Partition 249 (D.44743_440 - 440 )
Partition 250 (D.44530_441 - 441 )
Partition 251 (D.44746_442 - 442 )
Partition 252 (D.44747_443 - 443 )
Partition 253 (D.44750_444 - 444 )
Partition 254 (D.44751_445 - 445 )
Partition 255 (D.44752_446 - 446 )
Partition 256 (D.44750_447 - 447 )
Partition 257 (D.44753_448 - 448 )
Partition 258 (D.44756_449 - 449 )
Partition 259 (D.44757_450 - 450 )
Partition 260 (D.44758_451 - 451 )
Partition 261 (D.44760_453 - 453 )
Partition 262 (D.39032_454 - 454 )
Partition 263 (pretmp.892_455 - 455 )
Partition 264 (pretmp.882_456 - 456 )
Partition 265 (D.44530_457 - 457 )
Partition 266 (D.44764_458 - 458 )
Partition 267 (D.44530_459 - 459 )
Partition 268 (D.44765_460 - 460 )
Partition 269 (D.44766_461 - 461 )
Partition 270 (D.44750_462 - 462 )
Partition 271 (D.44760_463 - 463 )
Partition 272 (pretmp.890_464 - 464 )
Partition 273 (D.44762_465 - 465 )
Partition 274 (D.44767_466 - 466 )
Partition 275 (D.44750_467 - 467 )
Partition 276 (D.44762_468 - 468 )
Partition 277 (D.44767_469 - 469 )
Partition 278 (D.44530_470 - 470 )
Partition 279 (D.44750_471 - 471 )
Partition 280 (D.44760_472 - 472 )
Partition 281 (D.44530_473 - 473 )
Partition 282 (D.44605_474 - 474 )
Partition 283 (D.44750_475 - 475 )
Partition 284 (D.44760_476 - 476 )
Partition 285 (D.44762_478 - 478 )
Partition 286 (D.44768_479 - 479 )
Partition 287 (err.90_480 - 480 )
Partition 288 (other_session.89_481 - 481 )
Partition 289 (D.44481_482 - 482 )
Partition 290 (D.44482_483 - 483 )
Partition 291 (other_session.89_484 - 484 )
Partition 292 (D.44772_485 - 485 )
Partition 293 (other_session.89_486 - 486 )
Partition 294 (msg_487 - 487 )
Partition 295 (other_session.89_488 - 488 )
Partition 296 (D.44773_489 - 489 )
Partition 297 (other_session.89_490 - 490 )
Partition 298 (other_session.89_491 - 491 )
Partition 299 (D.44697_494 - 494 )
Partition 300 (D.44777_495 - 495 )
Partition 301 (D.44778_496 - 496 )
Partition 302 (D.44779_497 - 497 )
Partition 303 (D.44781_498 - 498 )
Partition 304 (D.44784_499 - 499 )
Partition 305 (D.44590_501 - 501 )
Partition 306 (D.44787_502 - 502 )
Partition 307 (D.44619_503 - 503 )
Partition 308 (attr_506 - 506 604 1559 )
Partition 309 (attr_507 - 500 507 548 922 1599 )
Partition 310 (D.44590_508 - 508 )
Partition 311 (D.44795_509 - 509 )
Partition 312 (D.44619_510 - 510 )
Partition 313 (D.44530_511 - 511 )
Partition 314 (got_savp_512 - 74 384 512 1711 1739 2166 )
Partition 315 (D.44619_513 - 513 )
Partition 316 (D.44799_515 - 515 )
Partition 317 (D.44471_516 - 516 )
Partition 318 (D.44800_517 - 517 )
Partition 319 (pretmp.896_518 - 518 )
Partition 320 (D.44805_520 - 520 )
Partition 321 (D.44619_521 - 521 )
Partition 322 (ivtmp.1062_522 - 522 1793 )
Partition 323 (D.44810_525 - 525 )
Partition 324 (D.44619_526 - 526 )
Partition 325 (D.44815_530 - 530 )
Partition 326 (prephitmp.1031_531 - 531 1639 1892 1895 )
Partition 327 (D.44471_533 - 533 )
Partition 328 (D.44821_534 - 534 )
Partition 329 (D.44822_535 - 535 )
Partition 330 (D.44530_536 - 536 )
Partition 331 (D.44825_537 - 537 )
Partition 332 (D.44666_539 - 539 )
Partition 333 (D.44829_540 - 540 )
Partition 334 (D.44830_541 - 541 )
Partition 335 (D.44831_542 - 542 )
Partition 336 (sdp_type_546(D) - 546 )
Partition 337 (D.44834_549 - 549 )
Partition 338 (D.44835_550 - 550 )
Partition 339 (D.44836_551 - 551 )
Partition 340 (D.44839_552 - 552 )
Partition 341 (connection_554 - 554 )
Partition 342 (D.44848_563 - 563 )
Partition 343 (D.44854_564 - 564 )
Partition 344 (D.44750_565 - 565 )
Partition 345 (D.44855_566 - 566 )
Partition 346 (D.44856_567 - 567 )
Partition 347 (D.44857_569 - 569 )
Partition 348 (D.44858_570 - 570 )
Partition 349 (D.44863_571 - 571 )
Partition 350 (D.44856_572 - 572 )
Partition 351 (D.44605_574 - 574 )
Partition 352 (D.44868_575 - 575 )
Partition 353 (D.44605_576 - 576 )
Partition 354 (D.44471_577 - 577 )
Partition 355 (D.44869_578 - 578 )
Partition 356 (pretmp.908_580 - 580 )
Partition 357 (D.44877_582 - 582 )
Partition 358 (D.44878_583 - 583 )
Partition 359 (D.44879_584 - 584 )
Partition 360 (D.44856_586 - 586 )
Partition 361 (D.44884_587 - 587 )
Partition 362 (D.44885_588 - 588 )
Partition 363 (D.44856_590 - 590 )
Partition 364 (csui.173_591 - 591 )
Partition 365 (D.44889_593 - 593 )
Partition 366 (D.44890_594 - 594 )
Partition 367 (D.44893_598 - 598 )
Partition 368 (D.44889_600 - 600 )
Partition 369 (D.44897_601 - 601 )
Partition 370 (D.44901_605 - 605 )
Partition 371 (D.44889_608 - 608 )
Partition 372 (D.44854_610 - 610 )
Partition 373 (D.44905_611 - 611 )
Partition 374 (D.44908_612 - 612 )
Partition 375 (D.44911_615 - 615 )
Partition 376 (near_rate.96_616 - 616 724 )
Partition 377 (attr_619 - 619 886 893 978 1162 )
Partition 378 (D.44471_621 - 621 )
Partition 379 (D.44996_622 - 622 )
Partition 380 (D.44997_623 - 623 )
Partition 381 (D.44998_624 - 624 )
Partition 382 (D.44999_625 - 625 )
Partition 383 (ivtmp.1083_626 - 626 627 )
Partition 384 (D.49978_628 - 628 )
Partition 385 (imp_629 - 629 )
Partition 386 (D.44920_630 - 630 )
Partition 387 (bit_rate_631 - 631 )
Partition 388 (codec_rate_632 - 632 )
Partition 389 (D.44921_633 - 633 )
Partition 390 (D.44856_634 - 634 )
Partition 391 (D.44924_635 - 635 )
Partition 392 (remote_codec_rate.92_636 - 636 )
Partition 393 (D.44926_637 - 637 )
Partition 394 (D.44927_638 - 638 )
Partition 395 (D.44928_639 - 639 )
Partition 396 (D.44929_640 - 640 )
Partition 397 (D.44930_641 - 641 )
Partition 398 (D.44889_642 - 642 )
Partition 399 (D.44471_644 - 644 )
Partition 400 (D.44821_645 - 645 )
Partition 401 (D.44936_646 - 646 )
Partition 402 (D.44937_647 - 647 )
Partition 403 (D.44856_649 - 649 )
Partition 404 (D.44924_650 - 650 )
Partition 405 (D.44927_653 - 653 )
Partition 406 (D.44928_654 - 654 )
Partition 407 (D.44926_656 - 656 )
Partition 408 (D.44944_657 - 657 )
Partition 409 (D.44947_658 - 658 )
Partition 410 (D.44955_666 - 666 )
Partition 411 (D.44956_667 - 667 )
Partition 412 (D.44957_668 - 668 )
Partition 413 (D.44960_670 - 670 )
Partition 414 (got_avp_671 - 68 388 671 1740 1859 2186 )
Partition 415 (D.44963_672 - 672 )
Partition 416 (D.44968_675 - 675 )
Partition 417 (D.44969_676 - 676 )
Partition 418 (D.44972_677 - 677 )
Partition 419 (D.44973_678 - 678 )
Partition 420 (D.44974_679 - 679 )
Partition 421 (D.44977_681 - 681 )
Partition 422 (D.44979_683 - 683 )
Partition 423 (D.44926_685 - 685 )
Partition 424 (D.44984_686 - 686 )
Partition 425 (D.44929_687 - 687 )
Partition 426 (D.44930_688 - 688 )
Partition 427 (D.44989_689 - 689 )
Partition 428 (D.44990_690 - 690 )
Partition 429 (D.44991_691 - 691 )
Partition 430 (D.44993_692 - 692 )
Partition 431 (prephitmp.1043_693 - 693 1680 1736 )
Partition 432 (D.44926_695 - 695 )
Partition 433 (D.44927_696 - 696 )
Partition 434 (D.44928_697 - 697 )
Partition 435 (D.44930_699 - 699 )
Partition 436 (remote_codec_rate.92_700 - 700 )
Partition 437 (codec_rate.94_702 - 702 )
Partition 438 (D.44926_704 - 704 )
Partition 439 (D.44927_705 - 705 )
Partition 440 (D.44928_706 - 706 )
Partition 441 (D.44929_707 - 707 )
Partition 442 (D.44930_708 - 708 )
Partition 443 (i_710 - 710 1622 )
Partition 444 (D.45001_712 - 712 )
Partition 445 (D.45002_713 - 713 )
Partition 446 (D.45003_714 - 714 )
Partition 447 (D.45004_715 - 715 )
Partition 448 (D.45007_719 - 719 )
Partition 449 (D.45008_720 - 720 )
Partition 450 (D.45009_721 - 721 )
Partition 451 (near_match_726 - 726 )
Partition 452 (near_map_727 - 727 1787 )
Partition 453 (D.45013_728 - 728 )
Partition 454 (num_731 - 731 )
Partition 455 (D.45024_734 - 734 )
Partition 456 (prephitmp.1039_735 - 735 846 857 )
Partition 457 (j_736 - 736 1786 1845 )
Partition 458 (D.45026_737 - 737 )
Partition 459 (D.45027_740 - 740 )
Partition 460 (D.45028_742 - 742 )
Partition 461 (pretmp.916_744 - 744 )
Partition 462 (D.45034_747 - 747 )
Partition 463 (D.45035_748 - 748 )
Partition 464 (prephitmp.1055_749 - 749 1679 1735 1807 1879 )
Partition 465 (D.45036_750 - 750 )
Partition 466 (D.45037_752 - 752 )
Partition 467 (D.45038_753 - 753 )
Partition 468 (D.45039_754 - 754 )
Partition 469 (D.45040_755 - 755 )
Partition 470 (ivtmp.1067_756 - 237 756 1654 )
Partition 471 (D.45041_757 - 757 )
Partition 472 (D.45042_758 - 758 )
Partition 473 (D.45043_759 - 759 )
Partition 474 (pmap_760 - 760 )
Partition 475 (mimp_761 - 761 )
Partition 476 (mmap_762 - 762 )
Partition 477 (D.44605_764 - 764 )
Partition 478 (D.45048_766 - 766 )
Partition 479 (D.45049_767 - 767 )
Partition 480 (D.45050_768 - 768 )
Partition 481 (D.45051_769 - 769 )
Partition 482 (D.45052_770 - 770 )
Partition 483 (D.45053_771 - 771 )
Partition 484 (D.45054_772 - 772 )
Partition 485 (D.45055_773 - 773 )
Partition 486 (D.45051_775 - 775 )
Partition 487 (D.45056_776 - 776 )
Partition 488 (D.45059_777 - 777 )
Partition 489 (D.45060_778 - 778 )
Partition 490 (D.45061_779 - 779 )
Partition 491 (D.45062_780 - 780 )
Partition 492 (D.45063_781 - 781 )
Partition 493 (D.45064_782 - 782 )
Partition 494 (D.45066_783 - 783 )
Partition 495 (pretmp.1046_784 - 784 )
Partition 496 (D.45049_787 - 787 )
Partition 497 (D.45070_788 - 788 )
Partition 498 (D.45079_790 - 790 )
Partition 499 (D.45082_793 - 793 )
Partition 500 (D.45085_795 - 795 )
Partition 501 (D.45086_796 - 796 )
Partition 502 (D.44697_797 - 797 )
Partition 503 (D.45087_798 - 798 )
Partition 504 (D.45079_799 - 799 )
Partition 505 (D.45088_800 - 800 )
Partition 506 (D.45053_801 - 801 )
Partition 507 (D.45054_802 - 802 )
Partition 508 (D.44655_803 - 803 )
Partition 509 (D.45089_804 - 804 )
Partition 510 (D.45053_805 - 805 )
Partition 511 (D.45054_806 - 806 )
Partition 512 (j_807 - 807 1881 )
Partition 513 (D.44750_808 - 808 )
Partition 514 (D.44762_809 - 809 )
Partition 515 (D.44767_810 - 810 )
Partition 516 (D.44530_811 - 811 )
Partition 517 (D.44750_812 - 812 )
Partition 518 (D.44760_813 - 813 )
Partition 519 (D.44530_814 - 814 )
Partition 520 (D.44750_815 - 815 )
Partition 521 (D.45092_816 - 816 )
Partition 522 (D.45093_817 - 817 )
Partition 523 (D.44530_818 - 818 )
Partition 524 (D.44471_821 - 821 )
Partition 525 (D.45098_822 - 822 )
Partition 526 (D.45099_823 - 823 )
Partition 527 (D.45107_826 - 826 )
Partition 528 (D.44530_827 - 827 )
Partition 529 (D.45109_828 - 828 )
Partition 530 (D.44471_829 - 829 )
Partition 531 (D.45110_830 - 830 )
Partition 532 (D.45111_831 - 831 )
Partition 533 (D.44471_832 - 832 )
Partition 534 (best_te_833 - 833 )
Partition 535 (D.45114_834 - 834 )
Partition 536 (D.44471_835 - 835 )
Partition 537 (D.44857_837 - 837 )
Partition 538 (D.44530_838 - 838 )
Partition 539 (D.44471_839 - 839 )
Partition 540 (D.44605_840 - 840 )
Partition 541 (D.44530_842 - 842 )
Partition 542 (D.44471_845 - 845 )
Partition 543 (pretmp.909_847 - 847 )
Partition 544 (D.45120_848 - 848 )
Partition 545 (D.44530_849 - 849 )
Partition 546 (D.44471_850 - 850 )
Partition 547 (D.44605_851 - 851 )
Partition 548 (pretmp.999_852 - 852 )
Partition 549 (D.44530_853 - 853 )
Partition 550 (pretmp.999_854 - 854 )
Partition 551 (D.44605_855 - 855 )
Partition 552 (D.44530_856 - 856 )
Partition 553 (D.45124_858 - 858 )
Partition 554 (pretmp.1000_859 - 859 )
Partition 555 (D.44530_860 - 860 )
Partition 556 (D.44471_861 - 861 )
Partition 557 (i_864 - 864 1020 )
Partition 558 (D.44530_866 - 866 )
Partition 559 (D.44471_867 - 867 )
Partition 560 (D.49988_872 - 872 )
Partition 561 (D.44697_873 - 873 )
Partition 562 (D.44530_878 - 878 )
Partition 563 (connection_879 - 879 )
Partition 564 (pretmp.921_881 - 881 )
Partition 565 (D.45137_884 - 884 )
Partition 566 (D.45140_885 - 885 )
Partition 567 (D.44590_887 - 887 )
Partition 568 (D.45143_888 - 888 )
Partition 569 (D.44619_889 - 889 )
Partition 570 (attr_892 - 892 1791 1850 )
Partition 571 (D.44590_894 - 894 )
Partition 572 (D.45151_895 - 895 )
Partition 573 (D.44619_896 - 896 )
Partition 574 (D.45154_898 - 898 )
Partition 575 (D.44619_899 - 899 )
Partition 576 (D.45160_902 - 902 )
Partition 577 (D.45163_903 - 903 )
Partition 578 (D.45164_904 - 904 )
Partition 579 (D.44471_905 - 905 )
Partition 580 (D.45168_907 - 907 )
Partition 581 (D.44619_908 - 908 )
Partition 582 (D.45174_911 - 911 )
Partition 583 (D.45185_921 - 921 )
Partition 584 (D.44530_952 - 952 )
Partition 585 (D.44619_954 - 954 )
Partition 586 (D.45213_956 - 956 )
Partition 587 (D.44471_957 - 957 )
Partition 588 (D.45214_958 - 958 )
Partition 589 (D.45219_961 - 961 )
Partition 590 (prephitmp.1031_962 - 962 1812 1889 1890 )
Partition 591 (D.44471_964 - 964 )
Partition 592 (D.44821_965 - 965 )
Partition 593 (D.44822_966 - 966 )
Partition 594 (D.44530_967 - 967 )
Partition 595 (D.45227_968 - 968 )
Partition 596 (D.44666_970 - 970 )
Partition 597 (D.44829_971 - 971 )
Partition 598 (D.44830_972 - 972 )
Partition 599 (D.44831_973 - 973 )
Partition 600 (imp_985 - 985 )
Partition 601 (D.45238_986 - 986 )
Partition 602 (D.44530_987 - 987 )
Partition 603 (D.45241_988 - 988 )
Partition 604 (D.44530_989 - 989 )
Partition 605 (D.45244_990 - 990 )
Partition 606 (D.45247_991 - 991 )
Partition 607 (D.45248_992 - 992 )
Partition 608 (D.45249_993 - 993 )
Partition 609 (D.45250_994 - 994 )
Partition 610 (D.45251_995 - 995 )
Partition 611 (D.45255_996 - 996 )
Partition 612 (D.44471_998 - 998 )
Partition 613 (D.44821_999 - 999 )
Partition 614 (D.44936_1000 - 1000 )
Partition 615 (D.44937_1001 - 1001 )
Partition 616 (D.45247_1003 - 1003 )
Partition 617 (D.45248_1004 - 1004 )
Partition 618 (D.45250_1007 - 1007 )
Partition 619 (D.45251_1008 - 1008 )
Partition 620 (D.45249_1010 - 1010 )
Partition 621 (D.45259_1011 - 1011 )
Partition 622 (D.45262_1013 - 1013 )
Partition 623 (D.45263_1014 - 1014 )
Partition 624 (D.45249_1015 - 1015 )
Partition 625 (D.45250_1016 - 1016 )
Partition 626 (D.45251_1017 - 1017 )
Partition 627 (map_1021 - 883 1021 1620 )
Partition 628 (D.45001_1022 - 1022 )
Partition 629 (D.45002_1023 - 1023 )
Partition 630 (D.45266_1024 - 1024 )
Partition 631 (D.45267_1025 - 1025 )
Partition 632 (D.45274_1031 - 1031 )
Partition 633 (D.45275_1032 - 1032 )
Partition 634 (D.45276_1034 - 1034 )
Partition 635 (D.45277_1036 - 1036 )
Partition 636 (D.45278_1037 - 1037 )
Partition 637 (D.45279_1038 - 1038 )
Partition 638 (D.45280_1039 - 1039 )
Partition 639 (D.45281_1041 - 1041 )
Partition 640 (D.45282_1042 - 1042 )
Partition 641 (D.45283_1043 - 1043 )
Partition 642 (pmap_1044 - 1044 )
Partition 643 (D.45287_1046 - 1046 )
Partition 644 (D.45290_1048 - 1048 )
Partition 645 (mimp_1049 - 1049 )
Partition 646 (map_1050 - 1050 )
Partition 647 (D.45255_1051 - 1051 )
Partition 648 (D.45291_1052 - 1052 )
Partition 649 (D.45247_1053 - 1053 )
Partition 650 (D.45292_1054 - 1054 )
Partition 651 (D.45262_1055 - 1055 )
Partition 652 (D.45293_1056 - 1056 )
Partition 653 (D.45294_1057 - 1057 )
Partition 654 (D.45295_1058 - 1058 )
Partition 655 (D.45085_1059 - 1059 )
Partition 656 (D.45296_1060 - 1060 )
Partition 657 (D.44697_1061 - 1061 )
Partition 658 (D.45087_1062 - 1062 )
Partition 659 (D.45297_1063 - 1063 )
Partition 660 (D.45298_1064 - 1064 )
Partition 661 (D.45247_1065 - 1065 )
Partition 662 (D.45292_1066 - 1066 )
Partition 663 (j_1067 - 1067 1844 )
Partition 664 (D.45286_1068 - 1068 )
Partition 665 (D.45299_1069 - 1069 )
Partition 666 (D.45300_1070 - 1070 )
Partition 667 (D.44530_1071 - 1071 )
Partition 668 (D.45286_1072 - 1072 )
Partition 669 (D.45301_1073 - 1073 )
Partition 670 (D.44530_1074 - 1074 )
Partition 671 (D.44530_1075 - 1075 )
Partition 672 (D.45286_1076 - 1076 )
Partition 673 (D.45302_1077 - 1077 )
Partition 674 (D.45286_1078 - 1078 )
Partition 675 (D.45303_1079 - 1079 )
Partition 676 (D.45304_1080 - 1080 )
Partition 677 (D.44530_1081 - 1081 )
Partition 678 (D.45286_1082 - 1082 )
Partition 679 (D.45305_1083 - 1083 )
Partition 680 (D.45306_1084 - 1084 )
Partition 681 (D.44530_1085 - 1085 )
Partition 682 (D.45316_1092 - 1092 )
Partition 683 (m_1093 - 370 1093 1764 1789 )
Partition 684 (D.44471_1094 - 1094 )
Partition 685 (pretmp.974_1103 - 1103 )
Partition 686 (pretmp.950_1125 - 1125 )
Partition 687 (pretmp.879_1126 - 1126 )
Partition 688 (pretmp.880_1127 - 1127 )
Partition 689 (pretmp.956_1130 - 1130 )
Partition 690 (pretmp.932_1133 - 1133 )
Partition 691 (pretmp.957_1134 - 1134 )
Partition 692 (pretmp.924_1136 - 1136 )
Partition 693 (pretmp.887_1140 - 1140 )
Partition 694 (pretmp.923_1147 - 1147 )
Partition 695 (D.44999_1152 - 1152 )
Partition 696 (pretmp.911_1157 - 1157 )
Partition 697 (pretmp.904_1161 - 1161 )
Partition 698 (pretmp.939_1163 - 1163 )
Partition 699 (pretmp.940_1166 - 1166 )
Partition 700 (pretmp.879_1169 - 1169 )
Partition 701 (pretmp.991_1458 - 1458 )
Partition 702 (pmap_1459 - 1457 1459 1747 2093 )
Partition 703 (D.47871_1460 - 1460 )
Partition 704 (pretmp.987_1462 - 1462 )
Partition 705 (pmap_1463 - 1461 1463 1672 2126 )
Partition 706 (D.47874_1464 - 1464 )
Partition 707 (D.47877_1465 - 1465 )
Partition 708 (pretmp.960_1466 - 1466 )
Partition 709 (D.47887_1469 - 1469 )
Partition 710 (D.47890_1471 - 1471 )
Partition 711 (D.47900_1474 - 1474 )
Partition 712 (crypto_tag_1476 - 1476 )
Partition 713 (D.47915_1481 - 1481 )
Partition 714 (pretmp.954_1482 - 1482 )
Partition 715 (D.47919_1483 - 1483 )
Partition 716 (pretmp.955_1484 - 1484 )
Partition 717 (D.47926_1486 - 1486 )
Partition 718 (D.47934_1488 - 1488 )
Partition 719 (D.47933_1489 - 1489 )
Partition 720 (D.47932_1490 - 1490 )
Partition 721 (D.47931_1491 - 1491 )
Partition 722 (D.47930_1492 - 1492 )
Partition 723 (D.47939_1495 - 1495 )
Partition 724 (D.44997_1496 - 1496 )
Partition 725 (D.47943_1497 - 1497 )
Partition 726 (D.44996_1498 - 1498 )
Partition 727 (D.47946_1499 - 1499 )
Partition 728 (D.47950_1500 - 1500 )
Partition 729 (D.44471_1501 - 1501 )
Partition 730 (crypto_tag_1502 - 1502 )
Partition 731 (D.47957_1503 - 1503 )
Partition 732 (pretmp.938_1504 - 1504 )
Partition 733 (D.47965_1505 - 1505 )
Partition 734 (D.47964_1506 - 1506 )
Partition 735 (D.47963_1507 - 1507 )
Partition 736 (D.47962_1508 - 1508 )
Partition 737 (D.47961_1509 - 1509 )
Partition 738 (pretmp.941_1510 - 1510 )
Partition 739 (pretmp.990_1512 - 1512 )
Partition 740 (pretmp.986_1513 - 1513 )
Partition 741 (D.49675_1550 - 1550 )
Partition 742 (D.49676_1551 - 1551 )
Partition 743 (D.49677_1552 - 1552 )
Partition 744 (D.49678_1553 - 1553 )
Partition 745 (D.49679_1554 - 1554 )
Partition 746 (D.49680_1555 - 1555 )
Partition 747 (D.49681_1556 - 1556 )
Partition 748 (D.49682_1557 - 1557 )
Partition 749 (D.49683_1558 - 1558 )
Partition 750 (D.49687_1560 - 1560 )
Partition 751 (D.49688_1561 - 1561 )
Partition 752 (D.49689_1562 - 1562 )
Partition 753 (D.49690_1563 - 1563 )
Partition 754 (D.49691_1564 - 1564 )
Partition 755 (D.49692_1565 - 1565 )
Partition 756 (D.49693_1566 - 1566 )
Partition 757 (D.49694_1567 - 1567 )
Partition 758 (D.49695_1568 - 1568 )
Partition 759 (pretmp.960_1569 - 1569 )
Partition 760 (D.49699_1570 - 1570 )
Partition 761 (D.49700_1571 - 1571 )
Partition 762 (D.49701_1572 - 1572 )
Partition 763 (D.49702_1573 - 1573 )
Partition 764 (D.49703_1574 - 1574 )
Partition 765 (D.49704_1575 - 1575 )
Partition 766 (D.49705_1576 - 1576 )
Partition 767 (D.49706_1577 - 1577 )
Partition 768 (D.49707_1578 - 1578 )
Partition 769 (D.49711_1580 - 1580 )
Partition 770 (D.49712_1581 - 1581 )
Partition 771 (D.49713_1582 - 1582 )
Partition 772 (D.49714_1583 - 1583 )
Partition 773 (D.49715_1584 - 1584 )
Partition 774 (D.49716_1585 - 1585 )
Partition 775 (D.49717_1586 - 1586 )
Partition 776 (D.49718_1587 - 1587 )
Partition 777 (D.49719_1588 - 1588 )
Partition 778 (D.49723_1590 - 1590 )
Partition 779 (D.49724_1591 - 1591 )
Partition 780 (D.49725_1592 - 1592 )
Partition 781 (D.49726_1593 - 1593 )
Partition 782 (D.49727_1594 - 1594 )
Partition 783 (D.49728_1595 - 1595 )
Partition 784 (D.49729_1596 - 1596 )
Partition 785 (D.49730_1597 - 1597 )
Partition 786 (D.49731_1598 - 1598 )
Partition 787 (D.49735_1600 - 1600 )
Partition 788 (D.49736_1601 - 1601 )
Partition 789 (D.49737_1602 - 1602 )
Partition 790 (D.49738_1603 - 1603 )
Partition 791 (D.49739_1604 - 1604 )
Partition 792 (D.49740_1605 - 1605 )
Partition 793 (D.49741_1606 - 1606 )
Partition 794 (D.49742_1607 - 1607 )
Partition 795 (D.49743_1608 - 1608 )
Partition 796 (D.44998_1609 - 1609 )
Partition 797 (D.49747_1610 - 1610 )
Partition 798 (D.49748_1611 - 1611 )
Partition 799 (D.49749_1612 - 1612 )
Partition 800 (D.49750_1613 - 1613 )
Partition 801 (D.49751_1614 - 1614 )
Partition 802 (D.49752_1615 - 1615 )
Partition 803 (D.49753_1616 - 1616 )
Partition 804 (D.49754_1617 - 1617 )
Partition 805 (D.49755_1618 - 1618 )
Partition 806 (pretmp.937_1619 - 1619 )
Partition 807 (pretmp.877_1628 - 1628 )
Partition 808 (pretmp.898_1630 - 1630 )
Partition 809 (pretmp.905_1632 - 1632 )
Partition 810 (pretmp.999_1636 - 1636 )
Partition 811 (pretmp.968_1642 - 1642 )
Partition 812 (pretmp.1003_1651 - 1651 )
Partition 813 (pretmp.1011_1655 - 1655 )
Partition 814 (pretmp.1009_1656 - 1656 )
Partition 815 (pretmp.1004_1657 - 1657 )
Partition 816 (pretmp.1005_1658 - 1658 )
Partition 817 (pretmp.1007_1659 - 1659 )
Partition 818 (pretmp.1006_1660 - 1660 )
Partition 819 (D.47871_1661 - 1661 )
Partition 820 (pretmp.992_1662 - 1662 )
Partition 821 (pretmp.980_1665 - 1665 )
Partition 822 (pretmp.944_1668 - 1668 )
Partition 823 (D.47874_1670 - 1670 )
Partition 824 (prephitmp.1047_1677 - 789 1677 1734 1806 1810 )
Partition 825 (prephitmp.1026_1682 - 1682 1683 )
Partition 826 (pretmp.1019_1686 - 1686 )
Partition 827 (pretmp.1018_1687 - 1687 )
Partition 828 (pretmp.988_1688 - 1688 )
Partition 829 (pretmp.985_1690 - 1690 )
Partition 830 (pretmp.984_1691 - 1691 )
Partition 831 (pretmp.981_1692 - 1692 )
Partition 832 (pretmp.949_1694 - 1694 )
Partition 833 (pretmp.947_1695 - 1695 )
Partition 834 (pretmp.967_1697 - 1697 )
Partition 835 (pretmp.875_1698 - 1698 )
Partition 836 (pretmp.943_1699 - 1699 )
Partition 837 (pretmp.1054_1710 - 1710 )
Partition 838 (pretmp.893_1713 - 1713 )
Partition 839 (pretmp.961_1714 - 1714 )
Partition 840 (pretmp.883_1718 - 1718 )
Partition 841 (pretmp.992_1737 - 1737 )
Partition 842 (pretmp.962_1741 - 1741 )
Partition 843 (pretmp.960_1742 - 1742 )
Partition 844 (pretmp.886_1746 - 1746 )
Partition 845 (pretmp.891_1748 - 1748 )
Partition 846 (pretmp.883_1751 - 1751 )
Partition 847 (pretmp.880_1752 - 1752 )
Partition 848 (pretmp.946_1753 - 1753 )
Partition 849 (prephitmp.1049_1808 - 346 383 387 1673 1805 1808 1814 )
Partition 850 (pretmp.1050_1809 - 1809 )
Partition 851 (pretmp.1024_1815 - 1815 )
Partition 852 (pretmp.1023_1816 - 1816 )
Partition 853 (pretmp.1021_1817 - 1817 )
Partition 854 (pretmp.1022_1818 - 1818 )
Partition 855 (pretmp.1017_1819 - 1819 )
Partition 856 (pretmp.998_1820 - 1820 )
Partition 857 (pretmp.993_1821 - 1821 )
Partition 858 (pretmp.996_1822 - 1822 )
Partition 859 (pretmp.1013_1823 - 1823 )
Partition 860 (pretmp.1012_1824 - 1824 )
Partition 861 (pretmp.1001_1825 - 1825 )
Partition 862 (pretmp.1002_1826 - 1826 )
Partition 863 (pretmp.994_1827 - 1827 )
Partition 864 (pretmp.992_1828 - 1828 )
Partition 865 (pretmp.999_1829 - 1829 )
Partition 866 (pretmp.999_1830 - 1830 )
Partition 867 (pretmp.1010_1831 - 1831 )
Partition 868 (pretmp.1008_1832 - 1832 )
Partition 869 (pretmp.1015_1833 - 1833 )
Partition 870 (pretmp.1016_1834 - 1834 )
Partition 871 (pretmp.1014_1835 - 1835 )
Partition 872 (pretmp.989_1840 - 1840 )
Partition 873 (pretmp.982_1841 - 1841 )
Partition 874 (pretmp.983_1842 - 1842 )
Partition 875 (pretmp.884_1847 - 1847 )
Partition 876 (pretmp.920_1853 - 1853 )
Partition 877 (pretmp.919_1855 - 1855 )
Partition 878 (pretmp.964_1861 - 1861 )
Partition 879 (pretmp.963_1862 - 1862 )
Partition 880 (pretmp.962_1863 - 1863 )
Partition 881 (got_udptl_1868 - 391 774 1743 1868 2172 )
Partition 882 (pretmp.971_1870 - 1870 )
Partition 883 (pretmp.910_1871 - 1871 )
Partition 884 (pretmp.970_1874 - 1874 )
Partition 885 (pretmp.945_1875 - 1875 )
Partition 886 (pretmp.924_1876 - 1876 )
Partition 887 (pretmp.923_1877 - 1877 )
Partition 888 (pretmp.948_1886 - 1886 )
Partition 889 (pretmp.876_1888 - 1888 )
Partition 890 (pretmp.942_1893 - 1893 )
Partition 891 (pretmp.1036_1896 - 1896 )
Partition 892 (pretmp.966_1899 - 1899 )
Partition 893 (pretmp.965_1900 - 1900 )


Replacing Expressions
D.49971_95 replace with --> D.49971_95 = (void *) ivtmp.1076_392;

D.44471_191 replace with --> D.44471_191 = smh_186->mparams;

D.44473_195 replace with --> D.44473_195 = (int) D.44472_194;

D.44481_201 replace with --> D.44481_201 = smh_186->session;

D.44482_202 replace with --> D.44482_202 = D.44481_201->channel;

D.44481_205 replace with --> D.44481_205 = smh_186->session;

D.44482_206 replace with --> D.44482_206 = D.44481_205->channel;

D.44481_207 replace with --> D.44481_207 = smh_186->session;

D.44482_208 replace with --> D.44482_208 = D.44481_207->channel;

D.44506_224 replace with --> D.44506_224 = sdp_198->sdp_origin;

D.44507_225 replace with --> D.44507_225 = D.44506_224->o_username;

D.44471_228 replace with --> D.44471_228 = smh_186->mparams;

D.44513_230 replace with --> D.44513_230 = (int) prephitmp.1053_229;

D.44514_231 replace with --> D.44514_231 = D.44513_230 & 1;

D.44521_235 replace with --> D.44521_235 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;

D.44522_236 replace with --> D.44522_236 = D.44521_235 | 1;

D.44523_239 replace with --> D.44523_239 = prephitmp.1053_326 & 2;

D.44509_240 replace with --> D.44509_240 = smh_186->origin;

D.44521_242 replace with --> D.44521_242 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;

D.44529_243 replace with --> D.44529_243 = D.44521_242 | 2;

D.44530_244 replace with --> D.44530_244 = session_161(D)->channel;

D.44530_247 replace with --> D.44530_247 = session_161(D)->channel;

D.44540_249 replace with --> D.44540_249 = BIT_FIELD_REF <*m_248, 8, 544>;

D.44542_251 replace with --> D.44542_251 = D.44541_250 == 2;

D.44543_252 replace with --> D.44543_252 = D.44541_250 == 0;

D.44544_253 replace with --> D.44544_253 = D.44543_252 | D.44542_251;

D.44530_309 replace with --> D.44530_309 = session_161(D)->channel;

D.44530_313 replace with --> D.44530_313 = session_161(D)->channel;

D.44530_316 replace with --> D.44530_316 = session_161(D)->channel;

D.44605_318 replace with --> D.44605_318 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

D.44605_320 replace with --> D.44605_320 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

D.44530_321 replace with --> D.44530_321 = session_161(D)->channel;

D.44530_322 replace with --> D.44530_322 = session_161(D)->channel;

D.44619_328 replace with --> D.44619_328 = attr_1666->a_value;

D.44619_332 replace with --> D.44619_332 = attr_1666->a_value;

D.44624_335 replace with --> D.44624_335 = sendonly_1006 != 1;

D.44626_337 replace with --> D.44626_337 = D.44624_335 & prephitmp.1026_1682;

D.44530_338 replace with --> D.44530_338 = session_161(D)->channel;

D.44530_340 replace with --> D.44530_340 = session_161(D)->channel;

D.44636_344 replace with --> D.44636_344 = D.44471_343->hold_laps;

D.44530_350 replace with --> D.44530_350 = session_161(D)->channel;

D.44530_354 replace with --> D.44530_354 = session_161(D)->channel;

D.44649_357 replace with --> D.44649_357 = session_161(D)->bugs;

D.44471_362 replace with --> D.44471_362 = smh_186->mparams;

D.44471_364 replace with --> D.44471_364 = smh_186->mparams;

D.44530_369 replace with --> D.44530_369 = session_161(D)->channel;

D.44666_373 replace with --> D.44666_373 = m_1764->m_proto;

D.44530_378 replace with --> D.44530_378 = session_161(D)->channel;

D.44676_380 replace with --> D.44676_380 = D.44675_379 == 257;

D.44677_381 replace with --> D.44677_381 = D.44675_379 == 261;

D.44678_382 replace with --> D.44678_382 = D.44677_381 | D.44676_380;

D.44697_393 replace with --> D.44697_393 = m_1764->m_port;

D.44530_395 replace with --> D.44530_395 = session_161(D)->channel;

D.44530_400 replace with --> D.44530_400 = session_161(D)->channel;

D.44481_403 replace with --> D.44481_403 = smh_186->session;

D.44482_404 replace with --> D.44482_404 = D.44481_403->channel;

D.44530_407 replace with --> D.44530_407 = session_161(D)->channel;

D.44481_412 replace with --> D.44481_412 = smh_186->session;

D.44482_413 replace with --> D.44482_413 = D.44481_412->channel;

D.44530_415 replace with --> D.44530_415 = session_161(D)->channel;

D.44530_417 replace with --> D.44530_417 = session_161(D)->channel;

D.44530_419 replace with --> D.44530_419 = session_161(D)->channel;

D.44605_421 replace with --> D.44605_421 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

other_session.89_425 replace with --> other_session.89_425 = other_session;

D.44605_427 replace with --> D.44605_427 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

D.44605_429 replace with --> D.44605_429 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

D.44530_432 replace with --> D.44530_432 = session_161(D)->channel;

other_session.89_435 replace with --> other_session.89_435 = other_session;

D.44530_438 replace with --> D.44530_438 = session_161(D)->channel;

D.44530_441 replace with --> D.44530_441 = session_161(D)->channel;

D.44751_445 replace with --> D.44751_445 = t38_options_394->remote_ip;

D.44756_449 replace with --> D.44756_449 = remote_host_428 != 0B;

D.44757_450 replace with --> D.44757_450 = remote_port_430 != 0;

D.44758_451 replace with --> D.44758_451 = D.44757_450 & D.44756_449;

D.44760_453 replace with --> D.44760_453 = D.44750_447->remote_sdp_ip;

D.44530_457 replace with --> D.44530_457 = session_161(D)->channel;

D.44530_459 replace with --> D.44530_459 = session_161(D)->channel;

D.44766_461 replace with --> D.44766_461 = (int) remote_port_430;

D.44760_463 replace with --> D.44760_463 = D.44750_462->remote_sdp_ip;

D.44762_465 replace with --> D.44762_465 = D.44750_462->remote_sdp_port;

D.44767_466 replace with --> D.44767_466 = (int) D.44762_465;

D.44750_467 replace with --> D.44750_467 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

D.44762_468 replace with --> D.44762_468 = D.44750_467->remote_sdp_port;

D.44767_469 replace with --> D.44767_469 = (int) D.44762_468;

D.44530_470 replace with --> D.44530_470 = session_161(D)->channel;

D.44750_471 replace with --> D.44750_471 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

D.44760_472 replace with --> D.44760_472 = D.44750_471->remote_sdp_ip;

D.44530_473 replace with --> D.44530_473 = session_161(D)->channel;

D.44605_474 replace with --> D.44605_474 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

D.44760_476 replace with --> D.44760_476 = D.44750_475->remote_sdp_ip;

D.44762_478 replace with --> D.44762_478 = D.44750_475->remote_sdp_port;

err.90_480 replace with --> err.90_480 = err;

other_session.89_481 replace with --> other_session.89_481 = other_session;

D.44481_482 replace with --> D.44481_482 = smh_186->session;

D.44482_483 replace with --> D.44482_483 = D.44481_482->channel;

other_session.89_484 replace with --> other_session.89_484 = other_session;

D.44772_485 replace with --> D.44772_485 = other_session.89_484->channel;

other_session.89_486 replace with --> other_session.89_486 = other_session;

other_session.89_488 replace with --> other_session.89_488 = other_session;

other_session.89_490 replace with --> other_session.89_490 = other_session;

other_session.89_491 replace with --> other_session.89_491 = other_session;

D.44697_494 replace with --> D.44697_494 = m_1764->m_port;

D.44777_495 replace with --> D.44777_495 = D.44697_494 != 0;

D.44778_496 replace with --> D.44778_496 = got_audio_1693 == 0;

D.44779_497 replace with --> D.44779_497 = D.44778_496 & D.44777_495;

D.44590_501 replace with --> D.44590_501 = attr_1559->a_name;

D.44530_511 replace with --> D.44530_511 = session_161(D)->channel;

D.44619_513 replace with --> D.44619_513 = attr_1599->a_value;

D.44799_515 replace with --> D.44799_515 = (short unsigned int) D.47890_1471;

D.44800_517 replace with --> D.44800_517 = D.44471_516->rtcp_audio_interval_msec;

D.44471_533 replace with --> D.44471_533 = smh_186->mparams;

D.44821_534 replace with --> D.44821_534 = D.44471_533->ndlb;

D.44822_535 replace with --> D.44822_535 = D.44821_534 & 4;

D.44530_536 replace with --> D.44530_536 = session_161(D)->channel;

D.44666_539 replace with --> D.44666_539 = m_1764->m_proto;

D.44829_540 replace with --> D.44829_540 = D.44666_539 != 257;

D.44830_541 replace with --> D.44830_541 = got_webrtc_78 == 0;

D.44831_542 replace with --> D.44831_542 = D.44830_541 & D.44829_540;

D.44834_549 replace with --> D.44834_549 = got_crypto_969 == -1;

D.44835_550 replace with --> D.44835_550 = got_savp_1739 != 0;

D.44836_551 replace with --> D.44836_551 = D.44834_549 & D.44835_550;

D.44839_552 replace with --> D.44839_552 = got_avp_1859 | got_webrtc_78;

D.44854_564 replace with --> D.44854_564 = map_1728->rm_rate;

D.44750_565 replace with --> D.44750_565 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

D.44855_566 replace with --> D.44855_566 = D.44750_565->rm_rate;

D.44856_567 replace with --> D.44856_567 = map_1728->rm_pt;

D.44857_569 replace with --> D.44857_569 = (int) best_te_568;

D.44856_572 replace with --> D.44856_572 = map_1728->rm_pt;

D.44605_574 replace with --> D.44605_574 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

D.44868_575 replace with --> D.44868_575 = (int) cng_pt_573;

D.44605_576 replace with --> D.44605_576 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

D.44471_577 replace with --> D.44471_577 = smh_186->mparams;

D.44869_578 replace with --> D.44869_578 = D.44471_577->cng_pt;

D.44877_582 replace with --> D.44877_582 = ptime_1033 == 0;

D.44878_583 replace with --> D.44878_583 = ptime_1033 > maxptime_1040;

D.44879_584 replace with --> D.44879_584 = D.44878_583 | D.44877_582;

D.44856_586 replace with --> D.44856_586 = map_1728->rm_pt;

D.44884_587 replace with --> D.44884_587 = (uint32_t) D.44856_586;

D.44856_590 replace with --> D.44856_590 = map_1728->rm_pt;

D.44889_593 replace with --> D.44889_593 = map_1728->rm_encoding;

D.44889_608 replace with --> D.44889_608 = map_1728->rm_encoding;

D.44854_610 replace with --> D.44854_610 = map_1728->rm_rate;

D.44471_621 replace with --> D.44471_621 = smh_186->mparams;

D.44996_622 replace with --> D.44996_622 = D.44471_621->num_codecs;

D.44997_623 replace with --> D.44997_623 = D.44996_622 > i_710;

D.44998_624 replace with --> D.44998_624 = total_codecs_85 > i_710;

D.44999_625 replace with --> D.44999_625 = D.44998_624 & D.44997_623;

D.44921_633 replace with --> D.44921_633 = imp_629->codec_type;

D.44856_634 replace with --> D.44856_634 = map_1728->rm_pt;

D.44924_635 replace with --> D.44924_635 = (int) D.44856_634;

remote_codec_rate.92_636 replace with --> remote_codec_rate.92_636 = (int) remote_codec_rate_1493;

D.44926_637 replace with --> D.44926_637 = imp_629->iananame;

D.44927_638 replace with --> D.44927_638 = imp_629->ianacode;

D.44928_639 replace with --> D.44928_639 = (int) D.44927_638;

D.44929_640 replace with --> D.44929_640 = imp_629->microseconds_per_packet;

D.44930_641 replace with --> D.44930_641 = D.44929_640 / 1000;

D.44471_644 replace with --> D.44471_644 = smh_186->mparams;

D.44821_645 replace with --> D.44821_645 = D.44471_644->ndlb;

D.44936_646 replace with --> D.44936_646 = (int) D.44821_645;

D.44937_647 replace with --> D.44937_647 = D.44936_646 & 1;

D.44856_649 replace with --> D.44856_649 = map_1728->rm_pt;

D.44927_653 replace with --> D.44927_653 = imp_629->ianacode;

D.44928_654 replace with --> D.44928_654 = (int) D.44927_653;

D.44926_656 replace with --> D.44926_656 = imp_629->iananame;

D.44947_658 replace with --> D.44947_658 = imp_629->actual_samples_per_second;

D.44955_666 replace with --> D.44955_666 = map_bit_rate_132 != 0;

D.44956_667 replace with --> D.44956_667 = map_bit_rate_132 != bit_rate_631;

D.44957_668 replace with --> D.44957_668 = D.44956_667 & D.44955_666;

D.44968_675 replace with --> D.44968_675 = remote_codec_rate_96 != 0;

D.44969_676 replace with --> D.44969_676 = prephitmp.1055_749 & D.44968_675;

D.44972_677 replace with --> D.44972_677 = codec_rate_632 != 0;

D.44973_678 replace with --> D.44973_678 = remote_codec_rate_96 != codec_rate_632;

D.44974_679 replace with --> D.44974_679 = D.44973_678 & D.44972_677;

D.44926_685 replace with --> D.44926_685 = imp_629->iananame;

D.44984_686 replace with --> D.44984_686 = imp_629->samples_per_second;

D.44929_687 replace with --> D.44929_687 = imp_629->microseconds_per_packet;

D.44930_688 replace with --> D.44930_688 = D.44929_687 / 1000;

D.44989_689 replace with --> D.44989_689 = ptime_1033 != 0;

D.44990_690 replace with --> D.44990_690 = codec_ms_90 != 0;

D.44991_691 replace with --> D.44991_691 = D.44990_690 & D.44989_689;

D.44926_695 replace with --> D.44926_695 = imp_629->iananame;

D.44927_696 replace with --> D.44927_696 = imp_629->ianacode;

D.44928_697 replace with --> D.44928_697 = (int) D.44927_696;

D.44930_699 replace with --> D.44930_699 = prephitmp.1043_1680 / 1000;

remote_codec_rate.92_700 replace with --> remote_codec_rate.92_700 = (int) remote_codec_rate_96;

codec_rate.94_702 replace with --> codec_rate.94_702 = (int) codec_rate_632;

D.44926_704 replace with --> D.44926_704 = imp_629->iananame;

D.44927_705 replace with --> D.44927_705 = imp_629->ianacode;

D.44928_706 replace with --> D.44928_706 = (int) D.44927_705;

D.44929_707 replace with --> D.44929_707 = imp_629->microseconds_per_packet;

D.44930_708 replace with --> D.44930_708 = D.44929_707 / 1000;

D.45001_712 replace with --> D.45001_712 = smh_186->crypto_mode;

D.45002_713 replace with --> D.45002_713 = D.45001_712 == 1;

D.45003_714 replace with --> D.45003_714 = got_crypto_969 <= 0;

D.45004_715 replace with --> D.45004_715 = D.45003_714 & D.45002_713;

D.45007_719 replace with --> D.45007_719 = m_idx_105 == 0;

D.45008_720 replace with --> D.45008_720 = nm_idx_119 != 0;

D.45009_721 replace with --> D.45009_721 = D.45008_720 & D.45007_719;

D.45024_734 replace with --> D.45024_734 = timp_134->microseconds_per_packet;

D.45026_737 replace with --> D.45026_737 = timp_1785->iananame;

D.45027_740 replace with --> D.45027_740 = timp_1785->actual_samples_per_second;

D.45028_742 replace with --> D.45028_742 = near_matches[j_1786].codec_idx;

D.45035_748 replace with --> D.45035_748 = D.45034_747->rm_encoding;

D.45036_750 replace with --> D.45036_750 = D.45034_747->rm_fmtp;

D.45037_752 replace with --> D.45037_752 = D.45034_747->rm_pt;

D.45038_753 replace with --> D.45038_753 = (uint32_t) D.45037_752;

D.45040_755 replace with --> D.45040_755 = D.45039_754->samples_per_second;

D.45041_757 replace with --> D.45041_757 = D.45039_754->microseconds_per_packet;

D.45042_758 replace with --> D.45042_758 = D.45041_757 / 1000;

D.45043_759 replace with --> D.45043_759 = (uint32_t) D.45042_758;

D.45048_766 replace with --> D.45048_766 = pmap_760->pt;

D.45049_767 replace with --> D.45049_767 = mmap_762->rm_encoding;

D.45051_769 replace with --> D.45051_769 = mimp_761->iananame;

D.45053_771 replace with --> D.45053_771 = mmap_762->rm_pt;

D.45054_772 replace with --> D.45054_772 = (unsigned char) D.45053_771;

D.45051_775 replace with --> D.45051_775 = mimp_761->iananame;

D.45059_777 replace with --> D.45059_777 = mimp_761->actual_samples_per_second;

D.45060_778 replace with --> D.45060_778 = mimp_761->microseconds_per_packet;

D.45061_779 replace with --> D.45061_779 = D.45060_778 / 1000;

D.45062_780 replace with --> D.45062_780 = (uint32_t) D.45061_779;

D.45063_781 replace with --> D.45063_781 = mimp_761->bits_per_second;

D.45064_782 replace with --> D.45064_782 = (uint32_t) D.45063_781;

pretmp.1046_784 replace with --> pretmp.1046_784 = bit_rate_631 != 0;

D.45049_787 replace with --> D.45049_787 = mmap_762->rm_encoding;

D.45085_795 replace with --> D.45085_795 = connection_139->c_address;

D.44697_797 replace with --> D.44697_797 = m_1764->m_port;

D.45087_798 replace with --> D.45087_798 = (short unsigned int) D.44697_797;

D.45079_799 replace with --> D.45079_799 = mmap_762->rm_fmtp;

D.45053_801 replace with --> D.45053_801 = mmap_762->rm_pt;

D.45054_802 replace with --> D.45054_802 = (unsigned char) D.45053_801;

D.45089_804 replace with --> D.45089_804 = D.44655_803 + 1;

D.45053_805 replace with --> D.45053_805 = mmap_762->rm_pt;

D.45054_806 replace with --> D.45054_806 = (unsigned char) D.45053_805;

D.44750_808 replace with --> D.44750_808 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

D.44762_809 replace with --> D.44762_809 = D.44750_808->remote_sdp_port;

D.44767_810 replace with --> D.44767_810 = (int) D.44762_809;

D.44530_811 replace with --> D.44530_811 = session_161(D)->channel;

D.44750_812 replace with --> D.44750_812 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

D.44760_813 replace with --> D.44760_813 = D.44750_812->remote_sdp_ip;

D.44530_814 replace with --> D.44530_814 = session_161(D)->channel;

D.44750_815 replace with --> D.44750_815 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

D.45092_816 replace with --> D.45092_816 = D.44750_815->recv_pt;

D.45093_817 replace with --> D.45093_817 = (int) D.45092_816;

D.44530_818 replace with --> D.44530_818 = session_161(D)->channel;

D.44471_821 replace with --> D.44471_821 = smh_186->mparams;

D.45098_822 replace with --> D.45098_822 = D.44471_821->codec_flags;

D.44530_827 replace with --> D.44530_827 = session_161(D)->channel;

D.44471_829 replace with --> D.44471_829 = smh_186->mparams;

D.45110_830 replace with --> D.45110_830 = D.44471_829->te;

D.45111_831 replace with --> D.45111_831 = (int) D.45110_830;

D.44471_832 replace with --> D.44471_832 = smh_186->mparams;

D.44530_838 replace with --> D.44530_838 = session_161(D)->channel;

D.44471_839 replace with --> D.44471_839 = smh_186->mparams;

D.44530_842 replace with --> D.44530_842 = session_161(D)->channel;

D.44530_849 replace with --> D.44530_849 = session_161(D)->channel;

D.44471_850 replace with --> D.44471_850 = smh_186->mparams;

D.44530_853 replace with --> D.44530_853 = session_161(D)->channel;

D.44605_855 replace with --> D.44605_855 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

D.44530_856 replace with --> D.44530_856 = session_161(D)->channel;

D.44530_860 replace with --> D.44530_860 = session_161(D)->channel;

D.44530_866 replace with --> D.44530_866 = session_161(D)->channel;

D.49988_872 replace with --> D.49988_872 = (void *) ivtmp.1090_136;

D.44697_873 replace with --> D.44697_873 = m_1764->m_port;

D.44530_878 replace with --> D.44530_878 = session_161(D)->channel;

D.44590_887 replace with --> D.44590_887 = attr_1850->a_name;

D.44619_896 replace with --> D.44619_896 = attr_619->a_value;

D.45163_903 replace with --> D.45163_903 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir;

D.45164_904 replace with --> D.45164_904 = D.45163_903 + 1;

D.44471_905 replace with --> D.44471_905 = smh_186->mparams;

D.45174_911 replace with --> D.45174_911 = MEM[(const unsigned char *)D.44619_908];

D.45185_921 replace with --> D.45185_921 = MEM[(const unsigned char *)D.44619_908 + 1B];

D.44530_952 replace with --> D.44530_952 = session_161(D)->channel;

D.44619_954 replace with --> D.44619_954 = attr_619->a_value;

D.45213_956 replace with --> D.45213_956 = (short unsigned int) D.47946_1499;

D.45214_958 replace with --> D.45214_958 = D.44471_957->rtcp_video_interval_msec;

D.44471_964 replace with --> D.44471_964 = smh_186->mparams;

D.44821_965 replace with --> D.44821_965 = D.44471_964->ndlb;

D.44822_966 replace with --> D.44822_966 = D.44821_965 & 4;

D.44530_967 replace with --> D.44530_967 = session_161(D)->channel;

D.44666_970 replace with --> D.44666_970 = m_1764->m_proto;

D.44829_971 replace with --> D.44829_971 = D.44666_970 != 257;

D.44830_972 replace with --> D.44830_972 = got_webrtc_78 == 0;

D.44831_973 replace with --> D.44831_973 = D.44830_972 & D.44829_971;

D.45238_986 replace with --> D.45238_986 = imp_985->codec_type;

D.44530_987 replace with --> D.44530_987 = session_161(D)->channel;

D.44530_989 replace with --> D.44530_989 = session_161(D)->channel;

D.45247_991 replace with --> D.45247_991 = map_1620->rm_pt;

D.45248_992 replace with --> D.45248_992 = (int) D.45247_991;

D.45249_993 replace with --> D.45249_993 = imp_985->iananame;

D.45250_994 replace with --> D.45250_994 = imp_985->ianacode;

D.45251_995 replace with --> D.45251_995 = (int) D.45250_994;

D.44471_998 replace with --> D.44471_998 = smh_186->mparams;

D.44821_999 replace with --> D.44821_999 = D.44471_998->ndlb;

D.44936_1000 replace with --> D.44936_1000 = (int) D.44821_999;

D.44937_1001 replace with --> D.44937_1001 = D.44936_1000 & 1;

D.45247_1003 replace with --> D.45247_1003 = map_1620->rm_pt;

D.45250_1007 replace with --> D.45250_1007 = imp_985->ianacode;

D.45251_1008 replace with --> D.45251_1008 = (int) D.45250_1007;

D.45249_1010 replace with --> D.45249_1010 = imp_985->iananame;

D.45262_1013 replace with --> D.45262_1013 = map_1620->rm_rate;

D.45263_1014 replace with --> D.45263_1014 = imp_985->samples_per_second;

D.45249_1015 replace with --> D.45249_1015 = imp_985->iananame;

D.45250_1016 replace with --> D.45250_1016 = imp_985->ianacode;

D.45251_1017 replace with --> D.45251_1017 = (int) D.45250_1016;

D.45001_1022 replace with --> D.45001_1022 = smh_186->crypto_mode;

D.45002_1023 replace with --> D.45002_1023 = D.45001_1022 == 1;

D.45266_1024 replace with --> D.45266_1024 = got_video_crypto_959 <= 0;

D.45267_1025 replace with --> D.45267_1025 = D.45266_1024 & D.45002_1023;

D.45275_1032 replace with --> D.45275_1032 = D.45274_1031->rm_encoding;

D.45276_1034 replace with --> D.45276_1034 = D.45274_1031->rm_fmtp;

D.45277_1036 replace with --> D.45277_1036 = D.45274_1031->rm_pt;

D.45278_1037 replace with --> D.45278_1037 = (uint32_t) D.45277_1036;

D.45280_1039 replace with --> D.45280_1039 = D.45279_1038->samples_per_second;

D.45281_1041 replace with --> D.45281_1041 = D.45279_1038->microseconds_per_packet;

D.45282_1042 replace with --> D.45282_1042 = D.45281_1041 / 1000;

D.45283_1043 replace with --> D.45283_1043 = (uint32_t) D.45282_1042;

D.45290_1048 replace with --> D.45290_1048 = pmap_1044->pt;

D.45255_1051 replace with --> D.45255_1051 = map_1050->rm_encoding;

D.45247_1053 replace with --> D.45247_1053 = map_1050->rm_pt;

D.45292_1054 replace with --> D.45292_1054 = (unsigned char) D.45247_1053;

D.45262_1055 replace with --> D.45262_1055 = map_1050->rm_rate;

D.45293_1056 replace with --> D.45293_1056 = mimp_1049->microseconds_per_packet;

D.45294_1057 replace with --> D.45294_1057 = D.45293_1056 / 1000;

D.45295_1058 replace with --> D.45295_1058 = (uint32_t) D.45294_1057;

D.45085_1059 replace with --> D.45085_1059 = connection_110->c_address;

D.44697_1061 replace with --> D.44697_1061 = m_1764->m_port;

D.45087_1062 replace with --> D.45087_1062 = (short unsigned int) D.44697_1061;

D.45297_1063 replace with --> D.45297_1063 = map_1050->rm_fmtp;

D.45247_1065 replace with --> D.45247_1065 = map_1050->rm_pt;

D.45292_1066 replace with --> D.45292_1066 = (unsigned char) D.45247_1065;

D.45286_1068 replace with --> D.45286_1068 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;

D.45299_1069 replace with --> D.45299_1069 = D.45286_1068->remote_sdp_port;

D.45300_1070 replace with --> D.45300_1070 = (int) D.45299_1069;

D.44530_1071 replace with --> D.44530_1071 = session_161(D)->channel;

D.45286_1072 replace with --> D.45286_1072 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;

D.45301_1073 replace with --> D.45301_1073 = D.45286_1072->remote_sdp_ip;

D.44530_1074 replace with --> D.44530_1074 = session_161(D)->channel;

D.44530_1075 replace with --> D.44530_1075 = session_161(D)->channel;

D.45286_1076 replace with --> D.45286_1076 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;

D.45302_1077 replace with --> D.45302_1077 = D.45286_1076->rm_fmtp;

D.45286_1078 replace with --> D.45286_1078 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;

D.45303_1079 replace with --> D.45303_1079 = D.45286_1078->agreed_pt;

D.45304_1080 replace with --> D.45304_1080 = (int) D.45303_1079;

D.44530_1081 replace with --> D.44530_1081 = session_161(D)->channel;

D.45286_1082 replace with --> D.45286_1082 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;

D.45305_1083 replace with --> D.45305_1083 = D.45286_1082->recv_pt;

D.45306_1084 replace with --> D.45306_1084 = (int) D.45305_1083;

D.44530_1085 replace with --> D.44530_1085 = session_161(D)->channel;

D.44999_1152 replace with --> D.44999_1152 = D.44998_1609 & D.44997_1496;

D.47871_1460 replace with --> D.47871_1460 = pmap_1459->allocated;

D.47874_1464 replace with --> D.47874_1464 = pmap_1463->allocated;

D.47877_1465 replace with --> D.47877_1465 = *D.44590_304;

D.47887_1469 replace with --> D.47887_1469 = *D.44619_503;

D.47900_1474 replace with --> D.47900_1474 = *prephitmp.1031_531;

D.47915_1481 replace with --> D.47915_1481 = *D.44893_598;

D.47919_1483 replace with --> D.47919_1483 = *D.44889_642;

D.47926_1486 replace with --> D.47926_1486 = *D.45079_790;

D.47934_1488 replace with --> D.47934_1488 = MEM[(struct switch_codec_t *)smh_186 + 1604B].flags;

D.47933_1489 replace with --> D.47933_1489 = D.47934_1488 & 256;

D.47932_1490 replace with --> D.47932_1490 = MEM[(struct switch_codec_t *)smh_186 + 1604B].mutex;

D.47931_1491 replace with --> D.47931_1491 = MEM[(struct switch_codec_t *)smh_186 + 1604B].codec_interface;

D.47930_1492 replace with --> D.47930_1492 = MEM[(struct switch_codec_t *)smh_186 + 1604B].implementation;

D.47939_1495 replace with --> D.47939_1495 = *D.44619_889;

D.44997_1496 replace with --> D.44997_1496 = D.44996_1498 > 0;

D.47943_1497 replace with --> D.47943_1497 = *D.44619_899;

D.44996_1498 replace with --> D.44996_1498 = D.44471_1501->num_codecs;

D.47950_1500 replace with --> D.47950_1500 = *prephitmp.1031_962;

D.44471_1501 replace with --> D.44471_1501 = smh_186->mparams;

D.47957_1503 replace with --> D.47957_1503 = *D.45255_996;

D.47965_1505 replace with --> D.47965_1505 = MEM[(struct switch_codec_t *)smh_186 + 13020B].flags;

D.47964_1506 replace with --> D.47964_1506 = D.47965_1505 & 256;

D.47963_1507 replace with --> D.47963_1507 = MEM[(struct switch_codec_t *)smh_186 + 13020B].mutex;

D.47962_1508 replace with --> D.47962_1508 = MEM[(struct switch_codec_t *)smh_186 + 13020B].codec_interface;

D.47961_1509 replace with --> D.47961_1509 = MEM[(struct switch_codec_t *)smh_186 + 13020B].implementation;

D.44998_1609 replace with --> D.44998_1609 = total_codecs_85 > 0;

D.47871_1661 replace with --> D.47871_1661 = pmap_1457->allocated;

D.47874_1670 replace with --> D.47874_1670 = pmap_1461->allocated;

pretmp.1054_1710 replace with --> pretmp.1054_1710 = bit_rate_631 != 0;

pretmp.1050_1809 replace with --> pretmp.1050_1809 = smh_186->mparams;

pretmp.1036_1896 replace with --> pretmp.1036_1896 = timp_330->microseconds_per_packet;


switch_core_media_negotiate_sdp (struct switch_core_session_t * session, const char * r_sdp, uint8_t * proceed, switch_sdp_type_t sdp_type)
{
  void * D.49988;
  unsigned int ivtmp.1090;
  struct matches[30] * D.49978;
  unsigned int ivtmp.1083;
  void * D.49971;
  unsigned int ivtmp.1076;
  void * D.49960;
  unsigned int ivtmp.1067;
  struct matches[30] * D.49951;
  unsigned int ivtmp.1062;
  _Bool prephitmp.1055;
  _Bool pretmp.1054;
  switch_rtp_bug_flag_t prephitmp.1053;
  struct switch_core_media_params_t * pretmp.1050;
  sdp_media_e prephitmp.1049;
  _Bool prephitmp.1047;
  _Bool pretmp.1046;
  const int prephitmp.1043;
  int prephitmp.1039;
  const int pretmp.1036;
  const char * prephitmp.1031;
  _Bool prephitmp.1026;
  int D.49755;
  switch_bool_t D.49754;
  int D.49753;
  int D.49752;
  int D.49751;
  int D.49750;
  int D.49749;
  int D.49748;
  int D.49747;
  int D.49743;
  switch_bool_t D.49742;
  int D.49741;
  int D.49740;
  int D.49739;
  int D.49738;
  int D.49737;
  int D.49736;
  int D.49735;
  int D.49731;
  switch_bool_t D.49730;
  int D.49729;
  int D.49728;
  int D.49727;
  int D.49726;
  int D.49725;
  int D.49724;
  int D.49723;
  int D.49719;
  switch_bool_t D.49718;
  int D.49717;
  int D.49716;
  int D.49715;
  int D.49714;
  int D.49713;
  int D.49712;
  int D.49711;
  int D.49707;
  switch_bool_t D.49706;
  int D.49705;
  int D.49704;
  int D.49703;
  int D.49702;
  int D.49701;
  int D.49700;
  int D.49699;
  int D.49695;
  switch_bool_t D.49694;
  int D.49693;
  int D.49692;
  int D.49691;
  int D.49690;
  int D.49689;
  int D.49688;
  int D.49687;
  int D.49683;
  switch_bool_t D.49682;
  int D.49681;
  int D.49680;
  int D.49679;
  int D.49678;
  int D.49677;
  int D.49676;
  int D.49675;
  uint32_t D.47965;
  uint32_t D.47964;
  struct switch_mutex_t * D.47963;
  struct switch_codec_interface_t * D.47962;
  const struct switch_codec_implementation_t * D.47961;
  const char D.47957;
  const char D.47950;
  int D.47946;
  const char D.47943;
  const char D.47939;
  uint32_t D.47934;
  uint32_t D.47933;
  struct switch_mutex_t * D.47932;
  struct switch_codec_interface_t * D.47931;
  const struct switch_codec_implementation_t * D.47930;
  const char D.47926;
  int D.47922;
  const char D.47919;
  const char D.47915;
  unsigned char csui.173;
  const char D.47900;
  int D.47890;
  const char D.47887;
  const char D.47877;
  uint8_t D.47874;
  struct payload_map_t * pmap;
  uint8_t D.47871;
  struct payload_map_t * pmap;
  struct payload_map_t * pmap;
  int j;
  char tmp[50];
  const struct switch_codec_implementation_t * imp;
  int crypto_tag;
  int i;
  int vmatch;
  const struct switch_codec_implementation_t * mimp;
  const char * rm_encoding;
  struct sdp_rtpmap_t * map;
  char tmp[50];
  struct payload_map_t * pmap;
  int j;
  const struct switch_codec_implementation_t * timp;
  int num;
  char tmp[80];
  char * prefs[1];
  const struct switch_codec_implementation_t * search[1];
  int j;
  uint32_t codec_rate;
  uint32_t bit_rate;
  const struct switch_codec_implementation_t * imp;
  struct switch_codec_fmtp_t codec_fmtp;
  uint32_t map_bit_rate;
  const char * rm_encoding;
  int32_t i;
  int crypto_tag;
  struct sdp_rtpmap_t * map;
  const char * err;
  char tmp[32];
  switch_port_t remote_port;
  char * remote_host;
  struct switch_core_session_message_t * msg;
  struct switch_channel_t * other_channel;
  int pass;
  const char * var;
  struct switch_t38_options_t * t38_options;
  struct switch_core_session_t * other_session;
  struct sdp_connection_t * connection;
  register int __result;
  static const char __func__[32] = "switch_core_media_negotiate_sdp";
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_negotiate_sdp";
  int nm_idx;
  int m_idx;
  const char * tmp;
  uint32_t fmtp_remote_codec_rate;
  uint32_t remote_codec_rate;
  int codec_ms;
  struct matches near_matches[30];
  struct matches matches[30];
  struct sdp_rtpmap_t * near_map;
  struct sdp_rtpmap_t * mmap;
  const struct switch_codec_implementation_t * near_match;
  const struct switch_codec_implementation_t * mimp;
  uint32_t near_rate;
  struct switch_media_handle_t * smh;
  int total_codecs;
  const struct switch_codec_implementation_t * * codec_array;
  int reneg;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  int scrooge;
  int got_webrtc;
  int got_udptl;
  int got_savp;
  int got_avp;
  int got_audio;
  int got_video_crypto;
  int got_crypto;
  const char * val;
  struct switch_channel_t * channel;
  int greedy;
  int recvonly;
  int sendonly;
  int dmaxptime;
  int maxptime;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  switch_payload_t cng_pt;
  switch_payload_t best_te;
  uint8_t match;
  switch_status_t D.45316;
  int D.45306;
  switch_payload_t D.45305;
  int D.45304;
  switch_payload_t D.45303;
  char * D.45302;
  char * D.45301;
  int D.45300;
  switch_port_t D.45299;
  char * D.45298;
  const char * D.45297;
  char * D.45296;
  uint32_t D.45295;
  int D.45294;
  const int D.45293;
  unsigned char D.45292;
  char * D.45291;
  switch_payload_t D.45290;
  struct switch_rtp_t * D.45287;
  struct payload_map_t * D.45286;
  uint32_t D.45283;
  int D.45282;
  const int D.45281;
  const uint32_t D.45280;
  const struct switch_codec_implementation_t * D.45279;
  uint32_t D.45278;
  <unnamed-unsigned:7> D.45277;
  const char * D.45276;
  const char * D.45275;
  struct sdp_rtpmap_t * D.45274;
  _Bool D.45267;
  _Bool D.45266;
  const uint32_t D.45263;
  long unsigned int D.45262;
  int D.45259;
  const char * D.45255;
  int D.45251;
  const switch_payload_t D.45250;
  char * const D.45249;
  int D.45248;
  <unnamed-unsigned:7> D.45247;
  uint32_t D.45244;
  switch_call_direction_t D.45241;
  const switch_codec_type_t D.45238;
  const char * D.45227;
  int D.45219;
  char * D.45214;
  short unsigned int D.45213;
  const unsigned char D.45185;
  const unsigned char D.45174;
  int D.45168;
  uint8_t D.45164;
  uint8_t D.45163;
  const char * D.45160;
  int D.45154;
  int D.45151;
  int D.45143;
  int D.45140;
  int D.45137;
  const char * D.45124;
  int D.45120;
  switch_call_direction_t D.45114;
  int D.45111;
  switch_payload_t D.45110;
  uint32_t D.45109;
  int32_t D.45107;
  switch_status_t D.45099;
  uint32_t D.45098;
  int D.45093;
  switch_payload_t D.45092;
  int D.45089;
  char * D.45088;
  short unsigned int D.45087;
  char * D.45086;
  const char * D.45085;
  const char * D.45082;
  const char * D.45079;
  int D.45070;
  const char * D.45066;
  uint32_t D.45064;
  const int D.45063;
  uint32_t D.45062;
  int D.45061;
  const int D.45060;
  const uint32_t D.45059;
  int D.45056;
  const uint32_t D.45055;
  unsigned char D.45054;
  <unnamed-unsigned:7> D.45053;
  char * D.45052;
  char * const D.45051;
  char * D.45050;
  const char * D.45049;
  switch_payload_t D.45048;
  uint32_t D.45043;
  int D.45042;
  const int D.45041;
  const uint32_t D.45040;
  const struct switch_codec_implementation_t * D.45039;
  uint32_t D.45038;
  <unnamed-unsigned:7> D.45037;
  const char * D.45036;
  const char * D.45035;
  struct sdp_rtpmap_t * D.45034;
  int near_rate.96;
  int D.45028;
  const uint32_t D.45027;
  char * const D.45026;
  const int D.45024;
  char * const D.45013;
  _Bool D.45009;
  _Bool D.45008;
  _Bool D.45007;
  _Bool D.45004;
  _Bool D.45003;
  _Bool D.45002;
  switch_rtp_crypto_mode_t D.45001;
  _Bool D.44999;
  _Bool D.44998;
  _Bool D.44997;
  int D.44996;
  int codec_rate.94;
  int D.44993;
  _Bool D.44991;
  _Bool D.44990;
  _Bool D.44989;
  const uint32_t D.44984;
  int D.44979;
  int D.44977;
  _Bool D.44974;
  _Bool D.44973;
  _Bool D.44972;
  _Bool D.44969;
  _Bool D.44968;
  int D.44963;
  int D.44960;
  _Bool D.44957;
  _Bool D.44956;
  _Bool D.44955;
  const uint32_t D.44947;
  int D.44944;
  int D.44937;
  int D.44936;
  int D.44930;
  const int D.44929;
  int D.44928;
  const switch_payload_t D.44927;
  char * const D.44926;
  int remote_codec_rate.92;
  int D.44924;
  const switch_codec_type_t D.44921;
  const int D.44920;
  int D.44911;
  int D.44908;
  switch_status_t D.44905;
  int D.44901;
  int D.44897;
  const char * D.44893;
  int D.44890;
  const char * D.44889;
  uint32_t D.44885;
  uint32_t D.44884;
  _Bool D.44879;
  _Bool D.44878;
  _Bool D.44877;
  switch_payload_t D.44869;
  int D.44868;
  int D.44863;
  int32_t D.44858;
  int D.44857;
  <unnamed-unsigned:7> D.44856;
  long unsigned int D.44855;
  long unsigned int D.44854;
  int D.44848;
  int D.44839;
  _Bool D.44836;
  _Bool D.44835;
  _Bool D.44834;
  _Bool D.44831;
  _Bool D.44830;
  _Bool D.44829;
  const char * D.44825;
  unsigned int D.44822;
  switch_core_media_NDLB_t D.44821;
  int D.44815;
  int D.44810;
  int D.44805;
  char * D.44800;
  short unsigned int D.44799;
  int D.44795;
  int D.44787;
  int D.44784;
  int D.44781;
  _Bool D.44779;
  _Bool D.44778;
  _Bool D.44777;
  char * D.44773;
  struct switch_channel_t * D.44772;
  const char * err.90;
  switch_status_t D.44768;
  int D.44767;
  int D.44766;
  char * D.44765;
  char * D.44764;
  switch_port_t D.44762;
  char * D.44760;
  int D.39032;
  _Bool D.44758;
  _Bool D.44757;
  _Bool D.44756;
  uint16_t D.44753;
  char * D.44752;
  const char * D.44751;
  struct payload_map_t * D.44750;
  int D.44747;
  const char * D.44746;
  int D.44743;
  const char * D.44742;
  char * D.44741;
  char * D.44740;
  uint32_t D.44737;
  struct switch_core_session_t * other_session.89;
  switch_status_t D.44733;
  uint8_t D.44730;
  uint32_t D.44728;
  uint32_t D.44726;
  uint32_t D.44724;
  uint32_t D.44723;
  int D.44716;
  int D.44707;
  uint32_t D.44706;
  int D.44703;
  const char * D.44702;
  int D.44699;
  long unsigned int D.44697;
  _Bool D.44678;
  _Bool D.44677;
  _Bool D.44676;
  sdp_proto_e D.44675;
  int D.44672;
  const char * D.44669;
  sdp_proto_e D.44666;
  const char * D.44665;
  const char * D.44663;
  const char * D.44661;
  int D.44655;
  struct switch_media_bug_t * D.44649;
  int D.44640;
  int D.44636;
  int32_t D.44631;
  _Bool D.44626;
  _Bool D.44624;
  int D.44621;
  const char * D.44619;
  int D.44616;
  int D.44614;
  uint8_t D.44606;
  struct switch_rtp_t * D.44605;
  int D.44602;
  int D.44598;
  int D.44594;
  const char * D.44590;
  const char * D.44548;
  struct sdp_connection_t * D.44546;
  _Bool D.44544;
  _Bool D.44543;
  _Bool D.44542;
  unsigned char D.44541;
  unsigned char D.44540;
  struct switch_channel_t * D.44530;
  unsigned int D.44529;
  char * D.44526;
  unsigned int D.44523;
  unsigned int D.44522;
  switch_rtp_bug_flag_t D.44521;
  char * D.44518;
  int D.44514;
  int D.44513;
  char * D.44509;
  char * D.44508;
  const char * D.44507;
  struct sdp_origin_t * D.44506;
  int D.44502;
  int D.44498;
  int D.44494;
  int32_t D.44491;
  int32_t D.44490;
  struct switch_channel_t * D.44482;
  struct switch_core_session_t * D.44481;
  int D.44478;
  int D.44473;
  size_t D.44472;
  struct switch_core_media_params_t * D.44471;

  # BLOCK 2 freq:23
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG match => 0
  # DEBUG best_te => 0
  # DEBUG te => 0
  # DEBUG cng_pt => 0
  # DEBUG ptime => 0
  # DEBUG dptime => 0
  # DEBUG maxptime => 0
  # DEBUG dmaxptime => 0
  # DEBUG sendonly => 0
  # DEBUG recvonly => 0
  # DEBUG greedy => 0
  # DEBUG x => 0
  # DEBUG skip => 0
  channel_162 = switch_core_session_get_channel (session_161(D));
  # DEBUG channel => channel_162
  # DEBUG crypto => 0B
  # DEBUG got_crypto => 0
  # DEBUG got_video_crypto => 0
  # DEBUG got_audio => 0
  # DEBUG got_avp => 0
  # DEBUG got_video_avp => 0
  # DEBUG got_video_savp => 0
  # DEBUG got_savp => 0
  # DEBUG got_udptl => 0
  # DEBUG got_webrtc => 0
  # DEBUG scrooge => 0
  # DEBUG parser => 0B
  # DEBUG reneg => 1
  # DEBUG near_rate => 0
  # DEBUG mimp => 0B
  # DEBUG near_match => 0B
  # DEBUG mmap => 0B
  # DEBUG near_map => 0B
  matches = {};
  near_matches = {};
  # DEBUG codec_ms => 0
  # DEBUG remote_codec_rate => 0
  # DEBUG fmtp_remote_codec_rate => 0
  # DEBUG m_idx => 0
  # DEBUG nm_idx => 0
  if (session_161(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 2922, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:23
  # PRED: 2 [100.0%]  (false,exec)
  smh_186 = session_161(D)->media_handle;
  # DEBUG smh => smh_186
  if (smh_186 == 0B)
    goto <bb 429>;
  else
    goto <bb 5>;
  # SUCC: 429 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:18
  # PRED: 4 [78.4%]  (false,exec)
  # DEBUG D#15 => &smh_186->engines
  # DEBUG a_engine => D#15
  # DEBUG D#14 => &smh_186->engines[1]
  # DEBUG v_engine => D#14
  codec_array_190 = &smh_186->codecs;
  # DEBUG codec_array => codec_array_190
  D.44471_191 = smh_186->mparams;
  total_codecs_192 = D.44471_191->num_codecs;
  # DEBUG total_codecs => total_codecs_192
  D.44472_194 = strlen (r_sdp_193(D));
  D.44473_195 = (int) D.44472_194;
  parser_196 = sdp_parse (0B, r_sdp_193(D), D.44473_195, 0);
  # DEBUG parser => parser_196
  if (parser_196 == 0B)
    goto <bb 429>;
  else
    goto <bb 6>;
  # SUCC: 429 [21.6%]  (true,exec) 6 [78.4%]  (false,exec)

  # BLOCK 6 freq:14
  # PRED: 5 [78.4%]  (false,exec)
  sdp_198 = sdp_session (parser_196);
  # DEBUG sdp => sdp_198
  if (sdp_198 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [10.1%]  (true,exec) 8 [89.9%]  (false,exec)

  # BLOCK 7 freq:1
  # PRED: 6 [10.1%]  (true,exec)
  sdp_parser_free (parser_196);
  goto <bb 429>;
  # SUCC: 429 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:13
  # PRED: 6 [89.9%]  (false,exec)
  D.44478_200 = dtls_ok (session_161(D));
  if (D.44478_200 != 0)
    goto <bb 9>;
  else
    goto <bb 20>;
  # SUCC: 9 [29.0%]  (true,exec) 20 [71.0%]  (false,exec)

  # BLOCK 9 freq:4
  # PRED: 8 [29.0%]  (true,exec)
  D.44481_201 = smh_186->session;
  D.44482_202 = D.44481_201->channel;
  tmp_203 = switch_channel_get_variable_dup (D.44482_202, "webrtc_enable_dtls", 1, -1);
  # DEBUG tmp => tmp_203
  if (tmp_203 != 0B)
    goto <bb 10>;
  else
    goto <bb 20>;
  # SUCC: 10 [69.8%]  (true,exec) 20 [30.2%]  (false,exec)

  # BLOCK 10 freq:2
  # PRED: 9 [69.8%]  (true,exec)
  # DEBUG expr => tmp_203
  D.49675_1550 = strcasecmp (tmp_203, "no");
  if (D.49675_1550 == 0)
    goto <bb 19>;
  else
    goto <bb 11>;
  # SUCC: 19 [39.0%]  (true,exec) 11 [61.0%]  (false,exec)

  # BLOCK 11 freq:1
  # PRED: 10 [61.0%]  (false,exec)
  D.49676_1551 = strcasecmp (tmp_203, "off");
  if (D.49676_1551 == 0)
    goto <bb 19>;
  else
    goto <bb 12>;
  # SUCC: 19 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

  # BLOCK 12 freq:1
  # PRED: 11 [61.0%]  (false,exec)
  D.49677_1552 = strcasecmp (tmp_203, "false");
  if (D.49677_1552 == 0)
    goto <bb 19>;
  else
    goto <bb 13>;
  # SUCC: 19 [39.0%]  (true,exec) 13 [61.0%]  (false,exec)

  # BLOCK 13
  # PRED: 12 [61.0%]  (false,exec)
  D.49678_1553 = strcasecmp (tmp_203, "f");
  if (D.49678_1553 == 0)
    goto <bb 19>;
  else
    goto <bb 14>;
  # SUCC: 19 [39.0%]  (true,exec) 14 [61.0%]  (false,exec)

  # BLOCK 14
  # PRED: 13 [61.0%]  (false,exec)
  D.49679_1554 = strcasecmp (tmp_203, "disabled");
  if (D.49679_1554 == 0)
    goto <bb 19>;
  else
    goto <bb 15>;
  # SUCC: 19 [39.0%]  (true,exec) 15 [61.0%]  (false,exec)

  # BLOCK 15
  # PRED: 14 [61.0%]  (false,exec)
  D.49680_1555 = strcasecmp (tmp_203, "inactive");
  if (D.49680_1555 == 0)
    goto <bb 19>;
  else
    goto <bb 16>;
  # SUCC: 19 [39.0%]  (true,exec) 16 [61.0%]  (false,exec)

  # BLOCK 16
  # PRED: 15 [61.0%]  (false,exec)
  D.49681_1556 = strcasecmp (tmp_203, "disallow");
  if (D.49681_1556 == 0)
    goto <bb 19>;
  else
    goto <bb 17>;
  # SUCC: 19 [61.0%]  (true,exec) 17 [39.0%]  (false,exec)

  # BLOCK 17
  # PRED: 16 [39.0%]  (false,exec)
  D.49682_1557 = switch_is_number (tmp_203);
  if (D.49682_1557 != 0)
    goto <bb 18>;
  else
    goto <bb 430>;
  # SUCC: 18 [29.0%]  (true,exec) 430 [71.0%]  (false,exec)

  # BLOCK 18
  # PRED: 17 [29.0%]  (true,exec)
  # DEBUG __nptr => tmp_203
  D.49683_1558 = strtol (tmp_203, 0B, 10);
  if (D.49683_1558 == 0)
    goto <bb 19>;
  else
    goto <bb 430>;
  # SUCC: 19 [39.0%]  (true,exec) 430 [61.0%]  (false,exec)

  # BLOCK 19 freq:1
  # PRED: 10 [39.0%]  (true,exec) 11 [39.0%]  (true,exec) 12 [39.0%]  (true,exec) 13 [39.0%]  (true,exec) 14 [39.0%]  (true,exec) 15 [39.0%]  (true,exec) 16 [61.0%]  (true,exec) 18 [39.0%]  (true,exec)
  D.44481_205 = smh_186->session;
  D.44482_206 = D.44481_205->channel;
  switch_channel_clear_flag (D.44482_206, 111);
  D.44481_207 = smh_186->session;
  D.44482_208 = D.44481_207->channel;
  switch_channel_clear_flag (D.44482_208, 109);
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:13
  # PRED: 8 [71.0%]  (false,exec) 9 [30.2%]  (false,exec) 430 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec)
  switch_core_session_parse_crypto_prefs (session_161(D));
  # DEBUG engine => D#15
  pmap_1457 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].payload_map;
  # DEBUG pmap => pmap_1457
  # DEBUG pmap => pmap_1457
  if (pmap_1457 != 0B)
    goto <bb 21>;
  else
    goto <bb 25>;
  # SUCC: 21 [95.5%]  (true,exec) 25 [4.5%]  (false,exec)

  # BLOCK 21 freq:12
  # PRED: 20 [95.5%]  (true,exec)
  D.47871_1661 = pmap_1457->allocated;
  if (D.47871_1661 != 0)
    goto <bb 22>;
  else
    goto <bb 25>;
  # SUCC: 22 [95.5%]  (true,exec) 25 [4.5%]  (false,exec)

  # BLOCK 22 freq:12
  # PRED: 21 [95.5%]  (true,exec)
  # pmap_2093 = PHI <pmap_1457(21)>
  # SUCC: 23 [100.0%]  (fallthru)

  # BLOCK 23 freq:132
  # PRED: 22 [100.0%]  (fallthru) 24 [95.5%]  (true,exec)
  # pmap_1747 = PHI <pmap_2093(22), pmap_1459(24)>
  pmap_1747->negotiated = 0;
  pmap_1747->current = 0;
  pmap_1459 = pmap_1747->next;
  # DEBUG pmap => pmap_1459
  # DEBUG pmap => pmap_1459
  if (pmap_1459 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [95.5%]  (true,exec) 25 [4.5%]  (false,exec)

  # BLOCK 24 freq:126
  # PRED: 23 [95.5%]  (true,exec)
  D.47871_1460 = pmap_1459->allocated;
  if (D.47871_1460 != 0)
    goto <bb 23>;
  else
    goto <bb 25>;
  # SUCC: 23 [95.5%]  (true,exec) 25 [4.5%]  (false,exec)

  # BLOCK 25 freq:13
  # PRED: 24 [4.5%]  (false,exec) 23 [4.5%]  (false,exec) 20 [4.5%]  (false,exec) 21 [4.5%]  (false,exec)
  # DEBUG engine => D#14
  pmap_1461 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].payload_map;
  # DEBUG pmap => pmap_1461
  # DEBUG pmap => pmap_1461
  if (pmap_1461 != 0B)
    goto <bb 26>;
  else
    goto <bb 30>;
  # SUCC: 26 [95.5%]  (true,exec) 30 [4.5%]  (false,exec)

  # BLOCK 26 freq:12
  # PRED: 25 [95.5%]  (true,exec)
  D.47874_1670 = pmap_1461->allocated;
  if (D.47874_1670 != 0)
    goto <bb 27>;
  else
    goto <bb 30>;
  # SUCC: 27 [95.5%]  (true,exec) 30 [4.5%]  (false,exec)

  # BLOCK 27 freq:12
  # PRED: 26 [95.5%]  (true,exec)
  # pmap_2126 = PHI <pmap_1461(26)>
  # SUCC: 28 [100.0%]  (fallthru)

  # BLOCK 28 freq:132
  # PRED: 27 [100.0%]  (fallthru) 29 [95.5%]  (true,exec)
  # pmap_1672 = PHI <pmap_2126(27), pmap_1463(29)>
  pmap_1672->negotiated = 0;
  pmap_1672->current = 0;
  pmap_1463 = pmap_1672->next;
  # DEBUG pmap => pmap_1463
  # DEBUG pmap => pmap_1463
  if (pmap_1463 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
  # SUCC: 29 [95.5%]  (true,exec) 30 [4.5%]  (false,exec)

  # BLOCK 29 freq:126
  # PRED: 28 [95.5%]  (true,exec)
  D.47874_1464 = pmap_1463->allocated;
  if (D.47874_1464 != 0)
    goto <bb 28>;
  else
    goto <bb 30>;
  # SUCC: 28 [95.5%]  (true,exec) 30 [4.5%]  (false,exec)

  # BLOCK 30 freq:13
  # PRED: 29 [4.5%]  (false,exec) 28 [4.5%]  (false,exec) 25 [4.5%]  (false,exec) 26 [4.5%]  (false,exec)
  if (proceed_209(D) != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 [85.0%]  (true,exec) 32 [15.0%]  (false,exec)

  # BLOCK 31 freq:11
  # PRED: 30 [85.0%]  (true,exec)
  *proceed_209(D) = 1;
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:13
  # PRED: 30 [15.0%]  (false,exec) 31 [100.0%]  (fallthru,exec)
  D.44490_210 = switch_media_handle_test_media_flag (smh_186, 3);
  greedy_211 = D.44490_210 != 0;
  # DEBUG greedy => greedy_211
  D.44491_212 = switch_media_handle_test_media_flag (smh_186, 4);
  scrooge_213 = D.44491_212 != 0;
  # DEBUG scrooge => scrooge_213
  val_214 = switch_channel_get_variable_dup (channel_162, "rtp_codec_negotiation", 1, -1);
  # DEBUG val => val_214
  if (val_214 != 0B)
    goto <bb 33>;
  else
    goto <bb 37>;
  # SUCC: 33 [85.0%]  (true,exec) 37 [15.0%]  (false,exec)

  # BLOCK 33 freq:11
  # PRED: 32 [85.0%]  (true,exec)
  D.44494_215 = strcasecmp (val_214, "generous");
  if (D.44494_215 == 0)
    goto <bb 37>;
  else
    goto <bb 34>;
  # SUCC: 37 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 34 freq:5
  # PRED: 33 [50.0%]  (false,exec)
  D.44498_218 = strcasecmp (val_214, "greedy");
  if (D.44498_218 == 0)
    goto <bb 37>;
  else
    goto <bb 35>;
  # SUCC: 37 [50.0%]  (true,exec) 35 [50.0%]  (false,exec)

  # BLOCK 35 freq:3
  # PRED: 34 [50.0%]  (false,exec)
  D.44502_221 = strcasecmp (val_214, "scrooge");
  if (D.44502_221 == 0)
    goto <bb 37>;
  else
    goto <bb 36>;
  # SUCC: 37 [71.0%]  (true,exec) 36 [29.0%]  (false,exec)

  # BLOCK 36 freq:1
  # PRED: 35 [29.0%]  (false,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2969, session_161(D), 7, "rtp_codec_negotiation ignored invalid value : \'%s\' \n", val_214);
  # SUCC: 37 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:13
  # PRED: 32 [15.0%]  (false,exec) 33 [50.0%]  (true,exec) 34 [50.0%]  (true,exec) 35 [71.0%]  (true,exec) 36 [100.0%]  (fallthru,exec)
  # greedy_47 = PHI <greedy_211(32), 0(33), 1(34), 1(35), greedy_211(36)>
  # scrooge_80 = PHI <scrooge_213(32), 0(33), 0(34), 1(35), scrooge_213(36)>
  # DEBUG scrooge => scrooge_80
  # DEBUG greedy => greedy_47
  D.44506_224 = sdp_198->sdp_origin;
  D.44507_225 = D.44506_224->o_username;
  D.44508_226 = switch_core_perform_session_strdup (session_161(D), D.44507_225, "src/switch_core_media.c", &__func__, 2973);
  smh_186->origin = D.44508_226;
  if (D.44508_226 != 0B)
    goto <bb 38>;
  else
    goto <bb 44>;
  # SUCC: 38 [85.0%]  (true,exec) 44 [15.0%]  (false,exec)

  # BLOCK 38 freq:11
  # PRED: 37 [85.0%]  (true,exec)
  D.44471_228 = smh_186->mparams;
  prephitmp.1053_229 = D.44471_228->auto_rtp_bugs;
  D.44513_230 = (int) prephitmp.1053_229;
  D.44514_231 = D.44513_230 & 1;
  if (D.44514_231 != 0)
    goto <bb 39>;
  else
    goto <bb 41>;
  # SUCC: 39 [50.0%]  (true,exec) 41 [50.0%]  (false,exec)

  # BLOCK 39 freq:5
  # PRED: 38 [50.0%]  (true,exec)
  D.44518_234 = strstr (D.44508_226, "CiscoSystemsSIP-GW-UserAgent");
  if (D.44518_234 != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;
  # SUCC: 40 [69.8%]  (true,exec) 41 [30.2%]  (false,exec)

  # BLOCK 40 freq:4
  # PRED: 39 [69.8%]  (true,exec)
  D.44521_235 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;
  D.44522_236 = D.44521_235 | 1;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44522_236;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2979, session_161(D), 7, "Activate Buggy RFC2833 Mode!\n");
  pretmp.1050_1809 = smh_186->mparams;
  prephitmp.1053_323 = pretmp.1050_1809->auto_rtp_bugs;
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 41 freq:11
  # PRED: 38 [50.0%]  (false,exec) 39 [30.2%]  (false,exec) 40 [100.0%]  (fallthru,exec)
  # prephitmp.1053_326 = PHI <prephitmp.1053_229(38), prephitmp.1053_229(39), prephitmp.1053_323(40)>
  D.44523_239 = prephitmp.1053_326 & 2;
  if (D.44523_239 != 0)
    goto <bb 42>;
  else
    goto <bb 44>;
  # SUCC: 42 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

  # BLOCK 42 freq:5
  # PRED: 41 [50.0%]  (true,exec)
  D.44509_240 = smh_186->origin;
  D.44526_241 = strstr (D.44509_240, "Sonus_UAC");
  if (D.44526_241 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
  # SUCC: 43 [69.8%]  (true,exec) 44 [30.2%]  (false,exec)

  # BLOCK 43 freq:4
  # PRED: 42 [69.8%]  (true,exec)
  D.44521_242 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;
  D.44529_243 = D.44521_242 | 2;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44529_243;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2986, session_161(D), 4, "Hello,\nI see you have a Sonus!\nFYI, Sonus cannot follow the RFC on the proper way to send DTMF.\nSadly, my creator had to spend several hours figuring this out so I thought you\'d like to know that!\nDon\'t worry, DTMF will work but you may want to ask them to fix it......\n");
  # SUCC: 44 [100.0%]  (fallthru,exec)

  # BLOCK 44 freq:13
  # PRED: 37 [15.0%]  (false,exec) 41 [50.0%]  (false,exec) 42 [30.2%]  (false,exec) 43 [100.0%]  (fallthru,exec)
  D.44530_244 = session_161(D)->channel;
  val_245 = switch_channel_get_variable_dup (D.44530_244, "rtp_liberal_dtmf", 1, -1);
  # DEBUG val => val_245
  if (val_245 != 0B)
    goto <bb 45>;
  else
    goto <bb 55>;
  # SUCC: 45 [69.8%]  (true,exec) 55 [30.2%]  (false,exec)

  # BLOCK 45 freq:8
  # PRED: 44 [69.8%]  (true,exec)
  # DEBUG expr => val_245
  D.49687_1560 = strcasecmp (val_245, "yes");
  if (D.49687_1560 == 0)
    goto <bb 54>;
  else
    goto <bb 46>;
  # SUCC: 54 [39.0%]  (true,exec) 46 [61.0%]  (false,exec)

  # BLOCK 46 freq:5
  # PRED: 45 [61.0%]  (false,exec)
  D.49688_1561 = strcasecmp (val_245, "on");
  if (D.49688_1561 == 0)
    goto <bb 54>;
  else
    goto <bb 47>;
  # SUCC: 54 [39.0%]  (true,exec) 47 [61.0%]  (false,exec)

  # BLOCK 47 freq:3
  # PRED: 46 [61.0%]  (false,exec)
  D.49689_1562 = strcasecmp (val_245, "true");
  if (D.49689_1562 == 0)
    goto <bb 54>;
  else
    goto <bb 48>;
  # SUCC: 54 [39.0%]  (true,exec) 48 [61.0%]  (false,exec)

  # BLOCK 48 freq:2
  # PRED: 47 [61.0%]  (false,exec)
  D.49690_1563 = strcasecmp (val_245, "t");
  if (D.49690_1563 == 0)
    goto <bb 54>;
  else
    goto <bb 49>;
  # SUCC: 54 [39.0%]  (true,exec) 49 [61.0%]  (false,exec)

  # BLOCK 49 freq:1
  # PRED: 48 [61.0%]  (false,exec)
  D.49691_1564 = strcasecmp (val_245, "enabled");
  if (D.49691_1564 == 0)
    goto <bb 54>;
  else
    goto <bb 50>;
  # SUCC: 54 [39.0%]  (true,exec) 50 [61.0%]  (false,exec)

  # BLOCK 50 freq:1
  # PRED: 49 [61.0%]  (false,exec)
  D.49692_1565 = strcasecmp (val_245, "active");
  if (D.49692_1565 == 0)
    goto <bb 54>;
  else
    goto <bb 51>;
  # SUCC: 54 [39.0%]  (true,exec) 51 [61.0%]  (false,exec)

  # BLOCK 51
  # PRED: 50 [61.0%]  (false,exec)
  D.49693_1566 = strcasecmp (val_245, "allow");
  if (D.49693_1566 == 0)
    goto <bb 54>;
  else
    goto <bb 52>;
  # SUCC: 54 [61.0%]  (true,exec) 52 [39.0%]  (false,exec)

  # BLOCK 52
  # PRED: 51 [39.0%]  (false,exec)
  D.49694_1567 = switch_is_number (val_245);
  if (D.49694_1567 != 0)
    goto <bb 53>;
  else
    goto <bb 431>;
  # SUCC: 53 [29.0%]  (true,exec) 431 [71.0%]  (false,exec)

  # BLOCK 53
  # PRED: 52 [29.0%]  (true,exec)
  # DEBUG __nptr => val_245
  D.49695_1568 = strtol (val_245, 0B, 10);
  if (D.49695_1568 != 0)
    goto <bb 54>;
  else
    goto <bb 431>;
  # SUCC: 54 [39.0%]  (true,exec) 431 [61.0%]  (false,exec)

  # BLOCK 54 freq:3
  # PRED: 45 [39.0%]  (true,exec) 46 [39.0%]  (true,exec) 47 [39.0%]  (true,exec) 48 [39.0%]  (true,exec) 49 [39.0%]  (true,exec) 50 [39.0%]  (true,exec) 51 [61.0%]  (true,exec) 53 [39.0%]  (true,exec)
  D.44530_247 = session_161(D)->channel;
  switch_channel_set_flag_value (D.44530_247, 93, 1);
  # SUCC: 55 [100.0%]  (fallthru,exec)

  # BLOCK 55 freq:13
  # PRED: 44 [30.2%]  (false,exec) 431 [100.0%]  (fallthru,exec) 54 [100.0%]  (fallthru,exec)
  m_248 = sdp_198->sdp_media;
  # DEBUG m => m_248
  if (m_248 != 0B)
    goto <bb 56>;
  else
    goto <bb 61>;
  # SUCC: 56 [85.0%]  (true,exec) 61 [15.0%]  (false,exec)

  # BLOCK 56 freq:11
  # PRED: 55 [85.0%]  (true,exec)
  D.44540_249 = BIT_FIELD_REF <*m_248, 8, 544>;
  D.44541_250 = D.44540_249 & 6;
  D.44542_251 = D.44541_250 == 2;
  D.44543_252 = D.44541_250 == 0;
  D.44544_253 = D.44543_252 | D.44542_251;
  if (D.44544_253 != 0)
    goto <bb 61>;
  else
    goto <bb 57>;
  # SUCC: 61 [50.0%]  (true,exec) 57 [50.0%]  (false,exec)

  # BLOCK 57 freq:5
  # PRED: 56 [50.0%]  (false,exec)
  D.44546_254 = m_248->m_connections;
  if (D.44546_254 != 0B)
    goto <bb 58>;
  else
    goto <bb 61>;
  # SUCC: 58 [85.0%]  (true,exec) 61 [15.0%]  (false,exec)

  # BLOCK 58 freq:5
  # PRED: 57 [85.0%]  (true,exec)
  D.44548_256 = D.44546_254->c_address;
  if (D.44548_256 != 0B)
    goto <bb 59>;
  else
    goto <bb 61>;
  # SUCC: 59 [85.0%]  (true,exec) 61 [15.0%]  (false,exec)

  # BLOCK 59 freq:4
  # PRED: 58 [85.0%]  (true,exec)
  # DEBUG __s2_len => 7
  __result_300 = __builtin_strcmp (D.44548_256, "0.0.0.0");
  if (__result_300 == 0)
    goto <bb 61>;
  else
    goto <bb 60>;
  # SUCC: 61 [50.0%]  (true,exec) 60 [50.0%]  (false,exec)

  # BLOCK 60 freq:2
  # PRED: 59 [50.0%]  (false,exec)
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 61 freq:13
  # PRED: 55 [15.0%]  (false,exec) 57 [15.0%]  (false,exec) 58 [15.0%]  (false,exec) 60 [100.0%]  (fallthru,exec) 59 [50.0%]  (true,exec) 56 [50.0%]  (true,exec)
  # sendonly_42 = PHI <0(55), 0(57), 0(58), 0(60), 2(59), 2(56)>
  # DEBUG sendonly => sendonly_42
  attr_303 = sdp_198->sdp_attributes;
  # DEBUG attr => attr_303
  # DEBUG recvonly => 0
  # DEBUG sendonly => sendonly_42
  # DEBUG dmaxptime => 0
  # DEBUG dptime => 0
  # DEBUG attr => attr_303
  if (attr_303 != 0B)
    goto <bb 62>;
  else
    goto <bb 79>;
  # SUCC: 62 [91.0%]  (true,exec) 79 [9.0%]  (false,exec)

  # BLOCK 62 freq:128
  # PRED: 61 [91.0%]  (true,exec) 77 [91.0%]  (true,exec)
  # attr_1666 = PHI <attr_303(61), attr_334(77)>
  # dptime_1671 = PHI <0(61), dptime_36(77)>
  # dmaxptime_1865 = PHI <0(61), dmaxptime_40(77)>
  # sendonly_1689 = PHI <sendonly_42(61), sendonly_43(77)>
  # recvonly_1894 = PHI <0(61), recvonly_45(77)>
  D.44590_304 = attr_1666->a_name;
  # DEBUG s => D.44590_304
  if (D.44590_304 == 0B)
    goto <bb 77>;
  else
    goto <bb 63>;
  # SUCC: 77 [15.0%]  (true,exec) 63 [85.0%]  (false,exec)

  # BLOCK 63 freq:109
  # PRED: 62 [85.0%]  (false,exec)
  D.47877_1465 = *D.44590_304;
  if (D.47877_1465 == 0)
    goto <bb 77>;
  else
    goto <bb 432>;
  # SUCC: 77 [50.0%]  (true,exec) 432 [50.0%]  (false,exec)

  # BLOCK 64 freq:19
  # PRED: 432 [29.0%]  (true,exec)
  # DEBUG sendonly => 1
  D.44530_309 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_309, "media_audio_mode", "recvonly", 1);
  goto <bb 77>;
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 65 freq:46
  # PRED: 432 [71.0%]  (false,exec)
  D.44598_311 = strcasecmp (D.44590_304, "inactive");
  if (D.44598_311 == 0)
    goto <bb 66>;
  else
    goto <bb 67>;
  # SUCC: 66 [29.0%]  (true,exec) 67 [71.0%]  (false,exec)

  # BLOCK 66 freq:13
  # PRED: 65 [29.0%]  (true,exec)
  # DEBUG sendonly => 1
  D.44530_313 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_313, "media_audio_mode", "inactive", 1);
  goto <bb 77>;
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 67 freq:32
  # PRED: 65 [71.0%]  (false,exec)
  D.44602_315 = strcasecmp (D.44590_304, "recvonly");
  if (D.44602_315 == 0)
    goto <bb 68>;
  else
    goto <bb 71>;
  # SUCC: 68 [29.0%]  (true,exec) 71 [71.0%]  (false,exec)

  # BLOCK 68 freq:9
  # PRED: 67 [29.0%]  (true,exec)
  D.44530_316 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_316, "media_audio_mode", "sendonly", 1);
  # DEBUG recvonly => 1
  D.44605_318 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44606_319 = switch_rtp_ready (D.44605_318);
  if (D.44606_319 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;
  # SUCC: 69 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

  # BLOCK 69 freq:5
  # PRED: 68 [50.0%]  (true,exec)
  D.44605_320 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_max_missed_packets (D.44605_320, 0);
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_hold_packets = 0;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_packets = 0;
  goto <bb 77>;
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 70 freq:5
  # PRED: 68 [50.0%]  (false,exec)
  D.44530_321 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_321, "rtp_timeout_sec", "0", 1);
  D.44530_322 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_322, "rtp_hold_timeout_sec", "0", 1);
  goto <bb 77>;
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 71 freq:23
  # PRED: 67 [71.0%]  (false,exec)
  if (sendonly_1689 != 2)
    goto <bb 72>;
  else
    goto <bb 73>;
  # SUCC: 72 [27.0%]  (true,exec) 73 [73.0%]  (false,exec)

  # BLOCK 72 freq:6
  # PRED: 71 [27.0%]  (true,exec)
  D.44614_324 = strcasecmp (D.44590_304, "sendrecv");
  if (D.44614_324 == 0)
    goto <bb 77>;
  else
    goto <bb 73>;
  # SUCC: 77 [50.0%]  (true,exec) 73 [50.0%]  (false,exec)

  # BLOCK 73 freq:20
  # PRED: 71 [73.0%]  (false,exec) 72 [50.0%]  (false,exec)
  D.44616_327 = strcasecmp (D.44590_304, "ptime");
  if (D.44616_327 == 0)
    goto <bb 74>;
  else
    goto <bb 75>;
  # SUCC: 74 [29.0%]  (true,exec) 75 [71.0%]  (false,exec)

  # BLOCK 74 freq:6
  # PRED: 73 [29.0%]  (true,exec)
  D.44619_328 = attr_1666->a_value;
  # DEBUG __nptr => D.44619_328
  dptime_1467 = strtol (D.44619_328, 0B, 10);
  # DEBUG dptime => NULL
  goto <bb 77>;
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 75 freq:14
  # PRED: 73 [71.0%]  (false,exec)
  D.44621_331 = strcasecmp (D.44590_304, "maxptime");
  if (D.44621_331 == 0)
    goto <bb 76>;
  else
    goto <bb 77>;
  # SUCC: 76 [29.0%]  (true,exec) 77 [71.0%]  (false,exec)

  # BLOCK 76 freq:4
  # PRED: 75 [29.0%]  (true,exec)
  D.44619_332 = attr_1666->a_value;
  # DEBUG __nptr => D.44619_332
  dmaxptime_1468 = strtol (D.44619_332, 0B, 10);
  # DEBUG dmaxptime => NULL
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 77 freq:128
  # PRED: 63 [50.0%]  (true,exec) 64 [100.0%]  (fallthru,exec) 66 [100.0%]  (fallthru,exec) 70 [100.0%]  (fallthru,exec) 72 [50.0%]  (true,exec) 74 [100.0%]  (fallthru,exec) 75 [71.0%]  (false,exec) 76 [100.0%]  (fallthru,exec) 69 [100.0%]  (fallthru,exec) 62 [15.0%]  (true,exec)
  # dptime_36 = PHI <dptime_1671(63), dptime_1671(64), dptime_1671(66), dptime_1671(70), dptime_1671(72), dptime_1467(74), dptime_1671(75), dptime_1671(76), dptime_1671(69), dptime_1671(62)>
  # dmaxptime_40 = PHI <dmaxptime_1865(63), dmaxptime_1865(64), dmaxptime_1865(66), dmaxptime_1865(70), dmaxptime_1865(72), dmaxptime_1865(74), dmaxptime_1865(75), dmaxptime_1468(76), dmaxptime_1865(69), dmaxptime_1865(62)>
  # sendonly_43 = PHI <sendonly_1689(63), 1(64), 1(66), sendonly_1689(70), 0(72), sendonly_1689(74), sendonly_1689(75), sendonly_1689(76), sendonly_1689(69), sendonly_1689(62)>
  # recvonly_45 = PHI <recvonly_1894(63), recvonly_1894(64), recvonly_1894(66), 1(70), recvonly_1894(72), recvonly_1894(74), recvonly_1894(75), recvonly_1894(76), 1(69), recvonly_1894(62)>
  # DEBUG recvonly => recvonly_45
  # DEBUG sendonly => sendonly_43
  # DEBUG dmaxptime => dmaxptime_40
  # DEBUG dptime => dptime_36
  attr_334 = attr_1666->a_next;
  # DEBUG attr => attr_334
  # DEBUG recvonly => recvonly_45
  # DEBUG sendonly => sendonly_43
  # DEBUG dmaxptime => dmaxptime_40
  # DEBUG dptime => dptime_36
  # DEBUG attr => attr_334
  if (attr_334 != 0B)
    goto <bb 62>;
  else
    goto <bb 78>;
  # SUCC: 62 [91.0%]  (true,exec) 78 [9.0%]  (false,exec)

  # BLOCK 78 freq:12
  # PRED: 77 [9.0%]  (false,exec)
  # recvonly_869 = PHI <recvonly_45(77)>
  prephitmp.1026_1683 = recvonly_869 != 1;
  # SUCC: 79 [100.0%]  (fallthru,exec)

  # BLOCK 79 freq:13
  # PRED: 78 [100.0%]  (fallthru,exec) 61 [9.0%]  (false,exec)
  # dptime_1035 = PHI <dptime_36(78), 0(61)>
  # dmaxptime_1005 = PHI <dmaxptime_40(78), 0(61)>
  # sendonly_1006 = PHI <sendonly_43(78), sendonly_42(61)>
  # prephitmp.1026_1682 = PHI <prephitmp.1026_1683(78), 1(61)>
  D.44624_335 = sendonly_1006 != 1;
  D.44626_337 = D.44624_335 & prephitmp.1026_1682;
  if (D.44626_337 != 0)
    goto <bb 80>;
  else
    goto <bb 81>;
  # SUCC: 80 [29.0%]  (true,exec) 81 [71.0%]  (false,exec)

  # BLOCK 80 freq:4
  # PRED: 79 [29.0%]  (true,exec)
  D.44530_338 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_338, "media_audio_mode", 0B, 1);
  # SUCC: 81 [100.0%]  (fallthru,exec)

  # BLOCK 81 freq:13
  # PRED: 79 [71.0%]  (false,exec) 80 [100.0%]  (fallthru,exec)
  D.44631_339 = switch_media_handle_test_media_flag (smh_186, 5);
  if (D.44631_339 == 0)
    goto <bb 82>;
  else
    goto <bb 434>;
  # SUCC: 82 [29.0%]  (true,exec) 434 [71.0%]  (false,exec)

  # BLOCK 82 freq:4
  # PRED: 81 [29.0%]  (true,exec)
  D.44530_340 = session_161(D)->channel;
  val_341 = switch_channel_get_variable_dup (D.44530_340, "rtp_disable_hold", 1, -1);
  # DEBUG val => val_341
  if (val_341 == 0B)
    goto <bb 93>;
  else
    goto <bb 83>;
  # SUCC: 93 [30.2%]  (true,exec) 83 [69.8%]  (false,exec)

  # BLOCK 83 freq:2
  # PRED: 82 [69.8%]  (false,exec)
  # DEBUG expr => val_341
  D.49699_1570 = strcasecmp (val_341, "yes");
  if (D.49699_1570 == 0)
    goto <bb 92>;
  else
    goto <bb 84>;
  # SUCC: 92 [39.0%]  (true,exec) 84 [61.0%]  (false,exec)

  # BLOCK 84 freq:1
  # PRED: 83 [61.0%]  (false,exec)
  D.49700_1571 = strcasecmp (val_341, "on");
  if (D.49700_1571 == 0)
    goto <bb 92>;
  else
    goto <bb 85>;
  # SUCC: 92 [39.0%]  (true,exec) 85 [61.0%]  (false,exec)

  # BLOCK 85 freq:1
  # PRED: 84 [61.0%]  (false,exec)
  D.49701_1572 = strcasecmp (val_341, "true");
  if (D.49701_1572 == 0)
    goto <bb 92>;
  else
    goto <bb 86>;
  # SUCC: 92 [39.0%]  (true,exec) 86 [61.0%]  (false,exec)

  # BLOCK 86
  # PRED: 85 [61.0%]  (false,exec)
  D.49702_1573 = strcasecmp (val_341, "t");
  if (D.49702_1573 == 0)
    goto <bb 92>;
  else
    goto <bb 87>;
  # SUCC: 92 [39.0%]  (true,exec) 87 [61.0%]  (false,exec)

  # BLOCK 87
  # PRED: 86 [61.0%]  (false,exec)
  D.49703_1574 = strcasecmp (val_341, "enabled");
  if (D.49703_1574 == 0)
    goto <bb 92>;
  else
    goto <bb 88>;
  # SUCC: 92 [39.0%]  (true,exec) 88 [61.0%]  (false,exec)

  # BLOCK 88
  # PRED: 87 [61.0%]  (false,exec)
  D.49704_1575 = strcasecmp (val_341, "active");
  if (D.49704_1575 == 0)
    goto <bb 92>;
  else
    goto <bb 89>;
  # SUCC: 92 [39.0%]  (true,exec) 89 [61.0%]  (false,exec)

  # BLOCK 89
  # PRED: 88 [61.0%]  (false,exec)
  D.49705_1576 = strcasecmp (val_341, "allow");
  if (D.49705_1576 == 0)
    goto <bb 92>;
  else
    goto <bb 90>;
  # SUCC: 92 [61.0%]  (true,exec) 90 [39.0%]  (false,exec)

  # BLOCK 90
  # PRED: 89 [39.0%]  (false,exec)
  D.49706_1577 = switch_is_number (val_341);
  if (D.49706_1577 != 0)
    goto <bb 91>;
  else
    goto <bb 433>;
  # SUCC: 91 [29.0%]  (true,exec) 433 [71.0%]  (false,exec)

  # BLOCK 91
  # PRED: 90 [29.0%]  (true,exec)
  # DEBUG __nptr => val_341
  D.49707_1578 = strtol (val_341, 0B, 10);
  if (D.49707_1578 != 0)
    goto <bb 92>;
  else
    goto <bb 433>;
  # SUCC: 92 [39.0%]  (true,exec) 433 [61.0%]  (false,exec)

  # BLOCK 92 freq:1
  # PRED: 83 [39.0%]  (true,exec) 84 [39.0%]  (true,exec) 85 [39.0%]  (true,exec) 86 [39.0%]  (true,exec) 87 [39.0%]  (true,exec) 88 [39.0%]  (true,exec) 89 [61.0%]  (true,exec) 91 [39.0%]  (true,exec)
Invalid sum of outgoing probabilities 25.0%
  goto <bb 434>;
  # SUCC: 434 [25.0%]  (fallthru,exec)

  # BLOCK 93 freq:2
  # PRED: 82 [30.2%]  (true,exec) 433 [100.0%]  (fallthru,exec)
  D.44471_343 = smh_186->mparams;
  D.44636_344 = D.44471_343->hold_laps;
  if (D.44636_344 == 0)
    goto <bb 94>;
  else
    goto <bb 434>;
  # SUCC: 94 [29.0%]  (true,exec) 434 [71.0%]  (false,exec)

  # BLOCK 94 freq:1
  # PRED: 93 [29.0%]  (true,exec)
  D.44471_343->hold_laps = 1;
  D.44640_348 = switch_core_media_toggle_hold (session_161(D), sendonly_1006);
  if (D.44640_348 != 0)
    goto <bb 95>;
  else
    goto <bb 434>;
  # SUCC: 95 [29.0%]  (true,exec) 434 [71.0%]  (false,exec)

  # BLOCK 95
  # PRED: 94 [29.0%]  (true,exec)
  reneg_349 = switch_media_handle_test_media_flag (smh_186, 6);
  # DEBUG reneg => reneg_349
  D.44530_350 = session_161(D)->channel;
  val_351 = switch_channel_get_variable_dup (D.44530_350, "rtp_renegotiate_codec_on_hold", 1, -1);
  # DEBUG val => val_351
  if (val_351 != 0B)
    goto <bb 96>;
  else
    goto <bb 97>;
  # SUCC: 96 [69.8%]  (true,exec) 97 [30.2%]  (false,exec)

  # BLOCK 96
  # PRED: 95 [69.8%]  (true,exec)
  reneg_352 = switch_true (val_351);
  # DEBUG reneg => reneg_352
  # SUCC: 97 [100.0%]  (fallthru,exec)

  # BLOCK 97 freq:2
  # PRED: 95 [30.2%]  (false,exec) 96 [100.0%]  (fallthru,exec)
  # reneg_81 = PHI <reneg_349(95), reneg_352(96)>
  # DEBUG reneg => reneg_81
  if (reneg_81 != 0)
    goto <bb 98>;
  else
    goto <bb 110>;
  # SUCC: 98 (true,exec) 110 [100.0%]  (false,exec)

  # BLOCK 98 freq:4
  # PRED: 97 (true,exec) 434 [100.0%]  (fallthru,exec)
  reneg_353 = switch_media_handle_test_media_flag (smh_186, 7);
  # DEBUG reneg => reneg_353
  D.44530_354 = session_161(D)->channel;
  val_355 = switch_channel_get_variable_dup (D.44530_354, "rtp_renegotiate_codec_on_reinvite", 1, -1);
  # DEBUG val => val_355
  if (val_355 != 0B)
    goto <bb 99>;
  else
    goto <bb 110>;
  # SUCC: 99 [69.8%]  (true,exec) 110 [30.2%]  (false,exec)

  # BLOCK 99 freq:2
  # PRED: 98 [69.8%]  (true,exec)
  # DEBUG expr => val_355
  D.49711_1580 = strcasecmp (val_355, "yes");
  if (D.49711_1580 == 0)
    goto <bb 109>;
  else
    goto <bb 100>;
  # SUCC: 109 [39.0%]  (true,exec) 100 [61.0%]  (false,exec)

  # BLOCK 100 freq:1
  # PRED: 99 [61.0%]  (false,exec)
  D.49712_1581 = strcasecmp (val_355, "on");
  if (D.49712_1581 == 0)
    goto <bb 109>;
  else
    goto <bb 101>;
  # SUCC: 109 [39.0%]  (true,exec) 101 [61.0%]  (false,exec)

  # BLOCK 101 freq:1
  # PRED: 100 [61.0%]  (false,exec)
  D.49713_1582 = strcasecmp (val_355, "true");
  if (D.49713_1582 == 0)
    goto <bb 109>;
  else
    goto <bb 102>;
  # SUCC: 109 [39.0%]  (true,exec) 102 [61.0%]  (false,exec)

  # BLOCK 102
  # PRED: 101 [61.0%]  (false,exec)
  D.49714_1583 = strcasecmp (val_355, "t");
  if (D.49714_1583 == 0)
    goto <bb 109>;
  else
    goto <bb 103>;
  # SUCC: 109 [39.0%]  (true,exec) 103 [61.0%]  (false,exec)

  # BLOCK 103
  # PRED: 102 [61.0%]  (false,exec)
  D.49715_1584 = strcasecmp (val_355, "enabled");
  if (D.49715_1584 == 0)
    goto <bb 109>;
  else
    goto <bb 104>;
  # SUCC: 109 [39.0%]  (true,exec) 104 [61.0%]  (false,exec)

  # BLOCK 104
  # PRED: 103 [61.0%]  (false,exec)
  D.49716_1585 = strcasecmp (val_355, "active");
  if (D.49716_1585 == 0)
    goto <bb 109>;
  else
    goto <bb 105>;
  # SUCC: 109 [39.0%]  (true,exec) 105 [61.0%]  (false,exec)

  # BLOCK 105
  # PRED: 104 [61.0%]  (false,exec)
  D.49717_1586 = strcasecmp (val_355, "allow");
  if (D.49717_1586 == 0)
    goto <bb 109>;
  else
    goto <bb 106>;
  # SUCC: 109 [61.0%]  (true,exec) 106 [39.0%]  (false,exec)

  # BLOCK 106
  # PRED: 105 [39.0%]  (false,exec)
  D.49718_1587 = switch_is_number (val_355);
  if (D.49718_1587 != 0)
    goto <bb 107>;
  else
    goto <bb 109>;
  # SUCC: 107 [29.0%]  (true,exec) 109 [71.0%]  (false,exec)

  # BLOCK 107
  # PRED: 106 [29.0%]  (true,exec)
  # DEBUG __nptr => val_355
  D.49719_1588 = strtol (val_355, 0B, 10);
  if (D.49719_1588 != 0)
    goto <bb 108>;
  else
    goto <bb 109>;
  # SUCC: 108 [39.0%]  (true,exec) 109 [61.0%]  (false,exec)

  # BLOCK 108
  # PRED: 107 [39.0%]  (true,exec)
  # SUCC: 109 [100.0%]  (fallthru,exec)

  # BLOCK 109 freq:3
  # PRED: 99 [39.0%]  (true,exec) 100 [39.0%]  (true,exec) 101 [39.0%]  (true,exec) 102 [39.0%]  (true,exec) 103 [39.0%]  (true,exec) 104 [39.0%]  (true,exec) 105 [61.0%]  (true,exec) 108 [100.0%]  (fallthru,exec) 106 [71.0%]  (false,exec) 107 [61.0%]  (false,exec)
  # reneg_1589 = PHI <1(99), 1(100), 1(101), 1(102), 1(103), 1(104), 1(105), 1(108), 0(106), 0(107)>
  # DEBUG reneg => NULL
  # SUCC: 110 [100.0%]  (fallthru,exec)

  # BLOCK 110 freq:13
  # PRED: 97 [100.0%]  (false,exec) 98 [30.2%]  (false,exec) 109 [100.0%]  (fallthru,exec)
  # reneg_82 = PHI <reneg_81(97), reneg_353(98), reneg_1589(109)>
  # DEBUG reneg => reneg_82
  D.44649_357 = session_161(D)->bugs;
  if (D.44649_357 != 0B)
    goto <bb 111>;
  else
    goto <bb 112>;
  # SUCC: 111 [69.8%]  (true,exec) 112 [30.2%]  (false,exec)

  # BLOCK 111 freq:9
  # PRED: 110 [69.8%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3063, session_161(D), 7, "Session is connected to a media bug. Re-Negotiation implicitly disabled.\n");
  # DEBUG reneg => 0
  # DEBUG reneg => 0
  goto <bb 113>;
  # SUCC: 113 [100.0%]  (fallthru,exec)

  # BLOCK 112 freq:4
  # PRED: 110 [30.2%]  (false,exec)
  # DEBUG reneg => reneg_82
  if (reneg_82 == 0)
    goto <bb 113>;
  else
    goto <bb 115>;
  # SUCC: 113 (true,exec) 115 [100.0%]  (false,exec)

  # BLOCK 113 freq:6
  # PRED: 112 (true,exec) 111 [100.0%]  (fallthru,exec)
  total_codecs_359 = smh_186->num_negotiated_codecs;
  if (total_codecs_359 != 0)
    goto <bb 114>;
  else
    goto <bb 116>;
  # SUCC: 114 [50.0%]  (true,exec) 116 [50.0%]  (false,exec)

  # BLOCK 114 freq:3
  # PRED: 113 [50.0%]  (true,exec)
  codec_array_360 = &smh_186->negotiated_codecs;
  # DEBUG codec_array => codec_array_360
  # DEBUG total_codecs => total_codecs_359
  goto <bb 116>;
  # SUCC: 116 [100.0%]  (fallthru,exec)

  # BLOCK 115 freq:3
  # PRED: 112 [100.0%]  (false,exec)
  D.44471_362 = smh_186->mparams;
  D.44471_362->num_codecs = 0;
  switch_core_media_prepare_codecs (session_161(D), 0);
  # DEBUG codec_array => codec_array_190
  D.44471_364 = smh_186->mparams;
  total_codecs_365 = D.44471_364->num_codecs;
  # DEBUG total_codecs => total_codecs_365
  # SUCC: 116 [100.0%]  (fallthru,exec)

  # BLOCK 116 freq:13
  # PRED: 114 [100.0%]  (fallthru,exec) 113 [50.0%]  (false,exec) 115 [100.0%]  (fallthru,exec)
  # codec_array_84 = PHI <codec_array_360(114), codec_array_190(113), codec_array_190(115)>
  # total_codecs_85 = PHI <total_codecs_359(114), total_codecs_192(113), total_codecs_365(115)>
  # DEBUG total_codecs => total_codecs_85
  # DEBUG codec_array => codec_array_84
  D.44661_366 = switch_stristr ("T38FaxFillBitRemoval:", r_sdp_193(D));
  if (D.44661_366 != 0B)
    goto <bb 119>;
  else
    goto <bb 117>;
  # SUCC: 119 [85.0%]  (true,exec) 117 [15.0%]  (false,exec)

  # BLOCK 117 freq:2
  # PRED: 116 [15.0%]  (false,exec)
  D.44663_367 = switch_stristr ("T38FaxTranscodingMMR:", r_sdp_193(D));
  if (D.44663_367 != 0B)
    goto <bb 119>;
  else
    goto <bb 118>;
  # SUCC: 119 [93.3%]  (true,exec) 118 [6.7%]  (false,exec)

  # BLOCK 118
  # PRED: 117 [6.7%]  (false,exec)
  D.44665_368 = switch_stristr ("T38FaxTranscodingJBIG:", r_sdp_193(D));
  if (D.44665_368 != 0B)
    goto <bb 119>;
  else
    goto <bb 120>;
  # SUCC: 119 [85.0%]  (true,exec) 120 [15.0%]  (false,exec)

  # BLOCK 119 freq:13
  # PRED: 116 [85.0%]  (true,exec) 117 [93.3%]  (true,exec) 118 [85.0%]  (true,exec)
  D.44530_369 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_369, "t38_broken_boolean", "true", 1);
  # SUCC: 120 [100.0%]  (fallthru,exec)

  # BLOCK 120 freq:13
  # PRED: 118 [15.0%]  (false,exec) 119 [100.0%]  (fallthru,exec)
  switch_core_media_find_zrtp_hash (session_161(D), sdp_198);
  switch_core_media_pass_zrtp_hash (session_161(D));
  check_ice (smh_186, 0, sdp_198, 0B);
  check_ice (smh_186, 1, sdp_198, 0B);
  m_370 = sdp_198->sdp_media;
  # DEBUG m => m_370
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0
  # DEBUG codec_ms => 0
  # DEBUG got_webrtc => 0
  # DEBUG got_udptl => 0
  # DEBUG got_savp => 0
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => 0
  # DEBUG got_audio => 0
  # DEBUG got_video_crypto => 0
  # DEBUG got_crypto => 0
  # DEBUG m => m_370
  # DEBUG cng_pt => 0
  # DEBUG best_te => 0
  # DEBUG match => 0
  if (m_370 != 0B)
    goto <bb 121>;
  else
    goto <bb 428> (done);
  # SUCC: 121 [98.0%]  (true,exec) 428 [2.0%]  (false,exec)

  # BLOCK 121 freq:339
  # PRED: 120 [98.0%]  (true,exec) 427 [98.0%]  (true,exec)
  # match_1800 = PHI <0(120), match_15(427)>
  # best_te_680 = PHI <0(120), best_te_22(427)>
  # cng_pt_1717 = PHI <0(120), cng_pt_26(427)>
  # m_1764 = PHI <m_370(120), m_1093(427)>
  # got_crypto_1866 = PHI <0(120), got_crypto_55(427)>
  # got_video_crypto_1674 = PHI <0(120), got_video_crypto_63(427)>
  # got_audio_1693 = PHI <0(120), got_audio_66(427)>
  # got_avp_671 = PHI <0(120), got_avp_2186(427)>
  # got_savp_512 = PHI <0(120), got_savp_2166(427)>
  # got_udptl_1868 = PHI <0(120), got_udptl_2172(427)>
  # got_webrtc_452 = PHI <0(120), got_webrtc_78(427)>
  # codec_ms_477 = PHI <0(120), codec_ms_94(427)>
  # m_idx_1869 = PHI <0(120), m_idx_113(427)>
  # nm_idx_1749 = PHI <0(120), nm_idx_121(427)>
  # DEBUG ptime => dptime_1035
  # DEBUG maxptime => dmaxptime_1005
  D.44666_373 = m_1764->m_proto;
  if (D.44666_373 == 261)
    goto <bb 122>;
  else
    goto <bb 123>;
  # SUCC: 122 [13.7%]  (true,exec) 123 [86.3%]  (false,exec)

  # BLOCK 122 freq:47
  # PRED: 121 [13.7%]  (true,exec)
  got_webrtc_374 = got_webrtc_452 + 1;
  # DEBUG got_webrtc => got_webrtc_374
  switch_core_session_set_ice (session_161(D));
  # SUCC: 123 [100.0%]  (fallthru,exec)

  # BLOCK 123 freq:339
  # PRED: 121 [86.3%]  (false,exec) 122 [100.0%]  (fallthru,exec)
  # got_webrtc_78 = PHI <got_webrtc_452(121), got_webrtc_374(122)>
  # DEBUG got_webrtc => got_webrtc_78
  D.44669_375 = m_1764->m_proto_name;
  if (D.44669_375 != 0B)
    goto <bb 124>;
  else
    goto <bb 126>;
  # SUCC: 124 [85.0%]  (true,exec) 126 [15.0%]  (false,exec)

  # BLOCK 124 freq:289
  # PRED: 123 [85.0%]  (true,exec)
  D.44672_377 = strcasecmp (D.44669_375, "UDP/TLS/RTP/SAVPF");
  if (D.44672_377 == 0)
    goto <bb 125>;
  else
    goto <bb 126>;
  # SUCC: 125 [29.0%]  (true,exec) 126 [71.0%]  (false,exec)

  # BLOCK 125 freq:84
  # PRED: 124 [29.0%]  (true,exec)
  D.44530_378 = session_161(D)->channel;
  switch_channel_set_flag_value (D.44530_378, 107, 1);
  # SUCC: 126 [100.0%]  (fallthru,exec)

  # BLOCK 126 freq:339
  # PRED: 123 [15.0%]  (false,exec) 124 [71.0%]  (false,exec) 125 [100.0%]  (fallthru,exec)
  D.44675_379 = m_1764->m_proto;
  D.44676_380 = D.44675_379 == 257;
  D.44677_381 = D.44675_379 == 261;
  D.44678_382 = D.44677_381 | D.44676_380;
  if (D.44678_382 != 0)
    goto <bb 127>;
  else
    goto <bb 129>;
  # SUCC: 127 [50.0%]  (true,exec) 129 [50.0%]  (false,exec)

  # BLOCK 127 freq:170
  # PRED: 126 [50.0%]  (true,exec)
  prephitmp.1049_383 = m_1764->m_type;
  if (prephitmp.1049_383 == 2)
    goto <bb 128>;
  else
    goto <bb 135>;
  # SUCC: 128 [28.0%]  (true,exec) 135 [72.0%]  (false,exec)

  # BLOCK 128 freq:48
  # PRED: 127 [28.0%]  (true,exec)
  got_savp_384 = got_savp_512 + 1;
  # DEBUG got_savp => got_savp_384
  goto <bb 135>;
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 129 freq:170
  # PRED: 126 [50.0%]  (false,exec)
  if (D.44675_379 == 256)
    goto <bb 130>;
  else
    goto <bb 132>;
  # SUCC: 130 [28.0%]  (true,exec) 132 [72.0%]  (false,exec)

  # BLOCK 130 freq:48
  # PRED: 129 [28.0%]  (true,exec)
  prephitmp.1049_387 = m_1764->m_type;
  if (prephitmp.1049_387 == 2)
    goto <bb 131>;
  else
    goto <bb 135>;
  # SUCC: 131 [28.0%]  (true,exec) 135 [72.0%]  (false,exec)

  # BLOCK 131 freq:13
  # PRED: 130 [28.0%]  (true,exec)
  got_avp_388 = got_avp_671 + 1;
  # DEBUG got_avp => got_avp_388
  goto <bb 135>;
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 132 freq:122
  # PRED: 129 [72.0%]  (false,exec)
  if (D.44675_379 == 258)
    goto <bb 134>;
  else
    goto <bb 133>;
  # SUCC: 134 [28.0%]  (true,exec) 133 [72.0%]  (false,exec)

  # BLOCK 133 freq:88
  # PRED: 132 [72.0%]  (false,exec)
  prephitmp.1049_1673 = m_1764->m_type;
  goto <bb 135>;
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 134 freq:34
  # PRED: 132 [28.0%]  (true,exec)
  got_udptl_391 = got_udptl_1868 + 1;
  # DEBUG got_udptl => got_udptl_391
  # DEBUG got_udptl => got_udptl_391
  # DEBUG got_savp => got_savp_512
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => got_avp_671
  prephitmp.1049_346 = m_1764->m_type;
  goto <bb 136>;
  # SUCC: 136 [100.0%]  (fallthru,exec)

  # BLOCK 135 freq:305
  # PRED: 127 [72.0%]  (false,exec) 130 [72.0%]  (false,exec) 133 [100.0%]  (fallthru,exec) 131 [100.0%]  (fallthru,exec) 128 [100.0%]  (fallthru,exec)
  # got_avp_68 = PHI <got_avp_671(127), got_avp_671(130), got_avp_671(133), got_avp_388(131), got_avp_671(128)>
  # got_savp_74 = PHI <got_savp_512(127), got_savp_512(130), got_savp_512(133), got_savp_512(131), got_savp_384(128)>
  # prephitmp.1049_1808 = PHI <prephitmp.1049_383(127), prephitmp.1049_387(130), prephitmp.1049_1673(133), prephitmp.1049_387(131), prephitmp.1049_383(128)>
  # DEBUG got_udptl => got_udptl_1868
  # DEBUG got_savp => got_savp_74
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => got_avp_68
  if (got_udptl_1868 != 0)
    goto <bb 136>;
  else
    goto <bb 168>;
  # SUCC: 136 [44.4%]  (true,exec) 168 [55.6%]  (false,exec)

  # BLOCK 136 freq:170
  # PRED: 135 [44.4%]  (true,exec) 134 [100.0%]  (fallthru,exec)
  # got_avp_1740 = PHI <got_avp_68(135), got_avp_671(134)>
  # got_savp_1711 = PHI <got_savp_74(135), got_savp_512(134)>
  # got_udptl_774 = PHI <got_udptl_1868(135), got_udptl_391(134)>
  # prephitmp.1049_1805 = PHI <prephitmp.1049_1808(135), prephitmp.1049_346(134)>
  if (prephitmp.1049_1805 == 8)
    goto <bb 137>;
  else
    goto <bb 168>;
  # SUCC: 137 [28.0%]  (true,exec) 168 [72.0%]  (false,exec)

  # BLOCK 137 freq:48
  # PRED: 136 [28.0%]  (true,exec)
  D.44697_393 = m_1764->m_port;
  if (D.44697_393 != 0)
    goto <bb 138>;
  else
    goto <bb 427>;
  # SUCC: 138 [2.0%]  (true,exec) 427 [98.0%]  (false,exec)

  # BLOCK 138 freq:1
  # PRED: 137 [2.0%]  (true,exec)
  # m_1789 = PHI <m_1764(137)>
  t38_options_394 = switch_core_media_process_udptl (session_161(D), sdp_198, m_1789);
  # DEBUG t38_options => t38_options_394
  D.44530_395 = session_161(D)->channel;
  D.44699_396 = switch_channel_test_app_flag_key ("T38", D.44530_395, 16);
  if (D.44699_396 != 0)
    goto <bb 428> (done);
  else
    goto <bb 139>;
  # SUCC: 428 [71.0%]  (true,exec) 139 [29.0%]  (false,exec)

  # BLOCK 139
  # PRED: 138 [29.0%]  (false,exec)
  D.44702_398 = switch_channel_get_variable_dup (channel_162, "refuse_t38", 1, -1);
  D.44703_399 = switch_true (D.44702_398);
  if (D.44703_399 != 0)
    goto <bb 140>;
  else
    goto <bb 141>;
  # SUCC: 140 [50.0%]  (true,exec) 141 [50.0%]  (false,exec)

  # BLOCK 140
  # PRED: 139 [50.0%]  (true,exec)
  D.44530_400 = session_161(D)->channel;
  switch_channel_clear_app_flag_key ("T38", D.44530_400, 2);
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 141
  # PRED: 139 [50.0%]  (false,exec)
  var_402 = switch_channel_get_variable_dup (channel_162, "t38_passthru", 1, -1);
  # DEBUG var => var_402
  D.44481_403 = smh_186->session;
  D.44482_404 = D.44481_403->channel;
  D.44706_405 = switch_channel_test_flag (D.44482_404, 101);
  # DEBUG pass => (int) D.44706_405
  D.44530_407 = session_161(D)->channel;
  D.44707_408 = switch_channel_test_app_flag_key ("T38", D.44530_407, 2);
  if (D.44707_408 != 0)
    goto <bb 142>;
  else
    goto <bb 144>;
  # SUCC: 142 [50.0%]  (true,exec) 144 [50.0%]  (false,exec)

  # BLOCK 142
  # PRED: 141 [50.0%]  (true,exec)
  if (proceed_209(D) != 0B)
    goto <bb 143>;
  else
    goto <bb 144>;
  # SUCC: 143 [85.0%]  (true,exec) 144 [15.0%]  (false,exec)

  # BLOCK 143
  # PRED: 142 [85.0%]  (true,exec)
  *proceed_209(D) = 0;
  # SUCC: 144 [100.0%]  (fallthru,exec)

  # BLOCK 144
  # PRED: 141 [50.0%]  (false,exec) 142 [15.0%]  (false,exec) 143 [100.0%]  (fallthru,exec)
  if (var_402 != 0B)
    goto <bb 145>;
  else
    goto <bb 147>;
  # SUCC: 145 [69.8%]  (true,exec) 147 [30.2%]  (false,exec)

  # BLOCK 145
  # PRED: 144 [69.8%]  (true,exec)
  pass_409 = switch_true (var_402);
  # DEBUG pass => pass_409
  if (pass_409 == 0)
    goto <bb 146>;
  else
    goto <bb 148>;
  # SUCC: 146 [50.0%]  (true,exec) 148 [50.0%]  (false,exec)

  # BLOCK 146
  # PRED: 145 [50.0%]  (true,exec)
  D.44716_410 = strcasecmp (var_402, "once");
  if (D.44716_410 == 0)
    goto <bb 149>;
  else
    goto <bb 150>;
  # SUCC: 149 [50.0%]  (true,exec) 150 [50.0%]  (false,exec)

  # BLOCK 147
  # PRED: 144 [30.2%]  (false,exec)
  pass_406 = (int) D.44706_405;
  # SUCC: 148 [100.0%]  (fallthru,exec)

  # BLOCK 148
  # PRED: 147 [100.0%]  (fallthru,exec) 145 [50.0%]  (false,exec)
  # pass_126 = PHI <pass_406(147), pass_409(145)>
  # DEBUG pass => pass_126
  if (pass_126 == 2)
    goto <bb 149>;
  else
    goto <bb 150>;
  # SUCC: 149 [28.0%]  (true,exec) 150 [72.0%]  (false,exec)

  # BLOCK 149
  # PRED: 148 [28.0%]  (true,exec) 146 [50.0%]  (true,exec)
  D.44481_412 = smh_186->session;
  D.44482_413 = D.44481_412->channel;
  D.44723_414 = switch_channel_test_flag (D.44482_413, 101);
  if (D.44723_414 != 0)
    goto <bb 435>;
  else
    goto <bb 150>;
  # SUCC: 435 [50.0%]  (true,exec) 150 [50.0%]  (false,exec)

  # BLOCK 150
  # PRED: 146 [50.0%]  (false,exec) 149 [50.0%]  (false,exec) 148 [72.0%]  (false,exec)
  # pass_1848 = PHI <pass_409(146), 2(149), pass_126(148)>
  D.44530_415 = session_161(D)->channel;
  D.44724_416 = switch_channel_test_flag (D.44530_415, 103);
  if (D.44724_416 == 0)
    goto <bb 435>;
  else
    goto <bb 151>;
  # SUCC: 435 [71.0%]  (true,exec) 151 [29.0%]  (false,exec)

  # BLOCK 151
  # PRED: 150 [29.0%]  (false,exec)
  D.44530_417 = session_161(D)->channel;
  D.44726_418 = switch_channel_test_flag (D.44530_417, 15);
  if (D.44726_418 != 0)
    goto <bb 435>;
  else
    goto <bb 152>;
  # SUCC: 435 [71.0%]  (true,exec) 152 [29.0%]  (false,exec)

  # BLOCK 152
  # PRED: 151 [29.0%]  (false,exec)
  D.44530_419 = session_161(D)->channel;
  D.44728_420 = switch_channel_test_flag (D.44530_419, 29);
  if (D.44728_420 != 0)
    goto <bb 435>;
  else
    goto <bb 153>;
  # SUCC: 435 [71.0%]  (true,exec) 153 [29.0%]  (false,exec)

  # BLOCK 153
  # PRED: 152 [29.0%]  (false,exec)
  D.44605_421 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44730_422 = switch_rtp_ready (D.44605_421);
  if (D.44730_422 == 0)
    goto <bb 435>;
  else
    goto <bb 154>;
  # SUCC: 435 [50.0%]  (true,exec) 154 [50.0%]  (false,exec)

  # BLOCK 154
  # PRED: 153 [50.0%]  (false,exec)
  # DEBUG pass => pass_1848
  if (pass_1848 != 0)
    goto <bb 155>;
  else
    goto <bb 428> (done);
  # SUCC: 155 [29.0%]  (true,exec) 428 [71.0%]  (false,exec)

  # BLOCK 155
  # PRED: 154 [29.0%]  (true,exec)
  D.44733_424 = switch_core_session_perform_get_partner (session_161(D), &other_session, "src/switch_core_media.c", &__func__, 3161);
  if (D.44733_424 == 0)
    goto <bb 156>;
  else
    goto <bb 428> (done);
  # SUCC: 156 [29.0%]  (true,exec) 428 [71.0%]  (false,exec)

  # BLOCK 156
  # PRED: 155 [29.0%]  (true,exec)
  other_session.89_425 = other_session;
  other_channel_426 = switch_core_session_get_channel (other_session.89_425);
  # DEBUG other_channel => other_channel_426
  D.44605_427 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  remote_host_428 = switch_rtp_get_remote_host (D.44605_427);
  # DEBUG remote_host => remote_host_428
  D.44605_429 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  remote_port_430 = switch_rtp_get_remote_port (D.44605_429);
  # DEBUG remote_port => remote_port_430
  tmp = "";
  D.44737_431 = switch_channel_test_flag (other_channel_426, 1);
  if (D.44737_431 == 0)
    goto <bb 157>;
  else
    goto <bb 158>;
  # SUCC: 157 [50.0%]  (true,exec) 158 [50.0%]  (false,exec)

  # BLOCK 157
  # PRED: 156 [50.0%]  (true,exec)
  D.44530_432 = session_161(D)->channel;
  D.44740_433 = switch_channel_get_name (D.44530_432);
  D.44741_434 = switch_channel_get_name (other_channel_426);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3170, session_161(D), 4, "%s Error Passing T.38 to unanswered channel %s\n", D.44740_433, D.44741_434);
  other_session.89_435 = other_session;
  switch_core_session_rwunlock (other_session.89_435);
  # DEBUG pass => 0
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 158
  # PRED: 156 [50.0%]  (false,exec)
  D.44530_438 = session_161(D)->channel;
  D.44742_439 = switch_channel_get_variable_dup (D.44530_438, "t38_broken_boolean", 1, -1);
  D.44743_440 = switch_true (D.44742_439);
  if (D.44743_440 != 0)
    goto <bb 159>;
  else
    goto <bb 161>;
  # SUCC: 159 [29.0%]  (true,exec) 161 [71.0%]  (false,exec)

  # BLOCK 159
  # PRED: 158 [29.0%]  (true,exec)
  D.44530_441 = session_161(D)->channel;
  D.44746_442 = switch_channel_get_variable_dup (D.44530_441, "t38_pass_broken_boolean", 1, -1);
  D.44747_443 = switch_true (D.44746_442);
  if (D.44747_443 != 0)
    goto <bb 160>;
  else
    goto <bb 161>;
  # SUCC: 160 [29.0%]  (true,exec) 161 [71.0%]  (false,exec)

  # BLOCK 160
  # PRED: 159 [29.0%]  (true,exec)
  switch_channel_set_variable_var_check (other_channel_426, "t38_broken_boolean", "true", 1);
  # SUCC: 161 [100.0%]  (fallthru,exec)

  # BLOCK 161
  # PRED: 158 [71.0%]  (false,exec) 159 [71.0%]  (false,exec) 160 [100.0%]  (fallthru,exec)
  D.44750_444 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44751_445 = t38_options_394->remote_ip;
  D.44752_446 = switch_core_perform_session_strdup (session_161(D), D.44751_445, "src/switch_core_media.c", &__func__, 3186);
  D.44750_444->remote_sdp_ip = D.44752_446;
  D.44750_447 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44753_448 = t38_options_394->remote_port;
  D.44750_447->remote_sdp_port = D.44753_448;
  D.44756_449 = remote_host_428 != 0B;
  D.44757_450 = remote_port_430 != 0;
  D.44758_451 = D.44757_450 & D.44756_449;
  if (D.44758_451 != 0)
    goto <bb 162>;
  else
    goto <bb 165>;
  # SUCC: 162 [71.0%]  (true,exec) 165 [29.0%]  (false,exec)

  # BLOCK 162
  # PRED: 161 [71.0%]  (true,exec)
  D.44760_453 = D.44750_447->remote_sdp_ip;
  D.39032_454 = __builtin_strcmp (remote_host_428, D.44760_453);
  if (D.39032_454 == 0)
    goto <bb 163>;
  else
    goto <bb 165>;
  # SUCC: 163 [50.0%]  (true,exec) 165 [50.0%]  (false,exec)

  # BLOCK 163
  # PRED: 162 [50.0%]  (true,exec)
  if (remote_port_430 == D.44753_448)
    goto <bb 164>;
  else
    goto <bb 165>;
  # SUCC: 164 [13.7%]  (true,exec) 165 [86.3%]  (false,exec)

  # BLOCK 164
  # PRED: 163 [13.7%]  (true,exec)
  D.44530_457 = session_161(D)->channel;
  D.44764_458 = switch_channel_get_name (D.44530_457);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3190, session_161(D), 7, "Audio params are unchanged for %s.\n", D.44764_458);
  goto <bb 167>;
  # SUCC: 167 [100.0%]  (fallthru,exec)

  # BLOCK 165
  # PRED: 161 [29.0%]  (false,exec) 162 [50.0%]  (false,exec) 163 [86.3%]  (false,exec)
  err = 0B;
  D.44530_459 = session_161(D)->channel;
  D.44765_460 = switch_channel_get_name (D.44530_459);
  D.44766_461 = (int) remote_port_430;
  D.44750_462 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_463 = D.44750_462->remote_sdp_ip;
  D.44762_465 = D.44750_462->remote_sdp_port;
  D.44767_466 = (int) D.44762_465;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3195, session_161(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.44765_460, remote_host_428, D.44766_461, D.44760_463, D.44767_466);
  D.44750_467 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_468 = D.44750_467->remote_sdp_port;
  D.44767_469 = (int) D.44762_468;
  switch_snprintf (&tmp, 32, "%d", D.44767_469);
  D.44530_470 = session_161(D)->channel;
  D.44750_471 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_472 = D.44750_471->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_470, "remote_media_ip", D.44760_472, 1);
  D.44530_473 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_473, "remote_media_port", &tmp, 1);
  D.44605_474 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44750_475 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_476 = D.44750_475->remote_sdp_ip;
  D.44762_478 = D.44750_475->remote_sdp_port;
  D.44768_479 = switch_rtp_set_remote_address (D.44605_474, D.44760_476, D.44762_478, 0, 1, &err);
  if (D.44768_479 != 0)
    goto <bb 166>;
  else
    goto <bb 167>;
  # SUCC: 166 [29.0%]  (true,exec) 167 [71.0%]  (false,exec)

  # BLOCK 166
  # PRED: 165 [29.0%]  (true,exec)
  err.90_480 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3205, session_161(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.90_480);
  switch_channel_perform_hangup (channel_162, "src/switch_core_media.c", &__func__, 3206, 88);
  # SUCC: 167 [100.0%]  (fallthru,exec)

  # BLOCK 167
  # PRED: 164 [100.0%]  (fallthru,exec) 165 [71.0%]  (false,exec) 166 [100.0%]  (fallthru,exec)
  other_session.89_481 = other_session;
  switch_core_media_copy_t38_options (t38_options_394, other_session.89_481);
  D.44481_482 = smh_186->session;
  D.44482_483 = D.44481_482->channel;
  switch_channel_set_flag_value (D.44482_483, 101, 1);
  other_session.89_484 = other_session;
  D.44772_485 = other_session.89_484->channel;
  switch_channel_set_flag_value (D.44772_485, 101, 1);
  other_session.89_486 = other_session;
  msg_487 = switch_core_perform_session_alloc (other_session.89_486, 108, "src/switch_core_media.c", &__func__, 3218);
  # DEBUG msg => msg_487
  msg_487->message_id = 21;
  msg_487->from = "src/switch_core_media.c";
  other_session.89_488 = other_session;
  D.44773_489 = switch_core_perform_session_strdup (other_session.89_488, r_sdp_193(D), "src/switch_core_media.c", &__func__, 3221);
  msg_487->string_arg = D.44773_489;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3222, session_161(D), 7, "Passing T38 req to other leg.\n%s\n", r_sdp_193(D));
  other_session.89_490 = other_session;
  switch_core_session_queue_message (other_session.89_490, msg_487);
  other_session.89_491 = other_session;
  switch_core_session_rwunlock (other_session.89_491);
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 168 freq:291
  # PRED: 135 [55.6%]  (false,exec) 136 [72.0%]  (false,exec)
  # got_avp_1859 = PHI <got_avp_68(135), got_avp_1740(136)>
  # got_savp_1739 = PHI <got_savp_74(135), got_savp_1711(136)>
  # got_udptl_1743 = PHI <got_udptl_1868(135), got_udptl_774(136)>
  # prephitmp.1049_1814 = PHI <prephitmp.1049_1808(135), prephitmp.1049_1805(136)>
  if (prephitmp.1049_1814 == 2)
    goto <bb 169>;
  else
    goto <bb 344>;
  # SUCC: 169 [32.5%]  (true,exec) 344 [67.5%]  (false,exec)

  # BLOCK 169 freq:95
  # PRED: 168 [32.5%]  (true,exec)
  D.44697_494 = m_1764->m_port;
  D.44777_495 = D.44697_494 != 0;
  D.44778_496 = got_audio_1693 == 0;
  D.44779_497 = D.44778_496 & D.44777_495;
  if (D.44779_497 != 0)
    goto <bb 170>;
  else
    goto <bb 427>;
  # SUCC: 170 [29.0%]  (true,exec) 427 [71.0%]  (false,exec)

  # BLOCK 170 freq:27
  # PRED: 169 [29.0%]  (true,exec)
  D.44781_498 = switch_rtp_has_dtls ();
  if (D.44781_498 != 0)
    goto <bb 171>;
  else
    goto <bb 179>;
  # SUCC: 171 [29.0%]  (true,exec) 179 [71.0%]  (false,exec)

  # BLOCK 171 freq:8
  # PRED: 170 [29.0%]  (true,exec)
  D.44784_499 = dtls_ok (session_161(D));
  if (D.44784_499 != 0)
    goto <bb 172>;
  else
    goto <bb 179>;
  # SUCC: 172 [50.0%]  (true,exec) 179 [50.0%]  (false,exec)

  # BLOCK 172 freq:4
  # PRED: 171 [50.0%]  (true,exec)
  attr_500 = m_1764->m_attributes;
  # DEBUG attr => attr_500
  # DEBUG got_crypto => got_crypto_1866
  # DEBUG attr => attr_500
  if (attr_500 != 0B)
    goto <bb 173>;
  else
    goto <bb 208>;
  # SUCC: 173 [91.0%]  (true,exec) 208 [9.0%]  (false,exec)

  # BLOCK 173 freq:4
  # PRED: 172 [91.0%]  (true,exec)
  # attr_604 = PHI <attr_500(172)>
  # got_crypto_1724 = PHI <got_crypto_1866(172)>
  # SUCC: 174 [100.0%]  (fallthru)

  # BLOCK 174 freq:40
  # PRED: 173 [100.0%]  (fallthru) 178 [91.0%]  (true,exec)
  # attr_1559 = PHI <attr_604(173), attr_506(178)>
  # got_crypto_361 = PHI <got_crypto_1724(173), got_crypto_50(178)>
  D.44590_501 = attr_1559->a_name;
  D.44787_502 = strcasecmp (D.44590_501, "fingerprint");
  if (D.44787_502 == 0)
    goto <bb 175>;
  else
    goto <bb 178>;
  # SUCC: 175 [50.0%]  (true,exec) 178 [50.0%]  (false,exec)

  # BLOCK 175 freq:20
  # PRED: 174 [50.0%]  (true,exec)
  D.44619_503 = attr_1559->a_value;
  # DEBUG s => D.44619_503
  if (D.44619_503 == 0B)
    goto <bb 178>;
  else
    goto <bb 176>;
  # SUCC: 178 [15.0%]  (true,exec) 176 [85.0%]  (false,exec)

  # BLOCK 176 freq:17
  # PRED: 175 [85.0%]  (false,exec)
  D.47887_1469 = *D.44619_503;
  if (D.47887_1469 == 0)
    goto <bb 177>;
  else
    goto <bb 178>;
  # SUCC: 177 [50.0%]  (true,exec) 178 [50.0%]  (false,exec)

  # BLOCK 177 freq:9
  # PRED: 176 [50.0%]  (true,exec)
  # SUCC: 178 [100.0%]  (fallthru,exec)

  # BLOCK 178 freq:40
  # PRED: 174 [50.0%]  (false,exec) 177 [100.0%]  (fallthru,exec) 176 [50.0%]  (false,exec) 175 [15.0%]  (true,exec)
  # got_crypto_50 = PHI <got_crypto_361(174), got_crypto_361(177), 1(176), got_crypto_361(175)>
  # DEBUG got_crypto => got_crypto_50
  attr_506 = attr_1559->a_next;
  # DEBUG attr => attr_506
  # DEBUG got_crypto => got_crypto_50
  # DEBUG attr => attr_506
  if (attr_506 != 0B)
    goto <bb 174>;
  else
    goto <bb 449>;
  # SUCC: 174 [91.0%]  (true,exec) 449 [9.0%]  (false,exec)

  # BLOCK 179 freq:23
  # PRED: 170 [71.0%]  (false,exec) 171 [50.0%]  (false,exec)
  # DEBUG got_crypto => got_crypto_1866
  attr_507 = m_1764->m_attributes;
  # DEBUG attr => attr_507
  # DEBUG got_crypto => got_crypto_1866
  # DEBUG maxptime => dmaxptime_1005
  # DEBUG ptime => dptime_1035
  # DEBUG attr => attr_507
  if (attr_507 != 0B)
    goto <bb 449>;
  else
    goto <bb 208>;
  # SUCC: 449 [94.7%]  (true,exec) 208 [5.3%]  (false,exec)

  # BLOCK 180 freq:581
  # PRED: 449 [100.0%]  (fallthru,exec) 207 [95.5%]  (true,exec)
  # attr_1599 = PHI <attr_922(449), attr_548(207)>
  # ptime_1475 = PHI <dptime_1035(449), ptime_34(207)>
  # maxptime_1470 = PHI <dmaxptime_1005(449), maxptime_38(207)>
  # got_crypto_1118 = PHI <got_crypto_141(449), got_crypto_53(207)>
  D.44590_508 = attr_1599->a_name;
  D.44795_509 = strcasecmp (D.44590_508, "rtcp");
  if (D.44795_509 == 0)
    goto <bb 181>;
  else
    goto <bb 184>;
  # SUCC: 181 [50.0%]  (true,exec) 184 [50.0%]  (false,exec)

  # BLOCK 181 freq:290
  # PRED: 180 [50.0%]  (true,exec)
  D.44619_510 = attr_1599->a_value;
  if (D.44619_510 != 0B)
    goto <bb 182>;
  else
    goto <bb 184>;
  # SUCC: 182 [69.8%]  (true,exec) 184 [30.2%]  (false,exec)

  # BLOCK 182 freq:203
  # PRED: 181 [69.8%]  (true,exec)
  D.44530_511 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_511, "rtp_remote_audio_rtcp_port", D.44619_510, 1);
  D.44619_513 = attr_1599->a_value;
  # DEBUG __nptr => D.44619_513
  D.47890_1471 = strtol (D.44619_513, 0B, 10);
  D.44799_515 = (short unsigned int) D.47890_1471;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].remote_rtcp_port = D.44799_515;
  D.44471_516 = smh_186->mparams;
  D.44800_517 = D.44471_516->rtcp_audio_interval_msec;
  if (D.44800_517 == 0B)
    goto <bb 183>;
  else
    goto <bb 207>;
  # SUCC: 183 [15.0%]  (true,exec) 207 [85.0%]  (false,exec)

  # BLOCK 183 freq:30
  # PRED: 182 [15.0%]  (true,exec)
  D.44471_516->rtcp_audio_interval_msec = "5000";
  goto <bb 207>;
  # SUCC: 207 [100.0%]  (fallthru,exec)

  # BLOCK 184 freq:378
  # PRED: 180 [50.0%]  (false,exec) 181 [30.2%]  (false,exec)
  D.44805_520 = strcasecmp (D.44590_508, "ptime");
  if (D.44805_520 == 0)
    goto <bb 185>;
  else
    goto <bb 187>;
  # SUCC: 185 [50.0%]  (true,exec) 187 [50.0%]  (false,exec)

  # BLOCK 185 freq:189
  # PRED: 184 [50.0%]  (true,exec)
  D.44619_521 = attr_1599->a_value;
  if (D.44619_521 != 0B)
    goto <bb 186>;
  else
    goto <bb 187>;
  # SUCC: 186 [69.8%]  (true,exec) 187 [30.2%]  (false,exec)

  # BLOCK 186 freq:132
  # PRED: 185 [69.8%]  (true,exec)
  # DEBUG __nptr => D.44619_521
  ptime_1472 = strtol (D.44619_521, 0B, 10);
  # DEBUG ptime => NULL
  goto <bb 207>;
  # SUCC: 207 [100.0%]  (fallthru,exec)

  # BLOCK 187 freq:246
  # PRED: 184 [50.0%]  (false,exec) 185 [30.2%]  (false,exec)
  D.44810_525 = strcasecmp (D.44590_508, "maxptime");
  if (D.44810_525 == 0)
    goto <bb 188>;
  else
    goto <bb 190>;
  # SUCC: 188 [50.0%]  (true,exec) 190 [50.0%]  (false,exec)

  # BLOCK 188 freq:123
  # PRED: 187 [50.0%]  (true,exec)
  D.44619_526 = attr_1599->a_value;
  if (D.44619_526 != 0B)
    goto <bb 189>;
  else
    goto <bb 190>;
  # SUCC: 189 [69.8%]  (true,exec) 190 [30.2%]  (false,exec)

  # BLOCK 189 freq:86
  # PRED: 188 [69.8%]  (true,exec)
  # DEBUG __nptr => D.44619_526
  maxptime_1473 = strtol (D.44619_526, 0B, 10);
  # DEBUG maxptime => NULL
  goto <bb 207>;
  # SUCC: 207 [100.0%]  (fallthru,exec)

  # BLOCK 190 freq:160
  # PRED: 187 [50.0%]  (false,exec) 188 [30.2%]  (false,exec)
  if (got_crypto_1118 <= 0)
    goto <bb 191>;
  else
    goto <bb 207>;
  # SUCC: 191 [27.0%]  (true,exec) 207 [73.0%]  (false,exec)

  # BLOCK 191 freq:43
  # PRED: 190 [27.0%]  (true,exec)
  D.44815_530 = strcasecmp (D.44590_508, "crypto");
  if (D.44815_530 == 0)
    goto <bb 192>;
  else
    goto <bb 207>;
  # SUCC: 192 [50.0%]  (true,exec) 207 [50.0%]  (false,exec)

  # BLOCK 192 freq:22
  # PRED: 191 [50.0%]  (true,exec)
  prephitmp.1031_531 = attr_1599->a_value;
  # DEBUG s => prephitmp.1031_531
  if (prephitmp.1031_531 == 0B)
    goto <bb 207>;
  else
    goto <bb 193>;
  # SUCC: 207 [15.0%]  (true,exec) 193 [85.0%]  (false,exec)

  # BLOCK 193 freq:18
  # PRED: 192 [85.0%]  (false,exec)
  D.47900_1474 = *prephitmp.1031_531;
  if (D.47900_1474 == 0)
    goto <bb 207>;
  else
    goto <bb 436>;
  # SUCC: 207 [50.0%]  (true,exec) 436 [50.0%]  (false,exec)

  # BLOCK 194 freq:5
  # PRED: 436 [50.0%]  (true,exec)
  D.44530_536 = session_161(D)->channel;
  D.44825_537 = switch_channel_get_variable_dup (D.44530_536, "rtp_allow_crypto_in_avp", 1, -1);
  # DEBUG expr => D.44825_537
  if (D.44825_537 != 0B)
    goto <bb 195>;
  else
    goto <bb 437>;
  # SUCC: 195 [85.0%]  (true,exec) 437 [15.0%]  (false,exec)

  # BLOCK 195 freq:5
  # PRED: 194 [85.0%]  (true,exec)
  D.49723_1590 = strcasecmp (D.44825_537, "yes");
  if (D.49723_1590 == 0)
    goto <bb 204>;
  else
    goto <bb 196>;
  # SUCC: 204 [39.0%]  (true,exec) 196 [61.0%]  (false,exec)

  # BLOCK 196 freq:3
  # PRED: 195 [61.0%]  (false,exec)
  D.49724_1591 = strcasecmp (D.44825_537, "on");
  if (D.49724_1591 == 0)
    goto <bb 204>;
  else
    goto <bb 197>;
  # SUCC: 204 [39.0%]  (true,exec) 197 [61.0%]  (false,exec)

  # BLOCK 197 freq:2
  # PRED: 196 [61.0%]  (false,exec)
  D.49725_1592 = strcasecmp (D.44825_537, "true");
  if (D.49725_1592 == 0)
    goto <bb 204>;
  else
    goto <bb 198>;
  # SUCC: 204 [39.0%]  (true,exec) 198 [61.0%]  (false,exec)

  # BLOCK 198 freq:1
  # PRED: 197 [61.0%]  (false,exec)
  D.49726_1593 = strcasecmp (D.44825_537, "t");
  if (D.49726_1593 == 0)
    goto <bb 204>;
  else
    goto <bb 199>;
  # SUCC: 204 [39.0%]  (true,exec) 199 [61.0%]  (false,exec)

  # BLOCK 199 freq:1
  # PRED: 198 [61.0%]  (false,exec)
  D.49727_1594 = strcasecmp (D.44825_537, "enabled");
  if (D.49727_1594 == 0)
    goto <bb 204>;
  else
    goto <bb 200>;
  # SUCC: 204 [39.0%]  (true,exec) 200 [61.0%]  (false,exec)

  # BLOCK 200
  # PRED: 199 [61.0%]  (false,exec)
  D.49728_1595 = strcasecmp (D.44825_537, "active");
  if (D.49728_1595 == 0)
    goto <bb 204>;
  else
    goto <bb 201>;
  # SUCC: 204 [39.0%]  (true,exec) 201 [61.0%]  (false,exec)

  # BLOCK 201
  # PRED: 200 [61.0%]  (false,exec)
  D.49729_1596 = strcasecmp (D.44825_537, "allow");
  if (D.49729_1596 == 0)
    goto <bb 204>;
  else
    goto <bb 202>;
  # SUCC: 204 [61.0%]  (true,exec) 202 [39.0%]  (false,exec)

  # BLOCK 202
  # PRED: 201 [39.0%]  (false,exec)
  D.49730_1597 = switch_is_number (D.44825_537);
  if (D.49730_1597 != 0)
    goto <bb 203>;
  else
    goto <bb 437>;
  # SUCC: 203 [29.0%]  (true,exec) 437 [71.0%]  (false,exec)

  # BLOCK 203
  # PRED: 202 [29.0%]  (true,exec)
  # DEBUG __nptr => D.44825_537
  D.49731_1598 = strtol (D.44825_537, 0B, 10);
  if (D.49731_1598 != 0)
    goto <bb 204>;
  else
    goto <bb 437>;
  # SUCC: 204 [39.0%]  (true,exec) 437 [61.0%]  (false,exec)

  # BLOCK 204 freq:2
  # PRED: 195 [39.0%]  (true,exec) 196 [39.0%]  (true,exec) 197 [39.0%]  (true,exec) 198 [39.0%]  (true,exec) 199 [39.0%]  (true,exec) 200 [39.0%]  (true,exec) 201 [61.0%]  (true,exec) 203 [39.0%]  (true,exec)
Invalid sum of outgoing probabilities 0.0%
  prephitmp.1031_1639 = attr_1599->a_value;
  goto <bb 206>;
  # SUCC: 206 (fallthru,exec)

  # BLOCK 205
  # PRED: 437 [4.5%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3262, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 206 freq:11
  # PRED: 436 [50.0%]  (false,exec) 204 (fallthru,exec) 438 [100.0%]  (fallthru,exec)
  # prephitmp.1031_1892 = PHI <prephitmp.1031_531(436), prephitmp.1031_1639(204), prephitmp.1031_1895(438)>
  # DEBUG crypto => prephitmp.1031_1892
  # DEBUG __nptr => prephitmp.1031_1892
  crypto_tag_1476 = strtol (prephitmp.1031_1892, 0B, 10);
  # DEBUG crypto_tag => NULL
  got_crypto_547 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_crypto", 0, prephitmp.1031_1892, crypto_tag_1476, sdp_type_546(D));
  # DEBUG got_crypto => got_crypto_547
  # SUCC: 207 [100.0%]  (fallthru,exec)

  # BLOCK 207 freq:581
  # PRED: 183 [100.0%]  (fallthru,exec) 186 [100.0%]  (fallthru,exec) 189 [100.0%]  (fallthru,exec) 190 [73.0%]  (false,exec) 191 [50.0%]  (false,exec) 193 [50.0%]  (true,exec) 206 [100.0%]  (fallthru,exec) 182 [85.0%]  (false,exec) 192 [15.0%]  (true,exec)
  # ptime_34 = PHI <ptime_1475(183), ptime_1472(186), ptime_1475(189), ptime_1475(190), ptime_1475(191), ptime_1475(193), ptime_1475(206), ptime_1475(182), ptime_1475(192)>
  # maxptime_38 = PHI <maxptime_1470(183), maxptime_1470(186), maxptime_1473(189), maxptime_1470(190), maxptime_1470(191), maxptime_1470(193), maxptime_1470(206), maxptime_1470(182), maxptime_1470(192)>
  # got_crypto_53 = PHI <got_crypto_1118(183), got_crypto_1118(186), got_crypto_1118(189), got_crypto_1118(190), got_crypto_1118(191), got_crypto_1118(193), got_crypto_547(206), got_crypto_1118(182), got_crypto_1118(192)>
  # DEBUG got_crypto => got_crypto_53
  # DEBUG maxptime => maxptime_38
  # DEBUG ptime => ptime_34
  attr_548 = attr_1599->a_next;
  # DEBUG attr => attr_548
  # DEBUG got_crypto => got_crypto_53
  # DEBUG maxptime => maxptime_38
  # DEBUG ptime => ptime_34
  # DEBUG attr => attr_548
  if (attr_548 != 0B)
    goto <bb 180>;
  else
    goto <bb 208>;
  # SUCC: 180 [95.5%]  (true,exec) 208 [4.5%]  (false,exec)

  # BLOCK 208 freq:27
  # PRED: 207 [4.5%]  (false,exec) 179 [5.3%]  (false,exec) 172 [9.0%]  (false,exec)
  # ptime_1033 = PHI <ptime_34(207), dptime_1035(179), dptime_1035(172)>
  # maxptime_1040 = PHI <maxptime_38(207), dmaxptime_1005(179), dmaxptime_1005(172)>
  # got_crypto_969 = PHI <got_crypto_53(207), got_crypto_1866(179), got_crypto_1866(172)>
  D.44834_549 = got_crypto_969 == -1;
  D.44835_550 = got_savp_1739 != 0;
  D.44836_551 = D.44834_549 & D.44835_550;
  if (D.44836_551 != 0)
    goto <bb 209>;
  else
    goto <bb 211>;
  # SUCC: 209 [50.0%]  (true,exec) 211 [50.0%]  (false,exec)

  # BLOCK 209 freq:14
  # PRED: 208 [50.0%]  (true,exec)
  D.44839_552 = got_avp_1859 | got_webrtc_78;
  if (D.44839_552 == 0)
    goto <bb 210>;
  else
    goto <bb 211>;
  # SUCC: 210 [2.0%]  (true,exec) 211 [98.0%]  (false,exec)

  # BLOCK 210
  # PRED: 209 [2.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3277, session_161(D), 4, "Declining invite with only SAVP because secure media is administratively disabled\n");
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 211 freq:27
  # PRED: 208 [50.0%]  (false,exec) 209 [98.0%]  (false,exec)
  connection_554 = sdp_198->sdp_connection;
  # DEBUG connection => connection_554
  connection_555 = m_1764->m_connections;
  if (connection_555 != 0B)
    goto <bb 214>;
  else
    goto <bb 212>;
  # SUCC: 214 [85.0%]  (true,exec) 212 [15.0%]  (false,exec)

  # BLOCK 212 freq:4
  # PRED: 211 [15.0%]  (false,exec)
  # DEBUG connection => connection_554
  if (connection_554 == 0B)
    goto <bb 213>;
  else
    goto <bb 214>;
  # SUCC: 213 [13.5%]  (true,exec) 214 [86.5%]  (false,exec)

  # BLOCK 213 freq:1
  # PRED: 212 [13.5%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3288, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 214 freq:27
  # PRED: 212 [86.5%]  (false,exec) 211 [85.0%]  (true,exec)
  # connection_139 = PHI <connection_554(212), connection_555(211)>
  # DEBUG x => 0
  map_559 = m_1764->m_rtpmaps;
  # DEBUG map => map_559
  # DEBUG map => map_559
  # DEBUG nm_idx => nm_idx_1749
  # DEBUG m_idx => m_idx_1869
  # DEBUG codec_ms => codec_ms_477
  # DEBUG x => NULL
  # DEBUG cng_pt => cng_pt_1717
  # DEBUG best_te => best_te_680
  # DEBUG match => match_1800
  if (map_559 != 0B)
    goto <bb 215>;
  else
    goto <bb 282>;
  # SUCC: 215 [95.5%]  (true,exec) 282 [4.5%]  (false,exec)

  # BLOCK 215 freq:26
  # PRED: 214 [95.5%]  (true,exec)
  # match_1775 = PHI <match_1800(214)>
  # best_te_1701 = PHI <best_te_680(214)>
  # cng_pt_1702 = PHI <cng_pt_1717(214)>
  # codec_ms_386 = PHI <codec_ms_477(214)>
  # m_idx_863 = PHI <m_idx_1869(214)>
  # nm_idx_912 = PHI <nm_idx_1749(214)>
  # map_255 = PHI <map_559(214)>
  # SUCC: 216 [100.0%]  (fallthru)

  # BLOCK 216 freq:518
  # PRED: 215 [100.0%]  (fallthru) 281 [95.5%]  (true,exec)
  # match_1901 = PHI <match_1775(215), match_7(281)>
  # best_te_1898 = PHI <best_te_1701(215), best_te_19(281)>
  # cng_pt_1667 = PHI <cng_pt_1702(215), cng_pt_24(281)>
  # codec_ms_1720 = PHI <codec_ms_386(215), codec_ms_91(281)>
  # m_idx_792 = PHI <m_idx_863(215), m_idx_103(281)>
  # nm_idx_1755 = PHI <nm_idx_912(215), nm_idx_117(281)>
  # map_1728 = PHI <map_255(215), map_711(281)>
  # DEBUG map_bit_rate => 0
  codec_fmtp = {};
  rm_encoding_561 = map_1728->rm_encoding;
  # DEBUG rm_encoding => rm_encoding_561
  if (rm_encoding_561 == 0B)
    goto <bb 218>;
  else
    goto <bb 217>;
  # SUCC: 218 [15.0%]  (true,exec) 217 [85.0%]  (false,exec)

  # BLOCK 217 freq:440
  # PRED: 216 [85.0%]  (false,exec)
  # SUCC: 218 [100.0%]  (fallthru,exec)

  # BLOCK 218 freq:518
  # PRED: 217 [100.0%]  (fallthru,exec) 216 [15.0%]  (true,exec)
  # rm_encoding_130 = PHI <rm_encoding_561(217), ""(216)>
  # DEBUG rm_encoding => rm_encoding_130
  D.44848_563 = strcasecmp (rm_encoding_130, "telephone-event");
  if (D.44848_563 == 0)
    goto <bb 219>;
  else
    goto <bb 222>;
  # SUCC: 219 [71.0%]  (true,exec) 222 [29.0%]  (false,exec)

  # BLOCK 219 freq:368
  # PRED: 218 [71.0%]  (true,exec)
  if (best_te_1898 == 0)
    goto <bb 221>;
  else
    goto <bb 220>;
  # SUCC: 221 [29.0%]  (true,exec) 220 [71.0%]  (false,exec)

  # BLOCK 220 freq:261
  # PRED: 219 [71.0%]  (false,exec)
  D.44854_564 = map_1728->rm_rate;
  D.44750_565 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44855_566 = D.44750_565->rm_rate;
  if (D.44854_564 == D.44855_566)
    goto <bb 221>;
  else
    goto <bb 281>;
  # SUCC: 221 [28.0%]  (true,exec) 281 [72.0%]  (false,exec)

  # BLOCK 221 freq:180
  # PRED: 219 [29.0%]  (true,exec) 220 [28.0%]  (true,exec)
  D.44856_567 = map_1728->rm_pt;
  best_te_568 = (switch_payload_t) D.44856_567;
  # DEBUG best_te => best_te_568
  D.44857_569 = (int) best_te_568;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3309, session_161(D), 7, "Set telephone-event payload to %u\n", D.44857_569);
  goto <bb 281>;
  # SUCC: 281 [100.0%]  (fallthru,exec)

  # BLOCK 222 freq:150
  # PRED: 218 [29.0%]  (false,exec)
  D.44858_570 = switch_media_handle_test_media_flag (smh_186, 9);
  if (D.44858_570 == 0)
    goto <bb 223>;
  else
    goto <bb 227>;
  # SUCC: 223 [50.0%]  (true,exec) 227 [50.0%]  (false,exec)

  # BLOCK 223 freq:75
  # PRED: 222 [50.0%]  (true,exec)
  if (cng_pt_1667 == 0)
    goto <bb 224>;
  else
    goto <bb 227>;
  # SUCC: 224 [50.0%]  (true,exec) 227 [50.0%]  (false,exec)

  # BLOCK 224 freq:38
  # PRED: 223 [50.0%]  (true,exec)
  D.44863_571 = strcasecmp (rm_encoding_130, "CN");
  if (D.44863_571 == 0)
    goto <bb 225>;
  else
    goto <bb 227>;
  # SUCC: 225 [50.0%]  (true,exec) 227 [50.0%]  (false,exec)

  # BLOCK 225 freq:19
  # PRED: 224 [50.0%]  (true,exec)
  D.44856_572 = map_1728->rm_pt;
  cng_pt_573 = (switch_payload_t) D.44856_572;
  # DEBUG cng_pt => cng_pt_573
  D.44605_574 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_574 != 0B)
    goto <bb 226>;
  else
    goto <bb 281>;
  # SUCC: 226 [69.8%]  (true,exec) 281 [30.2%]  (false,exec)

  # BLOCK 226 freq:13
  # PRED: 225 [69.8%]  (true,exec)
  D.44868_575 = (int) cng_pt_573;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3317, session_161(D), 7, "Set comfort noise payload to %u\n", D.44868_575);
  D.44605_576 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44471_577 = smh_186->mparams;
  D.44869_578 = D.44471_577->cng_pt;
  switch_rtp_set_cng_pt (D.44605_576, D.44869_578);
  goto <bb 281>;
  # SUCC: 281 [100.0%]  (fallthru,exec)

  # BLOCK 227 freq:131
  # PRED: 222 [50.0%]  (false,exec) 223 [50.0%]  (false,exec) 224 [50.0%]  (false,exec)
  # DEBUG x => NULL
  if (match_1901 != 0)
    goto <bb 281>;
  else
    goto <bb 228>;
  # SUCC: 281 [50.0%]  (true,exec) 228 [50.0%]  (false,exec)

  # BLOCK 228 freq:48
  # PRED: 227 [50.0%]  (false,exec)
  # DEBUG codec_ms => ptime_1033
  if (maxptime_1040 != 0)
    goto <bb 229>;
  else
    goto <bb 231>;
  # SUCC: 229 [50.0%]  (true,exec) 231 [50.0%]  (false,exec)

  # BLOCK 229 freq:24
  # PRED: 228 [50.0%]  (true,exec)
  D.44877_582 = ptime_1033 == 0;
  D.44878_583 = ptime_1033 > maxptime_1040;
  D.44879_584 = D.44878_583 | D.44877_582;
  if (D.44879_584 != 0)
    goto <bb 439>;
  else
    goto <bb 230>;
  # SUCC: 439 [50.0%]  (true,exec) 230 [50.0%]  (false,exec)

  # BLOCK 230 freq:12
  # PRED: 229 [50.0%]  (false,exec)
  goto <bb 439>;
  # SUCC: 439 [100.0%]  (fallthru,exec)

  # BLOCK 231 freq:24
  # PRED: 228 [50.0%]  (false,exec)
  # DEBUG codec_ms => ptime_1033
  if (ptime_1033 == 0)
    goto <bb 232>;
  else
    goto <bb 233>;
  # SUCC: 232 [58.0%]  (true,exec) 233 [42.0%]  (false,exec)

  # BLOCK 232 freq:14
  # PRED: 231 [58.0%]  (true,exec)
  D.44856_586 = map_1728->rm_pt;
  D.44884_587 = (uint32_t) D.44856_586;
  D.44885_588 = switch_default_ptime (rm_encoding_130, D.44884_587);
  codec_ms_589 = (int) D.44885_588;
  # DEBUG codec_ms => codec_ms_589
  # SUCC: 233 [100.0%]  (fallthru,exec)

  # BLOCK 233 freq:48
  # PRED: 439 [100.0%]  (fallthru,exec) 232 [100.0%]  (fallthru,exec) 231 [42.0%]  (false,exec)
  # codec_ms_87 = PHI <codec_ms_1883(439), codec_ms_589(232), ptime_1033(231)>
  # DEBUG codec_ms => codec_ms_87
  D.44856_590 = map_1728->rm_pt;
  csui.173_591 = (unsigned char) D.44856_590;
  # DEBUG payload => csui.173_591
  if (csui.173_591 <= 18)
    goto <bb 234>;
  else
    goto <bb 235>;
  # SUCC: 235 [50.0%]  (false,exec) 234 [50.0%]  (true,exec)

  # BLOCK 234 freq:24
  # PRED: 233 [50.0%]  (true,exec)
  map_bit_rate_1479 = CSWTCH.174[csui.173_591];
  # SUCC: 235 [100.0%]  (fallthru,exec)

  # BLOCK 235 freq:48
  # PRED: 233 [50.0%]  (false,exec) 234 [100.0%]  (fallthru,exec)
  # map_bit_rate_1480 = PHI <0(233), map_bit_rate_1479(234)>
  # DEBUG map_bit_rate => NULL
  if (ptime_1033 == 0)
    goto <bb 236>;
  else
    goto <bb 238>;
  # SUCC: 236 [50.0%]  (true,exec) 238 [50.0%]  (false,exec)

  # BLOCK 236 freq:24
  # PRED: 235 [50.0%]  (true,exec)
  D.44889_593 = map_1728->rm_encoding;
  D.44890_594 = strcasecmp (D.44889_593, "g723");
  if (D.44890_594 == 0)
    goto <bb 238>;
  else
    goto <bb 237>;
  # SUCC: 238 [50.0%]  (true,exec) 237 [50.0%]  (false,exec)

  # BLOCK 237 freq:12
  # PRED: 236 [50.0%]  (false,exec)
  # SUCC: 238 [100.0%]  (fallthru,exec)

  # BLOCK 238 freq:48
  # PRED: 235 [50.0%]  (false,exec) 237 [100.0%]  (fallthru,exec) 236 [50.0%]  (true,exec)
  # codec_ms_88 = PHI <codec_ms_87(235), codec_ms_87(237), 33(236)>
  # DEBUG codec_ms => codec_ms_88
  remote_codec_rate_596 = map_1728->rm_rate;
  # DEBUG remote_codec_rate => remote_codec_rate_596
  # DEBUG fmtp_remote_codec_rate => 0
  memset (&codec_fmtp, 0, 16);
  D.44893_598 = map_1728->rm_fmtp;
  # DEBUG s => D.44893_598
  if (D.44893_598 == 0B)
    goto <bb 240>;
  else
    goto <bb 239>;
  # SUCC: 240 [15.0%]  (true,exec) 239 [85.0%]  (false,exec)

  # BLOCK 239 freq:41
  # PRED: 238 [85.0%]  (false,exec)
  D.47915_1481 = *D.44893_598;
  if (D.47915_1481 == 0)
    goto <bb 240>;
  else
    goto <bb 440>;
  # SUCC: 240 [50.0%]  (true,exec) 440 [50.0%]  (false,exec)

  # BLOCK 240 freq:7
  # PRED: 238 [15.0%]  (true,exec) 239 [50.0%]  (true,exec)
  D.44889_600 = map_1728->rm_encoding;
  D.44897_601 = strcasecmp (D.44889_600, "ilbc");
  if (D.44897_601 == 0)
    goto <bb 248>;
  else
    goto <bb 241>;
  # SUCC: 248 [50.0%]  (true,exec) 241 [50.0%]  (false,exec)

  # BLOCK 241 freq:17
  # PRED: 240 [50.0%]  (false,exec)
  D.44901_605 = strcasecmp (D.44889_600, "isac");
  if (D.44901_605 == 0)
    goto <bb 248>;
  else
    goto <bb 242>;
  # SUCC: 248 [50.0%]  (true,exec) 242 [50.0%]  (false,exec)

  # BLOCK 242 freq:9
  # PRED: 241 [50.0%]  (false,exec)
  goto <bb 248>;
  # SUCC: 248 [100.0%]  (fallthru,exec)

  # BLOCK 243 freq:7
  # PRED: 440 [50.0%]  (true,exec)
  D.44908_612 = codec_fmtp.bits_per_second;
  if (D.44908_612 != 0)
    goto <bb 244>;
  else
    goto <bb 245>;
  # SUCC: 244 [50.0%]  (true,exec) 245 [50.0%]  (false,exec)

  # BLOCK 244 freq:3
  # PRED: 243 [50.0%]  (true,exec)
  map_bit_rate_614 = (uint32_t) D.44908_612;
  # DEBUG map_bit_rate => map_bit_rate_614
  # SUCC: 245 [100.0%]  (fallthru,exec)

  # BLOCK 245 freq:7
  # PRED: 243 [50.0%]  (false,exec) 244 [100.0%]  (fallthru,exec)
  # map_bit_rate_131 = PHI <map_bit_rate_1480(243), map_bit_rate_614(244)>
  # DEBUG map_bit_rate => map_bit_rate_131
  D.44911_615 = codec_fmtp.microseconds_per_packet;
  if (D.44911_615 != 0)
    goto <bb 246>;
  else
    goto <bb 247>;
  # SUCC: 246 [50.0%]  (true,exec) 247 [50.0%]  (false,exec)

  # BLOCK 246 freq:3
  # PRED: 245 [50.0%]  (true,exec)
  codec_ms_617 = D.44911_615 / 1000;
  # DEBUG codec_ms => codec_ms_617
  # SUCC: 247 [100.0%]  (fallthru,exec)

  # BLOCK 247 freq:7
  # PRED: 245 [50.0%]  (false,exec) 246 [100.0%]  (fallthru,exec)
  # codec_ms_89 = PHI <codec_ms_88(245), codec_ms_617(246)>
  # DEBUG codec_ms => codec_ms_89
  fmtp_remote_codec_rate_618 = codec_fmtp.actual_samples_per_second;
  # SUCC: 248 [100.0%]  (fallthru)

  # BLOCK 248 freq:48
  # PRED: 242 [100.0%]  (fallthru,exec) 440 [50.0%]  (false,exec) 247 [100.0%]  (fallthru) 241 [50.0%]  (true,exec) 240 [50.0%]  (true,exec)
  # codec_ms_90 = PHI <codec_ms_88(242), codec_ms_88(440), codec_ms_89(247), 39(241), 32(240)>
  # fmtp_remote_codec_rate_99 = PHI <0(242), 0(440), fmtp_remote_codec_rate_618(247), 0(241), 0(240)>
  # map_bit_rate_132 = PHI <map_bit_rate_1480(242), map_bit_rate_1480(440), map_bit_rate_131(247), 32001(241), 13332(240)>
  # DEBUG map_bit_rate => map_bit_rate_132
  # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_99
  # DEBUG codec_ms => codec_ms_90
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG nm_idx => nm_idx_1755
  # DEBUG m_idx => m_idx_792
  # DEBUG remote_codec_rate => remote_codec_rate_596
  # DEBUG match => 0
  D.44471_1501 = smh_186->mparams;
  D.44996_1498 = D.44471_1501->num_codecs;
  D.44997_1496 = D.44996_1498 > 0;
  D.44998_1609 = total_codecs_85 > 0;
  D.44999_1152 = D.44998_1609 & D.44997_1496;
  if (D.44999_1152 != 0)
    goto <bb 249>;
  else
    goto <bb 280>;
  # SUCC: 249 [95.5%]  (true,exec) 280 [4.5%]  (false,exec)

  # BLOCK 249 freq:46
  # PRED: 248 [95.5%]  (true,exec)
  D.44993_692 = codec_ms_90 * 1000;
  ivtmp.1076_1045 = (unsigned int) codec_array_84;
  # SUCC: 250 [100.0%]  (fallthru,exec)

  # BLOCK 250 freq:962
  # PRED: 279 [95.5%]  (true,exec) 249 [100.0%]  (fallthru,exec)
  # remote_codec_rate_1493 = PHI <remote_codec_rate_97(279), remote_codec_rate_596(249)>
  # m_idx_1487 = PHI <m_idx_100(279), m_idx_792(249)>
  # nm_idx_1139 = PHI <nm_idx_115(279), nm_idx_1755(249)>
  # i_1622 = PHI <i_710(279), 0(249)>
  # ivtmp.1076_392 = PHI <ivtmp.1076_1813(279), ivtmp.1076_1045(249)>
  D.49971_95 = (void *) ivtmp.1076_392;
  imp_629 = MEM[base: D.49971_95, offset: 0B];
  ivtmp.1076_1813 = ivtmp.1076_392 + 4;
  # DEBUG imp => imp_629
  D.44920_630 = imp_629->bits_per_second;
  # DEBUG bit_rate => (uint32_t) D.44920_630
  codec_rate_632 = imp_629->samples_per_second;
  # DEBUG codec_rate => codec_rate_632
  D.44921_633 = imp_629->codec_type;
  if (D.44921_633 != 0)
    goto <bb 279>;
  else
    goto <bb 251>;
  # SUCC: 279 [71.0%]  (true,exec) 251 [29.0%]  (false,exec)

  # BLOCK 251 freq:279
  # PRED: 250 [29.0%]  (false,exec)
  bit_rate_631 = (uint32_t) D.44920_630;
  D.44856_634 = map_1728->rm_pt;
  D.44924_635 = (int) D.44856_634;
  remote_codec_rate.92_636 = (int) remote_codec_rate_1493;
  D.44926_637 = imp_629->iananame;
  D.44927_638 = imp_629->ianacode;
  D.44928_639 = (int) D.44927_638;
  D.44929_640 = imp_629->microseconds_per_packet;
  D.44930_641 = D.44929_640 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3383, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u]/[%s:%d:%u:%d:%u]\n", rm_encoding_130, D.44924_635, remote_codec_rate.92_636, codec_ms_90, map_bit_rate_132, D.44926_637, D.44928_639, codec_rate_632, D.44930_641, bit_rate_631);
  D.44889_642 = map_1728->rm_encoding;
  # DEBUG s => D.44889_642
  if (D.44889_642 == 0B)
    goto <bb 253>;
  else
    goto <bb 252>;
  # SUCC: 253 [15.0%]  (true,exec) 252 [85.0%]  (false,exec)

  # BLOCK 252 freq:237
  # PRED: 251 [85.0%]  (false,exec)
  D.47919_1483 = *D.44889_642;
  if (D.47919_1483 == 0)
    goto <bb 253>;
  else
    goto <bb 441>;
  # SUCC: 253 [50.0%]  (true,exec) 441 [50.0%]  (false,exec)

  # BLOCK 253 freq:209
  # PRED: 252 [50.0%]  (true,exec) 441 [50.0%]  (true,exec) 251 [15.0%]  (true,exec)
  D.44856_649 = map_1728->rm_pt;
  D.44924_650 = (int) D.44856_649;
  if (D.44924_650 <= 95)
    goto <bb 254>;
  else
    goto <bb 255>;
  # SUCC: 254 [50.0%]  (true,exec) 255 [50.0%]  (false,exec)

  # BLOCK 254 freq:105
  # PRED: 253 [50.0%]  (true,exec)
  D.44927_653 = imp_629->ianacode;
  D.44928_654 = (int) D.44927_653;
  match_655 = D.44924_650 == D.44928_654;
  # DEBUG match => match_655
  prephitmp.1055_1879 = (_Bool) match_655;
  pretmp.1054_1710 = bit_rate_631 != 0;
  prephitmp.1047_1734 = prephitmp.1055_1879 & pretmp.1054_1710;
  goto <bb 261>;
  # SUCC: 261 [100.0%]  (fallthru,exec)

  # BLOCK 255 freq:174
  # PRED: 441 [50.0%]  (false,exec) 253 [50.0%]  (false,exec)
  D.44926_656 = imp_629->iananame;
  D.44944_657 = strcasecmp (rm_encoding_130, D.44926_656);
  if (D.44944_657 == 0)
    goto <bb 256>;
  else
    goto <bb 259>;
  # SUCC: 256 [50.0%]  (true,exec) 259 [50.0%]  (false,exec)

  # BLOCK 256 freq:87
  # PRED: 255 [50.0%]  (true,exec)
  if (remote_codec_rate_1493 == codec_rate_632)
    goto <bb 257>;
  else
    goto <bb 258>;
  # SUCC: 257 [28.0%]  (true,exec) 258 [72.0%]  (false,exec)

  # BLOCK 257 freq:24
  # PRED: 256 [28.0%]  (true,exec)
  prephitmp.1047_1810 = bit_rate_631 != 0;
  goto <bb 259>;
  # SUCC: 259 [100.0%]  (fallthru,exec)

  # BLOCK 258 freq:63
  # PRED: 256 [72.0%]  (false,exec)
  D.44947_658 = imp_629->actual_samples_per_second;
  match_763 = fmtp_remote_codec_rate_99 == D.44947_658;
  prephitmp.1055_1735 = (_Bool) match_763;
  pretmp.1046_784 = bit_rate_631 != 0;
  prephitmp.1047_789 = prephitmp.1055_1735 & pretmp.1046_784;
  # SUCC: 259 [100.0%]  (fallthru,exec)

  # BLOCK 259 freq:174
  # PRED: 258 [100.0%]  (fallthru,exec) 255 [50.0%]  (false,exec) 257 [100.0%]  (fallthru,exec)
  # match_1678 = PHI <match_763(258), match_1901(255), 1(257)>
  # prephitmp.1055_1679 = PHI <prephitmp.1055_1735(258), 0(255), 1(257)>
  # prephitmp.1047_1677 = PHI <prephitmp.1047_789(258), 0(255), prephitmp.1047_1810(257)>
  # DEBUG match => match_1678
  if (fmtp_remote_codec_rate_99 != 0)
    goto <bb 261>;
  else
    goto <bb 260>;
  # SUCC: 261 [50.0%]  (true,exec) 260 [50.0%]  (false,exec)

  # BLOCK 260 freq:87
  # PRED: 259 [50.0%]  (false,exec)
  # SUCC: 261 [100.0%]  (fallthru,exec)

  # BLOCK 261 freq:279
  # PRED: 254 [100.0%]  (fallthru,exec) 260 [100.0%]  (fallthru,exec) 259 [50.0%]  (true,exec)
  # match_1 = PHI <match_655(254), match_1678(260), match_1678(259)>
  # remote_codec_rate_96 = PHI <remote_codec_rate_1493(254), remote_codec_rate_1493(260), fmtp_remote_codec_rate_99(259)>
  # prephitmp.1055_1807 = PHI <prephitmp.1055_1879(254), prephitmp.1055_1679(260), prephitmp.1055_1679(259)>
  # prephitmp.1047_1806 = PHI <prephitmp.1047_1734(254), prephitmp.1047_1677(260), prephitmp.1047_1677(259)>
  # DEBUG remote_codec_rate => remote_codec_rate_96
  # DEBUG match => match_1
  if (prephitmp.1047_1806 != 0)
    goto <bb 262>;
  else
    goto <bb 265>;
  # SUCC: 262 [50.0%]  (true,exec) 265 [50.0%]  (false,exec)

  # BLOCK 262 freq:139
  # PRED: 261 [50.0%]  (true,exec)
  D.44955_666 = map_bit_rate_132 != 0;
  D.44956_667 = map_bit_rate_132 != bit_rate_631;
  D.44957_668 = D.44956_667 & D.44955_666;
  if (D.44957_668 != 0)
    goto <bb 263>;
  else
    goto <bb 265>;
  # SUCC: 263 [50.0%]  (true,exec) 265 [50.0%]  (false,exec)

  # BLOCK 263 freq:70
  # PRED: 262 [50.0%]  (true,exec)
  D.44960_670 = strcasecmp (D.44889_642, "ilbc");
  if (D.44960_670 != 0)
    goto <bb 264>;
  else
    goto <bb 265>;
  # SUCC: 264 [50.0%]  (true,exec) 265 [50.0%]  (false,exec)

  # BLOCK 264 freq:35
  # PRED: 263 [50.0%]  (true,exec)
  D.44963_672 = strcasecmp (D.44889_642, "isac");
  if (D.44963_672 != 0)
    goto <bb 279>;
  else
    goto <bb 265>;
  # SUCC: 279 [50.0%]  (true,exec) 265 [50.0%]  (false,exec)

  # BLOCK 265 freq:262
  # PRED: 261 [50.0%]  (false,exec) 262 [50.0%]  (false,exec) 263 [50.0%]  (false,exec) 264 [50.0%]  (false,exec)
  # match_2 = PHI <match_1(261), 1(262), 1(263), 1(264)>
  # prephitmp.1055_749 = PHI <prephitmp.1055_1807(261), 1(262), 1(263), 1(264)>
  # DEBUG match => match_2
  D.44968_675 = remote_codec_rate_96 != 0;
  D.44969_676 = prephitmp.1055_749 & D.44968_675;
  if (D.44969_676 != 0)
    goto <bb 266>;
  else
    goto <bb 270>;
  # SUCC: 266 [53.2%]  (true,exec) 270 [46.8%]  (false,exec)

  # BLOCK 266 freq:139
  # PRED: 265 [53.2%]  (true,exec)
  D.44972_677 = codec_rate_632 != 0;
  D.44973_678 = remote_codec_rate_96 != codec_rate_632;
  D.44974_679 = D.44973_678 & D.44972_677;
  if (D.44974_679 != 0)
    goto <bb 267>;
  else
    goto <bb 271>;
  # SUCC: 267 [50.0%]  (true,exec) 271 [50.0%]  (false,exec)

  # BLOCK 267 freq:70
  # PRED: 266 [50.0%]  (true,exec)
  D.44977_681 = strcasecmp (D.44889_642, "pcma");
  if (D.44977_681 == 0)
    goto <bb 269>;
  else
    goto <bb 268>;
  # SUCC: 269 [29.0%]  (true,exec) 268 [71.0%]  (false,exec)

  # BLOCK 268 freq:50
  # PRED: 267 [71.0%]  (false,exec)
  D.44979_683 = strcasecmp (D.44889_642, "pcmu");
  if (D.44979_683 == 0)
    goto <bb 269>;
  else
    goto <bb 271>;
  # SUCC: 269 [50.0%]  (true,exec) 271 [50.0%]  (false,exec)

  # BLOCK 269 freq:45
  # PRED: 267 [29.0%]  (true,exec) 268 [50.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3405, session_161(D), 7, "sampling rates have to match for G.711\n");
  # DEBUG match => 0
  # DEBUG match => 0
  goto <bb 279>;
  # SUCC: 279 [100.0%]  (fallthru,exec)

  # BLOCK 270 freq:122
  # PRED: 265 [46.8%]  (false,exec)
  # DEBUG match => match_2
  if (match_2 != 0)
    goto <bb 271>;
  else
    goto <bb 279>;
  # SUCC: 271 [36.5%]  (true,exec) 279 [63.5%]  (false,exec)

  # BLOCK 271 freq:139
  # PRED: 270 [36.5%]  (true,exec) 266 [50.0%]  (false,exec) 268 [50.0%]  (false,exec)
  if (scrooge_80 != 0)
    goto <bb 272>;
  else
    goto <bb 273>;
  # SUCC: 272 [29.0%]  (true,exec) 273 [71.0%]  (false,exec)

  # BLOCK 272 freq:40
  # PRED: 271 [29.0%]  (true,exec)
  D.44926_685 = imp_629->iananame;
  D.44984_686 = imp_629->samples_per_second;
  D.44929_687 = imp_629->microseconds_per_packet;
  D.44930_688 = D.44929_687 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3411, session_161(D), 7, "Bah HUMBUG! Sticking with %s@%uh@%ui\n", D.44926_685, D.44984_686, D.44930_688);
  goto <bb 278>;
  # SUCC: 278 [100.0%]  (fallthru,exec)

  # BLOCK 273 freq:99
  # PRED: 271 [71.0%]  (false,exec)
  D.44989_689 = ptime_1033 != 0;
  D.44990_690 = codec_ms_90 != 0;
  D.44991_691 = D.44990_690 & D.44989_689;
  if (D.44991_691 != 0)
    goto <bb 274>;
  else
    goto <bb 275>;
  # SUCC: 274 [50.0%]  (true,exec) 275 [50.0%]  (false,exec)

  # BLOCK 274 freq:50
  # PRED: 273 [50.0%]  (true,exec)
  prephitmp.1043_693 = imp_629->microseconds_per_packet;
  if (D.44993_692 != prephitmp.1043_693)
    goto <bb 277>;
  else
    goto <bb 275>;
  # SUCC: 277 [72.0%]  (true,exec) 275 [28.0%]  (false,exec)

  # BLOCK 275 freq:63
  # PRED: 273 [50.0%]  (false,exec) 274 [28.0%]  (false,exec)
  if (remote_codec_rate_96 != codec_rate_632)
    goto <bb 276>;
  else
    goto <bb 278>;
  # SUCC: 276 [72.0%]  (true,exec) 278 [28.0%]  (false,exec)

  # BLOCK 276 freq:45
  # PRED: 275 [72.0%]  (true,exec)
  prephitmp.1043_1736 = imp_629->microseconds_per_packet;
  # SUCC: 277 [100.0%]  (fallthru,exec)

  # BLOCK 277 freq:81
  # PRED: 274 [72.0%]  (true,exec) 276 [100.0%]  (fallthru,exec)
  # prephitmp.1043_1680 = PHI <prephitmp.1043_693(274), prephitmp.1043_1736(276)>
  # DEBUG match => 0
  D.44926_695 = imp_629->iananame;
  D.44927_696 = imp_629->ianacode;
  D.44928_697 = (int) D.44927_696;
  D.44930_699 = prephitmp.1043_1680 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3418, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] is saved as a near-match\n", D.44926_695, D.44928_697, codec_rate_632, D.44930_699, bit_rate_631);
  near_matches[nm_idx_1139].codec_idx = i_1622;
  remote_codec_rate.92_700 = (int) remote_codec_rate_96;
  near_matches[nm_idx_1139].rate = remote_codec_rate.92_700;
  near_matches[nm_idx_1139].imp = imp_629;
  near_matches[nm_idx_1139].map = map_1728;
  nm_idx_701 = nm_idx_1139 + 1;
  # DEBUG nm_idx => nm_idx_701
  goto <bb 279>;
  # SUCC: 279 [100.0%]  (fallthru,exec)

  # BLOCK 278 freq:58
  # PRED: 272 [100.0%]  (fallthru,exec) 275 [28.0%]  (false,exec)
  matches[m_idx_1487].codec_idx = i_1622;
  codec_rate.94_702 = (int) codec_rate_632;
  matches[m_idx_1487].rate = codec_rate.94_702;
  matches[m_idx_1487].imp = imp_629;
  matches[m_idx_1487].map = map_1728;
  m_idx_703 = m_idx_1487 + 1;
  # DEBUG m_idx => m_idx_703
  D.44926_704 = imp_629->iananame;
  D.44927_705 = imp_629->ianacode;
  D.44928_706 = (int) D.44927_705;
  D.44929_707 = imp_629->microseconds_per_packet;
  D.44930_708 = D.44929_707 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3437, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] ++++ is saved as a match\n", D.44926_704, D.44928_706, codec_rate_632, D.44930_708, bit_rate_631);
  if (m_idx_703 > 29)
    goto <bb 282>;
  else
    goto <bb 279>;
  # SUCC: 282 [4.5%]  (true,exec) 279 [95.5%]  (false,exec)

  # BLOCK 279 freq:959
  # PRED: 250 [71.0%]  (true,exec) 269 [100.0%]  (fallthru,exec) 277 [100.0%]  (fallthru,exec) 278 [95.5%]  (false,exec) 270 [63.5%]  (false,exec) 264 [50.0%]  (true,exec)
  # remote_codec_rate_97 = PHI <remote_codec_rate_1493(250), remote_codec_rate_96(269), remote_codec_rate_96(277), remote_codec_rate_96(278), remote_codec_rate_96(270), remote_codec_rate_96(264)>
  # m_idx_100 = PHI <m_idx_1487(250), m_idx_1487(269), m_idx_1487(277), m_idx_703(278), m_idx_1487(270), m_idx_1487(264)>
  # nm_idx_115 = PHI <nm_idx_1139(250), nm_idx_1139(269), nm_idx_701(277), nm_idx_1139(278), nm_idx_1139(270), nm_idx_1139(264)>
  # DEBUG nm_idx => nm_idx_115
  # DEBUG m_idx => m_idx_100
  # DEBUG remote_codec_rate => remote_codec_rate_97
  # DEBUG match => 0
  i_710 = i_1622 + 1;
  # DEBUG i => i_710
  # DEBUG i => i_710
  # DEBUG nm_idx => nm_idx_115
  # DEBUG m_idx => m_idx_100
  # DEBUG remote_codec_rate => remote_codec_rate_97
  # DEBUG match => 0
  D.44471_621 = smh_186->mparams;
  D.44996_622 = D.44471_621->num_codecs;
  D.44997_623 = D.44996_622 > i_710;
  D.44998_624 = total_codecs_85 > i_710;
  D.44999_625 = D.44998_624 & D.44997_623;
  if (D.44999_625 != 0)
    goto <bb 250>;
  else
    goto <bb 280>;
  # SUCC: 250 [95.5%]  (true,exec) 280 [4.5%]  (false,exec)

  # BLOCK 280 freq:45
  # PRED: 279 [4.5%]  (false,exec) 248 [4.5%]  (false,exec)
  # m_idx_102 = PHI <m_idx_100(279), m_idx_792(248)>
  # nm_idx_901 = PHI <nm_idx_115(279), nm_idx_1755(248)>
  # DEBUG m_idx => m_idx_102
  # DEBUG match => 0
  if (m_idx_102 > 29)
    goto <bb 282>;
  else
    goto <bb 281>;
  # SUCC: 282 (true,exec) 281 [100.0%]  (false,exec)

  # BLOCK 281 freq:515
  # PRED: 221 [100.0%]  (fallthru,exec) 226 [100.0%]  (fallthru,exec) 220 [72.0%]  (false,exec) 227 [50.0%]  (true,exec) 280 [100.0%]  (false,exec) 225 [30.2%]  (false,exec)
  # match_7 = PHI <match_1901(221), match_1901(226), match_1901(220), match_1901(227), match_1901(280), match_1901(225)>
  # best_te_19 = PHI <best_te_568(221), best_te_1898(226), best_te_1898(220), best_te_1898(227), best_te_1898(280), best_te_1898(225)>
  # cng_pt_24 = PHI <cng_pt_1667(221), cng_pt_573(226), cng_pt_1667(220), cng_pt_1667(227), cng_pt_1667(280), cng_pt_573(225)>
  # codec_ms_91 = PHI <codec_ms_1720(221), codec_ms_1720(226), codec_ms_1720(220), codec_ms_1720(227), codec_ms_90(280), codec_ms_1720(225)>
  # m_idx_103 = PHI <m_idx_792(221), m_idx_792(226), m_idx_792(220), m_idx_792(227), m_idx_102(280), m_idx_792(225)>
  # nm_idx_117 = PHI <nm_idx_1755(221), nm_idx_1755(226), nm_idx_1755(220), nm_idx_1755(227), nm_idx_901(280), nm_idx_1755(225)>
  # DEBUG nm_idx => nm_idx_117
  # DEBUG m_idx => m_idx_103
  # DEBUG codec_ms => codec_ms_91
  # DEBUG x => NULL
  # DEBUG cng_pt => cng_pt_24
  # DEBUG best_te => best_te_19
  # DEBUG match => match_7
  map_711 = map_1728->rm_next;
  # DEBUG map => map_711
  # DEBUG map => map_711
  # DEBUG nm_idx => nm_idx_117
  # DEBUG m_idx => m_idx_103
  # DEBUG codec_ms => codec_ms_91
  # DEBUG x => NULL
  # DEBUG cng_pt => cng_pt_24
  # DEBUG best_te => best_te_19
  # DEBUG match => match_7
  if (map_711 != 0B)
    goto <bb 216>;
  else
    goto <bb 282>;
  # SUCC: 216 [95.5%]  (true,exec) 282 [4.5%]  (false,exec)

  # BLOCK 282 freq:27
  # PRED: 278 [4.5%]  (true,exec) 281 [4.5%]  (false,exec) 280 (true,exec) 214 [4.5%]  (false,exec)
  # match_9 = PHI <1(278), match_7(281), match_1901(280), match_1800(214)>
  # codec_ms_93 = PHI <codec_ms_90(278), codec_ms_91(281), codec_ms_90(280), codec_ms_477(214)>
  # m_idx_105 = PHI <m_idx_703(278), m_idx_103(281), m_idx_102(280), m_idx_1869(214)>
  # nm_idx_119 = PHI <nm_idx_1139(278), nm_idx_117(281), nm_idx_901(280), nm_idx_1749(214)>
  # best_te_1624 = PHI <best_te_1898(278), best_te_19(281), best_te_1898(280), best_te_680(214)>
  # cng_pt_1626 = PHI <cng_pt_1667(278), cng_pt_24(281), cng_pt_1667(280), cng_pt_1717(214)>
  # DEBUG nm_idx => nm_idx_119
  # DEBUG m_idx => m_idx_105
  # DEBUG codec_ms => codec_ms_93
  # DEBUG match => match_9
  D.45001_712 = smh_186->crypto_mode;
  D.45002_713 = D.45001_712 == 1;
  D.45003_714 = got_crypto_969 <= 0;
  D.45004_715 = D.45003_714 & D.45002_713;
  if (D.45004_715 != 0)
    goto <bb 283>;
  else
    goto <bb 284>;
  # SUCC: 283 [29.0%]  (true,exec) 284 [71.0%]  (false,exec)

  # BLOCK 283 freq:8
  # PRED: 282 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3455, session_161(D), 4, "Crypto not negotiated but required.\n");
  # DEBUG match => 0
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0
  # DEBUG match => 0
  # DEBUG m_idx => 0
  # DEBUG match => 0
  # DEBUG match => 0
  goto <bb 324>;
  # SUCC: 324 [100.0%]  (fallthru)

  # BLOCK 284 freq:19
  # PRED: 282 [71.0%]  (false,exec)
  # DEBUG nm_idx => nm_idx_119
  # DEBUG m_idx => m_idx_105
  # DEBUG match => match_9
  D.45007_719 = m_idx_105 == 0;
  D.45008_720 = nm_idx_119 != 0;
  D.45009_721 = D.45008_720 & D.45007_719;
  if (D.45009_721 != 0)
    goto <bb 285>;
  else
    goto <bb 295>;
  # SUCC: 285 [71.0%]  (true,exec) 295 [29.0%]  (false,exec)

  # BLOCK 285 freq:13
  # PRED: 284 [71.0%]  (true,exec)
  ivtmp.1067_237 = (unsigned int) &near_matches[0].rate;
  # SUCC: 286 [100.0%]  (fallthru,exec)

  # BLOCK 286 freq:147
  # PRED: 294 [96.7%]  (true,exec) 285 [100.0%]  (fallthru,exec)
  # j_1845 = PHI <j_736(294), 0(285)>
  # ivtmp.1067_1654 = PHI <ivtmp.1067_756(294), ivtmp.1067_237(285)>
  # DEBUG timp => 0B
  D.49960_238 = (void *) ivtmp.1067_1654;
  near_rate.96_724 = MEM[base: D.49960_238, offset: 0B];
  near_rate_725 = (uint32_t) near_rate.96_724;
  # DEBUG near_rate => near_rate_725
  near_match_726 = MEM[base: D.49960_238, offset: 4294967288B];
  # DEBUG near_match => near_match_726
  near_map_727 = MEM[base: D.49960_238, offset: 4294967292B];
  # DEBUG near_map => near_map_727
  D.45013_728 = near_match_726->iananame;
  if (near_rate_725 == 0)
    goto <bb 287>;
  else
    goto <bb 288>;
  # SUCC: 287 [50.0%]  (true,exec) 288 [50.0%]  (false,exec)

  # BLOCK 287 freq:74
  # PRED: 286 [50.0%]  (true,exec)
  near_rate_729 = near_match_726->samples_per_second;
  # SUCC: 288 [100.0%]  (fallthru,exec)

  # BLOCK 288 freq:147
  # PRED: 287 [100.0%]  (fallthru,exec) 286 [50.0%]  (false,exec)
  # near_rate_145 = PHI <near_rate_729(287), near_rate_725(286)>
  switch_snprintf (&tmp, 80, "%s@%uh@%ui", D.45013_728, near_rate_145, codec_ms_93);
  prefs[0] = &tmp;
  num_731 = switch_loadable_module_get_codecs_sorted (&search, 1, &prefs, 1);
  # DEBUG num => num_731
  if (num_731 != 0)
    goto <bb 289>;
  else
    goto <bb 290>;
  # SUCC: 289 [50.0%]  (true,exec) 290 [50.0%]  (false,exec)

  # BLOCK 289 freq:74
  # PRED: 288 [50.0%]  (true,exec)
  timp_732 = search[0];
  # DEBUG timp => timp_732
  # SUCC: 290 [100.0%]  (fallthru,exec)

  # BLOCK 290 freq:147
  # PRED: 289 [100.0%]  (fallthru,exec) 288 [50.0%]  (false,exec)
  # timp_134 = PHI <timp_732(289), near_match_726(288)>
  # DEBUG timp => timp_134
  if (maxptime_1040 == 0)
    goto <bb 291>;
  else
    goto <bb 292>;
  # SUCC: 291 [3.0%]  (true,exec) 292 [97.0%]  (false,exec)

  # BLOCK 291 freq:4
  # PRED: 290 [3.0%]  (true,exec)
  # timp_330 = PHI <timp_134(290)>
  pretmp.1036_1896 = timp_330->microseconds_per_packet;
  prephitmp.1039_846 = pretmp.1036_1896 / 1000;
  goto <bb 293>;
  # SUCC: 293 [100.0%]  (fallthru,exec)

  # BLOCK 292 freq:143
  # PRED: 290 [97.0%]  (false,exec)
  D.45024_734 = timp_134->microseconds_per_packet;
  prephitmp.1039_735 = D.45024_734 / 1000;
  if (prephitmp.1039_735 <= maxptime_1040)
    goto <bb 293>;
  else
    goto <bb 294>;
  # SUCC: 293 [3.0%]  (true,exec) 294 [97.0%]  (false,exec)

  # BLOCK 293 freq:9
  # PRED: 291 [100.0%]  (fallthru,exec) 292 [3.0%]  (true,exec)
  # prephitmp.1039_857 = PHI <prephitmp.1039_846(291), prephitmp.1039_735(292)>
  # timp_1785 = PHI <timp_134(291), timp_134(292)>
  # near_rate.96_616 = PHI <near_rate.96_724(291), near_rate.96_724(292)>
  # near_map_1787 = PHI <near_map_727(291), near_map_727(292)>
  # j_1786 = PHI <j_1845(291), j_1845(292)>
  D.45026_737 = timp_1785->iananame;
  D.45027_740 = timp_1785->actual_samples_per_second;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3488, session_161(D), 7, "Substituting codec %s@%ui@%uh\n", D.45026_737, prephitmp.1039_857, D.45027_740);
  # DEBUG match => 1
  D.45028_742 = near_matches[j_1786].codec_idx;
  matches[0].codec_idx = D.45028_742;
  matches[0].rate = near_rate.96_616;
  matches[0].imp = timp_1785;
  matches[0].map = near_map_1787;
  # DEBUG m_idx => 1
  # DEBUG m_idx => 1
  # DEBUG match => 1
  goto <bb 296>;
  # SUCC: 296 [100.0%]  (fallthru,exec)

  # BLOCK 294 freq:139
  # PRED: 292 [97.0%]  (false,exec)
  j_736 = j_1845 + 1;
  # DEBUG j => j_736
  # DEBUG j => j_736
  ivtmp.1067_756 = ivtmp.1067_1654 + 16;
  if (nm_idx_119 > j_736)
    goto <bb 286>;
  else
    goto <bb 316>;
  # SUCC: 286 [96.7%]  (true,exec) 316 [3.3%]  (false,exec)

  # BLOCK 295 freq:5
  # PRED: 284 [29.0%]  (false,exec)
  # DEBUG m_idx => m_idx_105
  # DEBUG match => match_9
  if (m_idx_105 != 0)
    goto <bb 296>;
  else
    goto <bb 316>;
  # SUCC: 296 [90.0%]  (true,exec) 316 [10.0%]  (false,exec)

  # BLOCK 296 freq:13
  # PRED: 295 [90.0%]  (true,exec) 293 [100.0%]  (fallthru,exec)
  # m_idx_1715 = PHI <m_idx_105(295), 1(293)>
  if (greedy_47 != 0)
    goto <bb 297>;
  else
    goto <bb 298>;
  # SUCC: 297 [29.0%]  (true,exec) 298 [71.0%]  (false,exec)

  # BLOCK 297 freq:4
  # PRED: 296 [29.0%]  (true,exec)
  greedy_sort (smh_186, &matches, m_idx_1715, codec_array_84, total_codecs_85);
  # SUCC: 298 [100.0%]  (fallthru,exec)

  # BLOCK 298 freq:13
  # PRED: 296 [71.0%]  (false,exec) 297 [100.0%]  (fallthru,exec)
  # DEBUG match => 1
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].codec_negotiated = 1;
  smh_186->num_negotiated_codecs = 0;
  # DEBUG j => 0
  # DEBUG j => 0
  # SUCC: 299 [100.0%]  (fallthru,exec)

  # BLOCK 299 freq:398
  # PRED: 298 [100.0%]  (fallthru,exec) 315 [96.8%]  (true,exec)
  # j_1881 = PHI <0(298), j_807(315)>
  # ivtmp.1062_1793 = PHI <0(298), ivtmp.1062_522(315)>
  D.49951_345 = &matches + ivtmp.1062_1793;
  D.45034_747 = MEM[base: D.49951_345, offset: 4B];
  D.45035_748 = D.45034_747->rm_encoding;
  D.45036_750 = D.45034_747->rm_fmtp;
  D.45037_752 = D.45034_747->rm_pt;
  D.45038_753 = (uint32_t) D.45037_752;
  D.45039_754 = MEM[symbol: matches, index: ivtmp.1062_1793, offset: 0B];
  D.45040_755 = D.45039_754->samples_per_second;
  D.45041_757 = D.45039_754->microseconds_per_packet;
  D.45042_758 = D.45041_757 / 1000;
  D.45043_759 = (uint32_t) D.45042_758;
  pmap_760 = switch_core_media_add_payload_map (session_161(D), 0, D.45035_748, D.45036_750, sdp_type_546(D), D.45038_753, D.45040_755, D.45043_759, 1);
  # DEBUG pmap => pmap_760
  mimp_761 = MEM[symbol: matches, index: ivtmp.1062_1793, offset: 0B];
  # DEBUG mimp => mimp_761
  mmap_762 = MEM[base: D.49951_345, offset: 4B];
  # DEBUG mmap => mmap_762
  if (j_1881 == 0)
    goto <bb 300>;
  else
    goto <bb 302>;
  # SUCC: 300 [50.0%]  (true,exec) 302 [50.0%]  (false,exec)

  # BLOCK 300 freq:199
  # PRED: 299 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map = pmap_760;
  pmap_760->current = 1;
  D.44605_764 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_764 != 0B)
    goto <bb 301>;
  else
    goto <bb 302>;
  # SUCC: 301 [69.8%]  (true,exec) 302 [30.2%]  (false,exec)

  # BLOCK 301 freq:139
  # PRED: 300 [69.8%]  (true,exec)
  D.45048_766 = pmap_760->pt;
  switch_rtp_set_default_payload (D.44605_764, D.45048_766);
  # SUCC: 302 [100.0%]  (fallthru,exec)

  # BLOCK 302 freq:398
  # PRED: 299 [50.0%]  (false,exec) 300 [30.2%]  (false,exec) 301 [100.0%]  (fallthru,exec)
  D.45049_767 = mmap_762->rm_encoding;
  D.45050_768 = switch_core_perform_session_strdup (session_161(D), D.45049_767, "src/switch_core_media.c", &__func__, 3535);
  pmap_760->rm_encoding = D.45050_768;
  D.45051_769 = mimp_761->iananame;
  D.45052_770 = switch_core_perform_session_strdup (session_161(D), D.45051_769, "src/switch_core_media.c", &__func__, 3536);
  pmap_760->iananame = D.45052_770;
  D.45053_771 = mmap_762->rm_pt;
  D.45054_772 = (unsigned char) D.45053_771;
  pmap_760->recv_pt = D.45054_772;
  D.45055_773 = mimp_761->samples_per_second;
  pmap_760->rm_rate = D.45055_773;
  pmap_760->adv_rm_rate = D.45055_773;
  D.45051_775 = mimp_761->iananame;
  D.45056_776 = strcasecmp (D.45051_775, "g722");
  if (D.45056_776 != 0)
    goto <bb 303>;
  else
    goto <bb 304>;
  # SUCC: 303 [50.0%]  (true,exec) 304 [50.0%]  (false,exec)

  # BLOCK 303 freq:199
  # PRED: 302 [50.0%]  (true,exec)
  D.45059_777 = mimp_761->actual_samples_per_second;
  pmap_760->rm_rate = D.45059_777;
  # SUCC: 304 [100.0%]  (fallthru,exec)

  # BLOCK 304 freq:398
  # PRED: 302 [50.0%]  (false,exec) 303 [100.0%]  (fallthru,exec)
  D.45060_778 = mimp_761->microseconds_per_packet;
  D.45061_779 = D.45060_778 / 1000;
  D.45062_780 = (uint32_t) D.45061_779;
  pmap_760->codec_ms = D.45062_780;
  D.45063_781 = mimp_761->bits_per_second;
  D.45064_782 = (uint32_t) D.45063_781;
  pmap_760->bitrate = D.45064_782;
  D.45066_783 = mmap_762->rm_params;
  if (D.45066_783 != 0B)
    goto <bb 305>;
  else
    goto <bb 306>;
  # SUCC: 305 [69.8%]  (true,exec) 306 [30.2%]  (false,exec)

  # BLOCK 305 freq:278
  # PRED: 304 [69.8%]  (true,exec)
  # DEBUG __nptr => D.45066_783
  D.47922_1485 = strtol (D.45066_783, 0B, 10);
  # SUCC: 306 [100.0%]  (fallthru,exec)

  # BLOCK 306 freq:398
  # PRED: 305 [100.0%]  (fallthru,exec) 304 [30.2%]  (false,exec)
  # D.47922_146 = PHI <D.47922_1485(305), 1(304)>
  pmap_760->channels = D.47922_146;
  D.45049_787 = mmap_762->rm_encoding;
  D.45070_788 = strcasecmp (D.45049_787, "opus");
  if (D.45070_788 == 0)
    goto <bb 307>;
  else
    goto <bb 314>;
  # SUCC: 307 [50.0%]  (true,exec) 314 [50.0%]  (false,exec)

  # BLOCK 307 freq:199
  # PRED: 306 [50.0%]  (true,exec)
  if (D.47922_146 == 1)
    goto <bb 308>;
  else
    goto <bb 309>;
  # SUCC: 308 [13.7%]  (true,exec) 309 [86.3%]  (false,exec)

  # BLOCK 308 freq:27
  # PRED: 307 [13.7%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3549, session_161(D), 4, "Invalid SDP for opus.  Don\'t ask.. but it needs a /2\n");
  pmap_760->adv_channels = 1;
  goto <bb 310>;
  # SUCC: 310 [100.0%]  (fallthru,exec)

  # BLOCK 309 freq:172
  # PRED: 307 [86.3%]  (false,exec)
  pmap_760->adv_channels = 2;
  # SUCC: 310 [100.0%]  (fallthru,exec)

  # BLOCK 310 freq:199
  # PRED: 308 [100.0%]  (fallthru,exec) 309 [100.0%]  (fallthru,exec)
  D.45079_790 = mmap_762->rm_fmtp;
  # DEBUG s => D.45079_790
  if (D.45079_790 == 0B)
    goto <bb 313>;
  else
    goto <bb 311>;
  # SUCC: 313 [15.0%]  (true,exec) 311 [85.0%]  (false,exec)

  # BLOCK 311 freq:169
  # PRED: 310 [85.0%]  (false,exec)
  D.47926_1486 = *D.45079_790;
  if (D.47926_1486 == 0)
    goto <bb 313>;
  else
    goto <bb 442>;
  # SUCC: 313 [50.0%]  (true,exec) 442 [50.0%]  (false,exec)

  # BLOCK 312 freq:49
  # PRED: 442 [85.0%]  (true,exec)
  pmap_760->channels = 2;
  goto <bb 315>;
  # SUCC: 315 [100.0%]  (fallthru,exec)

  # BLOCK 313 freq:150
  # PRED: 311 [50.0%]  (true,exec) 442 [15.0%]  (false,exec) 310 [15.0%]  (true,exec)
  pmap_760->channels = 1;
  goto <bb 315>;
  # SUCC: 315 [100.0%]  (fallthru,exec)

  # BLOCK 314 freq:199
  # PRED: 306 [50.0%]  (false,exec)
  pmap_760->adv_channels = D.47922_146;
  # SUCC: 315 [100.0%]  (fallthru,exec)

  # BLOCK 315 freq:398
  # PRED: 313 [100.0%]  (fallthru,exec) 314 [100.0%]  (fallthru,exec) 312 [100.0%]  (fallthru,exec)
  D.45085_795 = connection_139->c_address;
  D.45086_796 = switch_core_perform_session_strdup (session_161(D), D.45085_795, "src/switch_core_media.c", &__func__, 3563);
  pmap_760->remote_sdp_ip = D.45086_796;
  D.44697_797 = m_1764->m_port;
  D.45087_798 = (short unsigned int) D.44697_797;
  pmap_760->remote_sdp_port = D.45087_798;
  D.45079_799 = mmap_762->rm_fmtp;
  D.45088_800 = switch_core_perform_session_strdup (session_161(D), D.45079_799, "src/switch_core_media.c", &__func__, 3565);
  pmap_760->rm_fmtp = D.45088_800;
  D.45053_801 = mmap_762->rm_pt;
  D.45054_802 = (unsigned char) D.45053_801;
  pmap_760->agreed_pt = D.45054_802;
  D.44655_803 = smh_186->num_negotiated_codecs;
  smh_186->negotiated_codecs[D.44655_803] = mimp_761;
  D.45089_804 = D.44655_803 + 1;
  smh_186->num_negotiated_codecs = D.45089_804;
  D.45053_805 = mmap_762->rm_pt;
  D.45054_806 = (unsigned char) D.45053_805;
  pmap_760->recv_pt = D.45054_806;
  j_807 = j_1881 + 1;
  # DEBUG j => j_807
  # DEBUG j => j_807
  ivtmp.1062_522 = ivtmp.1062_1793 + 16;
  if (j_807 != m_idx_1715)
    goto <bb 299>;
  else
    goto <bb 317>;
  # SUCC: 299 [96.8%]  (true,exec) 317 [3.2%]  (false,exec)

  # BLOCK 316 freq:6
  # PRED: 294 [3.3%]  (false,exec) 295 [10.0%]  (false,exec)
  # DEBUG match => match_9
  if (match_9 != 0)
    goto <bb 317>;
  else
    goto <bb 324>;
  # SUCC: 317 (true,exec) 324 [100.0%]  (false,exec)

  # BLOCK 317 freq:8
  # PRED: 316 (true,exec) 315 [3.2%]  (false,exec)
  # match_1712 = PHI <match_9(316), 1(315)>
  # m_idx_1905 = PHI <0(316), m_idx_1715(315)>
  D.44750_808 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_809 = D.44750_808->remote_sdp_port;
  D.44767_810 = (int) D.44762_809;
  switch_snprintf (&tmp, 50, "%d", D.44767_810);
  D.44530_811 = session_161(D)->channel;
  D.44750_812 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_813 = D.44750_812->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_811, "remote_media_ip", D.44760_813, 1);
  D.44530_814 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_814, "remote_media_port", &tmp, 1);
  D.44750_815 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.45092_816 = D.44750_815->recv_pt;
  D.45093_817 = (int) D.45092_816;
  switch_snprintf (&tmp, 50, "%d", D.45093_817);
  D.44530_818 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_818, "rtp_audio_recv_pt", &tmp, 1);
  # DEBUG D#75 => &MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].read_codec
  # DEBUG codec => D#75
  D.47934_1488 = MEM[(struct switch_codec_t *)smh_186 + 1604B].flags;
  D.47933_1489 = D.47934_1488 & 256;
  if (D.47933_1489 != 0)
    goto <bb 318>;
  else
    goto <bb 322>;
  # SUCC: 318 [50.0%]  (true,exec) 322 [50.0%]  (false,exec)

  # BLOCK 318 freq:3
  # PRED: 317 [50.0%]  (true,exec)
  D.47932_1490 = MEM[(struct switch_codec_t *)smh_186 + 1604B].mutex;
  if (D.47932_1490 != 0B)
    goto <bb 319>;
  else
    goto <bb 322>;
  # SUCC: 319 [85.0%]  (true,exec) 322 [15.0%]  (false,exec)

  # BLOCK 319 freq:3
  # PRED: 318 [85.0%]  (true,exec)
  D.47931_1491 = MEM[(struct switch_codec_t *)smh_186 + 1604B].codec_interface;
  if (D.47931_1491 != 0B)
    goto <bb 320>;
  else
    goto <bb 322>;
  # SUCC: 320 [85.0%]  (true,exec) 322 [15.0%]  (false,exec)

  # BLOCK 320 freq:2
  # PRED: 319 [85.0%]  (true,exec)
  D.47930_1492 = MEM[(struct switch_codec_t *)smh_186 + 1604B].implementation;
  if (D.47930_1492 != 0B)
    goto <bb 321>;
  else
    goto <bb 322>;
  # SUCC: 321 [85.0%]  (true,exec) 322 [15.0%]  (false,exec)

  # BLOCK 321 freq:2
  # PRED: 320 [85.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].reset_codec = 1;
  # SUCC: 322 [100.0%]  (fallthru,exec)

  # BLOCK 322 freq:8
  # PRED: 320 [15.0%]  (false,exec) 321 [100.0%]  (fallthru,exec) 317 [50.0%]  (false,exec) 318 [15.0%]  (false,exec) 319 [15.0%]  (false,exec)
  D.44471_821 = smh_186->mparams;
  D.45098_822 = D.44471_821->codec_flags;
  D.45099_823 = switch_core_media_set_codec (session_161(D), 0, D.45098_822);
  if (D.45099_823 == 0)
    goto <bb 323>;
  else
    goto <bb 324>;
  # SUCC: 323 [29.0%]  (true,exec) 324 [71.0%]  (false,exec)

  # BLOCK 323 freq:2
  # PRED: 322 [29.0%]  (true,exec)
  # DEBUG got_audio => 1
  check_ice (smh_186, 0, sdp_198, m_1764);
  # SUCC: 324 [100.0%]  (fallthru,exec)

  # BLOCK 324 freq:27
  # PRED: 316 [100.0%]  (false,exec) 323 [100.0%]  (fallthru,exec) 322 [71.0%]  (false,exec) 283 [100.0%]  (fallthru)
  # match_13 = PHI <match_9(316), match_1712(323), 0(322), 0(283)>
  # got_audio_65 = PHI <0(316), 1(323), 0(322), 0(283)>
  # m_idx_1745 = PHI <0(316), m_idx_1905(323), m_idx_1905(322), 0(283)>
  # nm_idx_843 = PHI <nm_idx_119(316), nm_idx_119(323), nm_idx_119(322), 0(283)>
  # DEBUG got_audio => got_audio_65
  # DEBUG match => match_13
  if (best_te_1624 == 0)
    goto <bb 325>;
  else
    goto <bb 328>;
  # SUCC: 325 [29.0%]  (true,exec) 328 [71.0%]  (false,exec)

  # BLOCK 325 freq:8
  # PRED: 324 [29.0%]  (true,exec)
  D.45107_826 = switch_media_handle_test_media_flag (smh_186, 8);
  if (D.45107_826 != 0)
    goto <bb 327>;
  else
    goto <bb 326>;
  # SUCC: 327 [50.0%]  (true,exec) 326 [50.0%]  (false,exec)

  # BLOCK 326 freq:4
  # PRED: 325 [50.0%]  (false,exec)
  D.44530_827 = session_161(D)->channel;
  D.45109_828 = switch_channel_test_flag (D.44530_827, 93);
  if (D.45109_828 != 0)
    goto <bb 327>;
  else
    goto <bb 333>;
  # SUCC: 327 [50.0%]  (true,exec) 333 [50.0%]  (false,exec)

  # BLOCK 327 freq:6
  # PRED: 325 [50.0%]  (true,exec) 326 [50.0%]  (true,exec)
  D.44471_829 = smh_186->mparams;
  D.45110_830 = D.44471_829->te;
  D.45111_831 = (int) D.45110_830;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3609, session_161(D), 7, "No 2833 in SDP. Liberal DTMF mode adding %d as telephone-event.\n", D.45111_831);
  D.44471_832 = smh_186->mparams;
  best_te_833 = D.44471_832->te;
  # DEBUG best_te => best_te_833
  # DEBUG best_te => best_te_833
  if (best_te_833 != 0)
    goto <bb 328>;
  else
    goto <bb 333>;
  # SUCC: 328 (true,exec) 333 [100.0%]  (false,exec)

  # BLOCK 328 freq:13
  # PRED: 327 (true,exec) 324 [71.0%]  (false,exec)
  # best_te_1860 = PHI <best_te_833(327), best_te_1624(324)>
  D.45114_834 = switch_channel_direction (channel_162);
  if (D.45114_834 == 1)
    goto <bb 329>;
  else
    goto <bb 331>;
  # SUCC: 329 [28.0%]  (true,exec) 331 [72.0%]  (false,exec)

  # BLOCK 329 freq:4
  # PRED: 328 [28.0%]  (true,exec)
  D.44471_835 = smh_186->mparams;
  D.44471_835->te = best_te_1860;
  # DEBUG D#11 => D.44471_835->te
  # DEBUG te => D#11
  D.44857_837 = (int) best_te_1860;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3617, session_161(D), 7, "Set 2833 dtmf send payload to %u\n", D.44857_837);
  D.44530_838 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_838, "dtmf_type", "rfc2833", 1);
  D.44471_839 = smh_186->mparams;
  D.44471_839->dtmf_type = 0;
  D.44605_840 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_840 != 0B)
    goto <bb 330>;
  else
    goto <bb 427>;
  # SUCC: 330 [69.8%]  (true,exec) 427 [30.2%]  (false,exec)

  # BLOCK 330 freq:3
  # PRED: 329 [69.8%]  (true,exec)
  switch_rtp_set_telephony_event (D.44605_840, best_te_1860);
  D.44530_842 = session_161(D)->channel;
  switch_channel_set_variable_printf (D.44530_842, "rtp_2833_send_payload", "%d", D.44857_837);
  goto <bb 427>;
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 331 freq:10
  # PRED: 328 [72.0%]  (false,exec)
  D.44471_845 = smh_186->mparams;
  D.44471_845->te = best_te_1860;
  D.44471_845->recv_te = best_te_1860;
  # DEBUG te => best_te_1860
  D.45120_848 = (int) best_te_1860;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3626, session_161(D), 7, "Set 2833 dtmf send/recv payload to %u\n", D.45120_848);
  D.44530_849 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_849, "dtmf_type", "rfc2833", 1);
  D.44471_850 = smh_186->mparams;
  D.44471_850->dtmf_type = 0;
  D.44605_851 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_851 != 0B)
    goto <bb 332>;
  else
    goto <bb 427>;
  # SUCC: 332 [69.8%]  (true,exec) 427 [30.2%]  (false,exec)

  # BLOCK 332 freq:7
  # PRED: 331 [69.8%]  (true,exec)
  switch_rtp_set_telephony_event (D.44605_851, best_te_1860);
  D.44530_853 = session_161(D)->channel;
  switch_channel_set_variable_printf (D.44530_853, "rtp_2833_send_payload", "%d", D.45120_848);
  D.44605_855 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_telephony_recv_event (D.44605_855, best_te_1860);
  D.44530_856 = session_161(D)->channel;
  switch_channel_set_variable_printf (D.44530_856, "rtp_2833_recv_payload", "%d", D.45120_848);
  goto <bb 427>;
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 333 freq:13
  # PRED: 327 [100.0%]  (false,exec) 326 [50.0%]  (false,exec)
  D.45124_858 = switch_channel_get_variable_dup (channel_162, "rtp_info_when_no_2833", 1, -1);
  # DEBUG expr => D.45124_858
  if (D.45124_858 != 0B)
    goto <bb 334>;
  else
    goto <bb 443>;
  # SUCC: 334 [85.0%]  (true,exec) 443 [15.0%]  (false,exec)

  # BLOCK 334 freq:11
  # PRED: 333 [85.0%]  (true,exec)
  D.49735_1600 = strcasecmp (D.45124_858, "no");
  if (D.49735_1600 == 0)
    goto <bb 343>;
  else
    goto <bb 335>;
  # SUCC: 343 [39.0%]  (true,exec) 335 [61.0%]  (false,exec)

  # BLOCK 335 freq:7
  # PRED: 334 [61.0%]  (false,exec)
  D.49736_1601 = strcasecmp (D.45124_858, "off");
  if (D.49736_1601 == 0)
    goto <bb 343>;
  else
    goto <bb 336>;
  # SUCC: 343 [39.0%]  (true,exec) 336 [61.0%]  (false,exec)

  # BLOCK 336 freq:4
  # PRED: 335 [61.0%]  (false,exec)
  D.49737_1602 = strcasecmp (D.45124_858, "false");
  if (D.49737_1602 == 0)
    goto <bb 343>;
  else
    goto <bb 337>;
  # SUCC: 343 [39.0%]  (true,exec) 337 [61.0%]  (false,exec)

  # BLOCK 337 freq:3
  # PRED: 336 [61.0%]  (false,exec)
  D.49738_1603 = strcasecmp (D.45124_858, "f");
  if (D.49738_1603 == 0)
    goto <bb 343>;
  else
    goto <bb 338>;
  # SUCC: 343 [39.0%]  (true,exec) 338 [61.0%]  (false,exec)

  # BLOCK 338 freq:2
  # PRED: 337 [61.0%]  (false,exec)
  D.49739_1604 = strcasecmp (D.45124_858, "disabled");
  if (D.49739_1604 == 0)
    goto <bb 343>;
  else
    goto <bb 339>;
  # SUCC: 343 [39.0%]  (true,exec) 339 [61.0%]  (false,exec)

  # BLOCK 339 freq:1
  # PRED: 338 [61.0%]  (false,exec)
  D.49740_1605 = strcasecmp (D.45124_858, "inactive");
  if (D.49740_1605 == 0)
    goto <bb 343>;
  else
    goto <bb 340>;
  # SUCC: 343 [39.0%]  (true,exec) 340 [61.0%]  (false,exec)

  # BLOCK 340 freq:1
  # PRED: 339 [61.0%]  (false,exec)
  D.49741_1606 = strcasecmp (D.45124_858, "disallow");
  if (D.49741_1606 == 0)
    goto <bb 343>;
  else
    goto <bb 341>;
  # SUCC: 343 [61.0%]  (true,exec) 341 [39.0%]  (false,exec)

  # BLOCK 341
  # PRED: 340 [39.0%]  (false,exec)
  D.49742_1607 = switch_is_number (D.45124_858);
  if (D.49742_1607 != 0)
    goto <bb 342>;
  else
    goto <bb 443>;
  # SUCC: 342 [29.0%]  (true,exec) 443 [71.0%]  (false,exec)

  # BLOCK 342
  # PRED: 341 [29.0%]  (true,exec)
  # DEBUG __nptr => D.45124_858
  D.49743_1608 = strtol (D.45124_858, 0B, 10);
  if (D.49743_1608 == 0)
    goto <bb 343>;
  else
    goto <bb 443>;
  # SUCC: 343 [39.0%]  (true,exec) 443 [61.0%]  (false,exec)

  # BLOCK 343 freq:4
  # PRED: 334 [39.0%]  (true,exec) 335 [39.0%]  (true,exec) 336 [39.0%]  (true,exec) 337 [39.0%]  (true,exec) 338 [39.0%]  (true,exec) 339 [39.0%]  (true,exec) 340 [61.0%]  (true,exec) 342 [39.0%]  (true,exec)
  D.44530_866 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_866, "dtmf_type", "none", 1);
  D.44471_867 = smh_186->mparams;
  D.44471_867->dtmf_type = 2;
  D.44471_867->te = 0;
  D.44471_867->recv_te = 0;
  # DEBUG D#13 => D.44471_867->recv_te
  # DEBUG te => D#13
  goto <bb 427>;
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 344 freq:197
  # PRED: 168 [67.5%]  (false,exec)
  if (prephitmp.1049_1814 == 3)
    goto <bb 345>;
  else
    goto <bb 427>;
  # SUCC: 345 [44.2%]  (true,exec) 427 [55.8%]  (false,exec)

  # BLOCK 345 freq:87
  # PRED: 344 [44.2%]  (true,exec)
  D.44697_873 = m_1764->m_port;
  if (D.44697_873 != 0)
    goto <bb 346>;
  else
    goto <bb 427>;
  # SUCC: 346 [29.0%]  (true,exec) 427 [71.0%]  (false,exec)

  # BLOCK 346 freq:25
  # PRED: 345 [29.0%]  (true,exec)
  # DEBUG mimp => 0B
  # DEBUG vmatch => 0
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0
  memset (&matches, 0, 480);
  memset (&near_matches, 0, 480);
  D.44530_878 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_878, "video_possible", "true", 1);
  connection_879 = sdp_198->sdp_connection;
  # DEBUG connection => connection_879
  connection_880 = m_1764->m_connections;
  if (connection_880 != 0B)
    goto <bb 349>;
  else
    goto <bb 347>;
  # SUCC: 349 [85.0%]  (true,exec) 347 [15.0%]  (false,exec)

  # BLOCK 347 freq:4
  # PRED: 346 [15.0%]  (false,exec)
  # DEBUG connection => connection_879
  if (connection_879 == 0B)
    goto <bb 348>;
  else
    goto <bb 349>;
  # SUCC: 348 [12.5%]  (true,exec) 349 [87.5%]  (false,exec)

  # BLOCK 348 freq:1
  # PRED: 347 [12.5%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3669, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 349 freq:25
  # PRED: 347 [87.5%]  (false,exec) 346 [85.0%]  (true,exec)
  # connection_110 = PHI <connection_879(347), connection_880(346)>
  map_883 = m_1764->m_rtpmaps;
  # DEBUG map => map_883
  # DEBUG map => map_883
  # DEBUG m_idx => 0
  # DEBUG got_video_crypto => got_video_crypto_1674
  if (map_883 != 0B)
    goto <bb 350>;
  else
    goto <bb 408>;
  # SUCC: 350 [95.5%]  (true,exec) 408 [4.5%]  (false,exec)

  # BLOCK 350 freq:453
  # PRED: 349 [95.5%]  (true,exec) 407 [95.5%]  (true,exec)
  # got_video_crypto_556 = PHI <got_video_crypto_1674(349), got_video_crypto_960(407)>
  # m_idx_819 = PHI <0(349), m_idx_953(407)>
  # map_1620 = PHI <map_883(349), map_1021(407)>
  D.45137_884 = switch_rtp_has_dtls ();
  if (D.45137_884 != 0)
    goto <bb 351>;
  else
    goto <bb 359>;
  # SUCC: 351 [29.0%]  (true,exec) 359 [71.0%]  (false,exec)

  # BLOCK 351 freq:131
  # PRED: 350 [29.0%]  (true,exec)
  D.45140_885 = dtls_ok (session_161(D));
  if (D.45140_885 != 0)
    goto <bb 352>;
  else
    goto <bb 359>;
  # SUCC: 352 [50.0%]  (true,exec) 359 [50.0%]  (false,exec)

  # BLOCK 352 freq:66
  # PRED: 351 [50.0%]  (true,exec)
  attr_886 = m_1764->m_attributes;
  # DEBUG attr => attr_886
  # DEBUG got_video_crypto => got_video_crypto_556
  # DEBUG attr => attr_886
  if (attr_886 != 0B)
    goto <bb 353>;
  else
    goto <bb 391>;
  # SUCC: 353 [91.0%]  (true,exec) 391 [9.0%]  (false,exec)

  # BLOCK 353 freq:60
  # PRED: 352 [91.0%]  (true,exec)
  # attr_1791 = PHI <attr_886(352)>
  # got_video_crypto_2125 = PHI <got_video_crypto_556(352)>
  # SUCC: 354 [100.0%]  (fallthru)

  # BLOCK 354 freq:665
  # PRED: 353 [100.0%]  (fallthru) 358 [91.0%]  (true,exec)
  # attr_1850 = PHI <attr_1791(353), attr_892(358)>
  # got_video_crypto_1738 = PHI <got_video_crypto_2125(353), got_video_crypto_57(358)>
  D.44590_887 = attr_1850->a_name;
  D.45143_888 = strcasecmp (D.44590_887, "fingerprint");
  if (D.45143_888 == 0)
    goto <bb 355>;
  else
    goto <bb 358>;
  # SUCC: 355 [50.0%]  (true,exec) 358 [50.0%]  (false,exec)

  # BLOCK 355 freq:332
  # PRED: 354 [50.0%]  (true,exec)
  D.44619_889 = attr_1850->a_value;
  # DEBUG s => D.44619_889
  if (D.44619_889 == 0B)
    goto <bb 358>;
  else
    goto <bb 356>;
  # SUCC: 358 [15.0%]  (true,exec) 356 [85.0%]  (false,exec)

  # BLOCK 356 freq:283
  # PRED: 355 [85.0%]  (false,exec)
  D.47939_1495 = *D.44619_889;
  if (D.47939_1495 == 0)
    goto <bb 357>;
  else
    goto <bb 358>;
  # SUCC: 357 [50.0%]  (true,exec) 358 [50.0%]  (false,exec)

  # BLOCK 357 freq:142
  # PRED: 356 [50.0%]  (true,exec)
  # SUCC: 358 [100.0%]  (fallthru,exec)

  # BLOCK 358 freq:665
  # PRED: 354 [50.0%]  (false,exec) 357 [100.0%]  (fallthru,exec) 356 [50.0%]  (false,exec) 355 [15.0%]  (true,exec)
  # got_video_crypto_57 = PHI <got_video_crypto_1738(354), got_video_crypto_1738(357), 1(356), got_video_crypto_1738(355)>
  # DEBUG got_video_crypto => got_video_crypto_57
  attr_892 = attr_1850->a_next;
  # DEBUG attr => attr_892
  # DEBUG got_video_crypto => got_video_crypto_57
  # DEBUG attr => attr_892
  if (attr_892 != 0B)
    goto <bb 354>;
  else
    goto <bb 450>;
  # SUCC: 354 [91.0%]  (true,exec) 450 [9.0%]  (false,exec)

  # BLOCK 359 freq:387
  # PRED: 350 [71.0%]  (false,exec) 351 [50.0%]  (false,exec)
  # DEBUG got_video_crypto => got_video_crypto_556
  attr_893 = m_1764->m_attributes;
  # DEBUG attr => attr_893
  # DEBUG got_video_crypto => got_video_crypto_556
  # DEBUG attr => attr_893
  if (attr_893 != 0B)
    goto <bb 450>;
  else
    goto <bb 391>;
  # SUCC: 450 [96.3%]  (true,exec) 391 [3.7%]  (false,exec)

  # BLOCK 360 freq:9550
  # PRED: 450 [100.0%]  (fallthru,exec) 390 [95.5%]  (true,exec)
  # attr_619 = PHI <attr_1162(450), attr_978(390)>
  # got_video_crypto_1885 = PHI <got_video_crypto_743(450), got_video_crypto_60(390)>
  D.44590_894 = attr_619->a_name;
  D.45151_895 = strcasecmp (D.44590_894, "framerate");
  if (D.45151_895 == 0)
    goto <bb 361>;
  else
    goto <bb 362>;
  # SUCC: 361 [50.0%]  (true,exec) 362 [50.0%]  (false,exec)

  # BLOCK 361 freq:4775
  # PRED: 360 [50.0%]  (true,exec)
  D.44619_896 = attr_619->a_value;
  if (D.44619_896 != 0B)
    goto <bb 390>;
  else
    goto <bb 362>;
  # SUCC: 390 [85.0%]  (true,exec) 362 [15.0%]  (false,exec)

  # BLOCK 362 freq:5491
  # PRED: 360 [50.0%]  (false,exec) 361 [15.0%]  (false,exec)
  D.45154_898 = strcasecmp (D.44590_894, "rtcp-fb");
  if (D.45154_898 == 0)
    goto <bb 363>;
  else
    goto <bb 367>;
  # SUCC: 363 [50.0%]  (true,exec) 367 [50.0%]  (false,exec)

  # BLOCK 363 freq:2746
  # PRED: 362 [50.0%]  (true,exec)
  D.44619_899 = attr_619->a_value;
  # DEBUG s => D.44619_899
  if (D.44619_899 == 0B)
    goto <bb 390>;
  else
    goto <bb 364>;
  # SUCC: 390 [15.0%]  (true,exec) 364 [85.0%]  (false,exec)

  # BLOCK 364 freq:2334
  # PRED: 363 [85.0%]  (false,exec)
  D.47943_1497 = *D.44619_899;
  if (D.47943_1497 == 0)
    goto <bb 390>;
  else
    goto <bb 444>;
  # SUCC: 390 [50.0%]  (true,exec) 444 [50.0%]  (false,exec)

  # BLOCK 365 freq:677
  # PRED: 444 [85.0%]  (true,exec)
Invalid sum of incoming frequencies 992, should be 677
  D.45163_903 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir;
  D.45164_904 = D.45163_903 + 1;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir = D.45164_904;
  # SUCC: 366 [100.0%]  (fallthru,exec)

  # BLOCK 366 freq:796
  # PRED: 444 [15.0%]  (false,exec) 365 [100.0%]  (fallthru,exec)
  D.44471_905 = smh_186->mparams;
  D.44471_905->rtcp_video_interval_msec = "10000";
  goto <bb 390>;
  # SUCC: 390 [100.0%]  (fallthru,exec)

  # BLOCK 367 freq:2746
  # PRED: 362 [50.0%]  (false,exec)
  D.45168_907 = strcasecmp (D.44590_894, "rtcp");
  if (D.45168_907 == 0)
    goto <bb 368>;
  else
    goto <bb 373>;
  # SUCC: 368 [50.0%]  (true,exec) 373 [50.0%]  (false,exec)

  # BLOCK 368 freq:1373
  # PRED: 367 [50.0%]  (true,exec)
  D.44619_908 = attr_619->a_value;
  if (D.44619_908 != 0B)
    goto <bb 369>;
  else
    goto <bb 373>;
  # SUCC: 369 [85.0%]  (true,exec) 373 [15.0%]  (false,exec)

  # BLOCK 369 freq:1167
  # PRED: 368 [85.0%]  (true,exec)
  # DEBUG __s2_len => 1
  # DEBUG __s1 => D.44619_908
  D.45174_911 = MEM[(const unsigned char *)D.44619_908];
  # DEBUG D#78 => (int) D.45174_911
  # DEBUG __result => D#78 + -49
  if (D.45174_911 == 49)
    goto <bb 370>;
  else
    goto <bb 373>;
  # SUCC: 370 [50.0%]  (true,exec) 373 [50.0%]  (false,exec)

  # BLOCK 370 freq:583
  # PRED: 369 [50.0%]  (true,exec)
  D.45185_921 = MEM[(const unsigned char *)D.44619_908 + 1B];
  # DEBUG D#79 => (int) D.45185_921
  # DEBUG __result => D#79
  # DEBUG __result => D#79
  if (D.45185_921 == 0)
    goto <bb 371>;
  else
    goto <bb 373>;
  # SUCC: 371 [58.0%]  (true,exec) 373 [42.0%]  (false,exec)

  # BLOCK 371 freq:338
  # PRED: 370 [58.0%]  (true,exec)
  D.44530_952 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_952, "rtp_remote_video_rtcp_port", D.44619_908, 1);
  D.44619_954 = attr_619->a_value;
  # DEBUG __nptr => D.44619_954
  D.47946_1499 = strtol (D.44619_954, 0B, 10);
  D.45213_956 = (short unsigned int) D.47946_1499;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].remote_rtcp_port = D.45213_956;
  D.44471_957 = smh_186->mparams;
  D.45214_958 = D.44471_957->rtcp_video_interval_msec;
  if (D.45214_958 == 0B)
    goto <bb 372>;
  else
    goto <bb 390>;
  # SUCC: 372 [15.0%]  (true,exec) 390 [85.0%]  (false,exec)

  # BLOCK 372 freq:51
  # PRED: 371 [15.0%]  (true,exec)
  D.44471_957->rtcp_video_interval_msec = "5000";
  goto <bb 390>;
  # SUCC: 390 [100.0%]  (fallthru,exec)

  # BLOCK 373 freq:2407
  # PRED: 367 [50.0%]  (false,exec) 368 [15.0%]  (false,exec) 370 [42.0%]  (false,exec) 369 [50.0%]  (false,exec)
  if (got_video_crypto_1885 == 0)
    goto <bb 374>;
  else
    goto <bb 390>;
  # SUCC: 374 [50.0%]  (true,exec) 390 [50.0%]  (false,exec)

  # BLOCK 374 freq:1204
  # PRED: 373 [50.0%]  (true,exec)
  D.45219_961 = strcasecmp (D.44590_894, "crypto");
  if (D.45219_961 == 0)
    goto <bb 375>;
  else
    goto <bb 390>;
  # SUCC: 375 [50.0%]  (true,exec) 390 [50.0%]  (false,exec)

  # BLOCK 375 freq:602
  # PRED: 374 [50.0%]  (true,exec)
  prephitmp.1031_962 = attr_619->a_value;
  # DEBUG s => prephitmp.1031_962
  if (prephitmp.1031_962 == 0B)
    goto <bb 390>;
  else
    goto <bb 376>;
  # SUCC: 390 [15.0%]  (true,exec) 376 [85.0%]  (false,exec)

  # BLOCK 376 freq:512
  # PRED: 375 [85.0%]  (false,exec)
  D.47950_1500 = *prephitmp.1031_962;
  if (D.47950_1500 == 0)
    goto <bb 390>;
  else
    goto <bb 445>;
  # SUCC: 390 [50.0%]  (true,exec) 445 [50.0%]  (false,exec)

  # BLOCK 377 freq:150
  # PRED: 445 [50.0%]  (true,exec)
  D.44530_967 = session_161(D)->channel;
  D.45227_968 = switch_channel_get_variable_dup (D.44530_967, "rtp_allow_crypto_in_avp", 1, -1);
  # DEBUG expr => D.45227_968
  if (D.45227_968 != 0B)
    goto <bb 378>;
  else
    goto <bb 446>;
  # SUCC: 378 [85.0%]  (true,exec) 446 [15.0%]  (false,exec)

  # BLOCK 378 freq:128
  # PRED: 377 [85.0%]  (true,exec)
  D.49747_1610 = strcasecmp (D.45227_968, "yes");
  if (D.49747_1610 == 0)
    goto <bb 387>;
  else
    goto <bb 379>;
  # SUCC: 387 [39.0%]  (true,exec) 379 [61.0%]  (false,exec)

  # BLOCK 379 freq:78
  # PRED: 378 [61.0%]  (false,exec)
  D.49748_1611 = strcasecmp (D.45227_968, "on");
  if (D.49748_1611 == 0)
    goto <bb 387>;
  else
    goto <bb 380>;
  # SUCC: 387 [39.0%]  (true,exec) 380 [61.0%]  (false,exec)

  # BLOCK 380 freq:48
  # PRED: 379 [61.0%]  (false,exec)
  D.49749_1612 = strcasecmp (D.45227_968, "true");
  if (D.49749_1612 == 0)
    goto <bb 387>;
  else
    goto <bb 381>;
  # SUCC: 387 [39.0%]  (true,exec) 381 [61.0%]  (false,exec)

  # BLOCK 381 freq:29
  # PRED: 380 [61.0%]  (false,exec)
  D.49750_1613 = strcasecmp (D.45227_968, "t");
  if (D.49750_1613 == 0)
    goto <bb 387>;
  else
    goto <bb 382>;
  # SUCC: 387 [39.0%]  (true,exec) 382 [61.0%]  (false,exec)

  # BLOCK 382 freq:18
  # PRED: 381 [61.0%]  (false,exec)
  D.49751_1614 = strcasecmp (D.45227_968, "enabled");
  if (D.49751_1614 == 0)
    goto <bb 387>;
  else
    goto <bb 383>;
  # SUCC: 387 [39.0%]  (true,exec) 383 [61.0%]  (false,exec)

  # BLOCK 383 freq:11
  # PRED: 382 [61.0%]  (false,exec)
  D.49752_1615 = strcasecmp (D.45227_968, "active");
  if (D.49752_1615 == 0)
    goto <bb 387>;
  else
    goto <bb 384>;
  # SUCC: 387 [39.0%]  (true,exec) 384 [61.0%]  (false,exec)

  # BLOCK 384 freq:7
  # PRED: 383 [61.0%]  (false,exec)
  D.49753_1616 = strcasecmp (D.45227_968, "allow");
  if (D.49753_1616 == 0)
    goto <bb 387>;
  else
    goto <bb 385>;
  # SUCC: 387 [61.0%]  (true,exec) 385 [39.0%]  (false,exec)

  # BLOCK 385 freq:3
  # PRED: 384 [39.0%]  (false,exec)
  D.49754_1617 = switch_is_number (D.45227_968);
  if (D.49754_1617 != 0)
    goto <bb 386>;
  else
    goto <bb 446>;
  # SUCC: 386 [29.0%]  (true,exec) 446 [71.0%]  (false,exec)

  # BLOCK 386 freq:1
  # PRED: 385 [29.0%]  (true,exec)
  # DEBUG __nptr => D.45227_968
  D.49755_1618 = strtol (D.45227_968, 0B, 10);
  if (D.49755_1618 != 0)
    goto <bb 387>;
  else
    goto <bb 446>;
  # SUCC: 387 [39.0%]  (true,exec) 446 [61.0%]  (false,exec)

  # BLOCK 387 freq:50
  # PRED: 378 [39.0%]  (true,exec) 379 [39.0%]  (true,exec) 380 [39.0%]  (true,exec) 381 [39.0%]  (true,exec) 382 [39.0%]  (true,exec) 383 [39.0%]  (true,exec) 384 [61.0%]  (true,exec) 386 [39.0%]  (true,exec)
Invalid sum of outgoing probabilities 0.0%
  prephitmp.1031_1889 = attr_619->a_value;
  goto <bb 389>;
  # SUCC: 389 (fallthru,exec)

  # BLOCK 388 freq:3
  # PRED: 446 [4.5%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3711, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");
  # DEBUG match => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 389 freq:298
  # PRED: 445 [50.0%]  (false,exec) 387 (fallthru,exec) 447 [100.0%]  (fallthru,exec)
Invalid sum of incoming frequencies 153, should be 298
  # prephitmp.1031_1812 = PHI <prephitmp.1031_962(445), prephitmp.1031_1889(387), prephitmp.1031_1890(447)>
  # DEBUG crypto => prephitmp.1031_1812
  # DEBUG __nptr => prephitmp.1031_1812
  crypto_tag_1502 = strtol (prephitmp.1031_1812, 0B, 10);
  # DEBUG crypto_tag => NULL
  got_video_crypto_977 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_video_crypto", 1, prephitmp.1031_1812, crypto_tag_1502, sdp_type_546(D));
  # DEBUG got_video_crypto => got_video_crypto_977
  # SUCC: 390 [100.0%]  (fallthru,exec)

  # BLOCK 390 freq:9547
  # PRED: 361 [85.0%]  (true,exec) 366 [100.0%]  (fallthru,exec) 372 [100.0%]  (fallthru,exec) 373 [50.0%]  (false,exec) 374 [50.0%]  (false,exec) 376 [50.0%]  (true,exec) 389 [100.0%]  (fallthru,exec) 364 [50.0%]  (true,exec) 371 [85.0%]  (false,exec) 363 [15.0%]  (true,exec) 375 [15.0%]  (true,exec)
Invalid sum of incoming frequencies 9222, should be 9547
  # got_video_crypto_60 = PHI <got_video_crypto_1885(361), got_video_crypto_1885(366), got_video_crypto_1885(372), got_video_crypto_1885(373), got_video_crypto_1885(374), got_video_crypto_1885(376), got_video_crypto_977(389), got_video_crypto_1885(364), got_video_crypto_1885(371), got_video_crypto_1885(363), got_video_crypto_1885(375)>
  # DEBUG got_video_crypto => got_video_crypto_60
  attr_978 = attr_619->a_next;
  # DEBUG attr => attr_978
  # DEBUG got_video_crypto => got_video_crypto_60
  # DEBUG attr => attr_978
  if (attr_978 != 0B)
    goto <bb 360>;
  else
    goto <bb 391>;
  # SUCC: 360 [95.5%]  (true,exec) 391 [4.5%]  (false,exec)

  # BLOCK 391 freq:450
  # PRED: 390 [4.5%]  (false,exec) 359 [3.7%]  (false,exec) 352 [9.0%]  (false,exec)
  # got_video_crypto_960 = PHI <got_video_crypto_60(390), got_video_crypto_556(359), got_video_crypto_556(352)>
  rm_encoding_979 = map_1620->rm_encoding;
  # DEBUG rm_encoding => rm_encoding_979
  if (rm_encoding_979 == 0B)
    goto <bb 393>;
  else
    goto <bb 392>;
  # SUCC: 393 [15.0%]  (true,exec) 392 [85.0%]  (false,exec)

  # BLOCK 392 freq:383
  # PRED: 391 [85.0%]  (false,exec)
  # SUCC: 393 [100.0%]  (fallthru,exec)

  # BLOCK 393 freq:450
  # PRED: 392 [100.0%]  (fallthru,exec) 391 [15.0%]  (true,exec)
  # rm_encoding_137 = PHI <rm_encoding_979(392), ""(391)>
  # DEBUG rm_encoding => rm_encoding_137
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG m_idx => m_idx_819
  if (total_codecs_85 > 0)
    goto <bb 394>;
  else
    goto <bb 407>;
  # SUCC: 394 [91.0%]  (true,exec) 407 [9.0%]  (false,exec)

  # BLOCK 394 freq:410
  # PRED: 393 [91.0%]  (true,exec)
  ivtmp.1090_544 = (unsigned int) codec_array_84;
  # SUCC: 395 [100.0%]  (fallthru,exec)

  # BLOCK 395 freq:4550
  # PRED: 406 [91.0%]  (true,exec) 394 [100.0%]  (fallthru,exec)
  # m_idx_910 = PHI <m_idx_109(406), m_idx_819(394)>
  # i_864 = PHI <i_1020(406), 0(394)>
  # ivtmp.1090_136 = PHI <ivtmp.1090_62(406), ivtmp.1090_544(394)>
  D.49988_872 = (void *) ivtmp.1090_136;
  imp_985 = MEM[base: D.49988_872, offset: 0B];
  ivtmp.1090_62 = ivtmp.1090_136 + 4;
  # DEBUG imp => imp_985
  D.45238_986 = imp_985->codec_type;
  if (D.45238_986 != 1)
    goto <bb 406>;
  else
    goto <bb 396>;
  # SUCC: 406 [86.3%]  (true,exec) 396 [13.7%]  (false,exec)

  # BLOCK 396 freq:624
  # PRED: 395 [13.7%]  (false,exec)
  D.44530_987 = session_161(D)->channel;
  D.45241_988 = switch_channel_direction (D.44530_987);
  if (D.45241_988 == 0)
    goto <bb 397>;
  else
    goto <bb 398>;
  # SUCC: 397 [50.0%]  (true,exec) 398 [50.0%]  (false,exec)

  # BLOCK 397 freq:312
  # PRED: 396 [50.0%]  (true,exec)
  D.44530_989 = session_161(D)->channel;
  D.45244_990 = switch_channel_test_flag (D.44530_989, 114);
  if (D.45244_990 != 0)
    goto <bb 406>;
  else
    goto <bb 398>;
  # SUCC: 406 [50.0%]  (true,exec) 398 [50.0%]  (false,exec)

  # BLOCK 398 freq:468
  # PRED: 396 [50.0%]  (false,exec) 397 [50.0%]  (false,exec)
  D.45247_991 = map_1620->rm_pt;
  D.45248_992 = (int) D.45247_991;
  D.45249_993 = imp_985->iananame;
  D.45250_994 = imp_985->ianacode;
  D.45251_995 = (int) D.45250_994;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3743, session_161(D), 7, "Video Codec Compare [%s:%d]/[%s:%d]\n", rm_encoding_137, D.45248_992, D.45249_993, D.45251_995);
  D.45255_996 = map_1620->rm_encoding;
  # DEBUG s => D.45255_996
  if (D.45255_996 == 0B)
    goto <bb 400>;
  else
    goto <bb 399>;
  # SUCC: 400 [15.0%]  (true,exec) 399 [85.0%]  (false,exec)

  # BLOCK 399 freq:398
  # PRED: 398 [85.0%]  (false,exec)
  D.47957_1503 = *D.45255_996;
  if (D.47957_1503 == 0)
    goto <bb 400>;
  else
    goto <bb 448>;
  # SUCC: 400 [50.0%]  (true,exec) 448 [50.0%]  (false,exec)

  # BLOCK 400 freq:351
  # PRED: 399 [50.0%]  (true,exec) 448 [50.0%]  (true,exec) 398 [15.0%]  (true,exec)
  D.45247_1003 = map_1620->rm_pt;
  D.45248_1004 = (int) D.45247_1003;
  if (D.45248_1004 <= 95)
    goto <bb 401>;
  else
    goto <bb 402>;
  # SUCC: 401 [50.0%]  (true,exec) 402 [50.0%]  (false,exec)

  # BLOCK 401 freq:175
  # PRED: 400 [50.0%]  (true,exec)
  D.45250_1007 = imp_985->ianacode;
  D.45251_1008 = (int) D.45250_1007;
  vmatch_1009 = D.45248_1004 == D.45251_1008;
  # DEBUG vmatch => vmatch_1009
  goto <bb 403>;
  # SUCC: 403 [100.0%]  (fallthru,exec)

  # BLOCK 402 freq:292
  # PRED: 448 [50.0%]  (false,exec) 400 [50.0%]  (false,exec)
  D.45249_1010 = imp_985->iananame;
  D.45259_1011 = strcasecmp (rm_encoding_137, D.45249_1010);
  vmatch_1012 = D.45259_1011 == 0;
  # DEBUG vmatch => vmatch_1012
  # SUCC: 403 [100.0%]  (fallthru,exec)

  # BLOCK 403 freq:468
  # PRED: 401 [100.0%]  (fallthru,exec) 402 [100.0%]  (fallthru,exec)
  # vmatch_138 = PHI <vmatch_1009(401), vmatch_1012(402)>
  # DEBUG vmatch => vmatch_138
  if (vmatch_138 != 0)
    goto <bb 404>;
  else
    goto <bb 406>;
  # SUCC: 404 [50.0%]  (true,exec) 406 [50.0%]  (false,exec)

  # BLOCK 404 freq:234
  # PRED: 403 [50.0%]  (true,exec)
  D.45262_1013 = map_1620->rm_rate;
  D.45263_1014 = imp_985->samples_per_second;
  if (D.45262_1013 == D.45263_1014)
    goto <bb 405>;
  else
    goto <bb 406>;
  # SUCC: 405 [13.7%]  (true,exec) 406 [86.3%]  (false,exec)

  # BLOCK 405 freq:32
  # PRED: 404 [13.7%]  (true,exec)
  matches[m_idx_910].imp = imp_985;
  matches[m_idx_910].map = map_1620;
  D.45249_1015 = imp_985->iananame;
  D.45250_1016 = imp_985->ianacode;
  D.45251_1017 = (int) D.45250_1016;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3756, session_161(D), 7, "Video Codec Compare [%s:%d] +++ is saved as a match\n", D.45249_1015, D.45251_1017);
  m_idx_1018 = m_idx_910 + 1;
  # DEBUG m_idx => m_idx_1018
  # SUCC: 406 [100.0%]  (fallthru,exec)

  # BLOCK 406 freq:4550
  # PRED: 395 [86.3%]  (true,exec) 397 [50.0%]  (true,exec) 404 [86.3%]  (false,exec) 403 [50.0%]  (false,exec) 405 [100.0%]  (fallthru,exec)
  # m_idx_109 = PHI <m_idx_910(395), m_idx_910(397), m_idx_910(404), m_idx_910(403), m_idx_1018(405)>
  # DEBUG m_idx => m_idx_109
  i_1020 = i_864 + 1;
  # DEBUG i => i_1020
  # DEBUG i => i_1020
  # DEBUG m_idx => m_idx_109
  if (i_1020 != total_codecs_85)
    goto <bb 395>;
  else
    goto <bb 407>;
  # SUCC: 395 [91.0%]  (true,exec) 407 [9.0%]  (false,exec)

  # BLOCK 407 freq:450
  # PRED: 406 [9.0%]  (false,exec) 393 [9.0%]  (false,exec)
  # m_idx_953 = PHI <m_idx_109(406), m_idx_819(393)>
  map_1021 = map_1620->rm_next;
  # DEBUG map => map_1021
  # DEBUG map => map_1021
  # DEBUG m_idx => m_idx_953
  # DEBUG got_video_crypto => got_video_crypto_960
  if (map_1021 != 0B)
    goto <bb 350>;
  else
    goto <bb 408>;
  # SUCC: 350 [95.5%]  (true,exec) 408 [4.5%]  (false,exec)

  # BLOCK 408 freq:21
  # PRED: 407 [4.5%]  (false,exec) 349 [4.5%]  (false,exec)
  # got_video_crypto_959 = PHI <got_video_crypto_960(407), got_video_crypto_1674(349)>
  # m_idx_906 = PHI <m_idx_953(407), 0(349)>
  D.45001_1022 = smh_186->crypto_mode;
  D.45002_1023 = D.45001_1022 == 1;
  D.45266_1024 = got_video_crypto_959 <= 0;
  D.45267_1025 = D.45266_1024 & D.45002_1023;
  if (D.45267_1025 != 0)
    goto <bb 409>;
  else
    goto <bb 410>;
  # SUCC: 409 [29.0%]  (true,exec) 410 [71.0%]  (false,exec)

  # BLOCK 409 freq:6
  # PRED: 408 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3766, session_161(D), 4, "Crypto not negotiated but required.\n");
  # DEBUG vmatch => 0
  # DEBUG m_idx => 0
  # DEBUG m_idx => 0
  goto <bb 427>;
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 410 freq:15
  # PRED: 408 [71.0%]  (false,exec)
  # DEBUG m_idx => m_idx_906
  if (m_idx_906 != 0)
    goto <bb 411>;
  else
    goto <bb 427>;
  # SUCC: 411 [70.0%]  (true,exec) 427 [30.0%]  (false,exec)

  # BLOCK 411 freq:11
  # PRED: 410 [70.0%]  (true,exec)
  # DEBUG j => 0
  if (greedy_47 != 0)
    goto <bb 412>;
  else
    goto <bb 413>;
  # SUCC: 412 [29.0%]  (true,exec) 413 [71.0%]  (false,exec)

  # BLOCK 412 freq:3
  # PRED: 411 [29.0%]  (true,exec)
  greedy_sort (smh_186, &matches, m_idx_906, codec_array_84, total_codecs_85);
  # SUCC: 413 [100.0%]  (fallthru,exec)

  # BLOCK 413 freq:11
  # PRED: 411 [71.0%]  (false,exec) 412 [100.0%]  (fallthru,exec)
  # DEBUG vmatch => 1
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].codec_negotiated = 1;
  # DEBUG j => 0
  # DEBUG j => 0
  # SUCC: 414 [100.0%]  (fallthru,exec)

  # BLOCK 414 freq:320
  # PRED: 417 [96.7%]  (true,exec) 413 [100.0%]  (fallthru,exec)
  # j_1844 = PHI <j_1067(417), 0(413)>
  # ivtmp.1083_626 = PHI <ivtmp.1083_627(417), 0(413)>
  D.49978_628 = &matches + ivtmp.1083_626;
  D.45274_1031 = MEM[base: D.49978_628, offset: 4B];
  D.45275_1032 = D.45274_1031->rm_encoding;
  D.45276_1034 = D.45274_1031->rm_fmtp;
  D.45277_1036 = D.45274_1031->rm_pt;
  D.45278_1037 = (uint32_t) D.45277_1036;
  D.45279_1038 = MEM[symbol: matches, index: ivtmp.1083_626, offset: 0B];
  D.45280_1039 = D.45279_1038->samples_per_second;
  D.45281_1041 = D.45279_1038->microseconds_per_packet;
  D.45282_1042 = D.45281_1041 / 1000;
  D.45283_1043 = (uint32_t) D.45282_1042;
  pmap_1044 = switch_core_media_add_payload_map (session_161(D), 1, D.45275_1032, D.45276_1034, sdp_type_546(D), D.45278_1037, D.45280_1039, D.45283_1043, 1);
  # DEBUG pmap => pmap_1044
  if (j_1844 == 0)
    goto <bb 415>;
  else
    goto <bb 417>;
  # SUCC: 415 [50.0%]  (true,exec) 417 [50.0%]  (false,exec)

  # BLOCK 415 freq:160
  # PRED: 414 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map = pmap_1044;
  pmap_1044->current = 1;
  D.45287_1046 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session;
  if (D.45287_1046 != 0B)
    goto <bb 416>;
  else
    goto <bb 417>;
  # SUCC: 416 [69.8%]  (true,exec) 417 [30.2%]  (false,exec)

  # BLOCK 416 freq:112
  # PRED: 415 [69.8%]  (true,exec)
  D.45290_1048 = pmap_1044->pt;
  switch_rtp_set_default_payload (D.45287_1046, D.45290_1048);
  # SUCC: 417 [100.0%]  (fallthru,exec)

  # BLOCK 417 freq:320
  # PRED: 414 [50.0%]  (false,exec) 415 [30.2%]  (false,exec) 416 [100.0%]  (fallthru,exec)
  mimp_1049 = MEM[symbol: matches, index: ivtmp.1083_626, offset: 0B];
  # DEBUG mimp => mimp_1049
  map_1050 = MEM[base: D.49978_628, offset: 4B];
  # DEBUG map => map_1050
  D.45255_1051 = map_1050->rm_encoding;
  D.45291_1052 = switch_core_perform_session_strdup (session_161(D), D.45255_1051, "src/switch_core_media.c", &__func__, 3804);
  pmap_1044->rm_encoding = D.45291_1052;
  D.45247_1053 = map_1050->rm_pt;
  D.45292_1054 = (unsigned char) D.45247_1053;
  pmap_1044->recv_pt = D.45292_1054;
  D.45262_1055 = map_1050->rm_rate;
  pmap_1044->rm_rate = D.45262_1055;
  D.45293_1056 = mimp_1049->microseconds_per_packet;
  D.45294_1057 = D.45293_1056 / 1000;
  D.45295_1058 = (uint32_t) D.45294_1057;
  pmap_1044->codec_ms = D.45295_1058;
  D.45085_1059 = connection_110->c_address;
  D.45296_1060 = switch_core_perform_session_strdup (session_161(D), D.45085_1059, "src/switch_core_media.c", &__func__, 3810);
  pmap_1044->remote_sdp_ip = D.45296_1060;
  D.44697_1061 = m_1764->m_port;
  D.45087_1062 = (short unsigned int) D.44697_1061;
  pmap_1044->remote_sdp_port = D.45087_1062;
  D.45297_1063 = map_1050->rm_fmtp;
  D.45298_1064 = switch_core_perform_session_strdup (session_161(D), D.45297_1063, "src/switch_core_media.c", &__func__, 3813);
  pmap_1044->rm_fmtp = D.45298_1064;
  D.45247_1065 = map_1050->rm_pt;
  D.45292_1066 = (unsigned char) D.45247_1065;
  pmap_1044->agreed_pt = D.45292_1066;
  j_1067 = j_1844 + 1;
  # DEBUG j => j_1067
  # DEBUG j => j_1067
  ivtmp.1083_627 = ivtmp.1083_626 + 16;
  if (m_idx_906 > j_1067)
    goto <bb 414>;
  else
    goto <bb 418>;
  # SUCC: 414 [96.7%]  (true,exec) 418 [3.3%]  (false,exec)

  # BLOCK 418 freq:11
  # PRED: 417 [3.3%]  (false,exec)
  D.45286_1068 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45299_1069 = D.45286_1068->remote_sdp_port;
  D.45300_1070 = (int) D.45299_1069;
  switch_snprintf (&tmp, 50, "%d", D.45300_1070);
  D.44530_1071 = session_161(D)->channel;
  D.45286_1072 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45301_1073 = D.45286_1072->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_1071, "remote_video_ip", D.45301_1073, 1);
  D.44530_1074 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1074, "remote_video_port", &tmp, 1);
  D.44530_1075 = session_161(D)->channel;
  D.45286_1076 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45302_1077 = D.45286_1076->rm_fmtp;
  switch_channel_set_variable_var_check (D.44530_1075, "rtp_video_fmtp", D.45302_1077, 1);
  D.45286_1078 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45303_1079 = D.45286_1078->agreed_pt;
  D.45304_1080 = (int) D.45303_1079;
  switch_snprintf (&tmp, 50, "%d", D.45304_1080);
  D.44530_1081 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1081, "rtp_video_pt", &tmp, 1);
  switch_core_media_check_video_codecs (session_161(D));
  D.45286_1082 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45305_1083 = D.45286_1082->recv_pt;
  D.45306_1084 = (int) D.45305_1083;
  switch_snprintf (&tmp, 50, "%d", D.45306_1084);
  D.44530_1085 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1085, "rtp_video_recv_pt", &tmp, 1);
  if (match_1800 == 0)
    goto <bb 420>;
  else
    goto <bb 419>;
  # SUCC: 420 [50.0%]  (true,exec) 419 [50.0%]  (false,exec)

  # BLOCK 419 freq:6
  # PRED: 418 [50.0%]  (false,exec)
  # SUCC: 420 [100.0%]  (fallthru,exec)

  # BLOCK 420 freq:11
  # PRED: 419 [100.0%]  (fallthru,exec) 418 [50.0%]  (true,exec)
  # match_14 = PHI <match_1800(419), 1(418)>
  # DEBUG match => match_14
  # DEBUG D#74 => &MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].read_codec
  # DEBUG codec => D#74
  D.47965_1505 = MEM[(struct switch_codec_t *)smh_186 + 13020B].flags;
  D.47964_1506 = D.47965_1505 & 256;
  if (D.47964_1506 != 0)
    goto <bb 421>;
  else
    goto <bb 425>;
  # SUCC: 421 [50.0%]  (true,exec) 425 [50.0%]  (false,exec)

  # BLOCK 421 freq:5
  # PRED: 420 [50.0%]  (true,exec)
  D.47963_1507 = MEM[(struct switch_codec_t *)smh_186 + 13020B].mutex;
  if (D.47963_1507 != 0B)
    goto <bb 422>;
  else
    goto <bb 425>;
  # SUCC: 422 [85.0%]  (true,exec) 425 [15.0%]  (false,exec)

  # BLOCK 422 freq:4
  # PRED: 421 [85.0%]  (true,exec)
  D.47962_1508 = MEM[(struct switch_codec_t *)smh_186 + 13020B].codec_interface;
  if (D.47962_1508 != 0B)
    goto <bb 423>;
  else
    goto <bb 425>;
  # SUCC: 423 [85.0%]  (true,exec) 425 [15.0%]  (false,exec)

  # BLOCK 423 freq:3
  # PRED: 422 [85.0%]  (true,exec)
  D.47961_1509 = MEM[(struct switch_codec_t *)smh_186 + 13020B].implementation;
  if (D.47961_1509 != 0B)
    goto <bb 424>;
  else
    goto <bb 425>;
  # SUCC: 424 [85.0%]  (true,exec) 425 [15.0%]  (false,exec)

  # BLOCK 424 freq:3
  # PRED: 423 [85.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].reset_codec = 1;
  # SUCC: 425 [100.0%]  (fallthru,exec)

  # BLOCK 425 freq:11
  # PRED: 423 [15.0%]  (false,exec) 424 [100.0%]  (fallthru,exec) 420 [50.0%]  (false,exec) 421 [15.0%]  (false,exec) 422 [15.0%]  (false,exec)
  D.45316_1092 = switch_core_media_set_video_codec (session_161(D), 0);
  if (D.45316_1092 == 0)
    goto <bb 426>;
  else
    goto <bb 427>;
  # SUCC: 426 [29.0%]  (true,exec) 427 [71.0%]  (false,exec)

  # BLOCK 426 freq:3
  # PRED: 425 [29.0%]  (true,exec)
  check_ice (smh_186, 1, sdp_198, m_1764);
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 427 freq:334
  # PRED: 443 [100.0%]  (fallthru,exec) 344 [55.8%]  (false,exec) 345 [71.0%]  (false,exec) 409 [100.0%]  (fallthru,exec) 425 [71.0%]  (false,exec) 426 [100.0%]  (fallthru,exec) 331 [30.2%]  (false,exec) 332 [100.0%]  (fallthru,exec) 329 [30.2%]  (false,exec) 330 [100.0%]  (fallthru,exec) 343 [100.0%]  (fallthru,exec) 169 [71.0%]  (false,exec) 410 [30.0%]  (false,exec) 137 [98.0%]  (false,exec)
  # match_15 = PHI <match_13(443), match_1800(344), match_1800(345), match_1800(409), match_14(425), match_14(426), match_13(331), match_13(332), match_13(329), match_13(330), match_13(343), match_1800(169), match_1800(410), match_1800(137)>
  # best_te_22 = PHI <best_te_1624(443), best_te_680(344), best_te_680(345), best_te_680(409), best_te_680(425), best_te_680(426), best_te_1860(331), best_te_1860(332), best_te_1860(329), best_te_1860(330), best_te_1624(343), best_te_680(169), best_te_680(410), best_te_680(137)>
  # cng_pt_26 = PHI <cng_pt_1626(443), cng_pt_1717(344), cng_pt_1717(345), cng_pt_1717(409), cng_pt_1717(425), cng_pt_1717(426), cng_pt_1626(331), cng_pt_1626(332), cng_pt_1626(329), cng_pt_1626(330), cng_pt_1626(343), cng_pt_1717(169), cng_pt_1717(410), cng_pt_1717(137)>
  # got_crypto_55 = PHI <got_crypto_969(443), got_crypto_1866(344), got_crypto_1866(345), got_crypto_1866(409), got_crypto_1866(425), got_crypto_1866(426), got_crypto_969(331), got_crypto_969(332), got_crypto_969(329), got_crypto_969(330), got_crypto_969(343), got_crypto_1866(169), got_crypto_1866(410), got_crypto_1866(137)>
  # got_video_crypto_63 = PHI <got_video_crypto_1674(443), got_video_crypto_1674(344), got_video_crypto_1674(345), got_video_crypto_959(409), got_video_crypto_959(425), got_video_crypto_959(426), got_video_crypto_1674(331), got_video_crypto_1674(332), got_video_crypto_1674(329), got_video_crypto_1674(330), got_video_crypto_1674(343), got_video_crypto_1674(169), got_video_crypto_959(410), got_video_crypto_1674(137)>
  # got_audio_66 = PHI <got_audio_65(443), got_audio_1693(344), got_audio_1693(345), got_audio_1693(409), got_audio_1693(425), got_audio_1693(426), got_audio_65(331), got_audio_65(332), got_audio_65(329), got_audio_65(330), got_audio_65(343), got_audio_1693(169), got_audio_1693(410), got_audio_1693(137)>
  # codec_ms_94 = PHI <codec_ms_93(443), codec_ms_477(344), codec_ms_477(345), codec_ms_477(409), codec_ms_477(425), codec_ms_477(426), codec_ms_93(331), codec_ms_93(332), codec_ms_93(329), codec_ms_93(330), codec_ms_93(343), codec_ms_477(169), codec_ms_477(410), codec_ms_477(137)>
  # m_idx_113 = PHI <m_idx_1745(443), m_idx_1869(344), m_idx_1869(345), 0(409), m_idx_906(425), m_idx_906(426), m_idx_1745(331), m_idx_1745(332), m_idx_1745(329), m_idx_1745(330), m_idx_1745(343), m_idx_1869(169), m_idx_906(410), m_idx_1869(137)>
  # nm_idx_121 = PHI <nm_idx_843(443), nm_idx_1749(344), nm_idx_1749(345), 0(409), 0(425), 0(426), nm_idx_843(331), nm_idx_843(332), nm_idx_843(329), nm_idx_843(330), nm_idx_843(343), nm_idx_1749(169), 0(410), nm_idx_1749(137)>
  # got_savp_2166 = PHI <got_savp_1739(443), got_savp_1739(344), got_savp_1739(345), got_savp_1739(409), got_savp_1739(425), got_savp_1739(426), got_savp_1739(331), got_savp_1739(332), got_savp_1739(329), got_savp_1739(330), got_savp_1739(343), got_savp_1739(169), got_savp_1739(410), got_savp_1711(137)>
  # got_udptl_2172 = PHI <got_udptl_1743(443), got_udptl_1743(344), got_udptl_1743(345), got_udptl_1743(409), got_udptl_1743(425), got_udptl_1743(426), got_udptl_1743(331), got_udptl_1743(332), got_udptl_1743(329), got_udptl_1743(330), got_udptl_1743(343), got_udptl_1743(169), got_udptl_1743(410), got_udptl_774(137)>
  # got_avp_2186 = PHI <got_avp_1859(443), got_avp_1859(344), got_avp_1859(345), got_avp_1859(409), got_avp_1859(425), got_avp_1859(426), got_avp_1859(331), got_avp_1859(332), got_avp_1859(329), got_avp_1859(330), got_avp_1859(343), got_avp_1859(169), got_avp_1859(410), got_avp_1740(137)>
  # DEBUG nm_idx => nm_idx_121
  # DEBUG m_idx => m_idx_113
  # DEBUG codec_ms => codec_ms_94
  # DEBUG got_audio => got_audio_66
  # DEBUG got_video_crypto => got_video_crypto_63
  # DEBUG got_crypto => got_crypto_55
  # DEBUG cng_pt => cng_pt_26
  # DEBUG best_te => best_te_22
  # DEBUG match => match_15
  m_1093 = m_1764->m_next;
  # DEBUG m => m_1093
  # DEBUG nm_idx => nm_idx_121
  # DEBUG m_idx => m_idx_113
  # DEBUG codec_ms => codec_ms_94
  # DEBUG got_webrtc => got_webrtc_78
  # DEBUG got_udptl => got_udptl_2172
  # DEBUG got_savp => got_savp_2166
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => got_avp_2186
  # DEBUG got_audio => got_audio_66
  # DEBUG got_video_crypto => got_video_crypto_63
  # DEBUG got_crypto => got_crypto_55
  # DEBUG m => m_1093
  # DEBUG cng_pt => cng_pt_26
  # DEBUG best_te => best_te_22
  # DEBUG match => match_15
  if (m_1093 != 0B)
    goto <bb 121>;
  else
    goto <bb 428> (done);
  # SUCC: 121 [98.0%]  (true,exec) 428 [2.0%]  (false,exec)

  # BLOCK 428 freq:13
  # PRED: 138 [71.0%]  (true,exec) 140 [100.0%]  (fallthru,exec) 157 [100.0%]  (fallthru,exec) 155 [71.0%]  (false,exec) 205 [100.0%]  (fallthru,exec) 210 [100.0%]  (fallthru,exec) 213 [100.0%]  (fallthru,exec) 348 [100.0%]  (fallthru,exec) 388 [100.0%]  (fallthru,exec) 427 [2.0%]  (false,exec) 154 [71.0%]  (false,exec) 167 [100.0%]  (fallthru,exec) 435 [100.0%]  (fallthru,exec) 120 [2.0%]  (false,exec)
  # match_17 = PHI <1(138), 0(140), 0(157), 1(155), 0(205), 0(210), 0(213), 0(348), 0(388), match_15(427), 1(154), 1(167), 1(435), 0(120)>
  # cng_pt_1047 = PHI <cng_pt_1717(138), cng_pt_1717(140), cng_pt_1717(157), cng_pt_1717(155), cng_pt_1717(205), cng_pt_1717(210), cng_pt_1717(213), cng_pt_1717(348), cng_pt_1717(388), cng_pt_26(427), cng_pt_1717(154), cng_pt_1717(167), cng_pt_1717(435), 0(120)>
done:
  # DEBUG match => match_17
  sdp_parser_free (parser_196);
  D.44471_1094 = smh_186->mparams;
  D.44471_1094->cng_pt = cng_pt_1047;
  # SUCC: 429 [100.0%]  (fallthru,exec)

  # BLOCK 429 freq:23
  # PRED: 4 [21.6%]  (true,exec) 5 [21.6%]  (true,exec) 7 [100.0%]  (fallthru,exec) 428 [100.0%]  (fallthru,exec)
  # match_142 = PHI <0(4), 0(5), 0(7), match_17(428)>
  return match_142;
  # SUCC: EXIT [100.0%] 

  # BLOCK 430
  # PRED: 18 [61.0%]  (false,exec) 17 [71.0%]  (false,exec)
  goto <bb 20>;
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 431 freq:1
  # PRED: 53 [61.0%]  (false,exec) 52 [71.0%]  (false,exec)
  goto <bb 55>;
  # SUCC: 55 [100.0%]  (fallthru,exec)

  # BLOCK 432 freq:55
  # PRED: 63 [50.0%]  (false,exec)
  D.44594_307 = strcasecmp (D.44590_304, "sendonly");
  if (D.44594_307 == 0)
    goto <bb 64>;
  else
    goto <bb 65>;
  # SUCC: 64 [29.0%]  (true,exec) 65 [71.0%]  (false,exec)

  # BLOCK 433
  # PRED: 91 [61.0%]  (false,exec) 90 [71.0%]  (false,exec)
  goto <bb 93>;
  # SUCC: 93 [100.0%]  (fallthru,exec)

  # BLOCK 434 freq:11
  # PRED: 94 [71.0%]  (false,exec) 93 [71.0%]  (false,exec) 92 [25.0%]  (fallthru,exec) 81 [71.0%]  (false,exec)
  # DEBUG reneg => 1
  goto <bb 98>;
  # SUCC: 98 [100.0%]  (fallthru,exec)

  # BLOCK 435
  # PRED: 151 [71.0%]  (true,exec) 152 [71.0%]  (true,exec) 153 [50.0%]  (true,exec) 149 [50.0%]  (true,exec) 150 [71.0%]  (true,exec)
  # DEBUG pass => 0
  goto <bb 428> (done);
  # SUCC: 428 [100.0%]  (fallthru,exec)

  # BLOCK 436 freq:9
  # PRED: 193 [50.0%]  (false,exec)
  D.44471_533 = smh_186->mparams;
  D.44821_534 = D.44471_533->ndlb;
  D.44822_535 = D.44821_534 & 4;
  if (D.44822_535 == 0)
    goto <bb 194>;
  else
    goto <bb 206>;
  # SUCC: 194 [50.0%]  (true,exec) 206 [50.0%]  (false,exec)

  # BLOCK 437 freq:1
  # PRED: 203 [61.0%]  (false,exec) 194 [15.0%]  (false,exec) 202 [71.0%]  (false,exec)
  D.44666_539 = m_1764->m_proto;
  D.44829_540 = D.44666_539 != 257;
  D.44830_541 = got_webrtc_78 == 0;
  D.44831_542 = D.44830_541 & D.44829_540;
  if (D.44831_542 != 0)
    goto <bb 205>;
  else
    goto <bb 438>;
  # SUCC: 205 [4.5%]  (true,exec) 438 [95.5%]  (false,exec)

  # BLOCK 438 freq:1
  # PRED: 437 [95.5%]  (false,exec)
  prephitmp.1031_1895 = attr_1599->a_value;
  goto <bb 206>;
  # SUCC: 206 [100.0%]  (fallthru,exec)

  # BLOCK 439 freq:24
  # PRED: 229 [50.0%]  (true,exec) 230 [100.0%]  (fallthru,exec)
  # codec_ms_1883 = PHI <maxptime_1040(229), ptime_1033(230)>
  # DEBUG codec_ms => codec_ms_1883
  goto <bb 233>;
  # SUCC: 233 [100.0%]  (fallthru,exec)

  # BLOCK 440 freq:20
  # PRED: 239 [50.0%]  (false,exec)
  D.44889_608 = map_1728->rm_encoding;
  D.44854_610 = map_1728->rm_rate;
  D.44905_611 = switch_core_codec_parse_fmtp (D.44889_608, D.44893_598, D.44854_610, &codec_fmtp);
  if (D.44905_611 == 0)
    goto <bb 243>;
  else
    goto <bb 248>;
  # SUCC: 243 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

  # BLOCK 441 freq:119
  # PRED: 252 [50.0%]  (false,exec)
  D.44471_644 = smh_186->mparams;
  D.44821_645 = D.44471_644->ndlb;
  D.44936_646 = (int) D.44821_645;
  D.44937_647 = D.44936_646 & 1;
  if (D.44937_647 != 0)
    goto <bb 253>;
  else
    goto <bb 255>;
  # SUCC: 253 [50.0%]  (true,exec) 255 [50.0%]  (false,exec)

  # BLOCK 442 freq:85
  # PRED: 311 [50.0%]  (false,exec)
  D.45082_793 = switch_stristr ("stereo=1", D.45079_790);
  if (D.45082_793 != 0B)
    goto <bb 312>;
  else
    goto <bb 313>;
  # SUCC: 312 [85.0%]  (true,exec) 313 [15.0%]  (false,exec)

  # BLOCK 443 freq:2
  # PRED: 342 [61.0%]  (false,exec) 333 [15.0%]  (false,exec) 341 [71.0%]  (false,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3639, session_161(D), 7, "No 2833 in SDP.  Disable 2833 dtmf and switch to INFO\n");
  D.44530_860 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_860, "dtmf_type", "info", 1);
  D.44471_861 = smh_186->mparams;
  D.44471_861->dtmf_type = 1;
  D.44471_861->te = 0;
  D.44471_861->recv_te = 0;
  # DEBUG D#12 => D.44471_861->recv_te
  # DEBUG te => D#12
  goto <bb 427>;
  # SUCC: 427 [100.0%]  (fallthru,exec)

  # BLOCK 444 freq:1167
  # PRED: 364 [50.0%]  (false,exec)
  D.45160_902 = switch_stristr ("fir", D.44619_899);
  if (D.45160_902 != 0B)
    goto <bb 365>;
  else
    goto <bb 366>;
  # SUCC: 365 [85.0%]  (true,exec) 366 [15.0%]  (false,exec)

  # BLOCK 445 freq:256
  # PRED: 376 [50.0%]  (false,exec)
  D.44471_964 = smh_186->mparams;
  D.44821_965 = D.44471_964->ndlb;
  D.44822_966 = D.44821_965 & 4;
  if (D.44822_966 == 0)
    goto <bb 377>;
  else
    goto <bb 389>;
  # SUCC: 377 [50.0%]  (true,exec) 389 [50.0%]  (false,exec)

  # BLOCK 446 freq:26
  # PRED: 386 [61.0%]  (false,exec) 377 [15.0%]  (false,exec) 385 [71.0%]  (false,exec)
  D.44666_970 = m_1764->m_proto;
  D.44829_971 = D.44666_970 != 257;
  D.44830_972 = got_webrtc_78 == 0;
  D.44831_973 = D.44830_972 & D.44829_971;
  if (D.44831_973 != 0)
    goto <bb 388>;
  else
    goto <bb 447>;
  # SUCC: 388 [4.5%]  (true,exec) 447 [95.5%]  (false,exec)

  # BLOCK 447 freq:25
  # PRED: 446 [95.5%]  (false,exec)
  prephitmp.1031_1890 = attr_619->a_value;
  goto <bb 389>;
  # SUCC: 389 [100.0%]  (fallthru,exec)

  # BLOCK 448 freq:199
  # PRED: 399 [50.0%]  (false,exec)
  D.44471_998 = smh_186->mparams;
  D.44821_999 = D.44471_998->ndlb;
  D.44936_1000 = (int) D.44821_999;
  D.44937_1001 = D.44936_1000 & 1;
  if (D.44937_1001 != 0)
    goto <bb 400>;
  else
    goto <bb 402>;
  # SUCC: 400 [50.0%]  (true,exec) 402 [50.0%]  (false,exec)

  # BLOCK 449 freq:26
  # PRED: 178 [9.0%]  (false,exec) 179 [94.7%]  (true,exec)
  # attr_922 = PHI <attr_500(178), attr_507(179)>
  # got_crypto_141 = PHI <got_crypto_50(178), got_crypto_1866(179)>
  goto <bb 180>;
  # SUCC: 180 [100.0%]  (fallthru,exec)

  # BLOCK 450 freq:433
  # PRED: 358 [9.0%]  (false,exec) 359 [96.3%]  (true,exec)
  # attr_1162 = PHI <attr_886(358), attr_893(359)>
  # got_video_crypto_743 = PHI <got_video_crypto_57(358), got_video_crypto_556(359)>
  goto <bb 360>;
  # SUCC: 360 [100.0%]  (fallthru,exec)

}


Partition 7: size 4 align 4
	prefs, offset 0
Partition 6: size 4 align 4
	search, offset 0
Partition 4: size 4 align 4
	err, offset 0
Partition 2: size 4 align 4
	other_session, offset 0
Partition 8: size 80 align 4
	tmp, offset 0
	tmp, offset 0
	tmp, offset 0
	tmp, offset 0
	codec_fmtp, offset 0
Partition 1: size 480 align 4
	near_matches, offset 0
Partition 0: size 480 align 4
	matches, offset 0
Inserting a value copy on edge BB33->BB37 : PART.56 = 0
Inserting a value copy on edge BB33->BB37 : PART.36 = 0
Inserting a value copy on edge BB34->BB37 : PART.56 = 0
Inserting a value copy on edge BB34->BB37 : PART.36 = 1
Inserting a value copy on edge BB35->BB37 : PART.56 = 1
Inserting a value copy on edge BB35->BB37 : PART.36 = 1
Inserting a value copy on edge BB55->BB61 : PART.32 = 0
Inserting a value copy on edge BB57->BB61 : PART.32 = 0
Inserting a value copy on edge BB58->BB61 : PART.32 = 0
Inserting a value copy on edge BB60->BB61 : PART.32 = 0
Inserting a value copy on edge BB59->BB61 : PART.32 = 2
Inserting a value copy on edge BB56->BB61 : PART.32 = 2
Inserting a value copy on edge BB61->BB62 : PART.34 = 0
Inserting a value copy on edge BB61->BB62 : PART.30 = 0
Inserting a value copy on edge BB61->BB62 : PART.26 = 0
Inserting a value copy on edge BB64->BB77 : PART.32 = 1
Inserting a value copy on edge BB66->BB77 : PART.32 = 1
Inserting a value copy on edge BB70->BB77 : PART.34 = 1
Inserting a value copy on edge BB72->BB77 : PART.32 = 0
Inserting a value copy on edge BB69->BB77 : PART.34 = 1
Inserting a value copy on edge BB61->BB79 : PART.825 = 1
Inserting a value copy on edge BB61->BB79 : PART.30 = 0
Inserting a value copy on edge BB61->BB79 : PART.26 = 0
Inserting a value copy on edge BB99->BB109 : PART.57 = 1
Inserting a value copy on edge BB100->BB109 : PART.57 = 1
Inserting a value copy on edge BB101->BB109 : PART.57 = 1
Inserting a value copy on edge BB102->BB109 : PART.57 = 1
Inserting a value copy on edge BB103->BB109 : PART.57 = 1
Inserting a value copy on edge BB104->BB109 : PART.57 = 1
Inserting a value copy on edge BB105->BB109 : PART.57 = 1
Inserting a value copy on edge BB108->BB109 : PART.57 = 1
Inserting a value copy on edge BB106->BB109 : PART.57 = 0
Inserting a value copy on edge BB107->BB109 : PART.57 = 0
Inserting a partition copy on edge BB114->BB116 :PART.60 = PART.193
Inserting a value copy on edge BB120->BB121 : PART.77 = 0
Inserting a value copy on edge BB120->BB121 : PART.68 = 0
Inserting a value copy on edge BB120->BB121 : PART.62 = 0
Inserting a value copy on edge BB120->BB121 : PART.54 = 0
Inserting a value copy on edge BB120->BB121 : PART.881 = 0
Inserting a value copy on edge BB120->BB121 : PART.314 = 0
Inserting a value copy on edge BB120->BB121 : PART.414 = 0
Inserting a value copy on edge BB120->BB121 : PART.49 = 0
Inserting a value copy on edge BB120->BB121 : PART.45 = 0
Inserting a value copy on edge BB120->BB121 : PART.41 = 0
Inserting a value copy on edge BB120->BB121 : PART.15 = 0
Inserting a value copy on edge BB120->BB121 : PART.11 = 0
Inserting a value copy on edge BB120->BB121 : PART.8 = 0
Inserting a value copy on edge BB149->BB150 : PART.83 = 2
Inserting a partition copy on edge BB172->BB173 :PART.308 = PART.309
Inserting a value copy on edge BB176->BB178 : PART.41 = 1
Inserting a partition copy on edge BB449->BB180 :PART.28 = PART.30
Inserting a partition copy on edge BB449->BB180 :PART.24 = PART.26
Inserting a partition copy on edge BB179->BB208 :PART.28 = PART.30
Inserting a partition copy on edge BB179->BB208 :PART.24 = PART.26
Inserting a partition copy on edge BB172->BB208 :PART.28 = PART.30
Inserting a partition copy on edge BB172->BB208 :PART.24 = PART.26
Inserting a partition copy on edge BB212->BB214 :PART.94 = PART.341
Inserting a value copy on edge BB216->BB218 : PART.87 = ""
Inserting a partition copy on edge BB231->BB233 :PART.62 = PART.24
Inserting a value copy on edge BB233->BB235 : PART.88 = 0
Inserting a value copy on edge BB236->BB238 : PART.62 = 33
Inserting a value copy on edge BB242->BB248 : PART.67 = 0
Inserting a value copy on edge BB440->BB248 : PART.67 = 0
Inserting a value copy on edge BB241->BB248 : PART.88 = 32001
Inserting a value copy on edge BB241->BB248 : PART.67 = 0
Inserting a value copy on edge BB241->BB248 : PART.62 = 39
Inserting a value copy on edge BB240->BB248 : PART.88 = 13332
Inserting a value copy on edge BB240->BB248 : PART.67 = 0
Inserting a value copy on edge BB240->BB248 : PART.62 = 32
Inserting a value copy on edge BB249->BB250 : PART.443 = 0
Inserting a partition copy on edge BB255->BB259 :PART.0 = PART.8
Inserting a value copy on edge BB255->BB259 : PART.824 = 0
Inserting a value copy on edge BB255->BB259 : PART.464 = 0
Inserting a value copy on edge BB257->BB259 : PART.464 = 1
Inserting a value copy on edge BB257->BB259 : PART.0 = 1
Inserting a partition copy on edge BB259->BB261 :PART.65 = PART.67
Inserting a value copy on edge BB262->BB265 : PART.464 = 1
Inserting a value copy on edge BB262->BB265 : PART.0 = 1
Inserting a value copy on edge BB263->BB265 : PART.464 = 1
Inserting a value copy on edge BB263->BB265 : PART.0 = 1
Inserting a value copy on edge BB264->BB265 : PART.464 = 1
Inserting a value copy on edge BB264->BB265 : PART.0 = 1
Inserting a value copy on edge BB278->BB282 : PART.8 = 1
Inserting a value copy on edge BB285->BB286 : PART.457 = 0
Inserting a partition copy on edge BB288->BB290 :PART.90 = PART.451
Inserting a partition copy on edge BB290->BB291 :PART.171 = PART.90
Inserting a value copy on edge BB293->BB296 : PART.68 = 1
Inserting a value copy on edge BB298->BB299 : PART.322 = 0
Inserting a value copy on edge BB298->BB299 : PART.512 = 0
Inserting a value copy on edge BB304->BB306 : PART.97 = 1
Inserting a value copy on edge BB316->BB317 : PART.68 = 0
Inserting a value copy on edge BB315->BB317 : PART.8 = 1
Inserting a value copy on edge BB316->BB324 : PART.68 = 0
Inserting a value copy on edge BB316->BB324 : PART.49 = 0
Inserting a value copy on edge BB323->BB324 : PART.49 = 1
Inserting a value copy on edge BB322->BB324 : PART.49 = 0
Inserting a value copy on edge BB322->BB324 : PART.8 = 0
Inserting a value copy on edge BB283->BB324 : PART.77 = 0
Inserting a value copy on edge BB283->BB324 : PART.68 = 0
Inserting a value copy on edge BB283->BB324 : PART.49 = 0
Inserting a value copy on edge BB283->BB324 : PART.8 = 0
Inserting a partition copy on edge BB327->BB328 :PART.11 = PART.534
Inserting a partition copy on edge BB347->BB349 :PART.73 = PART.563
Inserting a value copy on edge BB349->BB350 : PART.68 = 0
Inserting a partition copy on edge BB352->BB353 :PART.570 = PART.377
Inserting a value copy on edge BB356->BB358 : PART.45 = 1
Inserting a value copy on edge BB391->BB393 : PART.92 = ""
Inserting a value copy on edge BB394->BB395 : PART.557 = 0
Inserting a value copy on edge BB349->BB408 : PART.68 = 0
Inserting a value copy on edge BB413->BB414 : PART.383 = 0
Inserting a value copy on edge BB413->BB414 : PART.663 = 0
Inserting a value copy on edge BB418->BB420 : PART.8 = 1
Inserting a value copy on edge BB409->BB427 : PART.77 = 0
Inserting a value copy on edge BB409->BB427 : PART.68 = 0
Inserting a value copy on edge BB425->BB427 : PART.77 = 0
Inserting a value copy on edge BB426->BB427 : PART.77 = 0
Inserting a value copy on edge BB410->BB427 : PART.77 = 0
Inserting a value copy on edge BB138->BB428 : PART.8 = 1
Inserting a value copy on edge BB140->BB428 : PART.8 = 0
Inserting a value copy on edge BB157->BB428 : PART.8 = 0
Inserting a value copy on edge BB155->BB428 : PART.8 = 1
Inserting a value copy on edge BB205->BB428 : PART.8 = 0
Inserting a value copy on edge BB210->BB428 : PART.8 = 0
Inserting a value copy on edge BB213->BB428 : PART.8 = 0
Inserting a value copy on edge BB348->BB428 : PART.8 = 0
Inserting a value copy on edge BB388->BB428 : PART.8 = 0
Inserting a value copy on edge BB154->BB428 : PART.8 = 1
Inserting a value copy on edge BB167->BB428 : PART.8 = 1
Inserting a value copy on edge BB435->BB428 : PART.8 = 1
Inserting a value copy on edge BB120->BB428 : PART.15 = 0
Inserting a value copy on edge BB120->BB428 : PART.8 = 0
Inserting a value copy on edge BB4->BB429 : PART.8 = 0
Inserting a value copy on edge BB5->BB429 : PART.8 = 0
Inserting a value copy on edge BB7->BB429 : PART.8 = 0
Inserting a partition copy on edge BB229->BB439 :PART.62 = PART.28
Inserting a partition copy on edge BB230->BB439 :PART.62 = PART.24

;; Generating RTL for gimple basic block 2

;; # DEBUG match => 0

(debug_insn 147 146 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:2892 -1
     (nil))
;; # DEBUG best_te => 0

(debug_insn 148 147 0 (var_location:QI best_te (const_int 0 [0])) src/switch_core_media.c:2893 -1
     (nil))
;; # DEBUG te => 0

(debug_insn 149 148 0 (var_location:QI te (const_int 0 [0])) src/switch_core_media.c:2893 -1
     (nil))
;; # DEBUG cng_pt => 0

(debug_insn 150 149 0 (var_location:QI cng_pt (const_int 0 [0])) src/switch_core_media.c:2893 -1
     (nil))
;; # DEBUG ptime => 0

(debug_insn 151 150 0 (var_location:SI ptime (const_int 0 [0])) src/switch_core_media.c:2896 -1
     (nil))
;; # DEBUG dptime => 0

(debug_insn 152 151 0 (var_location:SI dptime (const_int 0 [0])) src/switch_core_media.c:2896 -1
     (nil))
;; # DEBUG maxptime => 0

(debug_insn 153 152 0 (var_location:SI maxptime (const_int 0 [0])) src/switch_core_media.c:2896 -1
     (nil))
;; # DEBUG dmaxptime => 0

(debug_insn 154 153 0 (var_location:SI dmaxptime (const_int 0 [0])) src/switch_core_media.c:2896 -1
     (nil))
;; # DEBUG sendonly => 0

(debug_insn 155 154 0 (var_location:SI sendonly (const_int 0 [0])) src/switch_core_media.c:2897 -1
     (nil))
;; # DEBUG recvonly => 0

(debug_insn 156 155 0 (var_location:SI recvonly (const_int 0 [0])) src/switch_core_media.c:2897 -1
     (nil))
;; # DEBUG greedy => 0

(debug_insn 157 156 0 (var_location:SI greedy (const_int 0 [0])) src/switch_core_media.c:2898 -1
     (nil))
;; # DEBUG x => 0

(debug_insn 158 157 0 (var_location:SI x (const_int 0 [0])) src/switch_core_media.c:2898 -1
     (nil))
;; # DEBUG skip => 0

(debug_insn 159 158 0 (var_location:SI skip (const_int 0 [0])) src/switch_core_media.c:2898 -1
     (nil))
;; channel_162 = switch_core_session_get_channel (session_161(D));

(insn 160 159 161 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2899 -1
     (nil))

(call_insn 161 160 162 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_get_channel") [flags 0x41]  <function_decl 0x406f3f80 switch_core_session_get_channel>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2899 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 162 161 0 (set (reg/v/f:SI 232 [ channel ])
        (reg:SI 0 r0)) src/switch_core_media.c:2899 -1
     (nil))

;; # DEBUG channel => channel_162

(debug_insn 163 162 0 (var_location:SI channel (const_int 0 [0])) src/switch_core_media.c:2899 -1
     (nil))
;; # DEBUG crypto => 0B

(debug_insn 164 163 0 (var_location:SI crypto (const_int 0 [0])) src/switch_core_media.c:2901 -1
     (nil))
;; # DEBUG got_crypto => 0

(debug_insn 165 164 0 (var_location:SI got_crypto (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))
;; # DEBUG got_video_crypto => 0

(debug_insn 166 165 0 (var_location:SI got_video_crypto (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))
;; # DEBUG got_audio => 0

(debug_insn 167 166 0 (var_location:SI got_audio (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))
;; # DEBUG got_avp => 0

(debug_insn 168 167 0 (var_location:SI got_avp (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))
;; # DEBUG got_video_avp => 0

(debug_insn 169 168 0 (var_location:SI got_video_avp (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))
;; # DEBUG got_video_savp => 0

(debug_insn 170 169 0 (var_location:SI got_video_savp (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))
;; # DEBUG got_savp => 0

(debug_insn 171 170 0 (var_location:SI got_savp (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))
;; # DEBUG got_udptl => 0

(debug_insn 172 171 0 (var_location:SI got_udptl (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))
;; # DEBUG got_webrtc => 0

(debug_insn 173 172 0 (var_location:SI got_webrtc (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))
;; # DEBUG scrooge => 0

(debug_insn 174 173 0 (var_location:SI scrooge (const_int 0 [0])) src/switch_core_media.c:2903 -1
     (nil))
;; # DEBUG parser => 0B

(debug_insn 175 174 0 (var_location:SI parser (const_int 0 [0])) src/switch_core_media.c:2904 -1
     (nil))
;; # DEBUG reneg => 1

(debug_insn 176 175 0 (var_location:SI reneg (const_int 0 [0])) src/switch_core_media.c:2906 -1
     (nil))
;; # DEBUG near_rate => 0

(debug_insn 177 176 0 (var_location:SI near_rate (const_int 0 [0])) src/switch_core_media.c:2911 -1
     (nil))
;; # DEBUG mimp => 0B

(debug_insn 178 177 0 (var_location:SI mimp (const_int 0 [0])) src/switch_core_media.c:2912 -1
     (nil))
;; # DEBUG near_match => 0B

(debug_insn 179 178 0 (var_location:SI near_match (const_int 0 [0])) src/switch_core_media.c:2912 -1
     (nil))
;; # DEBUG mmap => 0B

(debug_insn 180 179 0 (var_location:SI mmap (const_int 0 [0])) src/switch_core_media.c:2913 -1
     (nil))
;; # DEBUG near_map => 0B

(debug_insn 181 180 0 (var_location:SI near_map (const_int 0 [0])) src/switch_core_media.c:2913 -1
     (nil))
;; matches = {};

(insn 182 181 183 (set (reg:SI 1031)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:2914 -1
     (nil))

(insn 183 182 184 (set (reg:SI 1032)
        (const_int 480 [0x1e0])) src/switch_core_media.c:2914 -1
     (nil))

(insn 184 183 185 (set (reg:SI 0 r0)
        (reg:SI 1031)) src/switch_core_media.c:2914 -1
     (nil))

(insn 185 184 186 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:2914 -1
     (nil))

(insn 186 185 187 (set (reg:SI 2 r2)
        (reg:SI 1032)) src/switch_core_media.c:2914 -1
     (nil))

(call_insn 187 186 188 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x41afec00 memset>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2914 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 188 187 0 (set (reg:SI 1033)
        (reg:SI 0 r0)) src/switch_core_media.c:2914 -1
     (nil))

;; near_matches = {};

(insn 189 188 190 (set (reg:SI 1034)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -576 [0xfffffffffffffdc0]))) src/switch_core_media.c:2915 -1
     (nil))

(insn 190 189 191 (set (reg:SI 1035)
        (const_int 480 [0x1e0])) src/switch_core_media.c:2915 -1
     (nil))

(insn 191 190 192 (set (reg:SI 0 r0)
        (reg:SI 1034)) src/switch_core_media.c:2915 -1
     (nil))

(insn 192 191 193 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:2915 -1
     (nil))

(insn 193 192 194 (set (reg:SI 2 r2)
        (reg:SI 1035)) src/switch_core_media.c:2915 -1
     (nil))

(call_insn 194 193 195 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x41afec00 memset>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2915 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 195 194 0 (set (reg:SI 1036)
        (reg:SI 0 r0)) src/switch_core_media.c:2915 -1
     (nil))

;; # DEBUG codec_ms => 0

(debug_insn 196 195 0 (var_location:SI codec_ms (const_int 0 [0])) src/switch_core_media.c:2916 -1
     (nil))
;; # DEBUG remote_codec_rate => 0

(debug_insn 197 196 0 (var_location:SI remote_codec_rate (const_int 0 [0])) src/switch_core_media.c:2917 -1
     (nil))
;; # DEBUG fmtp_remote_codec_rate => 0

(debug_insn 198 197 0 (var_location:SI fmtp_remote_codec_rate (const_int 0 [0])) src/switch_core_media.c:2917 -1
     (nil))
;; # DEBUG m_idx => 0

(debug_insn 199 198 0 (var_location:SI m_idx (const_int 0 [0])) src/switch_core_media.c:2919 -1
     (nil))
;; # DEBUG nm_idx => 0

(debug_insn 200 199 0 (var_location:SI nm_idx (const_int 0 [0])) src/switch_core_media.c:2920 -1
     (nil))
;; if (session_161(D) == 0B)

(insn 201 200 202 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 1025 [ session ])
            (const_int 0 [0]))) src/switch_core_media.c:2922 -1
     (nil))

(jump_insn 202 201 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2922 -1
     (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 3

;; __assert_fail ("session", "src/switch_core_media.c", 2922, &__PRETTY_FUNCTION__);

(insn 204 203 205 (set (reg:SI 1038)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC37") [flags 0x82]  <var_decl 0x41de8420 *.LC37>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 896 [0x380])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 896 [0x380])
            ] 29)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC37") [flags 0x82]  <var_decl 0x41de8420 *.LC37>)
        (nil)))

(insn 205 204 206 (set (reg:SI 1037)
        (reg:SI 1038)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC37") [flags 0x82]  <var_decl 0x41de8420 *.LC37>)
        (nil)))

(insn 206 205 207 (set (reg:SI 1040)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 897 [0x381])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 897 [0x381])
            ] 29)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 207 206 208 (set (reg:SI 1039)
        (reg:SI 1040)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 208 207 209 (set (reg:SI 1041)
        (const_int 2922 [0xb6a])) src/switch_core_media.c:2922 -1
     (nil))

(insn 209 208 210 (set (reg:SI 1043)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 898 [0x382])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 898 [0x382])
            ] 29)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 210 209 211 (set (reg/f:SI 1042)
        (reg:SI 1043)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 211 210 212 (set (reg:SI 1045)
        (plus:SI (reg/f:SI 1042)
            (const_int 1760 [0x6e0]))) src/switch_core_media.c:2922 -1
     (nil))

(insn 212 211 213 (set (reg:SI 1044)
        (plus:SI (reg:SI 1045)
            (const_int 8 [0x8]))) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1042)
            (const_int 1768 [0x6e8]))
        (nil)))

(insn 213 212 214 (set (reg:SI 0 r0)
        (reg:SI 1037)) src/switch_core_media.c:2922 -1
     (nil))

(insn 214 213 215 (set (reg:SI 1 r1)
        (reg:SI 1039)) src/switch_core_media.c:2922 -1
     (nil))

(insn 215 214 216 (set (reg:SI 2 r2)
        (reg:SI 1041)) src/switch_core_media.c:2922 -1
     (nil))

(insn 216 215 217 (set (reg:SI 3 r3)
        (reg:SI 1044)) src/switch_core_media.c:2922 -1
     (nil))

(call_insn 217 216 218 (parallel [
            (call (mem:SI (symbol_ref:SI ("__assert_fail") [flags 0x41]  <function_decl 0x4040d180 __assert_fail>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2922 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(barrier 218 217 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 219 218 220 1330 "" [0 uses])

(note 220 219 0 NOTE_INSN_BASIC_BLOCK)

;; smh_186 = session_161(D)->media_handle;

(insn 221 220 222 (set (reg:SI 1046)
        (const_int 22220 [0x56cc])) src/switch_core_media.c:2924 -1
     (nil))

(insn 222 221 0 (set (reg/v/f:SI 233 [ smh ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (reg:SI 1046)) [2 session_161(D)->media_handle+0 S4 A32])) src/switch_core_media.c:2924 -1
     (nil))

;; # DEBUG smh => smh_186

(debug_insn 223 222 0 (var_location:SI smh (const_int 0 [0])) src/switch_core_media.c:2924 -1
     (nil))
;; if (smh_186 == 0B)

(insn 224 223 225 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 233 [ smh ])
            (const_int 0 [0]))) src/switch_core_media.c:2924 -1
     (nil))

(jump_insn 225 224 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2924 -1
     (expr_list:REG_BR_PROB (const_int 2164 [0x874])
        (nil)))

;; Generating RTL for gimple basic block 5

;; # DEBUG D#15 => &smh_186->engines

(debug_insn 227 226 0 (var_location:SI D#15 (const_int 0 [0])) src/switch_core_media.c:2928 -1
     (nil))
;; # DEBUG a_engine => D#15

(debug_insn 228 227 0 (var_location:SI a_engine (const_int 0 [0])) src/switch_core_media.c:2928 -1
     (nil))
;; # DEBUG D#14 => &smh_186->engines[1]

(debug_insn 229 228 0 (var_location:SI D#14 (const_int 0 [0])) src/switch_core_media.c:2929 -1
     (nil))
;; # DEBUG v_engine => D#14

(debug_insn 230 229 0 (var_location:SI v_engine (const_int 0 [0])) src/switch_core_media.c:2929 -1
     (nil))
;; codec_array_190 = &smh_186->codecs;

(insn 231 230 232 (set (reg:SI 1047)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (const_int 23040 [0x5a00]))) src/switch_core_media.c:2931 -1
     (nil))

(insn 232 231 0 (set (reg/v/f:SI 193 [ codec_array ])
        (plus:SI (reg:SI 1047)
            (const_int 76 [0x4c]))) src/switch_core_media.c:2931 -1
     (expr_list:REG_EQUAL (plus:SI (reg/v/f:SI 233 [ smh ])
            (const_int 23116 [0x5a4c]))
        (nil)))

;; # DEBUG codec_array => codec_array_190

(debug_insn 233 232 0 (var_location:SI codec_array (const_int 0 [0])) src/switch_core_media.c:2931 -1
     (nil))
;; total_codecs_192 = D.44471_191->num_codecs;

(insn 234 233 235 (set (reg:SI 1049)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:2932 -1
     (nil))

(insn 235 234 236 (set (reg/f:SI 1048)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1049)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:2932 -1
     (nil))

(insn 236 235 0 (set (reg/v:SI 194 [ total_codecs ])
        (mem/s:SI (plus:SI (reg/f:SI 1048)
                (const_int 128 [0x80])) [4 D.44471_191->num_codecs+0 S4 A32])) src/switch_core_media.c:2932 -1
     (nil))

;; # DEBUG total_codecs => total_codecs_192

(debug_insn 237 236 0 (var_location:SI total_codecs (const_int 0 [0])) src/switch_core_media.c:2932 -1
     (nil))
;; D.44472_194 = strlen (r_sdp_193(D));

(insn 238 237 239 (set (reg:SI 0 r0)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:2934 -1
     (nil))

(call_insn/i 239 238 240 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 0x402f3a80 strlen>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2934 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 240 239 241 (set (reg:SI 1050)
        (reg:SI 0 r0)) src/switch_core_media.c:2934 -1
     (nil))

(insn 241 240 0 (set (reg:SI 235 [ D.44472 ])
        (reg:SI 1050)) src/switch_core_media.c:2934 -1
     (nil))

;; parser_196 = sdp_parse (0B, r_sdp_193(D), D.44473_195, 0);

(insn 242 241 243 (set (reg:SI 0 r0)
        (const_int 0 [0])) src/switch_core_media.c:2934 -1
     (nil))

(insn 243 242 244 (set (reg:SI 1 r1)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:2934 -1
     (nil))

(insn 244 243 245 (set (reg:SI 2 r2)
        (reg:SI 235 [ D.44472 ])) src/switch_core_media.c:2934 -1
     (nil))

(insn 245 244 246 (set (reg:SI 3 r3)
        (const_int 0 [0])) src/switch_core_media.c:2934 -1
     (nil))

(call_insn 246 245 247 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sdp_parse") [flags 0x41]  <function_decl 0x4144de00 sdp_parse>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2934 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 247 246 0 (set (reg/v/f:SI 237 [ parser ])
        (reg:SI 0 r0)) src/switch_core_media.c:2934 -1
     (nil))

;; # DEBUG parser => parser_196

(debug_insn 248 247 0 (var_location:SI parser (const_int 0 [0])) src/switch_core_media.c:2934 -1
     (nil))
;; if (parser_196 == 0B)

(insn 249 248 250 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 237 [ parser ])
            (const_int 0 [0]))) src/switch_core_media.c:2934 -1
     (nil))

(jump_insn 250 249 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2934 -1
     (expr_list:REG_BR_PROB (const_int 2164 [0x874])
        (nil)))

;; Generating RTL for gimple basic block 6

;; sdp_198 = sdp_session (parser_196);

(insn 252 251 253 (set (reg:SI 0 r0)
        (reg/v/f:SI 237 [ parser ])) src/switch_core_media.c:2938 -1
     (nil))

(call_insn 253 252 254 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sdp_session") [flags 0x41]  <function_decl 0x4144df00 sdp_session>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2938 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 254 253 0 (set (reg/v/f:SI 238 [ sdp ])
        (reg:SI 0 r0)) src/switch_core_media.c:2938 -1
     (nil))

;; # DEBUG sdp => sdp_198

(debug_insn 255 254 0 (var_location:SI sdp (const_int 0 [0])) src/switch_core_media.c:2938 -1
     (nil))
;; if (sdp_198 == 0B)

(insn 256 255 257 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 238 [ sdp ])
            (const_int 0 [0]))) src/switch_core_media.c:2938 -1
     (nil))

(jump_insn 257 256 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2938 -1
     (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
        (nil)))

;; Generating RTL for gimple basic block 7

;; sdp_parser_free (parser_196);

(insn 259 258 260 (set (reg:SI 0 r0)
        (reg/v/f:SI 237 [ parser ])) src/switch_core_media.c:2939 -1
     (nil))

(call_insn 260 259 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("sdp_parser_free") [flags 0x41]  <function_decl 0x4144df80 sdp_parser_free>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2939 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 8

;; 

(code_label 263 262 264 1332 "" [0 uses])

(note 264 263 0 NOTE_INSN_BASIC_BLOCK)

;; D.44478_200 = dtls_ok (session_161(D));

(insn 265 264 266 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2943 -1
     (nil))

(call_insn 266 265 267 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dtls_ok") [flags 0x3]  <function_decl 0x414f3900 dtls_ok>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2943 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 267 266 0 (set (reg:SI 239 [ D.44478 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2943 -1
     (nil))

;; if (D.44478_200 != 0)

(insn 268 267 269 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 239 [ D.44478 ])
            (const_int 0 [0]))) src/switch_core_media.c:2943 -1
     (nil))

(jump_insn 269 268 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2943 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 9

;; tmp_203 = switch_channel_get_variable_dup (D.44482_202, "webrtc_enable_dtls", 1, -1);

(insn 271 270 272 (set (reg/f:SI 1051)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:2943 -1
     (nil))

(insn 272 271 273 (set (reg:SI 1052)
        (mem/s/f:SI (plus:SI (reg/f:SI 1051)
                (const_int 24 [0x18])) [2 D.44481_201->channel+0 S4 A32])) src/switch_core_media.c:2943 -1
     (nil))

(insn 273 272 274 (set (reg:SI 1054)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC295") [flags 0x82]  <var_decl 0x40406600 *.LC295>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 899 [0x383])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 899 [0x383])
            ] 29)) src/switch_core_media.c:2943 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC295") [flags 0x82]  <var_decl 0x40406600 *.LC295>)
        (nil)))

(insn 274 273 275 (set (reg:SI 1053)
        (reg:SI 1054)) src/switch_core_media.c:2943 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC295") [flags 0x82]  <var_decl 0x40406600 *.LC295>)
        (nil)))

(insn 275 274 276 (set (reg:SI 0 r0)
        (reg:SI 1052)) src/switch_core_media.c:2943 -1
     (nil))

(insn 276 275 277 (set (reg:SI 1 r1)
        (reg:SI 1053)) src/switch_core_media.c:2943 -1
     (nil))

(insn 277 276 278 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:2943 -1
     (nil))

(insn 278 277 279 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:2943 -1
     (nil))

(call_insn 279 278 280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2943 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 280 279 0 (set (reg/v/f:SI 242 [ tmp ])
        (reg:SI 0 r0)) src/switch_core_media.c:2943 -1
     (nil))

;; # DEBUG tmp => tmp_203

(debug_insn 281 280 0 (var_location:SI tmp (const_int 0 [0])) src/switch_core_media.c:2943 -1
     (nil))
;; if (tmp_203 != 0B)

(insn 282 281 283 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 242 [ tmp ])
            (const_int 0 [0]))) src/switch_core_media.c:2943 -1
     (nil))

(jump_insn 283 282 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2943 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 10

;; # DEBUG expr => tmp_203

(debug_insn 285 284 0 (var_location:SI expr (const_int 0 [0])) -1
     (nil))
;; D.49675_1550 = strcasecmp (tmp_203, "no");

(insn 286 285 287 (set (reg:SI 1056)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 900 [0x384])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 900 [0x384])
            ] 29)) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
        (nil)))

(insn 287 286 288 (set (reg:SI 1055)
        (reg:SI 1056)) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
        (nil)))

(insn 288 287 289 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:461 -1
     (nil))

(insn 289 288 290 (set (reg:SI 1 r1)
        (reg:SI 1055)) ./src/include/switch_utils.h:461 -1
     (nil))

(call_insn/i 290 289 291 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 291 290 0 (set (reg:SI 871 [ D.49675 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:461 -1
     (nil))

;; if (D.49675_1550 == 0)

(insn 292 291 293 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 871 [ D.49675 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:468 -1
     (nil))

(jump_insn 293 292 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:468 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 11

;; D.49676_1551 = strcasecmp (tmp_203, "off");

(insn 295 294 296 (set (reg:SI 1058)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 901 [0x385])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 901 [0x385])
            ] 29)) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
        (nil)))

(insn 296 295 297 (set (reg:SI 1057)
        (reg:SI 1058)) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
        (nil)))

(insn 297 296 298 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:462 -1
     (nil))

(insn 298 297 299 (set (reg:SI 1 r1)
        (reg:SI 1057)) ./src/include/switch_utils.h:462 -1
     (nil))

(call_insn/i 299 298 300 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 300 299 0 (set (reg:SI 872 [ D.49676 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:462 -1
     (nil))

;; if (D.49676_1551 == 0)

(insn 301 300 302 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 872 [ D.49676 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:461 -1
     (nil))

(jump_insn 302 301 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 12

;; D.49677_1552 = strcasecmp (tmp_203, "false");

(insn 304 303 305 (set (reg:SI 1060)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 902 [0x386])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 902 [0x386])
            ] 29)) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
        (nil)))

(insn 305 304 306 (set (reg:SI 1059)
        (reg:SI 1060)) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
        (nil)))

(insn 306 305 307 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:463 -1
     (nil))

(insn 307 306 308 (set (reg:SI 1 r1)
        (reg:SI 1059)) ./src/include/switch_utils.h:463 -1
     (nil))

(call_insn/i 308 307 309 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 309 308 0 (set (reg:SI 873 [ D.49677 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:463 -1
     (nil))

;; if (D.49677_1552 == 0)

(insn 310 309 311 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 873 [ D.49677 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:462 -1
     (nil))

(jump_insn 311 310 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 13

;; D.49678_1553 = strcasecmp (tmp_203, "f");

(insn 313 312 314 (set (reg:SI 1062)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 903 [0x387])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 903 [0x387])
            ] 29)) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
        (nil)))

(insn 314 313 315 (set (reg:SI 1061)
        (reg:SI 1062)) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
        (nil)))

(insn 315 314 316 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:464 -1
     (nil))

(insn 316 315 317 (set (reg:SI 1 r1)
        (reg:SI 1061)) ./src/include/switch_utils.h:464 -1
     (nil))

(call_insn/i 317 316 318 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 318 317 0 (set (reg:SI 874 [ D.49678 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:464 -1
     (nil))

;; if (D.49678_1553 == 0)

(insn 319 318 320 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 874 [ D.49678 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:463 -1
     (nil))

(jump_insn 320 319 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 14

;; D.49679_1554 = strcasecmp (tmp_203, "disabled");

(insn 322 321 323 (set (reg:SI 1064)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 904 [0x388])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 904 [0x388])
            ] 29)) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
        (nil)))

(insn 323 322 324 (set (reg:SI 1063)
        (reg:SI 1064)) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
        (nil)))

(insn 324 323 325 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:465 -1
     (nil))

(insn 325 324 326 (set (reg:SI 1 r1)
        (reg:SI 1063)) ./src/include/switch_utils.h:465 -1
     (nil))

(call_insn/i 326 325 327 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 327 326 0 (set (reg:SI 875 [ D.49679 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:465 -1
     (nil))

;; if (D.49679_1554 == 0)

(insn 328 327 329 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 875 [ D.49679 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:464 -1
     (nil))

(jump_insn 329 328 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 15

;; D.49680_1555 = strcasecmp (tmp_203, "inactive");

(insn 331 330 332 (set (reg:SI 1066)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 905 [0x389])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 905 [0x389])
            ] 29)) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 332 331 333 (set (reg:SI 1065)
        (reg:SI 1066)) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 333 332 334 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:466 -1
     (nil))

(insn 334 333 335 (set (reg:SI 1 r1)
        (reg:SI 1065)) ./src/include/switch_utils.h:466 -1
     (nil))

(call_insn/i 335 334 336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 336 335 0 (set (reg:SI 876 [ D.49680 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:466 -1
     (nil))

;; if (D.49680_1555 == 0)

(insn 337 336 338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 876 [ D.49680 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:465 -1
     (nil))

(jump_insn 338 337 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 16

;; D.49681_1556 = strcasecmp (tmp_203, "disallow");

(insn 340 339 341 (set (reg:SI 1068)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 906 [0x38a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 906 [0x38a])
            ] 29)) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
        (nil)))

(insn 341 340 342 (set (reg:SI 1067)
        (reg:SI 1068)) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
        (nil)))

(insn 342 341 343 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:467 -1
     (nil))

(insn 343 342 344 (set (reg:SI 1 r1)
        (reg:SI 1067)) ./src/include/switch_utils.h:467 -1
     (nil))

(call_insn/i 344 343 345 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 345 344 0 (set (reg:SI 877 [ D.49681 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:467 -1
     (nil))

;; if (D.49681_1556 == 0)

(insn 346 345 347 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 877 [ D.49681 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:466 -1
     (nil))

(jump_insn 347 346 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))

;; Generating RTL for gimple basic block 17

;; D.49682_1557 = switch_is_number (tmp_203);

(insn 349 348 350 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:468 -1
     (nil))

(call_insn 350 349 351 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:468 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 351 350 0 (set (reg:SI 878 [ D.49682 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:468 -1
     (nil))

;; if (D.49682_1557 != 0)

(insn 352 351 353 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 878 [ D.49682 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:467 -1
     (nil))

(jump_insn 353 352 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 18

;; # DEBUG __nptr => tmp_203

(debug_insn 355 354 0 (var_location:SI __nptr (const_int 0 [0])) -1
     (nil))
;; D.49683_1558 = strtol (tmp_203, 0B, 10);

(insn 356 355 357 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 357 356 358 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 358 357 359 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 359 358 360 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 360 359 0 (set (reg:SI 879 [ D.49683 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; if (D.49683_1558 == 0)

(insn 361 360 362 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 879 [ D.49683 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:468 -1
     (nil))

(jump_insn 362 361 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:468 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 19

;; 

(code_label 363 362 364 1334 "" [0 uses])

(note 364 363 0 NOTE_INSN_BASIC_BLOCK)

;; switch_channel_clear_flag (D.44482_206, 111);

(insn 365 364 366 (set (reg/f:SI 1069)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:2944 -1
     (nil))

(insn 366 365 367 (set (reg:SI 1070)
        (mem/s/f:SI (plus:SI (reg/f:SI 1069)
                (const_int 24 [0x18])) [2 D.44481_205->channel+0 S4 A32])) src/switch_core_media.c:2944 -1
     (nil))

(insn 367 366 368 (set (reg:SI 0 r0)
        (reg:SI 1070)) src/switch_core_media.c:2944 -1
     (nil))

(insn 368 367 369 (set (reg:SI 1 r1)
        (const_int 111 [0x6f])) src/switch_core_media.c:2944 -1
     (nil))

(call_insn 369 368 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_clear_flag") [flags 0x41]  <function_decl 0x40846f80 switch_channel_clear_flag>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2944 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; switch_channel_clear_flag (D.44482_208, 109);

(insn 370 369 371 (set (reg/f:SI 1071)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:2945 -1
     (nil))

(insn 371 370 372 (set (reg:SI 1072)
        (mem/s/f:SI (plus:SI (reg/f:SI 1071)
                (const_int 24 [0x18])) [2 D.44481_207->channel+0 S4 A32])) src/switch_core_media.c:2945 -1
     (nil))

(insn 372 371 373 (set (reg:SI 0 r0)
        (reg:SI 1072)) src/switch_core_media.c:2945 -1
     (nil))

(insn 373 372 374 (set (reg:SI 1 r1)
        (const_int 109 [0x6d])) src/switch_core_media.c:2945 -1
     (nil))

(call_insn 374 373 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_clear_flag") [flags 0x41]  <function_decl 0x40846f80 switch_channel_clear_flag>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2945 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; Generating RTL for gimple basic block 20

;; 

(code_label 375 374 376 1333 "" [0 uses])

(note 376 375 0 NOTE_INSN_BASIC_BLOCK)

;; switch_core_session_parse_crypto_prefs (session_161(D));

(insn 377 376 378 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2948 -1
     (nil))

(call_insn 378 377 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_session_parse_crypto_prefs") [flags 0x3]  <function_decl 0x41463c80 switch_core_session_parse_crypto_prefs>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2948 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; # DEBUG engine => D#15

(debug_insn 379 378 0 (var_location:SI engine (const_int 0 [0])) src/switch_core_media.c:2948 -1
     (nil))
;; pmap_1457 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].payload_map;

(insn 380 379 0 (set (reg/v/f:SI 832 [ pmap ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1940 [0x794])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].payload_map+0 S4 A32])) src/switch_core_media.c:2883 -1
     (nil))

;; # DEBUG pmap => pmap_1457

(debug_insn 381 380 0 (var_location:SI pmap (const_int 0 [0])) src/switch_core_media.c:2883 -1
     (nil))
;; # DEBUG pmap => pmap_1457

(debug_insn 382 381 0 (var_location:SI pmap (const_int 0 [0])) -1
     (nil))
;; if (pmap_1457 != 0B)

(insn 383 382 384 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 832 [ pmap ])
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 384 383 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 21

;; if (D.47871_1661 != 0)

(insn 386 385 387 (set (reg:SI 1073)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 832 [ pmap ])
                    (const_int 16 [0x10])) [0 pmap_1457->allocated+0 S1 A32]))) src/switch_core_media.c:2883 -1
     (nil))

(insn 387 386 388 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1073)
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 388 387 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; pmap_1747->negotiated = 0;

(insn 391 390 392 (set (reg:SI 1074)
        (const_int 0 [0])) src/switch_core_media.c:2884 -1
     (nil))

(insn 392 391 393 (set (reg:QI 1075)
        (subreg:QI (reg:SI 1074) 0)) src/switch_core_media.c:2884 -1
     (nil))

(insn 393 392 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 832 [ pmap ])
                (const_int 17 [0x11])) [0 pmap_1747->negotiated+0 S1 A8])
        (reg:QI 1075)) src/switch_core_media.c:2884 -1
     (nil))

;; pmap_1747->current = 0;

(insn 394 393 395 (set (reg:SI 1076)
        (const_int 0 [0])) src/switch_core_media.c:2885 -1
     (nil))

(insn 395 394 396 (set (reg:QI 1077)
        (subreg:QI (reg:SI 1076) 0)) src/switch_core_media.c:2885 -1
     (nil))

(insn 396 395 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 832 [ pmap ])
                (const_int 18 [0x12])) [0 pmap_1747->current+0 S1 A16])
        (reg:QI 1077)) src/switch_core_media.c:2885 -1
     (nil))

;; pmap_1459 = pmap_1747->next;

(insn 397 396 0 (set (reg/v/f:SI 832 [ pmap ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 832 [ pmap ])
                (const_int 80 [0x50])) [2 pmap_1747->next+0 S4 A32])) src/switch_core_media.c:2883 -1
     (nil))

;; # DEBUG pmap => pmap_1459

(debug_insn 398 397 0 (var_location:SI pmap (const_int 0 [0])) src/switch_core_media.c:2883 -1
     (nil))
;; # DEBUG pmap => pmap_1459

(debug_insn 399 398 0 (var_location:SI pmap (const_int 0 [0])) -1
     (nil))
;; if (pmap_1459 != 0B)

(insn 400 399 401 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 832 [ pmap ])
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 401 400 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 24

;; if (D.47871_1460 != 0)

(insn 404 402 405 (set (reg:SI 1078)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 832 [ pmap ])
                    (const_int 16 [0x10])) [0 pmap_1459->allocated+0 S1 A32]))) src/switch_core_media.c:2883 -1
     (nil))

(insn 405 404 406 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1078)
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 406 405 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 403)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 25

;; 

(code_label 407 406 408 1336 "" [0 uses])

(note 408 407 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG engine => D#14

(debug_insn 409 408 0 (var_location:SI engine (const_int 0 [0])) -1
     (nil))
;; pmap_1461 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].payload_map;

(insn 410 409 411 (set (reg:SI 1079)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:2883 -1
     (nil))

(insn 411 410 412 (set (reg:SI 1080)
        (const_int 1860 [0x744])) src/switch_core_media.c:2883 -1
     (nil))

(insn 412 411 413 (set (reg:SI 1081)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 1079))) src/switch_core_media.c:2883 -1
     (nil))

(insn 413 412 414 (set (reg/f:SI 1082)
        (plus:SI (reg:SI 1081)
            (reg:SI 1080))) src/switch_core_media.c:2883 -1
     (nil))

(insn 414 413 0 (set (reg/v/f:SI 835 [ pmap ])
        (mem/s/f:SI (reg/f:SI 1082) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].payload_map+0 S4 A32])) src/switch_core_media.c:2883 -1
     (nil))

;; # DEBUG pmap => pmap_1461

(debug_insn 415 414 0 (var_location:SI pmap (const_int 0 [0])) src/switch_core_media.c:2883 -1
     (nil))
;; # DEBUG pmap => pmap_1461

(debug_insn 416 415 0 (var_location:SI pmap (const_int 0 [0])) -1
     (nil))
;; if (pmap_1461 != 0B)

(insn 417 416 418 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 835 [ pmap ])
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 418 417 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 26

;; if (D.47874_1670 != 0)

(insn 420 419 421 (set (reg:SI 1083)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 835 [ pmap ])
                    (const_int 16 [0x10])) [0 pmap_1461->allocated+0 S1 A32]))) src/switch_core_media.c:2883 -1
     (nil))

(insn 421 420 422 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1083)
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 422 421 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; pmap_1672->negotiated = 0;

(insn 425 424 426 (set (reg:SI 1084)
        (const_int 0 [0])) src/switch_core_media.c:2884 -1
     (nil))

(insn 426 425 427 (set (reg:QI 1085)
        (subreg:QI (reg:SI 1084) 0)) src/switch_core_media.c:2884 -1
     (nil))

(insn 427 426 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 835 [ pmap ])
                (const_int 17 [0x11])) [0 pmap_1672->negotiated+0 S1 A8])
        (reg:QI 1085)) src/switch_core_media.c:2884 -1
     (nil))

;; pmap_1672->current = 0;

(insn 428 427 429 (set (reg:SI 1086)
        (const_int 0 [0])) src/switch_core_media.c:2885 -1
     (nil))

(insn 429 428 430 (set (reg:QI 1087)
        (subreg:QI (reg:SI 1086) 0)) src/switch_core_media.c:2885 -1
     (nil))

(insn 430 429 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 835 [ pmap ])
                (const_int 18 [0x12])) [0 pmap_1672->current+0 S1 A16])
        (reg:QI 1087)) src/switch_core_media.c:2885 -1
     (nil))

;; pmap_1463 = pmap_1672->next;

(insn 431 430 0 (set (reg/v/f:SI 835 [ pmap ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 835 [ pmap ])
                (const_int 80 [0x50])) [2 pmap_1672->next+0 S4 A32])) src/switch_core_media.c:2883 -1
     (nil))

;; # DEBUG pmap => pmap_1463

(debug_insn 432 431 0 (var_location:SI pmap (const_int 0 [0])) src/switch_core_media.c:2883 -1
     (nil))
;; # DEBUG pmap => pmap_1463

(debug_insn 433 432 0 (var_location:SI pmap (const_int 0 [0])) -1
     (nil))
;; if (pmap_1463 != 0B)

(insn 434 433 435 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 835 [ pmap ])
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 435 434 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 29

;; if (D.47874_1464 != 0)

(insn 438 436 439 (set (reg:SI 1088)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 835 [ pmap ])
                    (const_int 16 [0x10])) [0 pmap_1463->allocated+0 S1 A32]))) src/switch_core_media.c:2883 -1
     (nil))

(insn 439 438 440 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1088)
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 440 439 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 437)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 30

;; 

(code_label 441 440 442 1338 "" [0 uses])

(note 442 441 0 NOTE_INSN_BASIC_BLOCK)

;; if (proceed_209(D) != 0B)

(insn 443 442 444 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 1027 [ proceed ])
            (const_int 0 [0]))) src/switch_core_media.c:2953 -1
     (nil))

(jump_insn 444 443 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2953 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 31

;; *proceed_209(D) = 1;

(insn 446 445 447 (set (reg:SI 1089)
        (const_int 1 [0x1])) src/switch_core_media.c:2953 -1
     (nil))

(insn 447 446 448 (set (reg:QI 1090)
        (subreg:QI (reg:SI 1089) 0)) src/switch_core_media.c:2953 -1
     (nil))

(insn 448 447 0 (set (mem:QI (reg/v/f:SI 1027 [ proceed ]) [0 *proceed_209(D)+0 S1 A8])
        (reg:QI 1090)) src/switch_core_media.c:2953 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; 

(code_label 449 448 450 1340 "" [0 uses])

(note 450 449 0 NOTE_INSN_BASIC_BLOCK)

;; D.44490_210 = switch_media_handle_test_media_flag (smh_186, 3);

(insn 451 450 452 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:2955 -1
     (nil))

(insn 452 451 453 (set (reg:SI 1 r1)
        (const_int 3 [0x3])) src/switch_core_media.c:2955 -1
     (nil))

(call_insn 453 452 454 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2955 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 454 453 0 (set (reg:SI 248 [ D.44490 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2955 -1
     (nil))

;; greedy_211 = D.44490_210 != 0;

(insn 455 454 456 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 248 [ D.44490 ])
            (const_int 0 [0]))) src/switch_core_media.c:2955 -1
     (nil))

(insn 456 455 457 (set (reg:SI 1091)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:2955 -1
     (nil))

(insn 457 456 0 (set (reg/v:SI 170 [ greedy ])
        (reg:SI 1091)) src/switch_core_media.c:2955 -1
     (nil))

;; # DEBUG greedy => greedy_211

(debug_insn 458 457 0 (var_location:SI greedy (const_int 0 [0])) src/switch_core_media.c:2955 -1
     (nil))
;; D.44491_212 = switch_media_handle_test_media_flag (smh_186, 4);

(insn 459 458 460 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:2956 -1
     (nil))

(insn 460 459 461 (set (reg:SI 1 r1)
        (const_int 4 [0x4])) src/switch_core_media.c:2956 -1
     (nil))

(call_insn 461 460 462 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2956 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 462 461 0 (set (reg:SI 249 [ D.44491 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2956 -1
     (nil))

;; scrooge_213 = D.44491_212 != 0;

(insn 463 462 464 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 249 [ D.44491 ])
            (const_int 0 [0]))) src/switch_core_media.c:2956 -1
     (nil))

(insn 464 463 465 (set (reg:SI 1092)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:2956 -1
     (nil))

(insn 465 464 0 (set (reg/v:SI 190 [ scrooge ])
        (reg:SI 1092)) src/switch_core_media.c:2956 -1
     (nil))

;; # DEBUG scrooge => scrooge_213

(debug_insn 466 465 0 (var_location:SI scrooge (const_int 0 [0])) src/switch_core_media.c:2956 -1
     (nil))
;; val_214 = switch_channel_get_variable_dup (channel_162, "rtp_codec_negotiation", 1, -1);

(insn 467 466 468 (set (reg:SI 1094)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC296") [flags 0x82]  <var_decl 0x40406660 *.LC296>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 907 [0x38b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 907 [0x38b])
            ] 29)) src/switch_core_media.c:2958 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC296") [flags 0x82]  <var_decl 0x40406660 *.LC296>)
        (nil)))

(insn 468 467 469 (set (reg:SI 1093)
        (reg:SI 1094)) src/switch_core_media.c:2958 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC296") [flags 0x82]  <var_decl 0x40406660 *.LC296>)
        (nil)))

(insn 469 468 470 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:2958 -1
     (nil))

(insn 470 469 471 (set (reg:SI 1 r1)
        (reg:SI 1093)) src/switch_core_media.c:2958 -1
     (nil))

(insn 471 470 472 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:2958 -1
     (nil))

(insn 472 471 473 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:2958 -1
     (nil))

(call_insn 473 472 474 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2958 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 474 473 0 (set (reg/v/f:SI 250 [ val ])
        (reg:SI 0 r0)) src/switch_core_media.c:2958 -1
     (nil))

;; # DEBUG val => val_214

(debug_insn 475 474 0 (var_location:SI val (const_int 0 [0])) src/switch_core_media.c:2958 -1
     (nil))
;; if (val_214 != 0B)

(insn 476 475 477 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 250 [ val ])
            (const_int 0 [0]))) src/switch_core_media.c:2958 -1
     (nil))

(jump_insn 477 476 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2958 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 33

;; D.44494_215 = strcasecmp (val_214, "generous");

(insn 479 478 480 (set (reg:SI 1096)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC297") [flags 0x82]  <var_decl 0x404066c0 *.LC297>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 908 [0x38c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 908 [0x38c])
            ] 29)) src/switch_core_media.c:2959 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC297") [flags 0x82]  <var_decl 0x404066c0 *.LC297>)
        (nil)))

(insn 480 479 481 (set (reg:SI 1095)
        (reg:SI 1096)) src/switch_core_media.c:2959 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC297") [flags 0x82]  <var_decl 0x404066c0 *.LC297>)
        (nil)))

(insn 481 480 482 (set (reg:SI 0 r0)
        (reg/v/f:SI 250 [ val ])) src/switch_core_media.c:2959 -1
     (nil))

(insn 482 481 483 (set (reg:SI 1 r1)
        (reg:SI 1095)) src/switch_core_media.c:2959 -1
     (nil))

(call_insn/i 483 482 484 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2959 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 484 483 0 (set (reg:SI 251 [ D.44494 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2959 -1
     (nil))

;; if (D.44494_215 == 0)

(insn 485 484 486 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 251 [ D.44494 ])
            (const_int 0 [0]))) src/switch_core_media.c:2959 -1
     (nil))

(jump_insn 486 485 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2959 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 34

;; D.44498_218 = strcasecmp (val_214, "greedy");

(insn 488 487 489 (set (reg:SI 1098)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC298") [flags 0x82]  <var_decl 0x40406720 *.LC298>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 909 [0x38d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 909 [0x38d])
            ] 29)) src/switch_core_media.c:2962 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC298") [flags 0x82]  <var_decl 0x40406720 *.LC298>)
        (nil)))

(insn 489 488 490 (set (reg:SI 1097)
        (reg:SI 1098)) src/switch_core_media.c:2962 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC298") [flags 0x82]  <var_decl 0x40406720 *.LC298>)
        (nil)))

(insn 490 489 491 (set (reg:SI 0 r0)
        (reg/v/f:SI 250 [ val ])) src/switch_core_media.c:2962 -1
     (nil))

(insn 491 490 492 (set (reg:SI 1 r1)
        (reg:SI 1097)) src/switch_core_media.c:2962 -1
     (nil))

(call_insn/i 492 491 493 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2962 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 493 492 0 (set (reg:SI 252 [ D.44498 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2962 -1
     (nil))

;; if (D.44498_218 == 0)

(insn 494 493 495 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 252 [ D.44498 ])
            (const_int 0 [0]))) src/switch_core_media.c:2962 -1
     (nil))

(jump_insn 495 494 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2962 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 35

;; D.44502_221 = strcasecmp (val_214, "scrooge");

(insn 497 496 498 (set (reg:SI 1100)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC299") [flags 0x82]  <var_decl 0x40406780 *.LC299>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 910 [0x38e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 910 [0x38e])
            ] 29)) src/switch_core_media.c:2965 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC299") [flags 0x82]  <var_decl 0x40406780 *.LC299>)
        (nil)))

(insn 498 497 499 (set (reg:SI 1099)
        (reg:SI 1100)) src/switch_core_media.c:2965 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC299") [flags 0x82]  <var_decl 0x40406780 *.LC299>)
        (nil)))

(insn 499 498 500 (set (reg:SI 0 r0)
        (reg/v/f:SI 250 [ val ])) src/switch_core_media.c:2965 -1
     (nil))

(insn 500 499 501 (set (reg:SI 1 r1)
        (reg:SI 1099)) src/switch_core_media.c:2965 -1
     (nil))

(call_insn/i 501 500 502 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2965 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 502 501 0 (set (reg:SI 253 [ D.44502 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2965 -1
     (nil))

;; if (D.44502_221 == 0)

(insn 503 502 504 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 253 [ D.44502 ])
            (const_int 0 [0]))) src/switch_core_media.c:2965 -1
     (nil))

(jump_insn 504 503 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2965 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 36

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 2969, session_161(D), 7, "rtp_codec_negotiation ignored invalid value : \'%s\' \n", val_214);

(insn 506 505 507 (set (reg:SI 1102)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 911 [0x38f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 911 [0x38f])
            ] 29)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 507 506 508 (set (reg:SI 1101)
        (reg:SI 1102)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 508 507 509 (set (reg:SI 1104)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 912 [0x390])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 912 [0x390])
            ] 29)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 509 508 510 (set (reg/f:SI 1103)
        (reg:SI 1104)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 510 509 511 (set (reg:SI 1106)
        (plus:SI (reg/f:SI 1103)
            (const_int 1792 [0x700]))) src/switch_core_media.c:2969 -1
     (nil))

(insn 511 510 512 (set (reg:SI 1105)
        (plus:SI (reg:SI 1106)
            (const_int 8 [0x8]))) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1103)
            (const_int 1800 [0x708]))
        (nil)))

(insn 512 511 513 (set (reg:SI 1107)
        (const_int 2969 [0xb99])) src/switch_core_media.c:2969 -1
     (nil))

(insn 513 512 514 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2969 -1
     (nil))

(insn 514 513 515 (set (reg:SI 1108)
        (const_int 7 [0x7])) src/switch_core_media.c:2969 -1
     (nil))

(insn 515 514 516 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1108)) src/switch_core_media.c:2969 -1
     (nil))

(insn 516 515 517 (set (reg:SI 1110)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC300") [flags 0x82]  <var_decl 0x404067e0 *.LC300>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 913 [0x391])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 913 [0x391])
            ] 29)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC300") [flags 0x82]  <var_decl 0x404067e0 *.LC300>)
        (nil)))

(insn 517 516 518 (set (reg/f:SI 1109)
        (reg:SI 1110)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC300") [flags 0x82]  <var_decl 0x404067e0 *.LC300>)
        (nil)))

(insn 518 517 519 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1109)) src/switch_core_media.c:2969 -1
     (nil))

(insn 519 518 520 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v/f:SI 250 [ val ])) src/switch_core_media.c:2969 -1
     (nil))

(insn 520 519 521 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:2969 -1
     (nil))

(insn 521 520 522 (set (reg:SI 1 r1)
        (reg:SI 1101)) src/switch_core_media.c:2969 -1
     (nil))

(insn 522 521 523 (set (reg:SI 2 r2)
        (reg:SI 1105)) src/switch_core_media.c:2969 -1
     (nil))

(insn 523 522 524 (set (reg:SI 3 r3)
        (reg:SI 1107)) src/switch_core_media.c:2969 -1
     (nil))

(call_insn 524 523 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2969 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 37

;; 

(code_label 525 524 526 1341 "" [0 uses])

(note 526 525 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG scrooge => scrooge_80

(debug_insn 527 526 0 (var_location:SI scrooge (const_int 0 [0])) -1
     (nil))
;; # DEBUG greedy => greedy_47

(debug_insn 528 527 0 (var_location:SI greedy (const_int 0 [0])) -1
     (nil))
;; D.44508_226 = switch_core_perform_session_strdup (session_161(D), D.44507_225, "src/switch_core_media.c", &__func__, 2973);

(insn 529 528 530 (set (reg/f:SI 1111)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 12 [0xc])) [2 sdp_198->sdp_origin+0 S4 A32])) src/switch_core_media.c:2973 -1
     (nil))

(insn 530 529 531 (set (reg:SI 1112)
        (mem/s/f:SI (plus:SI (reg/f:SI 1111)
                (const_int 4 [0x4])) [2 D.44506_224->o_username+0 S4 A32])) src/switch_core_media.c:2973 -1
     (nil))

(insn 531 530 532 (set (reg:SI 1114)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 914 [0x392])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 914 [0x392])
            ] 29)) src/switch_core_media.c:2973 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 532 531 533 (set (reg:SI 1113)
        (reg:SI 1114)) src/switch_core_media.c:2973 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 533 532 534 (set (reg:SI 1116)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 915 [0x393])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 915 [0x393])
            ] 29)) src/switch_core_media.c:2973 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 534 533 535 (set (reg/f:SI 1115)
        (reg:SI 1116)) src/switch_core_media.c:2973 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 535 534 536 (set (reg:SI 1118)
        (plus:SI (reg/f:SI 1115)
            (const_int 1792 [0x700]))) src/switch_core_media.c:2973 -1
     (nil))

(insn 536 535 537 (set (reg:SI 1117)
        (plus:SI (reg:SI 1118)
            (const_int 8 [0x8]))) src/switch_core_media.c:2973 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1115)
            (const_int 1800 [0x708]))
        (nil)))

(insn 537 536 538 (set (reg:SI 1119)
        (const_int 2973 [0xb9d])) src/switch_core_media.c:2973 -1
     (nil))

(insn 538 537 539 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1119)) src/switch_core_media.c:2973 -1
     (nil))

(insn 539 538 540 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2973 -1
     (nil))

(insn 540 539 541 (set (reg:SI 1 r1)
        (reg:SI 1112)) src/switch_core_media.c:2973 -1
     (nil))

(insn 541 540 542 (set (reg:SI 2 r2)
        (reg:SI 1113)) src/switch_core_media.c:2973 -1
     (nil))

(insn 542 541 543 (set (reg:SI 3 r3)
        (reg:SI 1117)) src/switch_core_media.c:2973 -1
     (nil))

(call_insn 543 542 544 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2973 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 544 543 0 (set (reg/f:SI 256 [ D.44508 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2973 -1
     (nil))

;; smh_186->origin = D.44508_226;

(insn 545 544 546 (set (reg:SI 1120)
        (const_int 23320 [0x5b18])) src/switch_core_media.c:2973 -1
     (nil))

(insn 546 545 0 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1120)) [2 smh_186->origin+0 S4 A32])
        (reg/f:SI 256 [ D.44508 ])) src/switch_core_media.c:2973 -1
     (nil))

;; if (D.44508_226 != 0B)

(insn 547 546 548 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 256 [ D.44508 ])
            (const_int 0 [0]))) src/switch_core_media.c:2973 -1
     (nil))

(jump_insn 548 547 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2973 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 38

;; prephitmp.1053_229 = D.44471_228->auto_rtp_bugs;

(insn 550 549 551 (set (reg:SI 1122)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:2975 -1
     (nil))

(insn 551 550 552 (set (reg/f:SI 1121)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1122)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:2975 -1
     (nil))

(insn 552 551 0 (set (reg:SI 259 [ prephitmp.1053 ])
        (mem/s:SI (plus:SI (reg/f:SI 1121)
                (const_int 20 [0x14])) [18 D.44471_228->auto_rtp_bugs+0 S4 A32])) src/switch_core_media.c:2975 -1
     (nil))

;; if (D.44514_231 != 0)

(insn 553 552 554 (set (reg:SI 1123)
        (and:SI (reg:SI 259 [ prephitmp.1053 ])
            (const_int 1 [0x1]))) src/switch_core_media.c:2975 -1
     (nil))

(insn 554 553 555 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1123)
            (const_int 0 [0]))) src/switch_core_media.c:2975 -1
     (nil))

(jump_insn 555 554 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2975 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 39

;; D.44518_234 = strstr (D.44508_226, "CiscoSystemsSIP-GW-UserAgent");

(insn 557 556 558 (set (reg:SI 1125)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC301") [flags 0x82]  <var_decl 0x40406840 *.LC301>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 916 [0x394])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 916 [0x394])
            ] 29)) src/switch_core_media.c:2977 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC301") [flags 0x82]  <var_decl 0x40406840 *.LC301>)
        (nil)))

(insn 558 557 559 (set (reg:SI 1124)
        (reg:SI 1125)) src/switch_core_media.c:2977 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC301") [flags 0x82]  <var_decl 0x40406840 *.LC301>)
        (nil)))

(insn 559 558 560 (set (reg:SI 0 r0)
        (reg/f:SI 256 [ D.44508 ])) src/switch_core_media.c:2977 -1
     (nil))

(insn 560 559 561 (set (reg:SI 1 r1)
        (reg:SI 1124)) src/switch_core_media.c:2977 -1
     (nil))

(call_insn/i 561 560 562 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strstr") [flags 0x41]  <function_decl 0x402f5200 strstr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2977 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 562 561 0 (set (reg/f:SI 263 [ D.44518 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2977 -1
     (nil))

;; if (D.44518_234 != 0B)

(insn 563 562 564 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 263 [ D.44518 ])
            (const_int 0 [0]))) src/switch_core_media.c:2977 -1
     (nil))

(jump_insn 564 563 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2977 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 40

;; MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44522_236;

(insn 566 565 567 (set (reg:SI 1126)
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1900 [0x76c])) [18 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs+0 S4 A32])) src/switch_core_media.c:2978 -1
     (nil))

(insn 567 566 568 (set (reg:SI 1127)
        (ior:SI (reg:SI 1126)
            (const_int 1 [0x1]))) src/switch_core_media.c:2978 -1
     (nil))

(insn 568 567 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1900 [0x76c])) [18 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs+0 S4 A32])
        (reg:SI 1127)) src/switch_core_media.c:2978 -1
     (nil))

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 2979, session_161(D), 7, "Activate Buggy RFC2833 Mode!\n");

(insn 569 568 570 (set (reg:SI 1129)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 917 [0x395])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 917 [0x395])
            ] 29)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 570 569 571 (set (reg:SI 1128)
        (reg:SI 1129)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 571 570 572 (set (reg:SI 1131)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 918 [0x396])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 918 [0x396])
            ] 29)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 572 571 573 (set (reg/f:SI 1130)
        (reg:SI 1131)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 573 572 574 (set (reg:SI 1133)
        (plus:SI (reg/f:SI 1130)
            (const_int 1792 [0x700]))) src/switch_core_media.c:2979 -1
     (nil))

(insn 574 573 575 (set (reg:SI 1132)
        (plus:SI (reg:SI 1133)
            (const_int 8 [0x8]))) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1130)
            (const_int 1800 [0x708]))
        (nil)))

(insn 575 574 576 (set (reg:SI 1134)
        (const_int 2979 [0xba3])) src/switch_core_media.c:2979 -1
     (nil))

(insn 576 575 577 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2979 -1
     (nil))

(insn 577 576 578 (set (reg:SI 1135)
        (const_int 7 [0x7])) src/switch_core_media.c:2979 -1
     (nil))

(insn 578 577 579 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1135)) src/switch_core_media.c:2979 -1
     (nil))

(insn 579 578 580 (set (reg:SI 1137)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC302") [flags 0x82]  <var_decl 0x40406960 *.LC302>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 919 [0x397])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 919 [0x397])
            ] 29)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC302") [flags 0x82]  <var_decl 0x40406960 *.LC302>)
        (nil)))

(insn 580 579 581 (set (reg/f:SI 1136)
        (reg:SI 1137)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC302") [flags 0x82]  <var_decl 0x40406960 *.LC302>)
        (nil)))

(insn 581 580 582 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1136)) src/switch_core_media.c:2979 -1
     (nil))

(insn 582 581 583 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:2979 -1
     (nil))

(insn 583 582 584 (set (reg:SI 1 r1)
        (reg:SI 1128)) src/switch_core_media.c:2979 -1
     (nil))

(insn 584 583 585 (set (reg:SI 2 r2)
        (reg:SI 1132)) src/switch_core_media.c:2979 -1
     (nil))

(insn 585 584 586 (set (reg:SI 3 r3)
        (reg:SI 1134)) src/switch_core_media.c:2979 -1
     (nil))

(call_insn 586 585 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2979 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; prephitmp.1053_323 = pretmp.1050_1809->auto_rtp_bugs;

(insn 587 586 588 (set (reg:SI 1139)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:2979 -1
     (nil))

(insn 588 587 589 (set (reg/f:SI 1138)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1139)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:2979 -1
     (nil))

(insn 589 588 0 (set (reg:SI 259 [ prephitmp.1053 ])
        (mem/s:SI (plus:SI (reg/f:SI 1138)
                (const_int 20 [0x14])) [18 pretmp.1050_1809->auto_rtp_bugs+0 S4 A32])) src/switch_core_media.c:2979 -1
     (nil))

;; Generating RTL for gimple basic block 41

;; 

(code_label 590 589 591 1343 "" [0 uses])

(note 591 590 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44523_239 != 0)

(insn 592 591 593 (set (reg:SI 1140)
        (and:SI (reg:SI 259 [ prephitmp.1053 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:2983 -1
     (nil))

(insn 593 592 594 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1140)
            (const_int 0 [0]))) src/switch_core_media.c:2983 -1
     (nil))

(jump_insn 594 593 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2983 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 42

;; D.44526_241 = strstr (D.44509_240, "Sonus_UAC");

(insn 596 595 597 (set (reg:SI 1141)
        (const_int 23320 [0x5b18])) src/switch_core_media.c:2984 -1
     (nil))

(insn 597 596 598 (set (reg:SI 1142)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1141)) [2 smh_186->origin+0 S4 A32])) src/switch_core_media.c:2984 -1
     (nil))

(insn 598 597 599 (set (reg:SI 1144)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC303") [flags 0x82]  <var_decl 0x404069c0 *.LC303>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 920 [0x398])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 920 [0x398])
            ] 29)) src/switch_core_media.c:2984 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC303") [flags 0x82]  <var_decl 0x404069c0 *.LC303>)
        (nil)))

(insn 599 598 600 (set (reg:SI 1143)
        (reg:SI 1144)) src/switch_core_media.c:2984 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC303") [flags 0x82]  <var_decl 0x404069c0 *.LC303>)
        (nil)))

(insn 600 599 601 (set (reg:SI 0 r0)
        (reg:SI 1142)) src/switch_core_media.c:2984 -1
     (nil))

(insn 601 600 602 (set (reg:SI 1 r1)
        (reg:SI 1143)) src/switch_core_media.c:2984 -1
     (nil))

(call_insn/i 602 601 603 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strstr") [flags 0x41]  <function_decl 0x402f5200 strstr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2984 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 603 602 0 (set (reg/f:SI 269 [ D.44526 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2984 -1
     (nil))

;; if (D.44526_241 != 0B)

(insn 604 603 605 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 269 [ D.44526 ])
            (const_int 0 [0]))) src/switch_core_media.c:2984 -1
     (nil))

(jump_insn 605 604 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2984 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 43

;; MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44529_243;

(insn 607 606 608 (set (reg:SI 1145)
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1900 [0x76c])) [18 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs+0 S4 A32])) src/switch_core_media.c:2985 -1
     (nil))

(insn 608 607 609 (set (reg:SI 1146)
        (ior:SI (reg:SI 1145)
            (const_int 2 [0x2]))) src/switch_core_media.c:2985 -1
     (nil))

(insn 609 608 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1900 [0x76c])) [18 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs+0 S4 A32])
        (reg:SI 1146)) src/switch_core_media.c:2985 -1
     (nil))

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 2986, session_161(D), 4, "Hello,\nI see you have a Sonus!\nFYI, Sonus cannot follow the RFC on the proper way to send DTMF.\nSadly, my creator had to spend several hours figuring this out so I thought you\'d like to know that!\nDon\'t worry, DTMF will work but you may want to ask them to fix it......\n");

(insn 610 609 611 (set (reg:SI 1148)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 921 [0x399])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 921 [0x399])
            ] 29)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 611 610 612 (set (reg:SI 1147)
        (reg:SI 1148)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 612 611 613 (set (reg:SI 1150)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 922 [0x39a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 922 [0x39a])
            ] 29)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 613 612 614 (set (reg/f:SI 1149)
        (reg:SI 1150)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 614 613 615 (set (reg:SI 1152)
        (plus:SI (reg/f:SI 1149)
            (const_int 1792 [0x700]))) src/switch_core_media.c:2986 -1
     (nil))

(insn 615 614 616 (set (reg:SI 1151)
        (plus:SI (reg:SI 1152)
            (const_int 8 [0x8]))) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1149)
            (const_int 1800 [0x708]))
        (nil)))

(insn 616 615 617 (set (reg:SI 1153)
        (const_int 2986 [0xbaa])) src/switch_core_media.c:2986 -1
     (nil))

(insn 617 616 618 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2986 -1
     (nil))

(insn 618 617 619 (set (reg:SI 1154)
        (const_int 4 [0x4])) src/switch_core_media.c:2986 -1
     (nil))

(insn 619 618 620 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1154)) src/switch_core_media.c:2986 -1
     (nil))

(insn 620 619 621 (set (reg:SI 1156)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC304") [flags 0x82]  <var_decl 0x40406a20 *.LC304>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 923 [0x39b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 923 [0x39b])
            ] 29)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC304") [flags 0x82]  <var_decl 0x40406a20 *.LC304>)
        (nil)))

(insn 621 620 622 (set (reg/f:SI 1155)
        (reg:SI 1156)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC304") [flags 0x82]  <var_decl 0x40406a20 *.LC304>)
        (nil)))

(insn 622 621 623 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1155)) src/switch_core_media.c:2986 -1
     (nil))

(insn 623 622 624 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:2986 -1
     (nil))

(insn 624 623 625 (set (reg:SI 1 r1)
        (reg:SI 1147)) src/switch_core_media.c:2986 -1
     (nil))

(insn 625 624 626 (set (reg:SI 2 r2)
        (reg:SI 1151)) src/switch_core_media.c:2986 -1
     (nil))

(insn 626 625 627 (set (reg:SI 3 r3)
        (reg:SI 1153)) src/switch_core_media.c:2986 -1
     (nil))

(call_insn 627 626 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2986 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 44

;; 

(code_label 628 627 629 1342 "" [0 uses])

(note 629 628 0 NOTE_INSN_BASIC_BLOCK)

;; val_245 = switch_channel_get_variable_dup (D.44530_244, "rtp_liberal_dtmf", 1, -1);

(insn 630 629 631 (set (reg:SI 1157)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:2995 -1
     (nil))

(insn 631 630 632 (set (reg:SI 1159)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC305") [flags 0x82]  <var_decl 0x40406a80 *.LC305>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 924 [0x39c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 924 [0x39c])
            ] 29)) src/switch_core_media.c:2995 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC305") [flags 0x82]  <var_decl 0x40406a80 *.LC305>)
        (nil)))

(insn 632 631 633 (set (reg:SI 1158)
        (reg:SI 1159)) src/switch_core_media.c:2995 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC305") [flags 0x82]  <var_decl 0x40406a80 *.LC305>)
        (nil)))

(insn 633 632 634 (set (reg:SI 0 r0)
        (reg:SI 1157)) src/switch_core_media.c:2995 -1
     (nil))

(insn 634 633 635 (set (reg:SI 1 r1)
        (reg:SI 1158)) src/switch_core_media.c:2995 -1
     (nil))

(insn 635 634 636 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:2995 -1
     (nil))

(insn 636 635 637 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:2995 -1
     (nil))

(call_insn 637 636 638 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2995 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 638 637 0 (set (reg/v/f:SI 273 [ val ])
        (reg:SI 0 r0)) src/switch_core_media.c:2995 -1
     (nil))

;; # DEBUG val => val_245

(debug_insn 639 638 0 (var_location:SI val (const_int 0 [0])) src/switch_core_media.c:2995 -1
     (nil))
;; if (val_245 != 0B)

(insn 640 639 641 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 273 [ val ])
            (const_int 0 [0]))) src/switch_core_media.c:2995 -1
     (nil))

(jump_insn 641 640 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2995 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 45

;; # DEBUG expr => val_245

(debug_insn 643 642 0 (var_location:SI expr (const_int 0 [0])) -1
     (nil))
;; D.49687_1560 = strcasecmp (val_245, "yes");

(insn 644 643 645 (set (reg:SI 1161)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 925 [0x39d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 925 [0x39d])
            ] 29)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 645 644 646 (set (reg:SI 1160)
        (reg:SI 1161)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 646 645 647 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 647 646 648 (set (reg:SI 1 r1)
        (reg:SI 1160)) ./src/include/switch_utils.h:429 -1
     (nil))

(call_insn/i 648 647 649 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 649 648 0 (set (reg:SI 880 [ D.49687 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:429 -1
     (nil))

;; if (D.49687_1560 == 0)

(insn 650 649 651 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 880 [ D.49687 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 651 650 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 46

;; D.49688_1561 = strcasecmp (val_245, "on");

(insn 653 652 654 (set (reg:SI 1163)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 926 [0x39e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 926 [0x39e])
            ] 29)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 654 653 655 (set (reg:SI 1162)
        (reg:SI 1163)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 655 654 656 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 656 655 657 (set (reg:SI 1 r1)
        (reg:SI 1162)) ./src/include/switch_utils.h:430 -1
     (nil))

(call_insn/i 657 656 658 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 658 657 0 (set (reg:SI 881 [ D.49688 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:430 -1
     (nil))

;; if (D.49688_1561 == 0)

(insn 659 658 660 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 881 [ D.49688 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 660 659 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 47

;; D.49689_1562 = strcasecmp (val_245, "true");

(insn 662 661 663 (set (reg:SI 1165)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 927 [0x39f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 927 [0x39f])
            ] 29)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 663 662 664 (set (reg:SI 1164)
        (reg:SI 1165)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 664 663 665 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 665 664 666 (set (reg:SI 1 r1)
        (reg:SI 1164)) ./src/include/switch_utils.h:431 -1
     (nil))

(call_insn/i 666 665 667 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 667 666 0 (set (reg:SI 882 [ D.49689 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:431 -1
     (nil))

;; if (D.49689_1562 == 0)

(insn 668 667 669 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 882 [ D.49689 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:430 -1
     (nil))

(jump_insn 669 668 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 48

;; D.49690_1563 = strcasecmp (val_245, "t");

(insn 671 670 672 (set (reg:SI 1167)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 928 [0x3a0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 928 [0x3a0])
            ] 29)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 672 671 673 (set (reg:SI 1166)
        (reg:SI 1167)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 673 672 674 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 674 673 675 (set (reg:SI 1 r1)
        (reg:SI 1166)) ./src/include/switch_utils.h:432 -1
     (nil))

(call_insn/i 675 674 676 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 676 675 0 (set (reg:SI 883 [ D.49690 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:432 -1
     (nil))

;; if (D.49690_1563 == 0)

(insn 677 676 678 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 883 [ D.49690 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:431 -1
     (nil))

(jump_insn 678 677 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 49

;; D.49691_1564 = strcasecmp (val_245, "enabled");

(insn 680 679 681 (set (reg:SI 1169)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 929 [0x3a1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 929 [0x3a1])
            ] 29)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 681 680 682 (set (reg:SI 1168)
        (reg:SI 1169)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 682 681 683 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 683 682 684 (set (reg:SI 1 r1)
        (reg:SI 1168)) ./src/include/switch_utils.h:433 -1
     (nil))

(call_insn/i 684 683 685 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 685 684 0 (set (reg:SI 884 [ D.49691 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:433 -1
     (nil))

;; if (D.49691_1564 == 0)

(insn 686 685 687 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 884 [ D.49691 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:432 -1
     (nil))

(jump_insn 687 686 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 50

;; D.49692_1565 = strcasecmp (val_245, "active");

(insn 689 688 690 (set (reg:SI 1171)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 930 [0x3a2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 930 [0x3a2])
            ] 29)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 690 689 691 (set (reg:SI 1170)
        (reg:SI 1171)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 691 690 692 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 692 691 693 (set (reg:SI 1 r1)
        (reg:SI 1170)) ./src/include/switch_utils.h:434 -1
     (nil))

(call_insn/i 693 692 694 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 694 693 0 (set (reg:SI 885 [ D.49692 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:434 -1
     (nil))

;; if (D.49692_1565 == 0)

(insn 695 694 696 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 885 [ D.49692 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:433 -1
     (nil))

(jump_insn 696 695 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 51

;; D.49693_1566 = strcasecmp (val_245, "allow");

(insn 698 697 699 (set (reg:SI 1173)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 931 [0x3a3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 931 [0x3a3])
            ] 29)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 699 698 700 (set (reg:SI 1172)
        (reg:SI 1173)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 700 699 701 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 701 700 702 (set (reg:SI 1 r1)
        (reg:SI 1172)) ./src/include/switch_utils.h:435 -1
     (nil))

(call_insn/i 702 701 703 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 703 702 0 (set (reg:SI 886 [ D.49693 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:435 -1
     (nil))

;; if (D.49693_1566 == 0)

(insn 704 703 705 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 886 [ D.49693 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:434 -1
     (nil))

(jump_insn 705 704 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))

;; Generating RTL for gimple basic block 52

;; D.49694_1567 = switch_is_number (val_245);

(insn 707 706 708 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:436 -1
     (nil))

(call_insn 708 707 709 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:436 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 709 708 0 (set (reg:SI 887 [ D.49694 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:436 -1
     (nil))

;; if (D.49694_1567 != 0)

(insn 710 709 711 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 887 [ D.49694 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:435 -1
     (nil))

(jump_insn 711 710 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 53

;; # DEBUG __nptr => val_245

(debug_insn 713 712 0 (var_location:SI __nptr (const_int 0 [0])) -1
     (nil))
;; D.49695_1568 = strtol (val_245, 0B, 10);

(insn 714 713 715 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 715 714 716 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 716 715 717 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 717 716 718 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 718 717 0 (set (reg:SI 888 [ D.49695 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; if (D.49695_1568 != 0)

(insn 719 718 720 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 888 [ D.49695 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 720 719 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 54

;; 

(code_label 721 720 722 1345 "" [0 uses])

(note 722 721 0 NOTE_INSN_BASIC_BLOCK)

;; switch_channel_set_flag_value (D.44530_247, 93, 1);

(insn 723 722 724 (set (reg:SI 1174)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:2996 -1
     (nil))

(insn 724 723 725 (set (reg:SI 0 r0)
        (reg:SI 1174)) src/switch_core_media.c:2996 -1
     (nil))

(insn 725 724 726 (set (reg:SI 1 r1)
        (const_int 93 [0x5d])) src/switch_core_media.c:2996 -1
     (nil))

(insn 726 725 727 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:2996 -1
     (nil))

(call_insn 727 726 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_set_flag_value") [flags 0x41]  <function_decl 0x40846900 switch_channel_set_flag_value>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2996 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

;; Generating RTL for gimple basic block 55

;; 

(code_label 728 727 729 1344 "" [0 uses])

(note 729 728 0 NOTE_INSN_BASIC_BLOCK)

;; m_248 = sdp_198->sdp_media;

(insn 730 729 0 (set (reg/v/f:SI 276 [ m ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 60 [0x3c])) [2 sdp_198->sdp_media+0 S4 A32])) src/switch_core_media.c:2999 -1
     (nil))

;; # DEBUG m => m_248

(debug_insn 731 730 0 (var_location:SI m (const_int 0 [0])) src/switch_core_media.c:2999 -1
     (nil))
;; if (m_248 != 0B)

(insn 732 731 733 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 276 [ m ])
            (const_int 0 [0]))) src/switch_core_media.c:2999 -1
     (nil))

(jump_insn 733 732 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2999 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 56

;; D.44541_250 = D.44540_249 & 6;

(insn 735 734 736 (set (reg:SI 1176)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 276 [ m ])
                    (const_int 68 [0x44])) [0+68 S1 A32]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 736 735 737 (set (reg:QI 1175)
        (subreg:QI (reg:SI 1176) 0)) src/switch_core_media.c:3000 -1
     (nil))

(insn 737 736 738 (set (reg:SI 1177)
        (and:SI (subreg:SI (reg:QI 1175) 0)
            (const_int 6 [0x6]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 738 737 0 (set (reg:SI 278 [ D.44541 ])
        (zero_extend:SI (subreg:QI (reg:SI 1177) 0))) src/switch_core_media.c:3000 -1
     (nil))

;; if (D.44544_253 != 0)

(insn 739 738 740 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 278 [ D.44541 ])
            (const_int 0 [0]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 740 739 741 (set (reg:SI 1179)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 741 740 742 (set (reg:QI 1178)
        (subreg:QI (reg:SI 1179) 0)) src/switch_core_media.c:3000 -1
     (nil))

(insn 742 741 743 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 278 [ D.44541 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 743 742 744 (set (reg:SI 1181)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 744 743 745 (set (reg:QI 1180)
        (subreg:QI (reg:SI 1181) 0)) src/switch_core_media.c:3000 -1
     (nil))

(insn 745 744 746 (set (reg:SI 1182)
        (ior:SI (subreg:SI (reg:QI 1178) 0)
            (subreg:SI (reg:QI 1180) 0))) src/switch_core_media.c:3000 -1
     (nil))

(insn 746 745 747 (set (reg:QI 1183)
        (subreg:QI (reg:SI 1182) 0)) src/switch_core_media.c:2999 -1
     (nil))

(insn 747 746 748 (set (reg:SI 1184)
        (zero_extend:SI (reg:QI 1183))) src/switch_core_media.c:2999 -1
     (nil))

(insn 748 747 749 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1184)
            (const_int 0 [0]))) src/switch_core_media.c:2999 -1
     (nil))

(jump_insn 749 748 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:2999 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 57

;; D.44546_254 = m_248->m_connections;

(insn 751 750 0 (set (reg/f:SI 282 [ D.44546 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 276 [ m ])
                (const_int 48 [0x30])) [2 m_248->m_connections+0 S4 A32])) src/switch_core_media.c:3001 -1
     (nil))

;; if (D.44546_254 != 0B)

(insn 752 751 753 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 282 [ D.44546 ])
            (const_int 0 [0]))) src/switch_core_media.c:3000 -1
     (nil))

(jump_insn 753 752 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3000 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 58

;; D.44548_256 = D.44546_254->c_address;

(insn 755 754 0 (set (reg/f:SI 284 [ D.44548 ])
        (mem/s/f:SI (plus:SI (reg/f:SI 282 [ D.44546 ])
                (const_int 16 [0x10])) [2 D.44546_254->c_address+0 S4 A32])) src/switch_core_media.c:3001 -1
     (nil))

;; if (D.44548_256 != 0B)

(insn 756 755 757 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 284 [ D.44548 ])
            (const_int 0 [0]))) src/switch_core_media.c:3001 -1
     (nil))

(jump_insn 757 756 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3001 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 59

;; # DEBUG __s2_len => 7

(debug_insn 759 758 0 (var_location:SI __s2_len (const_int 0 [0])) src/switch_core_media.c:3001 -1
     (nil))
;; __result_300 = __builtin_strcmp (D.44548_256, "0.0.0.0");

(insn 760 759 761 (set (reg:SI 1186)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC306") [flags 0x82]  <var_decl 0x40406ae0 *.LC306>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 932 [0x3a4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 932 [0x3a4])
            ] 29)) src/switch_core_media.c:3001 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC306") [flags 0x82]  <var_decl 0x40406ae0 *.LC306>)
        (nil)))

(insn 761 760 762 (set (reg:SI 1185)
        (reg:SI 1186)) src/switch_core_media.c:3001 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC306") [flags 0x82]  <var_decl 0x40406ae0 *.LC306>)
        (nil)))

(insn 762 761 763 (set (reg:SI 0 r0)
        (reg/f:SI 284 [ D.44548 ])) src/switch_core_media.c:3001 -1
     (nil))

(insn 763 762 764 (set (reg:SI 1 r1)
        (reg:SI 1185)) src/switch_core_media.c:3001 -1
     (nil))

(call_insn/i 764 763 765 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41]  <function_decl 0x402f3600 __builtin_strcmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3001 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 765 764 766 (set (reg:SI 1187)
        (reg:SI 0 r0)) src/switch_core_media.c:3001 -1
     (nil))

(insn 766 765 0 (set (reg/v:SI 286 [ __result ])
        (reg:SI 1187)) src/switch_core_media.c:3001 -1
     (nil))

;; if (__result_300 == 0)

(insn 767 766 768 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 286 [ __result ])
            (const_int 0 [0]))) src/switch_core_media.c:3001 -1
     (nil))

(jump_insn 768 767 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3001 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; 

(code_label 770 769 771 1347 "" [0 uses])

(note 771 770 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG sendonly => sendonly_42

(debug_insn 772 771 0 (var_location:SI sendonly (const_int 0 [0])) -1
     (nil))
;; attr_303 = sdp_198->sdp_attributes;

(insn 773 772 0 (set (reg/v/f:SI 305 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 52 [0x34])) [2 sdp_198->sdp_attributes+0 S4 A32])) src/switch_core_media.c:3005 -1
     (nil))

;; # DEBUG attr => attr_303

(debug_insn 774 773 0 (var_location:SI attr (const_int 0 [0])) src/switch_core_media.c:3005 -1
     (nil))
;; # DEBUG recvonly => 0

(debug_insn 775 774 0 (var_location:SI recvonly (const_int 0 [0])) -1
     (nil))
;; # DEBUG sendonly => sendonly_42

(debug_insn 776 775 0 (var_location:SI sendonly (const_int 0 [0])) -1
     (nil))
;; # DEBUG dmaxptime => 0

(debug_insn 777 776 0 (var_location:SI dmaxptime (const_int 0 [0])) -1
     (nil))
;; # DEBUG dptime => 0

(debug_insn 778 777 0 (var_location:SI dptime (const_int 0 [0])) -1
     (nil))
;; # DEBUG attr => attr_303

(debug_insn 779 778 0 (var_location:SI attr (const_int 0 [0])) -1
     (nil))
;; if (attr_303 != 0B)

(insn 780 779 781 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 305 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3005 -1
     (nil))

(jump_insn 781 780 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3005 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 62

;; D.44590_304 = attr_1666->a_name;

(insn 783 782 0 (set (reg/f:SI 287 [ D.44590 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 305 [ attr ])
                (const_int 8 [0x8])) [2 attr_1666->a_name+0 S4 A32])) src/switch_core_media.c:3006 -1
     (nil))

;; # DEBUG s => D.44590_304

(debug_insn 784 783 0 (var_location:SI s (const_int 0 [0])) src/switch_core_media.c:3006 -1
     (nil))
;; if (D.44590_304 == 0B)

(insn 785 784 786 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 287 [ D.44590 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 786 785 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 63

;; if (D.47877_1465 == 0)

(insn 788 787 789 63 (set (reg:SI 1188)
        (zero_extend:SI (mem:QI (reg/f:SI 287 [ D.44590 ]) [0 *D.44590_304+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 789 788 790 63 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1188)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 790 789 793 63 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 793 790 791 452 [bb 452] NOTE_INSN_BASIC_BLOCK)

(jump_insn 791 793 792 452 (set (pc)
        (label_ref 0)) ./src/include/switch_utils.h:254 -1
     (nil))

(barrier 792 791 0)

;; Generating RTL for gimple basic block 64

;; # DEBUG sendonly => 1

(debug_insn 795 794 0 (var_location:SI sendonly (const_int 0 [0])) src/switch_core_media.c:3011 -1
     (nil))
;; switch_channel_set_variable_var_check (D.44530_309, "media_audio_mode", "recvonly", 1);

(insn 796 795 797 (set (reg:SI 1189)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3012 -1
     (nil))

(insn 797 796 798 (set (reg:SI 1191)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 933 [0x3a5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 933 [0x3a5])
            ] 29)) src/switch_core_media.c:3012 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 798 797 799 (set (reg:SI 1190)
        (reg:SI 1191)) src/switch_core_media.c:3012 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 799 798 800 (set (reg:SI 1193)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 934 [0x3a6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 934 [0x3a6])
            ] 29)) src/switch_core_media.c:3012 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
        (nil)))

(insn 800 799 801 (set (reg:SI 1192)
        (reg:SI 1193)) src/switch_core_media.c:3012 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
        (nil)))

(insn 801 800 802 (set (reg:SI 0 r0)
        (reg:SI 1189)) src/switch_core_media.c:3012 -1
     (nil))

(insn 802 801 803 (set (reg:SI 1 r1)
        (reg:SI 1190)) src/switch_core_media.c:3012 -1
     (nil))

(insn 803 802 804 (set (reg:SI 2 r2)
        (reg:SI 1192)) src/switch_core_media.c:3012 -1
     (nil))

(insn 804 803 805 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3012 -1
     (nil))

(call_insn 805 804 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3012 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 65

;; D.44598_311 = strcasecmp (D.44590_304, "inactive");

(insn 809 808 810 (set (reg:SI 1195)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 935 [0x3a7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 935 [0x3a7])
            ] 29)) src/switch_core_media.c:3013 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 810 809 811 (set (reg:SI 1194)
        (reg:SI 1195)) src/switch_core_media.c:3013 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 811 810 812 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3013 -1
     (nil))

(insn 812 811 813 (set (reg:SI 1 r1)
        (reg:SI 1194)) src/switch_core_media.c:3013 -1
     (nil))

(call_insn/i 813 812 814 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3013 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 814 813 0 (set (reg:SI 290 [ D.44598 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3013 -1
     (nil))

;; if (D.44598_311 == 0)

(insn 815 814 816 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 290 [ D.44598 ])
            (const_int 0 [0]))) src/switch_core_media.c:3013 -1
     (nil))

(jump_insn 816 815 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3013 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 66

;; # DEBUG sendonly => 1

(debug_insn 818 817 0 (var_location:SI sendonly (const_int 0 [0])) src/switch_core_media.c:3014 -1
     (nil))
;; switch_channel_set_variable_var_check (D.44530_313, "media_audio_mode", "inactive", 1);

(insn 819 818 820 (set (reg:SI 1196)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3015 -1
     (nil))

(insn 820 819 821 (set (reg:SI 1198)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 936 [0x3a8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 936 [0x3a8])
            ] 29)) src/switch_core_media.c:3015 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 821 820 822 (set (reg:SI 1197)
        (reg:SI 1198)) src/switch_core_media.c:3015 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 822 821 823 (set (reg:SI 1200)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 937 [0x3a9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 937 [0x3a9])
            ] 29)) src/switch_core_media.c:3015 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 823 822 824 (set (reg:SI 1199)
        (reg:SI 1200)) src/switch_core_media.c:3015 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 824 823 825 (set (reg:SI 0 r0)
        (reg:SI 1196)) src/switch_core_media.c:3015 -1
     (nil))

(insn 825 824 826 (set (reg:SI 1 r1)
        (reg:SI 1197)) src/switch_core_media.c:3015 -1
     (nil))

(insn 826 825 827 (set (reg:SI 2 r2)
        (reg:SI 1199)) src/switch_core_media.c:3015 -1
     (nil))

(insn 827 826 828 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3015 -1
     (nil))

(call_insn 828 827 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3015 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 67

;; 

(code_label 831 830 832 1351 "" [0 uses])

(note 832 831 0 NOTE_INSN_BASIC_BLOCK)

;; D.44602_315 = strcasecmp (D.44590_304, "recvonly");

(insn 833 832 834 (set (reg:SI 1202)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 938 [0x3aa])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 938 [0x3aa])
            ] 29)) src/switch_core_media.c:3016 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
        (nil)))

(insn 834 833 835 (set (reg:SI 1201)
        (reg:SI 1202)) src/switch_core_media.c:3016 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
        (nil)))

(insn 835 834 836 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3016 -1
     (nil))

(insn 836 835 837 (set (reg:SI 1 r1)
        (reg:SI 1201)) src/switch_core_media.c:3016 -1
     (nil))

(call_insn/i 837 836 838 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3016 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 838 837 0 (set (reg:SI 292 [ D.44602 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3016 -1
     (nil))

;; if (D.44602_315 == 0)

(insn 839 838 840 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 292 [ D.44602 ])
            (const_int 0 [0]))) src/switch_core_media.c:3016 -1
     (nil))

(jump_insn 840 839 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3016 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 68

;; switch_channel_set_variable_var_check (D.44530_316, "media_audio_mode", "sendonly", 1);

(insn 842 841 843 (set (reg:SI 1203)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3017 -1
     (nil))

(insn 843 842 844 (set (reg:SI 1205)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 939 [0x3ab])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 939 [0x3ab])
            ] 29)) src/switch_core_media.c:3017 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 844 843 845 (set (reg:SI 1204)
        (reg:SI 1205)) src/switch_core_media.c:3017 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 845 844 846 (set (reg:SI 1207)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 940 [0x3ac])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 940 [0x3ac])
            ] 29)) src/switch_core_media.c:3017 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
        (nil)))

(insn 846 845 847 (set (reg:SI 1206)
        (reg:SI 1207)) src/switch_core_media.c:3017 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
        (nil)))

(insn 847 846 848 (set (reg:SI 0 r0)
        (reg:SI 1203)) src/switch_core_media.c:3017 -1
     (nil))

(insn 848 847 849 (set (reg:SI 1 r1)
        (reg:SI 1204)) src/switch_core_media.c:3017 -1
     (nil))

(insn 849 848 850 (set (reg:SI 2 r2)
        (reg:SI 1206)) src/switch_core_media.c:3017 -1
     (nil))

(insn 850 849 851 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3017 -1
     (nil))

(call_insn 851 850 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3017 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG recvonly => 1

(debug_insn 852 851 0 (var_location:SI recvonly (const_int 0 [0])) src/switch_core_media.c:3018 -1
     (nil))
;; D.44606_319 = switch_rtp_ready (D.44605_318);

(insn 853 852 854 (set (reg:SI 1208)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3020 -1
     (nil))

(insn 854 853 855 (set (reg:SI 0 r0)
        (reg:SI 1208)) src/switch_core_media.c:3020 -1
     (nil))

(call_insn 855 854 856 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_ready") [flags 0x41]  <function_decl 0x408c6980 switch_rtp_ready>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3020 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 856 855 857 (set (reg:SI 1209)
        (reg:SI 0 r0)) src/switch_core_media.c:3020 -1
     (nil))

(insn 857 856 0 (set (reg:SI 295 [ D.44606 ])
        (reg:SI 1209)) src/switch_core_media.c:3020 -1
     (nil))

;; if (D.44606_319 != 0)

(insn 858 857 859 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 295 [ D.44606 ])
            (const_int 0 [0]))) src/switch_core_media.c:3020 -1
     (nil))

(jump_insn 859 858 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3020 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 69

;; switch_rtp_set_max_missed_packets (D.44605_320, 0);

(insn 861 860 862 (set (reg:SI 1210)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3021 -1
     (nil))

(insn 862 861 863 (set (reg:SI 0 r0)
        (reg:SI 1210)) src/switch_core_media.c:3021 -1
     (nil))

(insn 863 862 864 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3021 -1
     (nil))

(call_insn 864 863 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_max_missed_packets") [flags 0x41]  <function_decl 0x408c6680 switch_rtp_set_max_missed_packets>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3021 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_hold_packets = 0;

(insn 865 864 866 (set (reg:SI 1211)
        (const_int 0 [0])) src/switch_core_media.c:3022 -1
     (nil))

(insn 866 865 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1884 [0x75c])) [4 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_hold_packets+0 S4 A32])
        (reg:SI 1211)) src/switch_core_media.c:3022 -1
     (nil))

;; MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_packets = 0;

(insn 867 866 868 (set (reg:SI 1212)
        (const_int 0 [0])) src/switch_core_media.c:3023 -1
     (nil))

(insn 868 867 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1880 [0x758])) [4 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_packets+0 S4 A32])
        (reg:SI 1212)) src/switch_core_media.c:3023 -1
     (nil))

;; Generating RTL for gimple basic block 70

;; 

(code_label 871 870 872 1353 "" [0 uses])

(note 872 871 0 NOTE_INSN_BASIC_BLOCK)

;; switch_channel_set_variable_var_check (D.44530_321, "rtp_timeout_sec", "0", 1);

(insn 873 872 874 (set (reg:SI 1213)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3025 -1
     (nil))

(insn 874 873 875 (set (reg:SI 1215)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC214") [flags 0x82]  <var_decl 0x423a2ba0 *.LC214>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 941 [0x3ad])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 941 [0x3ad])
            ] 29)) src/switch_core_media.c:3025 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC214") [flags 0x82]  <var_decl 0x423a2ba0 *.LC214>)
        (nil)))

(insn 875 874 876 (set (reg:SI 1214)
        (reg:SI 1215)) src/switch_core_media.c:3025 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC214") [flags 0x82]  <var_decl 0x423a2ba0 *.LC214>)
        (nil)))

(insn 876 875 877 (set (reg:SI 1217)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 942 [0x3ae])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 942 [0x3ae])
            ] 29)) src/switch_core_media.c:3025 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
        (nil)))

(insn 877 876 878 (set (reg:SI 1216)
        (reg:SI 1217)) src/switch_core_media.c:3025 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
        (nil)))

(insn 878 877 879 (set (reg:SI 0 r0)
        (reg:SI 1213)) src/switch_core_media.c:3025 -1
     (nil))

(insn 879 878 880 (set (reg:SI 1 r1)
        (reg:SI 1214)) src/switch_core_media.c:3025 -1
     (nil))

(insn 880 879 881 (set (reg:SI 2 r2)
        (reg:SI 1216)) src/switch_core_media.c:3025 -1
     (nil))

(insn 881 880 882 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3025 -1
     (nil))

(call_insn 882 881 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3025 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_322, "rtp_hold_timeout_sec", "0", 1);

(insn 883 882 884 (set (reg:SI 1218)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3026 -1
     (nil))

(insn 884 883 885 (set (reg:SI 1220)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC215") [flags 0x82]  <var_decl 0x423a2c00 *.LC215>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 943 [0x3af])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 943 [0x3af])
            ] 29)) src/switch_core_media.c:3026 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC215") [flags 0x82]  <var_decl 0x423a2c00 *.LC215>)
        (nil)))

(insn 885 884 886 (set (reg:SI 1219)
        (reg:SI 1220)) src/switch_core_media.c:3026 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC215") [flags 0x82]  <var_decl 0x423a2c00 *.LC215>)
        (nil)))

(insn 886 885 887 (set (reg:SI 1222)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 944 [0x3b0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 944 [0x3b0])
            ] 29)) src/switch_core_media.c:3026 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
        (nil)))

(insn 887 886 888 (set (reg:SI 1221)
        (reg:SI 1222)) src/switch_core_media.c:3026 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
        (nil)))

(insn 888 887 889 (set (reg:SI 0 r0)
        (reg:SI 1218)) src/switch_core_media.c:3026 -1
     (nil))

(insn 889 888 890 (set (reg:SI 1 r1)
        (reg:SI 1219)) src/switch_core_media.c:3026 -1
     (nil))

(insn 890 889 891 (set (reg:SI 2 r2)
        (reg:SI 1221)) src/switch_core_media.c:3026 -1
     (nil))

(insn 891 890 892 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3026 -1
     (nil))

(call_insn 892 891 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3026 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 71

;; 

(code_label 895 894 896 1352 "" [0 uses])

(note 896 895 0 NOTE_INSN_BASIC_BLOCK)

;; if (sendonly_1689 != 2)

(insn 897 896 898 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 166 [ sendonly ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3028 -1
     (nil))

(jump_insn 898 897 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3028 -1
     (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
        (nil)))

;; Generating RTL for gimple basic block 72

;; D.44614_324 = strcasecmp (D.44590_304, "sendrecv");

(insn 900 899 901 (set (reg:SI 1224)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC310") [flags 0x82]  <var_decl 0x40406cc0 *.LC310>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 945 [0x3b1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 945 [0x3b1])
            ] 29)) src/switch_core_media.c:3028 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC310") [flags 0x82]  <var_decl 0x40406cc0 *.LC310>)
        (nil)))

(insn 901 900 902 (set (reg:SI 1223)
        (reg:SI 1224)) src/switch_core_media.c:3028 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC310") [flags 0x82]  <var_decl 0x40406cc0 *.LC310>)
        (nil)))

(insn 902 901 903 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3028 -1
     (nil))

(insn 903 902 904 (set (reg:SI 1 r1)
        (reg:SI 1223)) src/switch_core_media.c:3028 -1
     (nil))

(call_insn/i 904 903 905 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3028 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 905 904 0 (set (reg:SI 299 [ D.44614 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3028 -1
     (nil))

;; if (D.44614_324 == 0)

(insn 906 905 907 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 299 [ D.44614 ])
            (const_int 0 [0]))) src/switch_core_media.c:3028 -1
     (nil))

(jump_insn 907 906 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3028 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 73

;; 

(code_label 908 907 909 1354 "" [0 uses])

(note 909 908 0 NOTE_INSN_BASIC_BLOCK)

;; D.44616_327 = strcasecmp (D.44590_304, "ptime");

(insn 910 909 911 (set (reg:SI 1226)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 946 [0x3b2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 946 [0x3b2])
            ] 29)) src/switch_core_media.c:3030 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
        (nil)))

(insn 911 910 912 (set (reg:SI 1225)
        (reg:SI 1226)) src/switch_core_media.c:3030 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
        (nil)))

(insn 912 911 913 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3030 -1
     (nil))

(insn 913 912 914 (set (reg:SI 1 r1)
        (reg:SI 1225)) src/switch_core_media.c:3030 -1
     (nil))

(call_insn/i 914 913 915 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3030 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 915 914 0 (set (reg:SI 300 [ D.44616 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3030 -1
     (nil))

;; if (D.44616_327 == 0)

(insn 916 915 917 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 300 [ D.44616 ])
            (const_int 0 [0]))) src/switch_core_media.c:3030 -1
     (nil))

(jump_insn 917 916 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3030 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 74

;; # DEBUG __nptr => D.44619_328

(debug_insn 919 918 0 (var_location:SI __nptr (const_int 0 [0])) src/switch_core_media.c:3031 -1
     (nil))
;; dptime_1467 = strtol (D.44619_328, 0B, 10);

(insn 920 919 921 (set (reg:SI 1227)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 305 [ attr ])
                (const_int 12 [0xc])) [2 attr_1666->a_value+0 S4 A32])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 921 920 922 (set (reg:SI 0 r0)
        (reg:SI 1227)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 922 921 923 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 923 922 924 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 924 923 925 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 925 924 0 (set (reg/v:SI 160 [ dptime ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; # DEBUG dptime => NULL

(debug_insn 926 925 0 (var_location:SI dptime (const_int 0 [0])) src/switch_core_media.c:3031 -1
     (nil))
;; Generating RTL for gimple basic block 75

;; 

(code_label 929 928 930 1355 "" [0 uses])

(note 930 929 0 NOTE_INSN_BASIC_BLOCK)

;; D.44621_331 = strcasecmp (D.44590_304, "maxptime");

(insn 931 930 932 (set (reg:SI 1229)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 947 [0x3b3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 947 [0x3b3])
            ] 29)) src/switch_core_media.c:3032 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
        (nil)))

(insn 932 931 933 (set (reg:SI 1228)
        (reg:SI 1229)) src/switch_core_media.c:3032 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
        (nil)))

(insn 933 932 934 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3032 -1
     (nil))

(insn 934 933 935 (set (reg:SI 1 r1)
        (reg:SI 1228)) src/switch_core_media.c:3032 -1
     (nil))

(call_insn/i 935 934 936 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3032 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 936 935 0 (set (reg:SI 303 [ D.44621 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3032 -1
     (nil))

;; if (D.44621_331 == 0)

(insn 937 936 938 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 303 [ D.44621 ])
            (const_int 0 [0]))) src/switch_core_media.c:3032 -1
     (nil))

(jump_insn 938 937 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3032 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 76

;; # DEBUG __nptr => D.44619_332

(debug_insn 940 939 0 (var_location:SI __nptr (const_int 0 [0])) src/switch_core_media.c:3033 -1
     (nil))
;; dmaxptime_1468 = strtol (D.44619_332, 0B, 10);

(insn 941 940 942 (set (reg:SI 1230)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 305 [ attr ])
                (const_int 12 [0xc])) [2 attr_1666->a_value+0 S4 A32])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 942 941 943 (set (reg:SI 0 r0)
        (reg:SI 1230)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 943 942 944 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 944 943 945 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 945 944 946 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 946 945 0 (set (reg/v:SI 164 [ dmaxptime ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; # DEBUG dmaxptime => NULL

(debug_insn 947 946 0 (var_location:SI dmaxptime (const_int 0 [0])) src/switch_core_media.c:3033 -1
     (nil))
;; Generating RTL for gimple basic block 77

;; 

(code_label 948 947 949 1349 "" [0 uses])

(note 949 948 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG recvonly => recvonly_45

(debug_insn 950 949 0 (var_location:SI recvonly (const_int 0 [0])) -1
     (nil))
;; # DEBUG sendonly => sendonly_43

(debug_insn 951 950 0 (var_location:SI sendonly (const_int 0 [0])) -1
     (nil))
;; # DEBUG dmaxptime => dmaxptime_40

(debug_insn 952 951 0 (var_location:SI dmaxptime (const_int 0 [0])) -1
     (nil))
;; # DEBUG dptime => dptime_36

(debug_insn 953 952 0 (var_location:SI dptime (const_int 0 [0])) -1
     (nil))
;; attr_334 = attr_1666->a_next;

(insn 954 953 0 (set (reg/v/f:SI 305 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 305 [ attr ])
                (const_int 4 [0x4])) [2 attr_1666->a_next+0 S4 A32])) src/switch_core_media.c:3005 -1
     (nil))

;; # DEBUG attr => attr_334

(debug_insn 955 954 0 (var_location:SI attr (const_int 0 [0])) src/switch_core_media.c:3005 -1
     (nil))
;; # DEBUG recvonly => recvonly_45

(debug_insn 956 955 0 (var_location:SI recvonly (const_int 0 [0])) -1
     (nil))
;; # DEBUG sendonly => sendonly_43

(debug_insn 957 956 0 (var_location:SI sendonly (const_int 0 [0])) -1
     (nil))
;; # DEBUG dmaxptime => dmaxptime_40

(debug_insn 958 957 0 (var_location:SI dmaxptime (const_int 0 [0])) -1
     (nil))
;; # DEBUG dptime => dptime_36

(debug_insn 959 958 0 (var_location:SI dptime (const_int 0 [0])) -1
     (nil))
;; # DEBUG attr => attr_334

(debug_insn 960 959 0 (var_location:SI attr (const_int 0 [0])) -1
     (nil))
;; if (attr_334 != 0B)

(insn 962 960 963 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 305 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3005 -1
     (nil))

(jump_insn 963 962 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 961)
            (pc))) src/switch_core_media.c:3005 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 78

;; prephitmp.1026_1683 = recvonly_869 != 1;

(insn 965 964 966 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 168 [ recvonly ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3005 -1
     (nil))

(insn 966 965 967 (set (reg:SI 1232)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3005 -1
     (nil))

(insn 967 966 968 (set (reg:QI 1231)
        (subreg:QI (reg:SI 1232) 0)) src/switch_core_media.c:3005 -1
     (nil))

(insn 968 967 0 (set (reg:SI 955 [ prephitmp.1026 ])
        (zero_extend:SI (reg:QI 1231))) src/switch_core_media.c:3005 -1
     (nil))

;; Generating RTL for gimple basic block 79

;; 

(code_label 969 968 970 1348 "" [0 uses])

(note 970 969 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44626_337 != 0)

(insn 971 970 972 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 166 [ sendonly ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3037 -1
     (nil))

(insn 972 971 973 (set (reg:SI 1234)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3037 -1
     (nil))

(insn 973 972 974 (set (reg:QI 1233)
        (subreg:QI (reg:SI 1234) 0)) src/switch_core_media.c:3037 -1
     (nil))

(insn 974 973 975 (set (reg:SI 1235)
        (and:SI (reg:SI 955 [ prephitmp.1026 ])
            (subreg:SI (reg:QI 1233) 0))) src/switch_core_media.c:3037 -1
     (nil))

(insn 975 974 976 (set (reg:QI 1236)
        (subreg:QI (reg:SI 1235) 0)) src/switch_core_media.c:3037 -1
     (nil))

(insn 976 975 977 (set (reg:SI 1237)
        (zero_extend:SI (reg:QI 1236))) src/switch_core_media.c:3037 -1
     (nil))

(insn 977 976 978 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1237)
            (const_int 0 [0]))) src/switch_core_media.c:3037 -1
     (nil))

(jump_insn 978 977 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3037 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 80

;; switch_channel_set_variable_var_check (D.44530_338, "media_audio_mode", 0B, 1);

(insn 980 979 981 (set (reg:SI 1238)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3038 -1
     (nil))

(insn 981 980 982 (set (reg:SI 1240)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 948 [0x3b4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 948 [0x3b4])
            ] 29)) src/switch_core_media.c:3038 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 982 981 983 (set (reg:SI 1239)
        (reg:SI 1240)) src/switch_core_media.c:3038 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 983 982 984 (set (reg:SI 0 r0)
        (reg:SI 1238)) src/switch_core_media.c:3038 -1
     (nil))

(insn 984 983 985 (set (reg:SI 1 r1)
        (reg:SI 1239)) src/switch_core_media.c:3038 -1
     (nil))

(insn 985 984 986 (set (reg:SI 2 r2)
        (const_int 0 [0])) src/switch_core_media.c:3038 -1
     (nil))

(insn 986 985 987 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3038 -1
     (nil))

(call_insn 987 986 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3038 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 81

;; 

(code_label 988 987 989 1357 "" [0 uses])

(note 989 988 0 NOTE_INSN_BASIC_BLOCK)

;; D.44631_339 = switch_media_handle_test_media_flag (smh_186, 5);

(insn 990 989 991 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3041 -1
     (nil))

(insn 991 990 992 (set (reg:SI 1 r1)
        (const_int 5 [0x5])) src/switch_core_media.c:3041 -1
     (nil))

(call_insn 992 991 993 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3041 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 993 992 0 (set (reg:SI 309 [ D.44631 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3041 -1
     (nil))

;; if (D.44631_339 == 0)

(insn 994 993 995 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 309 [ D.44631 ])
            (const_int 0 [0]))) src/switch_core_media.c:3041 -1
     (nil))

(jump_insn 995 994 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3041 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 82

;; val_341 = switch_channel_get_variable_dup (D.44530_340, "rtp_disable_hold", 1, -1);

(insn 997 996 998 (set (reg:SI 1241)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3041 -1
     (nil))

(insn 998 997 999 (set (reg:SI 1243)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC312") [flags 0x82]  <var_decl 0x40410300 *.LC312>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 949 [0x3b5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 949 [0x3b5])
            ] 29)) src/switch_core_media.c:3041 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC312") [flags 0x82]  <var_decl 0x40410300 *.LC312>)
        (nil)))

(insn 999 998 1000 (set (reg:SI 1242)
        (reg:SI 1243)) src/switch_core_media.c:3041 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC312") [flags 0x82]  <var_decl 0x40410300 *.LC312>)
        (nil)))

(insn 1000 999 1001 (set (reg:SI 0 r0)
        (reg:SI 1241)) src/switch_core_media.c:3041 -1
     (nil))

(insn 1001 1000 1002 (set (reg:SI 1 r1)
        (reg:SI 1242)) src/switch_core_media.c:3041 -1
     (nil))

(insn 1002 1001 1003 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3041 -1
     (nil))

(insn 1003 1002 1004 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3041 -1
     (nil))

(call_insn 1004 1003 1005 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3041 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1005 1004 0 (set (reg/v/f:SI 311 [ val ])
        (reg:SI 0 r0)) src/switch_core_media.c:3041 -1
     (nil))

;; # DEBUG val => val_341

(debug_insn 1006 1005 0 (var_location:SI val (const_int 0 [0])) src/switch_core_media.c:3041 -1
     (nil))
;; if (val_341 == 0B)

(insn 1007 1006 1008 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 311 [ val ])
            (const_int 0 [0]))) src/switch_core_media.c:3041 -1
     (nil))

(jump_insn 1008 1007 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3041 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 83

;; # DEBUG expr => val_341

(debug_insn 1010 1009 0 (var_location:SI expr (const_int 0 [0])) -1
     (nil))
;; D.49699_1570 = strcasecmp (val_341, "yes");

(insn 1011 1010 1012 (set (reg:SI 1245)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 950 [0x3b6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 950 [0x3b6])
            ] 29)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 1012 1011 1013 (set (reg:SI 1244)
        (reg:SI 1245)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 1013 1012 1014 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 1014 1013 1015 (set (reg:SI 1 r1)
        (reg:SI 1244)) ./src/include/switch_utils.h:429 -1
     (nil))

(call_insn/i 1015 1014 1016 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1016 1015 0 (set (reg:SI 890 [ D.49699 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:429 -1
     (nil))

;; if (D.49699_1570 == 0)

(insn 1017 1016 1018 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 890 [ D.49699 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 1018 1017 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 84

;; D.49700_1571 = strcasecmp (val_341, "on");

(insn 1020 1019 1021 (set (reg:SI 1247)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 951 [0x3b7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 951 [0x3b7])
            ] 29)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 1021 1020 1022 (set (reg:SI 1246)
        (reg:SI 1247)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 1022 1021 1023 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 1023 1022 1024 (set (reg:SI 1 r1)
        (reg:SI 1246)) ./src/include/switch_utils.h:430 -1
     (nil))

(call_insn/i 1024 1023 1025 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1025 1024 0 (set (reg:SI 891 [ D.49700 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:430 -1
     (nil))

;; if (D.49700_1571 == 0)

(insn 1026 1025 1027 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 891 [ D.49700 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 1027 1026 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 85

;; D.49701_1572 = strcasecmp (val_341, "true");

(insn 1029 1028 1030 (set (reg:SI 1249)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 952 [0x3b8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 952 [0x3b8])
            ] 29)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1030 1029 1031 (set (reg:SI 1248)
        (reg:SI 1249)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1031 1030 1032 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 1032 1031 1033 (set (reg:SI 1 r1)
        (reg:SI 1248)) ./src/include/switch_utils.h:431 -1
     (nil))

(call_insn/i 1033 1032 1034 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1034 1033 0 (set (reg:SI 892 [ D.49701 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:431 -1
     (nil))

;; if (D.49701_1572 == 0)

(insn 1035 1034 1036 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 892 [ D.49701 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:430 -1
     (nil))

(jump_insn 1036 1035 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 86

;; D.49702_1573 = strcasecmp (val_341, "t");

(insn 1038 1037 1039 (set (reg:SI 1251)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 953 [0x3b9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 953 [0x3b9])
            ] 29)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 1039 1038 1040 (set (reg:SI 1250)
        (reg:SI 1251)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 1040 1039 1041 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 1041 1040 1042 (set (reg:SI 1 r1)
        (reg:SI 1250)) ./src/include/switch_utils.h:432 -1
     (nil))

(call_insn/i 1042 1041 1043 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1043 1042 0 (set (reg:SI 893 [ D.49702 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:432 -1
     (nil))

;; if (D.49702_1573 == 0)

(insn 1044 1043 1045 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 893 [ D.49702 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:431 -1
     (nil))

(jump_insn 1045 1044 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 87

;; D.49703_1574 = strcasecmp (val_341, "enabled");

(insn 1047 1046 1048 (set (reg:SI 1253)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 954 [0x3ba])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 954 [0x3ba])
            ] 29)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 1048 1047 1049 (set (reg:SI 1252)
        (reg:SI 1253)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 1049 1048 1050 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 1050 1049 1051 (set (reg:SI 1 r1)
        (reg:SI 1252)) ./src/include/switch_utils.h:433 -1
     (nil))

(call_insn/i 1051 1050 1052 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1052 1051 0 (set (reg:SI 894 [ D.49703 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:433 -1
     (nil))

;; if (D.49703_1574 == 0)

(insn 1053 1052 1054 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 894 [ D.49703 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:432 -1
     (nil))

(jump_insn 1054 1053 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 88

;; D.49704_1575 = strcasecmp (val_341, "active");

(insn 1056 1055 1057 (set (reg:SI 1255)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 955 [0x3bb])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 955 [0x3bb])
            ] 29)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 1057 1056 1058 (set (reg:SI 1254)
        (reg:SI 1255)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 1058 1057 1059 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 1059 1058 1060 (set (reg:SI 1 r1)
        (reg:SI 1254)) ./src/include/switch_utils.h:434 -1
     (nil))

(call_insn/i 1060 1059 1061 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1061 1060 0 (set (reg:SI 895 [ D.49704 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:434 -1
     (nil))

;; if (D.49704_1575 == 0)

(insn 1062 1061 1063 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 895 [ D.49704 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:433 -1
     (nil))

(jump_insn 1063 1062 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 89

;; D.49705_1576 = strcasecmp (val_341, "allow");

(insn 1065 1064 1066 (set (reg:SI 1257)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 956 [0x3bc])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 956 [0x3bc])
            ] 29)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 1066 1065 1067 (set (reg:SI 1256)
        (reg:SI 1257)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 1067 1066 1068 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 1068 1067 1069 (set (reg:SI 1 r1)
        (reg:SI 1256)) ./src/include/switch_utils.h:435 -1
     (nil))

(call_insn/i 1069 1068 1070 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1070 1069 0 (set (reg:SI 896 [ D.49705 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:435 -1
     (nil))

;; if (D.49705_1576 == 0)

(insn 1071 1070 1072 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 896 [ D.49705 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:434 -1
     (nil))

(jump_insn 1072 1071 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))

;; Generating RTL for gimple basic block 90

;; D.49706_1577 = switch_is_number (val_341);

(insn 1074 1073 1075 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:436 -1
     (nil))

(call_insn 1075 1074 1076 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:436 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1076 1075 0 (set (reg:SI 897 [ D.49706 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:436 -1
     (nil))

;; if (D.49706_1577 != 0)

(insn 1077 1076 1078 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 897 [ D.49706 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:435 -1
     (nil))

(jump_insn 1078 1077 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 91

;; # DEBUG __nptr => val_341

(debug_insn 1080 1079 0 (var_location:SI __nptr (const_int 0 [0])) -1
     (nil))
;; D.49707_1578 = strtol (val_341, 0B, 10);

(insn 1081 1080 1082 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 1082 1081 1083 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 1083 1082 1084 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 1084 1083 1085 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1085 1084 0 (set (reg:SI 898 [ D.49707 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; if (D.49707_1578 != 0)

(insn 1086 1085 1087 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 898 [ D.49707 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 1087 1086 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 92

;; 

(code_label 1088 1087 1089 1360 "" [0 uses])

(note 1089 1088 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 93

;; 

(code_label 1092 1091 1093 1359 "" [0 uses])

(note 1093 1092 0 NOTE_INSN_BASIC_BLOCK)

;; D.44471_343 = smh_186->mparams;

(insn 1094 1093 1095 (set (reg:SI 1258)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3044 -1
     (nil))

(insn 1095 1094 0 (set (reg/f:SI 313 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1258)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3044 -1
     (nil))

;; if (D.44636_344 == 0)

(insn 1096 1095 1097 (set (reg:SI 1259)
        (mem/s:SI (plus:SI (reg/f:SI 313 [ D.44471 ])
                (const_int 132 [0x84])) [4 D.44471_343->hold_laps+0 S4 A32])) src/switch_core_media.c:3044 -1
     (nil))

(insn 1097 1096 1098 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1259)
            (const_int 0 [0]))) src/switch_core_media.c:3044 -1
     (nil))

(jump_insn 1098 1097 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3044 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 94

;; D.44471_343->hold_laps = 1;

(insn 1100 1099 1101 (set (reg:SI 1260)
        (const_int 1 [0x1])) src/switch_core_media.c:3045 -1
     (nil))

(insn 1101 1100 0 (set (mem/s:SI (plus:SI (reg/f:SI 313 [ D.44471 ])
                (const_int 132 [0x84])) [4 D.44471_343->hold_laps+0 S4 A32])
        (reg:SI 1260)) src/switch_core_media.c:3045 -1
     (nil))

;; D.44640_348 = switch_core_media_toggle_hold (session_161(D), sendonly_1006);

(insn 1102 1101 1103 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3046 -1
     (nil))

(insn 1103 1102 1104 (set (reg:SI 1 r1)
        (reg/v:SI 166 [ sendonly ])) src/switch_core_media.c:3046 -1
     (nil))

(call_insn 1104 1103 1105 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_toggle_hold") [flags 0x1]  <function_decl 0x40945800 switch_core_media_toggle_hold>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3046 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1105 1104 0 (set (reg:SI 317 [ D.44640 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3046 -1
     (nil))

;; if (D.44640_348 != 0)

(insn 1106 1105 1107 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 317 [ D.44640 ])
            (const_int 0 [0]))) src/switch_core_media.c:3046 -1
     (nil))

(jump_insn 1107 1106 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3046 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 95

;; reneg_349 = switch_media_handle_test_media_flag (smh_186, 6);

(insn 1109 1108 1110 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3047 -1
     (nil))

(insn 1110 1109 1111 (set (reg:SI 1 r1)
        (const_int 6 [0x6])) src/switch_core_media.c:3047 -1
     (nil))

(call_insn 1111 1110 1112 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3047 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1112 1111 0 (set (reg/v:SI 191 [ reneg ])
        (reg:SI 0 r0)) src/switch_core_media.c:3047 -1
     (nil))

;; # DEBUG reneg => reneg_349

(debug_insn 1113 1112 0 (var_location:SI reneg (const_int 0 [0])) src/switch_core_media.c:3047 -1
     (nil))
;; val_351 = switch_channel_get_variable_dup (D.44530_350, "rtp_renegotiate_codec_on_hold", 1, -1);

(insn 1114 1113 1115 (set (reg:SI 1261)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3048 -1
     (nil))

(insn 1115 1114 1116 (set (reg:SI 1263)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC313") [flags 0x82]  <var_decl 0x40410360 *.LC313>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 957 [0x3bd])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 957 [0x3bd])
            ] 29)) src/switch_core_media.c:3048 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC313") [flags 0x82]  <var_decl 0x40410360 *.LC313>)
        (nil)))

(insn 1116 1115 1117 (set (reg:SI 1262)
        (reg:SI 1263)) src/switch_core_media.c:3048 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC313") [flags 0x82]  <var_decl 0x40410360 *.LC313>)
        (nil)))

(insn 1117 1116 1118 (set (reg:SI 0 r0)
        (reg:SI 1261)) src/switch_core_media.c:3048 -1
     (nil))

(insn 1118 1117 1119 (set (reg:SI 1 r1)
        (reg:SI 1262)) src/switch_core_media.c:3048 -1
     (nil))

(insn 1119 1118 1120 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3048 -1
     (nil))

(insn 1120 1119 1121 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3048 -1
     (nil))

(call_insn 1121 1120 1122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3048 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1122 1121 0 (set (reg/v/f:SI 319 [ val ])
        (reg:SI 0 r0)) src/switch_core_media.c:3048 -1
     (nil))

;; # DEBUG val => val_351

(debug_insn 1123 1122 0 (var_location:SI val (const_int 0 [0])) src/switch_core_media.c:3048 -1
     (nil))
;; if (val_351 != 0B)

(insn 1124 1123 1125 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 319 [ val ])
            (const_int 0 [0]))) src/switch_core_media.c:3048 -1
     (nil))

(jump_insn 1125 1124 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3048 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 96

;; reneg_352 = switch_true (val_351);

(insn 1127 1126 1128 (set (reg:SI 0 r0)
        (reg/v/f:SI 319 [ val ])) src/switch_core_media.c:3049 -1
     (nil))

(call_insn 1128 1127 1129 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_true") [flags 0x3]  <function_decl 0x407e7f80 switch_true>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3049 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1129 1128 0 (set (reg/v:SI 191 [ reneg ])
        (reg:SI 0 r0)) src/switch_core_media.c:3049 -1
     (nil))

;; # DEBUG reneg => reneg_352

(debug_insn 1130 1129 0 (var_location:SI reneg (const_int 0 [0])) src/switch_core_media.c:3049 -1
     (nil))
;; Generating RTL for gimple basic block 97

;; 

(code_label 1131 1130 1132 1362 "" [0 uses])

(note 1132 1131 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG reneg => reneg_81

(debug_insn 1133 1132 0 (var_location:SI reneg (const_int 0 [0])) -1
     (nil))
;; if (reneg_81 != 0)

(insn 1134 1133 1135 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 191 [ reneg ])
            (const_int 0 [0]))) src/switch_core_media.c:3054 -1
     (nil))

(jump_insn 1135 1134 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3054 -1
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil)))

;; Generating RTL for gimple basic block 98

;; reneg_353 = switch_media_handle_test_media_flag (smh_186, 7);

(insn 1137 1136 1138 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3055 -1
     (nil))

(insn 1138 1137 1139 (set (reg:SI 1 r1)
        (const_int 7 [0x7])) src/switch_core_media.c:3055 -1
     (nil))

(call_insn 1139 1138 1140 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3055 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1140 1139 0 (set (reg/v:SI 191 [ reneg ])
        (reg:SI 0 r0)) src/switch_core_media.c:3055 -1
     (nil))

;; # DEBUG reneg => reneg_353

(debug_insn 1141 1140 0 (var_location:SI reneg (const_int 0 [0])) src/switch_core_media.c:3055 -1
     (nil))
;; val_355 = switch_channel_get_variable_dup (D.44530_354, "rtp_renegotiate_codec_on_reinvite", 1, -1);

(insn 1142 1141 1143 (set (reg:SI 1264)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3057 -1
     (nil))

(insn 1143 1142 1144 (set (reg:SI 1266)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC314") [flags 0x82]  <var_decl 0x40410420 *.LC314>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 958 [0x3be])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 958 [0x3be])
            ] 29)) src/switch_core_media.c:3057 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC314") [flags 0x82]  <var_decl 0x40410420 *.LC314>)
        (nil)))

(insn 1144 1143 1145 (set (reg:SI 1265)
        (reg:SI 1266)) src/switch_core_media.c:3057 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC314") [flags 0x82]  <var_decl 0x40410420 *.LC314>)
        (nil)))

(insn 1145 1144 1146 (set (reg:SI 0 r0)
        (reg:SI 1264)) src/switch_core_media.c:3057 -1
     (nil))

(insn 1146 1145 1147 (set (reg:SI 1 r1)
        (reg:SI 1265)) src/switch_core_media.c:3057 -1
     (nil))

(insn 1147 1146 1148 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3057 -1
     (nil))

(insn 1148 1147 1149 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3057 -1
     (nil))

(call_insn 1149 1148 1150 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3057 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1150 1149 0 (set (reg/v/f:SI 321 [ val ])
        (reg:SI 0 r0)) src/switch_core_media.c:3057 -1
     (nil))

;; # DEBUG val => val_355

(debug_insn 1151 1150 0 (var_location:SI val (const_int 0 [0])) src/switch_core_media.c:3057 -1
     (nil))
;; if (val_355 != 0B)

(insn 1152 1151 1153 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 321 [ val ])
            (const_int 0 [0]))) src/switch_core_media.c:3057 -1
     (nil))

(jump_insn 1153 1152 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3057 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 99

;; # DEBUG expr => val_355

(debug_insn 1155 1154 0 (var_location:SI expr (const_int 0 [0])) -1
     (nil))
;; D.49711_1580 = strcasecmp (val_355, "yes");

(insn 1156 1155 1157 (set (reg:SI 1268)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 959 [0x3bf])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 959 [0x3bf])
            ] 29)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 1157 1156 1158 (set (reg:SI 1267)
        (reg:SI 1268)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 1158 1157 1159 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 1159 1158 1160 (set (reg:SI 1 r1)
        (reg:SI 1267)) ./src/include/switch_utils.h:429 -1
     (nil))

(call_insn/i 1160 1159 1161 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1161 1160 0 (set (reg:SI 899 [ D.49711 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:429 -1
     (nil))

;; if (D.49711_1580 == 0)

(insn 1162 1161 1163 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 899 [ D.49711 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 1163 1162 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 100

;; D.49712_1581 = strcasecmp (val_355, "on");

(insn 1165 1164 1166 (set (reg:SI 1270)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 960 [0x3c0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 960 [0x3c0])
            ] 29)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 1166 1165 1167 (set (reg:SI 1269)
        (reg:SI 1270)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 1167 1166 1168 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 1168 1167 1169 (set (reg:SI 1 r1)
        (reg:SI 1269)) ./src/include/switch_utils.h:430 -1
     (nil))

(call_insn/i 1169 1168 1170 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1170 1169 0 (set (reg:SI 900 [ D.49712 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:430 -1
     (nil))

;; if (D.49712_1581 == 0)

(insn 1171 1170 1172 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 900 [ D.49712 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 1172 1171 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 101

;; D.49713_1582 = strcasecmp (val_355, "true");

(insn 1174 1173 1175 (set (reg:SI 1272)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 961 [0x3c1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 961 [0x3c1])
            ] 29)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1175 1174 1176 (set (reg:SI 1271)
        (reg:SI 1272)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1176 1175 1177 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 1177 1176 1178 (set (reg:SI 1 r1)
        (reg:SI 1271)) ./src/include/switch_utils.h:431 -1
     (nil))

(call_insn/i 1178 1177 1179 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1179 1178 0 (set (reg:SI 901 [ D.49713 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:431 -1
     (nil))

;; if (D.49713_1582 == 0)

(insn 1180 1179 1181 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 901 [ D.49713 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:430 -1
     (nil))

(jump_insn 1181 1180 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 102

;; D.49714_1583 = strcasecmp (val_355, "t");

(insn 1183 1182 1184 (set (reg:SI 1274)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 962 [0x3c2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 962 [0x3c2])
            ] 29)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 1184 1183 1185 (set (reg:SI 1273)
        (reg:SI 1274)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 1185 1184 1186 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 1186 1185 1187 (set (reg:SI 1 r1)
        (reg:SI 1273)) ./src/include/switch_utils.h:432 -1
     (nil))

(call_insn/i 1187 1186 1188 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1188 1187 0 (set (reg:SI 902 [ D.49714 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:432 -1
     (nil))

;; if (D.49714_1583 == 0)

(insn 1189 1188 1190 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 902 [ D.49714 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:431 -1
     (nil))

(jump_insn 1190 1189 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 103

;; D.49715_1584 = strcasecmp (val_355, "enabled");

(insn 1192 1191 1193 (set (reg:SI 1276)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 963 [0x3c3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 963 [0x3c3])
            ] 29)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 1193 1192 1194 (set (reg:SI 1275)
        (reg:SI 1276)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 1194 1193 1195 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 1195 1194 1196 (set (reg:SI 1 r1)
        (reg:SI 1275)) ./src/include/switch_utils.h:433 -1
     (nil))

(call_insn/i 1196 1195 1197 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1197 1196 0 (set (reg:SI 903 [ D.49715 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:433 -1
     (nil))

;; if (D.49715_1584 == 0)

(insn 1198 1197 1199 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 903 [ D.49715 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:432 -1
     (nil))

(jump_insn 1199 1198 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 104

;; D.49716_1585 = strcasecmp (val_355, "active");

(insn 1201 1200 1202 (set (reg:SI 1278)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 964 [0x3c4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 964 [0x3c4])
            ] 29)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 1202 1201 1203 (set (reg:SI 1277)
        (reg:SI 1278)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 1203 1202 1204 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 1204 1203 1205 (set (reg:SI 1 r1)
        (reg:SI 1277)) ./src/include/switch_utils.h:434 -1
     (nil))

(call_insn/i 1205 1204 1206 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1206 1205 0 (set (reg:SI 904 [ D.49716 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:434 -1
     (nil))

;; if (D.49716_1585 == 0)

(insn 1207 1206 1208 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 904 [ D.49716 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:433 -1
     (nil))

(jump_insn 1208 1207 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 105

;; D.49717_1586 = strcasecmp (val_355, "allow");

(insn 1210 1209 1211 (set (reg:SI 1280)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 965 [0x3c5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 965 [0x3c5])
            ] 29)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 1211 1210 1212 (set (reg:SI 1279)
        (reg:SI 1280)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 1212 1211 1213 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 1213 1212 1214 (set (reg:SI 1 r1)
        (reg:SI 1279)) ./src/include/switch_utils.h:435 -1
     (nil))

(call_insn/i 1214 1213 1215 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1215 1214 0 (set (reg:SI 905 [ D.49717 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:435 -1
     (nil))

;; if (D.49717_1586 == 0)

(insn 1216 1215 1217 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 905 [ D.49717 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:434 -1
     (nil))

(jump_insn 1217 1216 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))

;; Generating RTL for gimple basic block 106

;; D.49718_1587 = switch_is_number (val_355);

(insn 1219 1218 1220 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:436 -1
     (nil))

(call_insn 1220 1219 1221 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:436 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1221 1220 0 (set (reg:SI 906 [ D.49718 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:436 -1
     (nil))

;; if (D.49718_1587 != 0)

(insn 1222 1221 1223 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 906 [ D.49718 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:435 -1
     (nil))

(jump_insn 1223 1222 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 107

;; # DEBUG __nptr => val_355

(debug_insn 1225 1224 0 (var_location:SI __nptr (const_int 0 [0])) -1
     (nil))
;; D.49719_1588 = strtol (val_355, 0B, 10);

(insn 1226 1225 1227 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 1227 1226 1228 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 1228 1227 1229 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 1229 1228 1230 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1230 1229 0 (set (reg:SI 907 [ D.49719 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; if (D.49719_1588 != 0)

(insn 1231 1230 1232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 907 [ D.49719 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 1232 1231 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; 

(code_label 1234 1233 1235 1364 "" [0 uses])

(note 1235 1234 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG reneg => NULL

(debug_insn 1236 1235 0 (var_location:SI reneg (const_int 0 [0])) src/switch_core_media.c:3058 -1
     (nil))
;; Generating RTL for gimple basic block 110

;; 

(code_label 1237 1236 1238 1363 "" [0 uses])

(note 1238 1237 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG reneg => reneg_82

(debug_insn 1239 1238 0 (var_location:SI reneg (const_int 0 [0])) -1
     (nil))
;; if (D.44649_357 != 0B)

(insn 1240 1239 1241 (set (reg:SI 1281)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 1348 [0x544])) [2 session_161(D)->bugs+0 S4 A32])) src/switch_core_media.c:3062 -1
     (nil))

(insn 1241 1240 1242 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1281)
            (const_int 0 [0]))) src/switch_core_media.c:3062 -1
     (nil))

(jump_insn 1242 1241 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3062 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 111

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3063, session_161(D), 7, "Session is connected to a media bug. Re-Negotiation implicitly disabled.\n");

(insn 1244 1243 1245 (set (reg:SI 1283)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 966 [0x3c6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 966 [0x3c6])
            ] 29)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1245 1244 1246 (set (reg:SI 1282)
        (reg:SI 1283)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1246 1245 1247 (set (reg:SI 1285)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 967 [0x3c7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 967 [0x3c7])
            ] 29)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1247 1246 1248 (set (reg/f:SI 1284)
        (reg:SI 1285)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1248 1247 1249 (set (reg:SI 1287)
        (plus:SI (reg/f:SI 1284)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3063 -1
     (nil))

(insn 1249 1248 1250 (set (reg:SI 1286)
        (plus:SI (reg:SI 1287)
            (const_int 8 [0x8]))) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1284)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1250 1249 1251 (set (reg:SI 1288)
        (const_int 3063 [0xbf7])) src/switch_core_media.c:3063 -1
     (nil))

(insn 1251 1250 1252 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3063 -1
     (nil))

(insn 1252 1251 1253 (set (reg:SI 1289)
        (const_int 7 [0x7])) src/switch_core_media.c:3063 -1
     (nil))

(insn 1253 1252 1254 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1289)) src/switch_core_media.c:3063 -1
     (nil))

(insn 1254 1253 1255 (set (reg:SI 1291)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC315") [flags 0x82]  <var_decl 0x404104e0 *.LC315>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 968 [0x3c8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 968 [0x3c8])
            ] 29)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC315") [flags 0x82]  <var_decl 0x404104e0 *.LC315>)
        (nil)))

(insn 1255 1254 1256 (set (reg/f:SI 1290)
        (reg:SI 1291)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC315") [flags 0x82]  <var_decl 0x404104e0 *.LC315>)
        (nil)))

(insn 1256 1255 1257 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1290)) src/switch_core_media.c:3063 -1
     (nil))

(insn 1257 1256 1258 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3063 -1
     (nil))

(insn 1258 1257 1259 (set (reg:SI 1 r1)
        (reg:SI 1282)) src/switch_core_media.c:3063 -1
     (nil))

(insn 1259 1258 1260 (set (reg:SI 2 r2)
        (reg:SI 1286)) src/switch_core_media.c:3063 -1
     (nil))

(insn 1260 1259 1261 (set (reg:SI 3 r3)
        (reg:SI 1288)) src/switch_core_media.c:3063 -1
     (nil))

(call_insn 1261 1260 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3063 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG reneg => 0

(debug_insn 1262 1261 0 (var_location:SI reneg (const_int 0 [0])) src/switch_core_media.c:3066 -1
     (nil))
;; # DEBUG reneg => 0

(debug_insn 1263 1262 0 (var_location:SI reneg (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 112

;; 

(code_label 1266 1265 1267 1365 "" [0 uses])

(note 1267 1266 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG reneg => reneg_82

(debug_insn 1268 1267 0 (var_location:SI reneg (const_int 0 [0])) -1
     (nil))
;; if (reneg_82 == 0)

(insn 1269 1268 1270 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 191 [ reneg ])
            (const_int 0 [0]))) src/switch_core_media.c:3069 -1
     (nil))

(jump_insn 1270 1269 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3069 -1
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil)))

;; Generating RTL for gimple basic block 113

;; 

(code_label 1271 1270 1272 1366 "" [0 uses])

(note 1272 1271 0 NOTE_INSN_BASIC_BLOCK)

;; total_codecs_359 = smh_186->num_negotiated_codecs;

(insn 1273 1272 1274 (set (reg:SI 1292)
        (const_int 23532 [0x5bec])) src/switch_core_media.c:3069 -1
     (nil))

(insn 1274 1273 0 (set (reg/v:SI 324 [ total_codecs ])
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1292)) [4 smh_186->num_negotiated_codecs+0 S4 A32])) src/switch_core_media.c:3069 -1
     (nil))

;; if (total_codecs_359 != 0)

(insn 1275 1274 1276 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 324 [ total_codecs ])
            (const_int 0 [0]))) src/switch_core_media.c:3069 -1
     (nil))

(jump_insn 1276 1275 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3069 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 114

;; codec_array_360 = &smh_186->negotiated_codecs;

(insn 1278 1277 1279 (set (reg:SI 1293)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (const_int 23296 [0x5b00]))) src/switch_core_media.c:3070 -1
     (nil))

(insn 1279 1278 0 (set (reg/v/f:SI 193 [ codec_array ])
        (plus:SI (reg:SI 1293)
            (const_int 36 [0x24]))) src/switch_core_media.c:3070 -1
     (expr_list:REG_EQUAL (plus:SI (reg/v/f:SI 233 [ smh ])
            (const_int 23332 [0x5b24]))
        (nil)))

;; # DEBUG codec_array => codec_array_360

(debug_insn 1280 1279 0 (var_location:SI codec_array (const_int 0 [0])) src/switch_core_media.c:3070 -1
     (nil))
;; # DEBUG total_codecs => total_codecs_359

(debug_insn 1281 1280 0 (var_location:SI total_codecs (const_int 0 [0])) src/switch_core_media.c:3071 -1
     (nil))
;; Generating RTL for gimple basic block 115

;; 

(code_label 1284 1283 1285 1367 "" [0 uses])

(note 1285 1284 0 NOTE_INSN_BASIC_BLOCK)

;; D.44471_362->num_codecs = 0;

(insn 1286 1285 1287 (set (reg:SI 1295)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3073 -1
     (nil))

(insn 1287 1286 1288 (set (reg/f:SI 1294)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1295)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3073 -1
     (nil))

(insn 1288 1287 1289 (set (reg:SI 1296)
        (const_int 0 [0])) src/switch_core_media.c:3073 -1
     (nil))

(insn 1289 1288 0 (set (mem/s:SI (plus:SI (reg/f:SI 1294)
                (const_int 128 [0x80])) [4 D.44471_362->num_codecs+0 S4 A32])
        (reg:SI 1296)) src/switch_core_media.c:3073 -1
     (nil))

;; switch_core_media_prepare_codecs (session_161(D), 0);

(insn 1290 1289 1291 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3074 -1
     (nil))

(insn 1291 1290 1292 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3074 -1
     (nil))

(call_insn 1292 1291 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_media_prepare_codecs") [flags 0x1]  <function_decl 0x40951380 switch_core_media_prepare_codecs>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3074 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; # DEBUG codec_array => codec_array_190

(debug_insn 1293 1292 0 (var_location:SI codec_array (const_int 0 [0])) src/switch_core_media.c:3075 -1
     (nil))
;; total_codecs_365 = D.44471_364->num_codecs;

(insn 1294 1293 1295 (set (reg:SI 1298)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3076 -1
     (nil))

(insn 1295 1294 1296 (set (reg/f:SI 1297)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1298)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3076 -1
     (nil))

(insn 1296 1295 0 (set (reg/v:SI 194 [ total_codecs ])
        (mem/s:SI (plus:SI (reg/f:SI 1297)
                (const_int 128 [0x80])) [4 D.44471_364->num_codecs+0 S4 A32])) src/switch_core_media.c:3076 -1
     (nil))

;; # DEBUG total_codecs => total_codecs_365

(debug_insn 1297 1296 0 (var_location:SI total_codecs (const_int 0 [0])) src/switch_core_media.c:3076 -1
     (nil))
;; Generating RTL for gimple basic block 116

;; 

(code_label 1298 1297 1299 1368 "" [0 uses])

(note 1299 1298 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG total_codecs => total_codecs_85

(debug_insn 1300 1299 0 (var_location:SI total_codecs (const_int 0 [0])) -1
     (nil))
;; # DEBUG codec_array => codec_array_84

(debug_insn 1301 1300 0 (var_location:SI codec_array (const_int 0 [0])) -1
     (nil))
;; D.44661_366 = switch_stristr ("T38FaxFillBitRemoval:", r_sdp_193(D));

(insn 1302 1301 1303 (set (reg:SI 1300)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC316") [flags 0x82]  <var_decl 0x40410540 *.LC316>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 969 [0x3c9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 969 [0x3c9])
            ] 29)) src/switch_core_media.c:3079 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC316") [flags 0x82]  <var_decl 0x40410540 *.LC316>)
        (nil)))

(insn 1303 1302 1304 (set (reg:SI 1299)
        (reg:SI 1300)) src/switch_core_media.c:3079 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC316") [flags 0x82]  <var_decl 0x40410540 *.LC316>)
        (nil)))

(insn 1304 1303 1305 (set (reg:SI 0 r0)
        (reg:SI 1299)) src/switch_core_media.c:3079 -1
     (nil))

(insn 1305 1304 1306 (set (reg:SI 1 r1)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:3079 -1
     (nil))

(call_insn 1306 1305 1307 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_stristr") [flags 0x41]  <function_decl 0x40815080 switch_stristr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3079 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1307 1306 0 (set (reg/f:SI 328 [ D.44661 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3079 -1
     (nil))

;; if (D.44661_366 != 0B)

(insn 1308 1307 1309 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 328 [ D.44661 ])
            (const_int 0 [0]))) src/switch_core_media.c:3079 -1
     (nil))

(jump_insn 1309 1308 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3079 -1
     (expr_list:REG_BR_PROB (const_int 8501 [0x2135])
        (nil)))

;; Generating RTL for gimple basic block 117

;; D.44663_367 = switch_stristr ("T38FaxTranscodingMMR:", r_sdp_193(D));

(insn 1311 1310 1312 (set (reg:SI 1302)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC317") [flags 0x82]  <var_decl 0x404105a0 *.LC317>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 970 [0x3ca])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 970 [0x3ca])
            ] 29)) src/switch_core_media.c:3079 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC317") [flags 0x82]  <var_decl 0x404105a0 *.LC317>)
        (nil)))

(insn 1312 1311 1313 (set (reg:SI 1301)
        (reg:SI 1302)) src/switch_core_media.c:3079 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC317") [flags 0x82]  <var_decl 0x404105a0 *.LC317>)
        (nil)))

(insn 1313 1312 1314 (set (reg:SI 0 r0)
        (reg:SI 1301)) src/switch_core_media.c:3079 -1
     (nil))

(insn 1314 1313 1315 (set (reg:SI 1 r1)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:3079 -1
     (nil))

(call_insn 1315 1314 1316 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_stristr") [flags 0x41]  <function_decl 0x40815080 switch_stristr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3079 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1316 1315 0 (set (reg/f:SI 329 [ D.44663 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3079 -1
     (nil))

;; if (D.44663_367 != 0B)

(insn 1317 1316 1318 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 329 [ D.44663 ])
            (const_int 0 [0]))) src/switch_core_media.c:3079 -1
     (nil))

(jump_insn 1318 1317 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3079 -1
     (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))

;; Generating RTL for gimple basic block 118

;; D.44665_368 = switch_stristr ("T38FaxTranscodingJBIG:", r_sdp_193(D));

(insn 1320 1319 1321 (set (reg:SI 1304)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC318") [flags 0x82]  <var_decl 0x40410660 *.LC318>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 971 [0x3cb])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 971 [0x3cb])
            ] 29)) src/switch_core_media.c:3080 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC318") [flags 0x82]  <var_decl 0x40410660 *.LC318>)
        (nil)))

(insn 1321 1320 1322 (set (reg:SI 1303)
        (reg:SI 1304)) src/switch_core_media.c:3080 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC318") [flags 0x82]  <var_decl 0x40410660 *.LC318>)
        (nil)))

(insn 1322 1321 1323 (set (reg:SI 0 r0)
        (reg:SI 1303)) src/switch_core_media.c:3080 -1
     (nil))

(insn 1323 1322 1324 (set (reg:SI 1 r1)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:3080 -1
     (nil))

(call_insn 1324 1323 1325 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_stristr") [flags 0x41]  <function_decl 0x40815080 switch_stristr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3080 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1325 1324 0 (set (reg/f:SI 330 [ D.44665 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3080 -1
     (nil))

;; if (D.44665_368 != 0B)

(insn 1326 1325 1327 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 330 [ D.44665 ])
            (const_int 0 [0]))) src/switch_core_media.c:3079 -1
     (nil))

(jump_insn 1327 1326 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3079 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 119

;; 

(code_label 1328 1327 1329 1369 "" [0 uses])

(note 1329 1328 0 NOTE_INSN_BASIC_BLOCK)

;; switch_channel_set_variable_var_check (D.44530_369, "t38_broken_boolean", "true", 1);

(insn 1330 1329 1331 (set (reg:SI 1305)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3081 -1
     (nil))

(insn 1331 1330 1332 (set (reg:SI 1307)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 972 [0x3cc])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 972 [0x3cc])
            ] 29)) src/switch_core_media.c:3081 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1332 1331 1333 (set (reg:SI 1306)
        (reg:SI 1307)) src/switch_core_media.c:3081 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1333 1332 1334 (set (reg:SI 1309)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 973 [0x3cd])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 973 [0x3cd])
            ] 29)) src/switch_core_media.c:3081 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1334 1333 1335 (set (reg:SI 1308)
        (reg:SI 1309)) src/switch_core_media.c:3081 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1335 1334 1336 (set (reg:SI 0 r0)
        (reg:SI 1305)) src/switch_core_media.c:3081 -1
     (nil))

(insn 1336 1335 1337 (set (reg:SI 1 r1)
        (reg:SI 1306)) src/switch_core_media.c:3081 -1
     (nil))

(insn 1337 1336 1338 (set (reg:SI 2 r2)
        (reg:SI 1308)) src/switch_core_media.c:3081 -1
     (nil))

(insn 1338 1337 1339 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3081 -1
     (nil))

(call_insn 1339 1338 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3081 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 120

;; 

(code_label 1340 1339 1341 1370 "" [0 uses])

(note 1341 1340 0 NOTE_INSN_BASIC_BLOCK)

;; switch_core_media_find_zrtp_hash (session_161(D), sdp_198);

(insn 1342 1341 1343 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3084 -1
     (nil))

(insn 1343 1342 1344 (set (reg:SI 1 r1)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3084 -1
     (nil))

(call_insn 1344 1343 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_media_find_zrtp_hash") [flags 0x3]  <function_decl 0x41463000 switch_core_media_find_zrtp_hash>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3084 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; switch_core_media_pass_zrtp_hash (session_161(D));

(insn 1345 1344 1346 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3085 -1
     (nil))

(call_insn 1346 1345 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_media_pass_zrtp_hash") [flags 0x1]  <function_decl 0x40945680 switch_core_media_pass_zrtp_hash>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3085 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; check_ice (smh_186, 0, sdp_198, 0B);

(insn 1347 1346 1348 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3087 -1
     (nil))

(insn 1348 1347 1349 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3087 -1
     (nil))

(insn 1349 1348 1350 (set (reg:SI 2 r2)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3087 -1
     (nil))

(insn 1350 1349 1351 (set (reg:SI 3 r3)
        (const_int 0 [0])) src/switch_core_media.c:3087 -1
     (nil))

(call_insn 1351 1350 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("check_ice") [flags 0x3]  <function_decl 0x414f3a00 check_ice>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3087 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; check_ice (smh_186, 1, sdp_198, 0B);

(insn 1352 1351 1353 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3088 -1
     (nil))

(insn 1353 1352 1354 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) src/switch_core_media.c:3088 -1
     (nil))

(insn 1354 1353 1355 (set (reg:SI 2 r2)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3088 -1
     (nil))

(insn 1355 1354 1356 (set (reg:SI 3 r3)
        (const_int 0 [0])) src/switch_core_media.c:3088 -1
     (nil))

(call_insn 1356 1355 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("check_ice") [flags 0x3]  <function_decl 0x414f3a00 check_ice>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3088 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; m_370 = sdp_198->sdp_media;

(insn 1357 1356 0 (set (reg/v/f:SI 813 [ m ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 60 [0x3c])) [2 sdp_198->sdp_media+0 S4 A32])) src/switch_core_media.c:3091 -1
     (nil))

;; # DEBUG m => m_370

(debug_insn 1358 1357 0 (var_location:SI m (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))
;; # DEBUG nm_idx => 0

(debug_insn 1359 1358 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => 0

(debug_insn 1360 1359 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG codec_ms => 0

(debug_insn 1361 1360 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_webrtc => 0

(debug_insn 1362 1361 0 (var_location:SI got_webrtc (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_udptl => 0

(debug_insn 1363 1362 0 (var_location:SI got_udptl (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_savp => 0

(debug_insn 1364 1363 0 (var_location:SI got_savp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_savp => NULL

(debug_insn 1365 1364 0 (var_location:SI got_video_savp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_avp => NULL

(debug_insn 1366 1365 0 (var_location:SI got_video_avp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_avp => 0

(debug_insn 1367 1366 0 (var_location:SI got_avp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_audio => 0

(debug_insn 1368 1367 0 (var_location:SI got_audio (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_crypto => 0

(debug_insn 1369 1368 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_crypto => 0

(debug_insn 1370 1369 0 (var_location:SI got_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG m => m_370

(debug_insn 1371 1370 0 (var_location:SI m (const_int 0 [0])) -1
     (nil))
;; # DEBUG cng_pt => 0

(debug_insn 1372 1371 0 (var_location:QI cng_pt (const_int 0 [0])) -1
     (nil))
;; # DEBUG best_te => 0

(debug_insn 1373 1372 0 (var_location:QI best_te (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => 0

(debug_insn 1374 1373 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (m_370 != 0B)

(insn 1375 1374 1376 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 813 [ m ])
            (const_int 0 [0]))) src/switch_core_media.c:3091 -1
     (nil))

(jump_insn 1376 1375 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3091 -1
     (expr_list:REG_BR_PROB (const_int 200 [0xc8])
        (nil)))

;; Generating RTL for gimple basic block 121

;; # DEBUG ptime => dptime_1035

(debug_insn 1378 1377 0 (var_location:SI ptime (const_int 0 [0])) src/switch_core_media.c:3095 -1
     (nil))
;; # DEBUG maxptime => dmaxptime_1005

(debug_insn 1379 1378 0 (var_location:SI maxptime (const_int 0 [0])) src/switch_core_media.c:3096 -1
     (nil))
;; if (D.44666_373 == 261)

(insn 1380 1379 1381 (set (reg:SI 1310)
        (const_int 261 [0x105])) src/switch_core_media.c:3098 -1
     (nil))

(insn 1381 1380 1382 (set (reg:SI 1311)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 28 [0x1c])) [44 m_1764->m_proto+0 S4 A32])) src/switch_core_media.c:3098 -1
     (nil))

(insn 1382 1381 1383 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1311)
            (reg:SI 1310))) src/switch_core_media.c:3098 -1
     (nil))

(jump_insn 1383 1382 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3098 -1
     (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil)))

;; Generating RTL for gimple basic block 122

;; got_webrtc_374 = got_webrtc_452 + 1;

(insn 1385 1384 0 (set (reg/v:SI 188 [ got_webrtc ])
        (plus:SI (reg/v:SI 188 [ got_webrtc ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3099 -1
     (nil))

;; # DEBUG got_webrtc => got_webrtc_374

(debug_insn 1386 1385 0 (var_location:SI got_webrtc (const_int 0 [0])) src/switch_core_media.c:3099 -1
     (nil))
;; switch_core_session_set_ice (session_161(D));

(insn 1387 1386 1388 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3100 -1
     (nil))

(call_insn 1388 1387 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_session_set_ice") [flags 0x1]  <function_decl 0x40951e80 switch_core_session_set_ice>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3100 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 123

;; 

(code_label 1389 1388 1390 1372 "" [0 uses])

(note 1390 1389 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG got_webrtc => got_webrtc_78

(debug_insn 1391 1390 0 (var_location:SI got_webrtc (const_int 0 [0])) -1
     (nil))
;; D.44669_375 = m_1764->m_proto_name;

(insn 1392 1391 0 (set (reg/f:SI 333 [ D.44669 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 32 [0x20])) [2 m_1764->m_proto_name+0 S4 A32])) src/switch_core_media.c:3103 -1
     (nil))

;; if (D.44669_375 != 0B)

(insn 1393 1392 1394 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 333 [ D.44669 ])
            (const_int 0 [0]))) src/switch_core_media.c:3103 -1
     (nil))

(jump_insn 1394 1393 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3103 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 124

;; D.44672_377 = strcasecmp (D.44669_375, "UDP/TLS/RTP/SAVPF");

(insn 1396 1395 1397 (set (reg:SI 1313)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC66") [flags 0x82]  <var_decl 0x41e61c00 *.LC66>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 974 [0x3ce])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 974 [0x3ce])
            ] 29)) src/switch_core_media.c:3103 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC66") [flags 0x82]  <var_decl 0x41e61c00 *.LC66>)
        (nil)))

(insn 1397 1396 1398 (set (reg:SI 1312)
        (reg:SI 1313)) src/switch_core_media.c:3103 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC66") [flags 0x82]  <var_decl 0x41e61c00 *.LC66>)
        (nil)))

(insn 1398 1397 1399 (set (reg:SI 0 r0)
        (reg/f:SI 333 [ D.44669 ])) src/switch_core_media.c:3103 -1
     (nil))

(insn 1399 1398 1400 (set (reg:SI 1 r1)
        (reg:SI 1312)) src/switch_core_media.c:3103 -1
     (nil))

(call_insn/i 1400 1399 1401 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3103 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1401 1400 0 (set (reg:SI 334 [ D.44672 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3103 -1
     (nil))

;; if (D.44672_377 == 0)

(insn 1402 1401 1403 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 334 [ D.44672 ])
            (const_int 0 [0]))) src/switch_core_media.c:3103 -1
     (nil))

(jump_insn 1403 1402 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3103 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 125

;; switch_channel_set_flag_value (D.44530_378, 107, 1);

(insn 1405 1404 1406 (set (reg:SI 1314)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3104 -1
     (nil))

(insn 1406 1405 1407 (set (reg:SI 0 r0)
        (reg:SI 1314)) src/switch_core_media.c:3104 -1
     (nil))

(insn 1407 1406 1408 (set (reg:SI 1 r1)
        (const_int 107 [0x6b])) src/switch_core_media.c:3104 -1
     (nil))

(insn 1408 1407 1409 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3104 -1
     (nil))

(call_insn 1409 1408 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_set_flag_value") [flags 0x41]  <function_decl 0x40846900 switch_channel_set_flag_value>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3104 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

;; Generating RTL for gimple basic block 126

;; 

(code_label 1410 1409 1411 1373 "" [0 uses])

(note 1411 1410 0 NOTE_INSN_BASIC_BLOCK)

;; D.44675_379 = m_1764->m_proto;

(insn 1412 1411 0 (set (reg:SI 336 [ D.44675 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 28 [0x1c])) [44 m_1764->m_proto+0 S4 A32])) src/switch_core_media.c:3107 -1
     (nil))

;; if (D.44678_382 != 0)

(insn 1413 1412 1414 (set (reg:SI 1317)
        (const_int 261 [0x105])) src/switch_core_media.c:3107 -1
     (nil))

(insn 1414 1413 1415 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 336 [ D.44675 ])
            (reg:SI 1317))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1415 1414 1416 (set (reg:SI 1316)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1416 1415 1417 (set (reg:QI 1315)
        (subreg:QI (reg:SI 1316) 0)) src/switch_core_media.c:3107 -1
     (nil))

(insn 1417 1416 1418 (set (reg:SI 1320)
        (const_int 257 [0x101])) src/switch_core_media.c:3107 -1
     (nil))

(insn 1418 1417 1419 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 336 [ D.44675 ])
            (reg:SI 1320))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1419 1418 1420 (set (reg:SI 1319)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1420 1419 1421 (set (reg:QI 1318)
        (subreg:QI (reg:SI 1319) 0)) src/switch_core_media.c:3107 -1
     (nil))

(insn 1421 1420 1422 (set (reg:SI 1321)
        (ior:SI (subreg:SI (reg:QI 1315) 0)
            (subreg:SI (reg:QI 1318) 0))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1422 1421 1423 (set (reg:QI 1322)
        (subreg:QI (reg:SI 1321) 0)) src/switch_core_media.c:3107 -1
     (nil))

(insn 1423 1422 1424 (set (reg:SI 1323)
        (zero_extend:SI (reg:QI 1322))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1424 1423 1425 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1323)
            (const_int 0 [0]))) src/switch_core_media.c:3107 -1
     (nil))

(jump_insn 1425 1424 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3107 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 127

;; prephitmp.1049_383 = m_1764->m_type;

(insn 1427 1426 0 (set (reg:SI 979 [ prephitmp.1049 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 12 [0xc])) [43 m_1764->m_type+0 S4 A32])) src/switch_core_media.c:3108 -1
     (nil))

;; if (prephitmp.1049_383 == 2)

(insn 1428 1427 1429 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 979 [ prephitmp.1049 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3108 -1
     (nil))

(jump_insn 1429 1428 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3108 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 128

;; got_savp_384 = got_savp_512 + 1;

(insn 1431 1430 0 (set (reg/v:SI 445 [ got_savp ])
        (plus:SI (reg/v:SI 445 [ got_savp ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3109 -1
     (nil))

;; # DEBUG got_savp => got_savp_384

(debug_insn 1432 1431 0 (var_location:SI got_savp (const_int 0 [0])) src/switch_core_media.c:3109 -1
     (nil))
;; Generating RTL for gimple basic block 129

;; 

(code_label 1435 1434 1436 1374 "" [0 uses])

(note 1436 1435 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44675_379 == 256)

(insn 1437 1436 1438 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 336 [ D.44675 ])
            (const_int 256 [0x100]))) src/switch_core_media.c:3113 -1
     (nil))

(jump_insn 1438 1437 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3113 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 130

;; prephitmp.1049_387 = m_1764->m_type;

(insn 1440 1439 0 (set (reg:SI 979 [ prephitmp.1049 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 12 [0xc])) [43 m_1764->m_type+0 S4 A32])) src/switch_core_media.c:3114 -1
     (nil))

;; if (prephitmp.1049_387 == 2)

(insn 1441 1440 1442 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 979 [ prephitmp.1049 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3114 -1
     (nil))

(jump_insn 1442 1441 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3114 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 131

;; got_avp_388 = got_avp_671 + 1;

(insn 1444 1443 0 (set (reg/v:SI 544 [ got_avp ])
        (plus:SI (reg/v:SI 544 [ got_avp ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3115 -1
     (nil))

;; # DEBUG got_avp => got_avp_388

(debug_insn 1445 1444 0 (var_location:SI got_avp (const_int 0 [0])) src/switch_core_media.c:3115 -1
     (nil))
;; Generating RTL for gimple basic block 132

;; 

(code_label 1448 1447 1449 1376 "" [0 uses])

(note 1449 1448 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44675_379 == 258)

(insn 1450 1449 1451 (set (reg:SI 1324)
        (const_int 258 [0x102])) src/switch_core_media.c:3119 -1
     (nil))

(insn 1451 1450 1452 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 336 [ D.44675 ])
            (reg:SI 1324))) src/switch_core_media.c:3119 -1
     (nil))

(jump_insn 1452 1451 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3119 -1
     (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))

;; Generating RTL for gimple basic block 133

;; prephitmp.1049_1673 = m_1764->m_type;

(insn 1454 1453 0 (set (reg:SI 979 [ prephitmp.1049 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 12 [0xc])) [43 m_1764->m_type+0 S4 A32])) src/switch_core_media.c:3119 -1
     (nil))

;; Generating RTL for gimple basic block 134

;; 

(code_label 1457 1456 1458 1377 "" [0 uses])

(note 1458 1457 0 NOTE_INSN_BASIC_BLOCK)

;; got_udptl_391 = got_udptl_1868 + 1;

(insn 1459 1458 0 (set (reg/v:SI 1011 [ got_udptl ])
        (plus:SI (reg/v:SI 1011 [ got_udptl ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3120 -1
     (nil))

;; # DEBUG got_udptl => got_udptl_391

(debug_insn 1460 1459 0 (var_location:SI got_udptl (const_int 0 [0])) src/switch_core_media.c:3120 -1
     (nil))
;; # DEBUG got_udptl => got_udptl_391

(debug_insn 1461 1460 0 (var_location:SI got_udptl (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_savp => got_savp_512

(debug_insn 1462 1461 0 (var_location:SI got_savp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_savp => NULL

(debug_insn 1463 1462 0 (var_location:SI got_video_savp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_avp => NULL

(debug_insn 1464 1463 0 (var_location:SI got_video_avp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_avp => got_avp_671

(debug_insn 1465 1464 0 (var_location:SI got_avp (const_int 0 [0])) -1
     (nil))
;; prephitmp.1049_346 = m_1764->m_type;

(insn 1466 1465 0 (set (reg:SI 979 [ prephitmp.1049 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 12 [0xc])) [43 m_1764->m_type+0 S4 A32])) src/switch_core_media.c:3120 -1
     (nil))

;; Generating RTL for gimple basic block 135

;; 

(code_label 1469 1468 1470 1375 "" [0 uses])

(note 1470 1469 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG got_udptl => got_udptl_1868

(debug_insn 1471 1470 0 (var_location:SI got_udptl (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_savp => got_savp_74

(debug_insn 1472 1471 0 (var_location:SI got_savp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_savp => NULL

(debug_insn 1473 1472 0 (var_location:SI got_video_savp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_avp => NULL

(debug_insn 1474 1473 0 (var_location:SI got_video_avp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_avp => got_avp_68

(debug_insn 1475 1474 0 (var_location:SI got_avp (const_int 0 [0])) -1
     (nil))
;; if (got_udptl_1868 != 0)

(insn 1476 1475 1477 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 1011 [ got_udptl ])
            (const_int 0 [0]))) src/switch_core_media.c:3123 -1
     (nil))

(jump_insn 1477 1476 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3123 -1
     (expr_list:REG_BR_PROB (const_int 5557 [0x15b5])
        (nil)))

;; Generating RTL for gimple basic block 136

;; 

(code_label 1478 1477 1479 1378 "" [0 uses])

(note 1479 1478 0 NOTE_INSN_BASIC_BLOCK)

;; if (prephitmp.1049_1805 == 8)

(insn 1480 1479 1481 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 979 [ prephitmp.1049 ])
            (const_int 8 [0x8]))) src/switch_core_media.c:3123 -1
     (nil))

(jump_insn 1481 1480 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3123 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 137

;; if (D.44697_393 != 0)

(insn 1483 1482 1484 (set (reg:SI 1325)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 20 [0x14])) [26 m_1764->m_port+0 S4 A32])) src/switch_core_media.c:3123 -1
     (nil))

(insn 1484 1483 1485 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1325)
            (const_int 0 [0]))) src/switch_core_media.c:3123 -1
     (nil))

(jump_insn 1485 1484 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3123 -1
     (expr_list:REG_BR_PROB (const_int 9800 [0x2648])
        (nil)))

;; Generating RTL for gimple basic block 138

;; t38_options_394 = switch_core_media_process_udptl (session_161(D), sdp_198, m_1789);

(insn 1487 1486 1488 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3124 -1
     (nil))

(insn 1488 1487 1489 (set (reg:SI 1 r1)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3124 -1
     (nil))

(insn 1489 1488 1490 (set (reg:SI 2 r2)
        (reg/v/f:SI 813 [ m ])) src/switch_core_media.c:3124 -1
     (nil))

(call_insn 1490 1489 1491 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_process_udptl") [flags 0x3]  <function_decl 0x41455f80 switch_core_media_process_udptl>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3124 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1491 1490 0 (set (reg/v/f:SI 342 [ t38_options ])
        (reg:SI 0 r0)) src/switch_core_media.c:3124 -1
     (nil))

;; # DEBUG t38_options => t38_options_394

(debug_insn 1492 1491 0 (var_location:SI t38_options (const_int 0 [0])) src/switch_core_media.c:3124 -1
     (nil))
;; D.44699_396 = switch_channel_test_app_flag_key ("T38", D.44530_395, 16);

(insn 1493 1492 1494 (set (reg:SI 1327)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 975 [0x3cf])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 975 [0x3cf])
            ] 29)) src/switch_core_media.c:3126 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1494 1493 1495 (set (reg:SI 1326)
        (reg:SI 1327)) src/switch_core_media.c:3126 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1495 1494 1496 (set (reg:SI 1328)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3126 -1
     (nil))

(insn 1496 1495 1497 (set (reg:SI 0 r0)
        (reg:SI 1326)) src/switch_core_media.c:3126 -1
     (nil))

(insn 1497 1496 1498 (set (reg:SI 1 r1)
        (reg:SI 1328)) src/switch_core_media.c:3126 -1
     (nil))

(insn 1498 1497 1499 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) src/switch_core_media.c:3126 -1
     (nil))

(call_insn 1499 1498 1500 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_app_flag_key") [flags 0x41]  <function_decl 0x4085b400 switch_channel_test_app_flag_key>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3126 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1500 1499 0 (set (reg:SI 344 [ D.44699 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3126 -1
     (nil))

;; if (D.44699_396 != 0)

(insn 1501 1500 1502 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 344 [ D.44699 ])
            (const_int 0 [0]))) src/switch_core_media.c:3126 -1
     (nil))

(jump_insn 1502 1501 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3126 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 139

;; D.44702_398 = switch_channel_get_variable_dup (channel_162, "refuse_t38", 1, -1);

(insn 1504 1503 1505 (set (reg:SI 1330)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC320") [flags 0x82]  <var_decl 0x40410720 *.LC320>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 976 [0x3d0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 976 [0x3d0])
            ] 29)) src/switch_core_media.c:3131 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC320") [flags 0x82]  <var_decl 0x40410720 *.LC320>)
        (nil)))

(insn 1505 1504 1506 (set (reg:SI 1329)
        (reg:SI 1330)) src/switch_core_media.c:3131 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC320") [flags 0x82]  <var_decl 0x40410720 *.LC320>)
        (nil)))

(insn 1506 1505 1507 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:3131 -1
     (nil))

(insn 1507 1506 1508 (set (reg:SI 1 r1)
        (reg:SI 1329)) src/switch_core_media.c:3131 -1
     (nil))

(insn 1508 1507 1509 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3131 -1
     (nil))

(insn 1509 1508 1510 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3131 -1
     (nil))

(call_insn 1510 1509 1511 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3131 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1511 1510 0 (set (reg/f:SI 345 [ D.44702 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3131 -1
     (nil))

;; D.44703_399 = switch_true (D.44702_398);

(insn 1512 1511 1513 (set (reg:SI 0 r0)
        (reg/f:SI 345 [ D.44702 ])) src/switch_core_media.c:3131 -1
     (nil))

(call_insn 1513 1512 1514 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_true") [flags 0x3]  <function_decl 0x407e7f80 switch_true>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3131 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1514 1513 0 (set (reg:SI 346 [ D.44703 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3131 -1
     (nil))

;; if (D.44703_399 != 0)

(insn 1515 1514 1516 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 346 [ D.44703 ])
            (const_int 0 [0]))) src/switch_core_media.c:3131 -1
     (nil))

(jump_insn 1516 1515 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3131 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 140

;; switch_channel_clear_app_flag_key ("T38", D.44530_400, 2);

(insn 1518 1517 1519 (set (reg:SI 1332)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 977 [0x3d1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 977 [0x3d1])
            ] 29)) src/switch_core_media.c:3132 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1519 1518 1520 (set (reg:SI 1331)
        (reg:SI 1332)) src/switch_core_media.c:3132 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1520 1519 1521 (set (reg:SI 1333)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3132 -1
     (nil))

(insn 1521 1520 1522 (set (reg:SI 0 r0)
        (reg:SI 1331)) src/switch_core_media.c:3132 -1
     (nil))

(insn 1522 1521 1523 (set (reg:SI 1 r1)
        (reg:SI 1333)) src/switch_core_media.c:3132 -1
     (nil))

(insn 1523 1522 1524 (set (reg:SI 2 r2)
        (const_int 2 [0x2])) src/switch_core_media.c:3132 -1
     (nil))

(call_insn 1524 1523 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_clear_app_flag_key") [flags 0x41]  <function_decl 0x4085b380 switch_channel_clear_app_flag_key>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3132 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

;; # DEBUG match => 0

(debug_insn 1525 1524 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3133 -1
     (nil))
;; Generating RTL for gimple basic block 141

;; 

(code_label 1528 1527 1529 1381 "" [0 uses])

(note 1529 1528 0 NOTE_INSN_BASIC_BLOCK)

;; var_402 = switch_channel_get_variable_dup (channel_162, "t38_passthru", 1, -1);

(insn 1530 1529 1531 (set (reg:SI 1335)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC321") [flags 0x82]  <var_decl 0x40410780 *.LC321>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 978 [0x3d2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 978 [0x3d2])
            ] 29)) src/switch_core_media.c:3136 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC321") [flags 0x82]  <var_decl 0x40410780 *.LC321>)
        (nil)))

(insn 1531 1530 1532 (set (reg:SI 1334)
        (reg:SI 1335)) src/switch_core_media.c:3136 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC321") [flags 0x82]  <var_decl 0x40410780 *.LC321>)
        (nil)))

(insn 1532 1531 1533 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:3136 -1
     (nil))

(insn 1533 1532 1534 (set (reg:SI 1 r1)
        (reg:SI 1334)) src/switch_core_media.c:3136 -1
     (nil))

(insn 1534 1533 1535 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3136 -1
     (nil))

(insn 1535 1534 1536 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3136 -1
     (nil))

(call_insn 1536 1535 1537 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3136 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1537 1536 0 (set (reg/v/f:SI 348 [ var ])
        (reg:SI 0 r0)) src/switch_core_media.c:3136 -1
     (nil))

;; # DEBUG var => var_402

(debug_insn 1538 1537 0 (var_location:SI var (const_int 0 [0])) src/switch_core_media.c:3136 -1
     (nil))
;; D.44706_405 = switch_channel_test_flag (D.44482_404, 101);

(insn 1539 1538 1540 (set (reg/f:SI 1336)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:3137 -1
     (nil))

(insn 1540 1539 1541 (set (reg:SI 1337)
        (mem/s/f:SI (plus:SI (reg/f:SI 1336)
                (const_int 24 [0x18])) [2 D.44481_403->channel+0 S4 A32])) src/switch_core_media.c:3137 -1
     (nil))

(insn 1541 1540 1542 (set (reg:SI 0 r0)
        (reg:SI 1337)) src/switch_core_media.c:3137 -1
     (nil))

(insn 1542 1541 1543 (set (reg:SI 1 r1)
        (const_int 101 [0x65])) src/switch_core_media.c:3137 -1
     (nil))

(call_insn 1543 1542 1544 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3137 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1544 1543 0 (set (reg:SI 351 [ D.44706 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3137 -1
     (nil))

;; # DEBUG pass => (int) D.44706_405

(debug_insn 1545 1544 0 (var_location:SI pass (const_int 0 [0])) src/switch_core_media.c:3137 -1
     (nil))
;; D.44707_408 = switch_channel_test_app_flag_key ("T38", D.44530_407, 2);

(insn 1546 1545 1547 (set (reg:SI 1339)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 979 [0x3d3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 979 [0x3d3])
            ] 29)) src/switch_core_media.c:3140 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1547 1546 1548 (set (reg:SI 1338)
        (reg:SI 1339)) src/switch_core_media.c:3140 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1548 1547 1549 (set (reg:SI 1340)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3140 -1
     (nil))

(insn 1549 1548 1550 (set (reg:SI 0 r0)
        (reg:SI 1338)) src/switch_core_media.c:3140 -1
     (nil))

(insn 1550 1549 1551 (set (reg:SI 1 r1)
        (reg:SI 1340)) src/switch_core_media.c:3140 -1
     (nil))

(insn 1551 1550 1552 (set (reg:SI 2 r2)
        (const_int 2 [0x2])) src/switch_core_media.c:3140 -1
     (nil))

(call_insn 1552 1551 1553 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_app_flag_key") [flags 0x41]  <function_decl 0x4085b400 switch_channel_test_app_flag_key>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3140 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1553 1552 0 (set (reg:SI 353 [ D.44707 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3140 -1
     (nil))

;; if (D.44707_408 != 0)

(insn 1554 1553 1555 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 353 [ D.44707 ])
            (const_int 0 [0]))) src/switch_core_media.c:3140 -1
     (nil))

(jump_insn 1555 1554 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3140 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 142

;; if (proceed_209(D) != 0B)

(insn 1557 1556 1558 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 1027 [ proceed ])
            (const_int 0 [0]))) src/switch_core_media.c:3141 -1
     (nil))

(jump_insn 1558 1557 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3141 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 143

;; *proceed_209(D) = 0;

(insn 1560 1559 1561 (set (reg:SI 1341)
        (const_int 0 [0])) src/switch_core_media.c:3141 -1
     (nil))

(insn 1561 1560 1562 (set (reg:QI 1342)
        (subreg:QI (reg:SI 1341) 0)) src/switch_core_media.c:3141 -1
     (nil))

(insn 1562 1561 0 (set (mem:QI (reg/v/f:SI 1027 [ proceed ]) [0 *proceed_209(D)+0 S1 A8])
        (reg:QI 1342)) src/switch_core_media.c:3141 -1
     (nil))

;; Generating RTL for gimple basic block 144

;; 

(code_label 1563 1562 1564 1382 "" [0 uses])

(note 1564 1563 0 NOTE_INSN_BASIC_BLOCK)

;; if (var_402 != 0B)

(insn 1565 1564 1566 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 348 [ var ])
            (const_int 0 [0]))) src/switch_core_media.c:3144 -1
     (nil))

(jump_insn 1566 1565 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3144 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 145

;; pass_409 = switch_true (var_402);

(insn 1568 1567 1569 (set (reg:SI 0 r0)
        (reg/v/f:SI 348 [ var ])) src/switch_core_media.c:3145 -1
     (nil))

(call_insn 1569 1568 1570 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_true") [flags 0x3]  <function_decl 0x407e7f80 switch_true>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3145 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1570 1569 0 (set (reg/v:SI 217 [ pass ])
        (reg:SI 0 r0)) src/switch_core_media.c:3145 -1
     (nil))

;; # DEBUG pass => pass_409

(debug_insn 1571 1570 0 (var_location:SI pass (const_int 0 [0])) src/switch_core_media.c:3145 -1
     (nil))
;; if (pass_409 == 0)

(insn 1572 1571 1573 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 217 [ pass ])
            (const_int 0 [0]))) src/switch_core_media.c:3145 -1
     (nil))

(jump_insn 1573 1572 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3145 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 146

;; D.44716_410 = strcasecmp (var_402, "once");

(insn 1575 1574 1576 (set (reg:SI 1344)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC322") [flags 0x82]  <var_decl 0x404107e0 *.LC322>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 980 [0x3d4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 980 [0x3d4])
            ] 29)) src/switch_core_media.c:3146 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC322") [flags 0x82]  <var_decl 0x404107e0 *.LC322>)
        (nil)))

(insn 1576 1575 1577 (set (reg:SI 1343)
        (reg:SI 1344)) src/switch_core_media.c:3146 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC322") [flags 0x82]  <var_decl 0x404107e0 *.LC322>)
        (nil)))

(insn 1577 1576 1578 (set (reg:SI 0 r0)
        (reg/v/f:SI 348 [ var ])) src/switch_core_media.c:3146 -1
     (nil))

(insn 1578 1577 1579 (set (reg:SI 1 r1)
        (reg:SI 1343)) src/switch_core_media.c:3146 -1
     (nil))

(call_insn/i 1579 1578 1580 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3146 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1580 1579 0 (set (reg:SI 354 [ D.44716 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3146 -1
     (nil))

;; if (D.44716_410 == 0)

(insn 1581 1580 1582 146 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 354 [ D.44716 ])
            (const_int 0 [0]))) src/switch_core_media.c:3146 -1
     (nil))

(jump_insn 1582 1581 1585 146 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3146 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 1585 1582 1583 453 [bb 453] NOTE_INSN_BASIC_BLOCK)

(jump_insn 1583 1585 1584 453 (set (pc)
        (label_ref 0)) src/switch_core_media.c:3146 -1
     (nil))

(barrier 1584 1583 0)

;; Generating RTL for gimple basic block 147

;; 

(code_label 1586 1584 1587 1383 "" [0 uses])

(note 1587 1586 0 NOTE_INSN_BASIC_BLOCK)

;; pass_406 = (int) D.44706_405;

(insn 1588 1587 0 (set (reg/v:SI 217 [ pass ])
        (reg:SI 351 [ D.44706 ])) src/switch_core_media.c:3137 -1
     (nil))

;; Generating RTL for gimple basic block 148

;; 

(code_label 1589 1588 1590 1384 "" [0 uses])

(note 1590 1589 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG pass => pass_126

(debug_insn 1591 1590 0 (var_location:SI pass (const_int 0 [0])) -1
     (nil))
;; if (pass_126 == 2)

(insn 1592 1591 1593 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 217 [ pass ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3152 -1
     (nil))

(jump_insn 1593 1592 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3152 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 149

;; 

(code_label 1594 1593 1595 1385 "" [0 uses])

(note 1595 1594 0 NOTE_INSN_BASIC_BLOCK)

;; D.44723_414 = switch_channel_test_flag (D.44482_413, 101);

(insn 1596 1595 1597 (set (reg/f:SI 1345)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:3152 -1
     (nil))

(insn 1597 1596 1598 (set (reg:SI 1346)
        (mem/s/f:SI (plus:SI (reg/f:SI 1345)
                (const_int 24 [0x18])) [2 D.44481_412->channel+0 S4 A32])) src/switch_core_media.c:3152 -1
     (nil))

(insn 1598 1597 1599 (set (reg:SI 0 r0)
        (reg:SI 1346)) src/switch_core_media.c:3152 -1
     (nil))

(insn 1599 1598 1600 (set (reg:SI 1 r1)
        (const_int 101 [0x65])) src/switch_core_media.c:3152 -1
     (nil))

(call_insn 1600 1599 1601 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3152 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1601 1600 0 (set (reg:SI 357 [ D.44723 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3152 -1
     (nil))

;; if (D.44723_414 != 0)

(insn 1602 1601 1603 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 357 [ D.44723 ])
            (const_int 0 [0]))) src/switch_core_media.c:3152 -1
     (nil))

(jump_insn 1603 1602 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3152 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 150

;; 

(code_label 1604 1603 1605 1386 "" [0 uses])

(note 1605 1604 0 NOTE_INSN_BASIC_BLOCK)

;; D.44724_416 = switch_channel_test_flag (D.44530_415, 103);

(insn 1606 1605 1607 (set (reg:SI 1347)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3153 -1
     (nil))

(insn 1607 1606 1608 (set (reg:SI 0 r0)
        (reg:SI 1347)) src/switch_core_media.c:3153 -1
     (nil))

(insn 1608 1607 1609 (set (reg:SI 1 r1)
        (const_int 103 [0x67])) src/switch_core_media.c:3153 -1
     (nil))

(call_insn 1609 1608 1610 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3153 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1610 1609 0 (set (reg:SI 359 [ D.44724 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3153 -1
     (nil))

;; if (D.44724_416 == 0)

(insn 1611 1610 1612 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 359 [ D.44724 ])
            (const_int 0 [0]))) src/switch_core_media.c:3153 -1
     (nil))

(jump_insn 1612 1611 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3153 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 151

;; D.44726_418 = switch_channel_test_flag (D.44530_417, 15);

(insn 1614 1613 1615 (set (reg:SI 1348)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3155 -1
     (nil))

(insn 1615 1614 1616 (set (reg:SI 0 r0)
        (reg:SI 1348)) src/switch_core_media.c:3155 -1
     (nil))

(insn 1616 1615 1617 (set (reg:SI 1 r1)
        (const_int 15 [0xf])) src/switch_core_media.c:3155 -1
     (nil))

(call_insn 1617 1616 1618 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3155 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1618 1617 0 (set (reg:SI 361 [ D.44726 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3155 -1
     (nil))

;; if (D.44726_418 != 0)

(insn 1619 1618 1620 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 361 [ D.44726 ])
            (const_int 0 [0]))) src/switch_core_media.c:3153 -1
     (nil))

(jump_insn 1620 1619 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3153 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 152

;; D.44728_420 = switch_channel_test_flag (D.44530_419, 29);

(insn 1622 1621 1623 (set (reg:SI 1349)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3156 -1
     (nil))

(insn 1623 1622 1624 (set (reg:SI 0 r0)
        (reg:SI 1349)) src/switch_core_media.c:3156 -1
     (nil))

(insn 1624 1623 1625 (set (reg:SI 1 r1)
        (const_int 29 [0x1d])) src/switch_core_media.c:3156 -1
     (nil))

(call_insn 1625 1624 1626 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3156 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1626 1625 0 (set (reg:SI 363 [ D.44728 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3156 -1
     (nil))

;; if (D.44728_420 != 0)

(insn 1627 1626 1628 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 363 [ D.44728 ])
            (const_int 0 [0]))) src/switch_core_media.c:3155 -1
     (nil))

(jump_insn 1628 1627 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3155 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 153

;; D.44730_422 = switch_rtp_ready (D.44605_421);

(insn 1630 1629 1631 (set (reg:SI 1350)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3157 -1
     (nil))

(insn 1631 1630 1632 (set (reg:SI 0 r0)
        (reg:SI 1350)) src/switch_core_media.c:3157 -1
     (nil))

(call_insn 1632 1631 1633 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_ready") [flags 0x41]  <function_decl 0x408c6980 switch_rtp_ready>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3157 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1633 1632 1634 (set (reg:SI 1351)
        (reg:SI 0 r0)) src/switch_core_media.c:3157 -1
     (nil))

(insn 1634 1633 0 (set (reg:SI 365 [ D.44730 ])
        (reg:SI 1351)) src/switch_core_media.c:3157 -1
     (nil))

;; if (D.44730_422 == 0)

(insn 1635 1634 1636 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 365 [ D.44730 ])
            (const_int 0 [0]))) src/switch_core_media.c:3156 -1
     (nil))

(jump_insn 1636 1635 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3156 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 154

;; # DEBUG pass => pass_1848

(debug_insn 1638 1637 0 (var_location:SI pass (const_int 0 [0])) -1
     (nil))
;; if (pass_1848 != 0)

(insn 1639 1638 1640 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 217 [ pass ])
            (const_int 0 [0]))) src/switch_core_media.c:3161 -1
     (nil))

(jump_insn 1640 1639 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3161 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 155

;; D.44733_424 = switch_core_session_perform_get_partner (session_161(D), &other_session, "src/switch_core_media.c", &__func__, 3161);

(insn 1642 1641 1643 (set (reg:SI 1352)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -16 [0xfffffffffffffff0]))) src/switch_core_media.c:3161 -1
     (nil))

(insn 1643 1642 1644 (set (reg:SI 1354)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 981 [0x3d5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 981 [0x3d5])
            ] 29)) src/switch_core_media.c:3161 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1644 1643 1645 (set (reg:SI 1353)
        (reg:SI 1354)) src/switch_core_media.c:3161 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1645 1644 1646 (set (reg:SI 1356)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 982 [0x3d6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 982 [0x3d6])
            ] 29)) src/switch_core_media.c:3161 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1646 1645 1647 (set (reg/f:SI 1355)
        (reg:SI 1356)) src/switch_core_media.c:3161 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1647 1646 1648 (set (reg:SI 1358)
        (plus:SI (reg/f:SI 1355)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3161 -1
     (nil))

(insn 1648 1647 1649 (set (reg:SI 1357)
        (plus:SI (reg:SI 1358)
            (const_int 8 [0x8]))) src/switch_core_media.c:3161 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1355)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1649 1648 1650 (set (reg:SI 1359)
        (const_int 3161 [0xc59])) src/switch_core_media.c:3161 -1
     (nil))

(insn 1650 1649 1651 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1359)) src/switch_core_media.c:3161 -1
     (nil))

(insn 1651 1650 1652 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3161 -1
     (nil))

(insn 1652 1651 1653 (set (reg:SI 1 r1)
        (reg:SI 1352)) src/switch_core_media.c:3161 -1
     (nil))

(insn 1653 1652 1654 (set (reg:SI 2 r2)
        (reg:SI 1353)) src/switch_core_media.c:3161 -1
     (nil))

(insn 1654 1653 1655 (set (reg:SI 3 r3)
        (reg:SI 1357)) src/switch_core_media.c:3161 -1
     (nil))

(call_insn 1655 1654 1656 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_perform_get_partner") [flags 0x41]  <function_decl 0x40704080 switch_core_session_perform_get_partner>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3161 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1656 1655 0 (set (reg:SI 366 [ D.44733 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3161 -1
     (nil))

;; if (D.44733_424 == 0)

(insn 1657 1656 1658 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 366 [ D.44733 ])
            (const_int 0 [0]))) src/switch_core_media.c:3161 -1
     (nil))

(jump_insn 1658 1657 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3161 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 156

;; other_channel_426 = switch_core_session_get_channel (other_session.89_425);

(insn 1660 1659 1661 (set (reg:SI 1360)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3162 -1
     (nil))

(insn 1661 1660 1662 (set (reg:SI 0 r0)
        (reg:SI 1360)) src/switch_core_media.c:3162 -1
     (nil))

(call_insn 1662 1661 1663 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_get_channel") [flags 0x41]  <function_decl 0x406f3f80 switch_core_session_get_channel>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3162 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1663 1662 0 (set (reg/v/f:SI 368 [ other_channel ])
        (reg:SI 0 r0)) src/switch_core_media.c:3162 -1
     (nil))

;; # DEBUG other_channel => other_channel_426

(debug_insn 1664 1663 0 (var_location:SI other_channel (const_int 0 [0])) src/switch_core_media.c:3162 -1
     (nil))
;; remote_host_428 = switch_rtp_get_remote_host (D.44605_427);

(insn 1665 1664 1666 (set (reg:SI 1361)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3164 -1
     (nil))

(insn 1666 1665 1667 (set (reg:SI 0 r0)
        (reg:SI 1361)) src/switch_core_media.c:3164 -1
     (nil))

(call_insn 1667 1666 1668 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_get_remote_host") [flags 0x41]  <function_decl 0x408c6500 switch_rtp_get_remote_host>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3164 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1668 1667 0 (set (reg/v/f:SI 370 [ remote_host ])
        (reg:SI 0 r0)) src/switch_core_media.c:3164 -1
     (nil))

;; # DEBUG remote_host => remote_host_428

(debug_insn 1669 1668 0 (var_location:SI remote_host (const_int 0 [0])) src/switch_core_media.c:3164 -1
     (nil))
;; remote_port_430 = switch_rtp_get_remote_port (D.44605_429);

(insn 1670 1669 1671 (set (reg:SI 1362)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3165 -1
     (nil))

(insn 1671 1670 1672 (set (reg:SI 0 r0)
        (reg:SI 1362)) src/switch_core_media.c:3165 -1
     (nil))

(call_insn 1672 1671 1673 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_get_remote_port") [flags 0x41]  <function_decl 0x408c6580 switch_rtp_get_remote_port>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3165 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1673 1672 1674 (set (reg:SI 1363)
        (reg:SI 0 r0)) src/switch_core_media.c:3165 -1
     (nil))

(insn 1674 1673 0 (set (reg/v:SI 372 [ remote_port ])
        (reg:SI 1363)) src/switch_core_media.c:3165 -1
     (nil))

;; # DEBUG remote_port => remote_port_430

(debug_insn 1675 1674 0 (var_location:HI remote_port (const_int 0 [0])) src/switch_core_media.c:3165 -1
     (nil))
;; tmp = "";

(insn 1676 1675 1677 (set (reg:SI 1364)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1677 1676 1678 (set (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 tmp+0 S4 A64])
        (reg:SI 1364)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1678 1677 1679 (set (reg:SI 1365)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -92 [0xffffffffffffffa4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1679 1678 1680 (set (reg:SI 1366)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1680 1679 1681 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+4 S4 A32])
        (reg:SI 1366)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1681 1680 1682 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1682 1681 1683 (set (reg:SI 1367)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1683 1682 1684 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+8 S4 A32])
        (reg:SI 1367)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1684 1683 1685 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1685 1684 1686 (set (reg:SI 1368)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1686 1685 1687 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+12 S4 A32])
        (reg:SI 1368)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1687 1686 1688 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1688 1687 1689 (set (reg:SI 1369)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1689 1688 1690 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+16 S4 A32])
        (reg:SI 1369)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1690 1689 1691 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1691 1690 1692 (set (reg:SI 1370)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1692 1691 1693 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+20 S4 A32])
        (reg:SI 1370)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1693 1692 1694 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1694 1693 1695 (set (reg:SI 1371)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1695 1694 1696 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+24 S4 A32])
        (reg:SI 1371)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1696 1695 1697 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1697 1696 1698 (set (reg:SI 1372)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1698 1697 1699 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+28 S4 A32])
        (reg:SI 1372)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1699 1698 0 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

;; D.44737_431 = switch_channel_test_flag (other_channel_426, 1);

(insn 1700 1699 1701 (set (reg:SI 0 r0)
        (reg/v/f:SI 368 [ other_channel ])) src/switch_core_media.c:3169 -1
     (nil))

(insn 1701 1700 1702 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) src/switch_core_media.c:3169 -1
     (nil))

(call_insn 1702 1701 1703 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3169 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1703 1702 0 (set (reg:SI 373 [ D.44737 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3169 -1
     (nil))

;; if (D.44737_431 == 0)

(insn 1704 1703 1705 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 373 [ D.44737 ])
            (const_int 0 [0]))) src/switch_core_media.c:3169 -1
     (nil))

(jump_insn 1705 1704 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3169 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 157

;; D.44740_433 = switch_channel_get_name (D.44530_432);

(insn 1707 1706 1708 (set (reg:SI 1373)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1708 1707 1709 (set (reg:SI 0 r0)
        (reg:SI 1373)) src/switch_core_media.c:3170 -1
     (nil))

(call_insn 1709 1708 1710 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_name") [flags 0x41]  <function_decl 0x4084f780 switch_channel_get_name>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3170 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1710 1709 0 (set (reg/f:SI 375 [ D.44740 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3170 -1
     (nil))

;; D.44741_434 = switch_channel_get_name (other_channel_426);

(insn 1711 1710 1712 (set (reg:SI 0 r0)
        (reg/v/f:SI 368 [ other_channel ])) src/switch_core_media.c:3170 -1
     (nil))

(call_insn 1712 1711 1713 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_name") [flags 0x41]  <function_decl 0x4084f780 switch_channel_get_name>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3170 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1713 1712 0 (set (reg/f:SI 376 [ D.44741 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3170 -1
     (nil))

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3170, session_161(D), 4, "%s Error Passing T.38 to unanswered channel %s\n", D.44740_433, D.44741_434);

(insn 1714 1713 1715 (set (reg:SI 1375)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 983 [0x3d7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 983 [0x3d7])
            ] 29)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1715 1714 1716 (set (reg:SI 1374)
        (reg:SI 1375)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1716 1715 1717 (set (reg:SI 1377)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 984 [0x3d8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 984 [0x3d8])
            ] 29)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1717 1716 1718 (set (reg/f:SI 1376)
        (reg:SI 1377)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1718 1717 1719 (set (reg:SI 1379)
        (plus:SI (reg/f:SI 1376)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3170 -1
     (nil))

(insn 1719 1718 1720 (set (reg:SI 1378)
        (plus:SI (reg:SI 1379)
            (const_int 8 [0x8]))) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1376)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1720 1719 1721 (set (reg:SI 1380)
        (const_int 3170 [0xc62])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1721 1720 1722 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1722 1721 1723 (set (reg:SI 1381)
        (const_int 4 [0x4])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1723 1722 1724 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1381)) src/switch_core_media.c:3170 -1
     (nil))

(insn 1724 1723 1725 (set (reg:SI 1383)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC323") [flags 0x82]  <var_decl 0x404108a0 *.LC323>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 985 [0x3d9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 985 [0x3d9])
            ] 29)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC323") [flags 0x82]  <var_decl 0x404108a0 *.LC323>)
        (nil)))

(insn 1725 1724 1726 (set (reg/f:SI 1382)
        (reg:SI 1383)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC323") [flags 0x82]  <var_decl 0x404108a0 *.LC323>)
        (nil)))

(insn 1726 1725 1727 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1382)) src/switch_core_media.c:3170 -1
     (nil))

(insn 1727 1726 1728 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 375 [ D.44740 ])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1728 1727 1729 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg/f:SI 376 [ D.44741 ])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1729 1728 1730 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1730 1729 1731 (set (reg:SI 1 r1)
        (reg:SI 1374)) src/switch_core_media.c:3170 -1
     (nil))

(insn 1731 1730 1732 (set (reg:SI 2 r2)
        (reg:SI 1378)) src/switch_core_media.c:3170 -1
     (nil))

(insn 1732 1731 1733 (set (reg:SI 3 r3)
        (reg:SI 1380)) src/switch_core_media.c:3170 -1
     (nil))

(call_insn 1733 1732 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 24 [0x18]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3170 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_core_session_rwunlock (other_session.89_435);

(insn 1734 1733 1735 (set (reg:SI 1384)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3173 -1
     (nil))

(insn 1735 1734 1736 (set (reg:SI 0 r0)
        (reg:SI 1384)) src/switch_core_media.c:3173 -1
     (nil))

(call_insn 1736 1735 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_session_rwunlock") [flags 0x41]  <function_decl 0x406e6c00 switch_core_session_rwunlock>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3173 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; # DEBUG pass => 0

(debug_insn 1737 1736 0 (var_location:SI pass (const_int 0 [0])) src/switch_core_media.c:3175 -1
     (nil))
;; # DEBUG match => 0

(debug_insn 1738 1737 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3176 -1
     (nil))
;; Generating RTL for gimple basic block 158

;; 

(code_label 1741 1740 1742 1388 "" [0 uses])

(note 1742 1741 0 NOTE_INSN_BASIC_BLOCK)

;; D.44742_439 = switch_channel_get_variable_dup (D.44530_438, "t38_broken_boolean", 1, -1);

(insn 1743 1742 1744 (set (reg:SI 1385)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3181 -1
     (nil))

(insn 1744 1743 1745 (set (reg:SI 1387)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 986 [0x3da])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 986 [0x3da])
            ] 29)) src/switch_core_media.c:3181 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1745 1744 1746 (set (reg:SI 1386)
        (reg:SI 1387)) src/switch_core_media.c:3181 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1746 1745 1747 (set (reg:SI 0 r0)
        (reg:SI 1385)) src/switch_core_media.c:3181 -1
     (nil))

(insn 1747 1746 1748 (set (reg:SI 1 r1)
        (reg:SI 1386)) src/switch_core_media.c:3181 -1
     (nil))

(insn 1748 1747 1749 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3181 -1
     (nil))

(insn 1749 1748 1750 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3181 -1
     (nil))

(call_insn 1750 1749 1751 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3181 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1751 1750 0 (set (reg/f:SI 379 [ D.44742 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3181 -1
     (nil))

;; D.44743_440 = switch_true (D.44742_439);

(insn 1752 1751 1753 (set (reg:SI 0 r0)
        (reg/f:SI 379 [ D.44742 ])) src/switch_core_media.c:3181 -1
     (nil))

(call_insn 1753 1752 1754 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_true") [flags 0x3]  <function_decl 0x407e7f80 switch_true>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3181 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1754 1753 0 (set (reg:SI 380 [ D.44743 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3181 -1
     (nil))

;; if (D.44743_440 != 0)

(insn 1755 1754 1756 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 380 [ D.44743 ])
            (const_int 0 [0]))) src/switch_core_media.c:3181 -1
     (nil))

(jump_insn 1756 1755 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3181 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 159

;; D.44746_442 = switch_channel_get_variable_dup (D.44530_441, "t38_pass_broken_boolean", 1, -1);

(insn 1758 1757 1759 (set (reg:SI 1388)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3182 -1
     (nil))

(insn 1759 1758 1760 (set (reg:SI 1390)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC324") [flags 0x82]  <var_decl 0x40410900 *.LC324>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 987 [0x3db])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 987 [0x3db])
            ] 29)) src/switch_core_media.c:3182 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC324") [flags 0x82]  <var_decl 0x40410900 *.LC324>)
        (nil)))

(insn 1760 1759 1761 (set (reg:SI 1389)
        (reg:SI 1390)) src/switch_core_media.c:3182 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC324") [flags 0x82]  <var_decl 0x40410900 *.LC324>)
        (nil)))

(insn 1761 1760 1762 (set (reg:SI 0 r0)
        (reg:SI 1388)) src/switch_core_media.c:3182 -1
     (nil))

(insn 1762 1761 1763 (set (reg:SI 1 r1)
        (reg:SI 1389)) src/switch_core_media.c:3182 -1
     (nil))

(insn 1763 1762 1764 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3182 -1
     (nil))

(insn 1764 1763 1765 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3182 -1
     (nil))

(call_insn 1765 1764 1766 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3182 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1766 1765 0 (set (reg/f:SI 382 [ D.44746 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3182 -1
     (nil))

;; D.44747_443 = switch_true (D.44746_442);

(insn 1767 1766 1768 (set (reg:SI 0 r0)
        (reg/f:SI 382 [ D.44746 ])) src/switch_core_media.c:3182 -1
     (nil))

(call_insn 1768 1767 1769 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_true") [flags 0x3]  <function_decl 0x407e7f80 switch_true>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3182 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1769 1768 0 (set (reg:SI 383 [ D.44747 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3182 -1
     (nil))

;; if (D.44747_443 != 0)

(insn 1770 1769 1771 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 383 [ D.44747 ])
            (const_int 0 [0]))) src/switch_core_media.c:3181 -1
     (nil))

(jump_insn 1771 1770 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3181 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 160

;; switch_channel_set_variable_var_check (other_channel_426, "t38_broken_boolean", "true", 1);

(insn 1773 1772 1774 (set (reg:SI 1392)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 988 [0x3dc])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 988 [0x3dc])
            ] 29)) src/switch_core_media.c:3183 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1774 1773 1775 (set (reg:SI 1391)
        (reg:SI 1392)) src/switch_core_media.c:3183 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1775 1774 1776 (set (reg:SI 1394)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 989 [0x3dd])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 989 [0x3dd])
            ] 29)) src/switch_core_media.c:3183 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1776 1775 1777 (set (reg:SI 1393)
        (reg:SI 1394)) src/switch_core_media.c:3183 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1777 1776 1778 (set (reg:SI 0 r0)
        (reg/v/f:SI 368 [ other_channel ])) src/switch_core_media.c:3183 -1
     (nil))

(insn 1778 1777 1779 (set (reg:SI 1 r1)
        (reg:SI 1391)) src/switch_core_media.c:3183 -1
     (nil))

(insn 1779 1778 1780 (set (reg:SI 2 r2)
        (reg:SI 1393)) src/switch_core_media.c:3183 -1
     (nil))

(insn 1780 1779 1781 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3183 -1
     (nil))

(call_insn 1781 1780 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3183 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 161

;; 

(code_label 1782 1781 1783 1389 "" [0 uses])

(note 1783 1782 0 NOTE_INSN_BASIC_BLOCK)

;; D.44750_444 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

(insn 1784 1783 0 (set (reg/f:SI 384 [ D.44750 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3186 -1
     (nil))

;; D.44752_446 = switch_core_perform_session_strdup (session_161(D), D.44751_445, "src/switch_core_media.c", &__func__, 3186);

(insn 1785 1784 1786 (set (reg:SI 1395)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 342 [ t38_options ])
                (const_int 40 [0x28])) [2 t38_options_394->remote_ip+0 S4 A32])) src/switch_core_media.c:3186 -1
     (nil))

(insn 1786 1785 1787 (set (reg:SI 1397)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 990 [0x3de])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 990 [0x3de])
            ] 29)) src/switch_core_media.c:3186 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1787 1786 1788 (set (reg:SI 1396)
        (reg:SI 1397)) src/switch_core_media.c:3186 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1788 1787 1789 (set (reg:SI 1399)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 991 [0x3df])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 991 [0x3df])
            ] 29)) src/switch_core_media.c:3186 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1789 1788 1790 (set (reg/f:SI 1398)
        (reg:SI 1399)) src/switch_core_media.c:3186 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1790 1789 1791 (set (reg:SI 1401)
        (plus:SI (reg/f:SI 1398)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3186 -1
     (nil))

(insn 1791 1790 1792 (set (reg:SI 1400)
        (plus:SI (reg:SI 1401)
            (const_int 8 [0x8]))) src/switch_core_media.c:3186 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1398)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1792 1791 1793 (set (reg:SI 1402)
        (const_int 3186 [0xc72])) src/switch_core_media.c:3186 -1
     (nil))

(insn 1793 1792 1794 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1402)) src/switch_core_media.c:3186 -1
     (nil))

(insn 1794 1793 1795 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3186 -1
     (nil))

(insn 1795 1794 1796 (set (reg:SI 1 r1)
        (reg:SI 1395)) src/switch_core_media.c:3186 -1
     (nil))

(insn 1796 1795 1797 (set (reg:SI 2 r2)
        (reg:SI 1396)) src/switch_core_media.c:3186 -1
     (nil))

(insn 1797 1796 1798 (set (reg:SI 3 r3)
        (reg:SI 1400)) src/switch_core_media.c:3186 -1
     (nil))

(call_insn 1798 1797 1799 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3186 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1799 1798 0 (set (reg/f:SI 386 [ D.44752 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3186 -1
     (nil))

;; D.44750_444->remote_sdp_ip = D.44752_446;

(insn 1800 1799 0 (set (mem/s/f:SI (plus:SI (reg/f:SI 384 [ D.44750 ])
                (const_int 64 [0x40])) [2 D.44750_444->remote_sdp_ip+0 S4 A32])
        (reg/f:SI 386 [ D.44752 ])) src/switch_core_media.c:3186 -1
     (nil))

;; D.44750_447 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

(insn 1801 1800 0 (set (reg/f:SI 387 [ D.44750 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3187 -1
     (nil))

;; D.44753_448 = t38_options_394->remote_port;

(insn 1802 1801 0 (set (reg:SI 388 [ D.44753 ])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 342 [ t38_options ])
                    (const_int 44 [0x2c])) [13 t38_options_394->remote_port+0 S2 A32]))) src/switch_core_media.c:3187 -1
     (nil))

;; D.44750_447->remote_sdp_port = D.44753_448;

(insn 1803 1802 0 (set (mem/s:HI (plus:SI (reg/f:SI 387 [ D.44750 ])
                (const_int 68 [0x44])) [13 D.44750_447->remote_sdp_port+0 S2 A32])
        (subreg/s/u:HI (reg:SI 388 [ D.44753 ]) 0)) src/switch_core_media.c:3187 -1
     (nil))

;; if (D.44758_451 != 0)

(insn 1804 1803 1805 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 372 [ remote_port ])
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1805 1804 1806 (set (reg:SI 1404)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1806 1805 1807 (set (reg:QI 1403)
        (subreg:QI (reg:SI 1404) 0)) src/switch_core_media.c:3189 -1
     (nil))

(insn 1807 1806 1808 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 370 [ remote_host ])
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1808 1807 1809 (set (reg:SI 1406)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1809 1808 1810 (set (reg:QI 1405)
        (subreg:QI (reg:SI 1406) 0)) src/switch_core_media.c:3189 -1
     (nil))

(insn 1810 1809 1811 (set (reg:SI 1407)
        (and:SI (subreg:SI (reg:QI 1403) 0)
            (subreg:SI (reg:QI 1405) 0))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1811 1810 1812 (set (reg:QI 1408)
        (subreg:QI (reg:SI 1407) 0)) src/switch_core_media.c:3189 -1
     (nil))

(insn 1812 1811 1813 (set (reg:SI 1409)
        (zero_extend:SI (reg:QI 1408))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1813 1812 1814 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1409)
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(jump_insn 1814 1813 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3189 -1
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))

;; Generating RTL for gimple basic block 162

;; D.39032_454 = __builtin_strcmp (remote_host_428, D.44760_453);

(insn 1816 1815 1817 (set (reg:SI 1410)
        (mem/s/f:SI (plus:SI (reg/f:SI 387 [ D.44750 ])
                (const_int 64 [0x40])) [2 D.44750_447->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3189 -1
     (nil))

(insn 1817 1816 1818 (set (reg:SI 0 r0)
        (reg/v/f:SI 370 [ remote_host ])) src/switch_core_media.c:3189 -1
     (nil))

(insn 1818 1817 1819 (set (reg:SI 1 r1)
        (reg:SI 1410)) src/switch_core_media.c:3189 -1
     (nil))

(call_insn/i 1819 1818 1820 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41]  <function_decl 0x402f3600 __builtin_strcmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3189 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1820 1819 1821 (set (reg:SI 1411)
        (reg:SI 0 r0)) src/switch_core_media.c:3189 -1
     (nil))

(insn 1821 1820 0 (set (reg:SI 393 [ D.39032 ])
        (reg:SI 1411)) src/switch_core_media.c:3189 -1
     (nil))

;; if (D.39032_454 == 0)

(insn 1822 1821 1823 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 393 [ D.39032 ])
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(jump_insn 1823 1822 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3189 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 163

;; if (remote_port_430 == D.44753_448)

(insn 1825 1824 1826 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 372 [ remote_port ])
            (reg:SI 388 [ D.44753 ]))) src/switch_core_media.c:3189 -1
     (nil))

(jump_insn 1826 1825 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3189 -1
     (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil)))

;; Generating RTL for gimple basic block 164

;; D.44764_458 = switch_channel_get_name (D.44530_457);

(insn 1828 1827 1829 (set (reg:SI 1412)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1829 1828 1830 (set (reg:SI 0 r0)
        (reg:SI 1412)) src/switch_core_media.c:3190 -1
     (nil))

(call_insn 1830 1829 1831 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_name") [flags 0x41]  <function_decl 0x4084f780 switch_channel_get_name>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3190 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1831 1830 0 (set (reg/f:SI 397 [ D.44764 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3190 -1
     (nil))

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3190, session_161(D), 7, "Audio params are unchanged for %s.\n", D.44764_458);

(insn 1832 1831 1833 (set (reg:SI 1414)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 992 [0x3e0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 992 [0x3e0])
            ] 29)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1833 1832 1834 (set (reg:SI 1413)
        (reg:SI 1414)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1834 1833 1835 (set (reg:SI 1416)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 993 [0x3e1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 993 [0x3e1])
            ] 29)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1835 1834 1836 (set (reg/f:SI 1415)
        (reg:SI 1416)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1836 1835 1837 (set (reg:SI 1418)
        (plus:SI (reg/f:SI 1415)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3190 -1
     (nil))

(insn 1837 1836 1838 (set (reg:SI 1417)
        (plus:SI (reg:SI 1418)
            (const_int 8 [0x8]))) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1415)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1838 1837 1839 (set (reg:SI 1419)
        (const_int 3190 [0xc76])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1839 1838 1840 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1840 1839 1841 (set (reg:SI 1420)
        (const_int 7 [0x7])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1841 1840 1842 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1420)) src/switch_core_media.c:3190 -1
     (nil))

(insn 1842 1841 1843 (set (reg:SI 1422)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC183") [flags 0x82]  <var_decl 0x4229e360 *.LC183>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 994 [0x3e2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 994 [0x3e2])
            ] 29)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC183") [flags 0x82]  <var_decl 0x4229e360 *.LC183>)
        (nil)))

(insn 1843 1842 1844 (set (reg/f:SI 1421)
        (reg:SI 1422)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC183") [flags 0x82]  <var_decl 0x4229e360 *.LC183>)
        (nil)))

(insn 1844 1843 1845 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1421)) src/switch_core_media.c:3190 -1
     (nil))

(insn 1845 1844 1846 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 397 [ D.44764 ])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1846 1845 1847 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1847 1846 1848 (set (reg:SI 1 r1)
        (reg:SI 1413)) src/switch_core_media.c:3190 -1
     (nil))

(insn 1848 1847 1849 (set (reg:SI 2 r2)
        (reg:SI 1417)) src/switch_core_media.c:3190 -1
     (nil))

(insn 1849 1848 1850 (set (reg:SI 3 r3)
        (reg:SI 1419)) src/switch_core_media.c:3190 -1
     (nil))

(call_insn 1850 1849 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3190 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 165

;; 

(code_label 1853 1852 1854 1390 "" [0 uses])

(note 1854 1853 0 NOTE_INSN_BASIC_BLOCK)

;; err = 0B;

(insn 1855 1854 1856 (set (reg:SI 1423)
        (const_int 0 [0])) src/switch_core_media.c:3193 -1
     (nil))

(insn 1856 1855 0 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 err+0 S4 A32])
        (reg:SI 1423)) src/switch_core_media.c:3193 -1
     (nil))

;; D.44765_460 = switch_channel_get_name (D.44530_459);

(insn 1857 1856 1858 (set (reg:SI 1424)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1858 1857 1859 (set (reg:SI 0 r0)
        (reg:SI 1424)) src/switch_core_media.c:3195 -1
     (nil))

(call_insn 1859 1858 1860 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_name") [flags 0x41]  <function_decl 0x4084f780 switch_channel_get_name>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3195 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1860 1859 0 (set (reg/f:SI 399 [ D.44765 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3195 -1
     (nil))

;; D.44750_462 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

(insn 1861 1860 0 (set (reg/f:SI 401 [ D.44750 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3197 -1
     (nil))

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3195, session_161(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.44765_460, remote_host_428, D.44766_461, D.44760_463, D.44767_466);

(insn 1862 1861 1863 (set (reg:SI 1426)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 995 [0x3e3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 995 [0x3e3])
            ] 29)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1863 1862 1864 (set (reg:SI 1425)
        (reg:SI 1426)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1864 1863 1865 (set (reg:SI 1428)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 996 [0x3e4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 996 [0x3e4])
            ] 29)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1865 1864 1866 (set (reg/f:SI 1427)
        (reg:SI 1428)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1866 1865 1867 (set (reg:SI 1430)
        (plus:SI (reg/f:SI 1427)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3195 -1
     (nil))

(insn 1867 1866 1868 (set (reg:SI 1429)
        (plus:SI (reg:SI 1430)
            (const_int 8 [0x8]))) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1427)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1868 1867 1869 (set (reg:SI 1431)
        (const_int 3195 [0xc7b])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1869 1868 1870 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1870 1869 1871 (set (reg:SI 1432)
        (const_int 7 [0x7])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1871 1870 1872 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1432)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1872 1871 1873 (set (reg:SI 1434)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC184") [flags 0x82]  <var_decl 0x4229e3c0 *.LC184>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 997 [0x3e5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 997 [0x3e5])
            ] 29)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC184") [flags 0x82]  <var_decl 0x4229e3c0 *.LC184>)
        (nil)))

(insn 1873 1872 1874 (set (reg/f:SI 1433)
        (reg:SI 1434)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC184") [flags 0x82]  <var_decl 0x4229e3c0 *.LC184>)
        (nil)))

(insn 1874 1873 1875 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1433)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1875 1874 1876 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 399 [ D.44765 ])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1876 1875 1877 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg/v/f:SI 370 [ remote_host ])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1877 1876 1878 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg/v:SI 372 [ remote_port ])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1878 1877 1879 (set (reg/f:SI 1435)
        (mem/s/f:SI (plus:SI (reg/f:SI 401 [ D.44750 ])
                (const_int 64 [0x40])) [2 D.44750_462->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1879 1878 1880 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg/f:SI 1435)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1880 1879 1881 (set (reg:SI 1436)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 401 [ D.44750 ])
                    (const_int 68 [0x44])) [13 D.44750_462->remote_sdp_port+0 S2 A32]))) src/switch_core_media.c:3195 -1
     (nil))

(insn 1881 1880 1882 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 28 [0x1c])) [0 S4 A32])
        (reg:SI 1436)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1882 1881 1883 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1883 1882 1884 (set (reg:SI 1 r1)
        (reg:SI 1425)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1884 1883 1885 (set (reg:SI 2 r2)
        (reg:SI 1429)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1885 1884 1886 (set (reg:SI 3 r3)
        (reg:SI 1431)) src/switch_core_media.c:3195 -1
     (nil))

(call_insn 1886 1885 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 32 [0x20]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3195 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_snprintf (&tmp, 32, "%d", D.44767_469);

(insn 1887 1886 1888 (set (reg:SI 1437)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3199 -1
     (nil))

(insn 1888 1887 1889 (set (reg:SI 1439)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 998 [0x3e6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 998 [0x3e6])
            ] 29)) src/switch_core_media.c:3199 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 1889 1888 1890 (set (reg:SI 1438)
        (reg:SI 1439)) src/switch_core_media.c:3199 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 1890 1889 1891 (set (reg/f:SI 1440)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3199 -1
     (nil))

(insn 1891 1890 1892 (set (reg:SI 1441)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 1440)
                    (const_int 68 [0x44])) [13 D.44750_467->remote_sdp_port+0 S2 A32]))) src/switch_core_media.c:3199 -1
     (nil))

(insn 1892 1891 1893 (set (reg:SI 0 r0)
        (reg:SI 1437)) src/switch_core_media.c:3199 -1
     (nil))

(insn 1893 1892 1894 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) src/switch_core_media.c:3199 -1
     (nil))

(insn 1894 1893 1895 (set (reg:SI 2 r2)
        (reg:SI 1438)) src/switch_core_media.c:3199 -1
     (nil))

(insn 1895 1894 1896 (set (reg:SI 3 r3)
        (reg:SI 1441)) src/switch_core_media.c:3199 -1
     (nil))

(call_insn 1896 1895 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3199 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_470, "remote_media_ip", D.44760_472, 1);

(insn 1897 1896 1898 (set (reg:SI 1442)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3200 -1
     (nil))

(insn 1898 1897 1899 (set (reg:SI 1444)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 999 [0x3e7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 999 [0x3e7])
            ] 29)) src/switch_core_media.c:3200 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
        (nil)))

(insn 1899 1898 1900 (set (reg:SI 1443)
        (reg:SI 1444)) src/switch_core_media.c:3200 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
        (nil)))

(insn 1900 1899 1901 (set (reg/f:SI 1445)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3200 -1
     (nil))

(insn 1901 1900 1902 (set (reg:SI 1446)
        (mem/s/f:SI (plus:SI (reg/f:SI 1445)
                (const_int 64 [0x40])) [2 D.44750_471->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3200 -1
     (nil))

(insn 1902 1901 1903 (set (reg:SI 0 r0)
        (reg:SI 1442)) src/switch_core_media.c:3200 -1
     (nil))

(insn 1903 1902 1904 (set (reg:SI 1 r1)
        (reg:SI 1443)) src/switch_core_media.c:3200 -1
     (nil))

(insn 1904 1903 1905 (set (reg:SI 2 r2)
        (reg:SI 1446)) src/switch_core_media.c:3200 -1
     (nil))

(insn 1905 1904 1906 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3200 -1
     (nil))

(call_insn 1906 1905 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3200 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_473, "remote_media_port", &tmp, 1);

(insn 1907 1906 1908 (set (reg:SI 1447)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3201 -1
     (nil))

(insn 1908 1907 1909 (set (reg:SI 1449)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1000 [0x3e8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1000 [0x3e8])
            ] 29)) src/switch_core_media.c:3201 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
        (nil)))

(insn 1909 1908 1910 (set (reg:SI 1448)
        (reg:SI 1449)) src/switch_core_media.c:3201 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
        (nil)))

(insn 1910 1909 1911 (set (reg:SI 1450)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3201 -1
     (nil))

(insn 1911 1910 1912 (set (reg:SI 0 r0)
        (reg:SI 1447)) src/switch_core_media.c:3201 -1
     (nil))

(insn 1912 1911 1913 (set (reg:SI 1 r1)
        (reg:SI 1448)) src/switch_core_media.c:3201 -1
     (nil))

(insn 1913 1912 1914 (set (reg:SI 2 r2)
        (reg:SI 1450)) src/switch_core_media.c:3201 -1
     (nil))

(insn 1914 1913 1915 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3201 -1
     (nil))

(call_insn 1915 1914 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3201 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; D.44750_475 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

(insn 1916 1915 0 (set (reg/f:SI 414 [ D.44750 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3203 -1
     (nil))

;; D.44768_479 = switch_rtp_set_remote_address (D.44605_474, D.44760_476, D.44762_478, 0, 1, &err);

(insn 1917 1916 1918 (set (reg:SI 1451)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3203 -1
     (nil))

(insn 1918 1917 1919 (set (reg:SI 1452)
        (mem/s/f:SI (plus:SI (reg/f:SI 414 [ D.44750 ])
                (const_int 64 [0x40])) [2 D.44750_475->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3203 -1
     (nil))

(insn 1919 1918 1920 (set (reg:SI 1453)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 414 [ D.44750 ])
                    (const_int 68 [0x44])) [13 D.44750_475->remote_sdp_port+0 S2 A32]))) src/switch_core_media.c:3203 -1
     (nil))

(insn 1920 1919 1921 (set (reg:SI 1454)
        (const_int 1 [0x1])) src/switch_core_media.c:3203 -1
     (nil))

(insn 1921 1920 1922 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1454)) src/switch_core_media.c:3203 -1
     (nil))

(insn 1922 1921 1923 (set (reg:SI 1455)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))) src/switch_core_media.c:3203 -1
     (nil))

(insn 1923 1922 1924 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1455)) src/switch_core_media.c:3203 -1
     (nil))

(insn 1924 1923 1925 (set (reg:SI 0 r0)
        (reg:SI 1451)) src/switch_core_media.c:3203 -1
     (nil))

(insn 1925 1924 1926 (set (reg:SI 1 r1)
        (reg:SI 1452)) src/switch_core_media.c:3203 -1
     (nil))

(insn 1926 1925 1927 (set (reg:SI 2 r2)
        (reg:SI 1453)) src/switch_core_media.c:3203 -1
     (nil))

(insn 1927 1926 1928 (set (reg:SI 3 r3)
        (const_int 0 [0])) src/switch_core_media.c:3203 -1
     (nil))

(call_insn 1928 1927 1929 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_set_remote_address") [flags 0x41]  <function_decl 0x408c6480 switch_rtp_set_remote_address>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3203 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1929 1928 0 (set (reg:SI 417 [ D.44768 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3203 -1
     (nil))

;; if (D.44768_479 != 0)

(insn 1930 1929 1931 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 417 [ D.44768 ])
            (const_int 0 [0]))) src/switch_core_media.c:3203 -1
     (nil))

(jump_insn 1931 1930 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3203 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 166

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3205, session_161(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.90_480);

(insn 1933 1932 1934 (set (reg:SI 1457)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1001 [0x3e9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1001 [0x3e9])
            ] 29)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1934 1933 1935 (set (reg:SI 1456)
        (reg:SI 1457)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1935 1934 1936 (set (reg:SI 1459)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1002 [0x3ea])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1002 [0x3ea])
            ] 29)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1936 1935 1937 (set (reg/f:SI 1458)
        (reg:SI 1459)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1937 1936 1938 (set (reg:SI 1461)
        (plus:SI (reg/f:SI 1458)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3205 -1
     (nil))

(insn 1938 1937 1939 (set (reg:SI 1460)
        (plus:SI (reg:SI 1461)
            (const_int 8 [0x8]))) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1458)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1939 1938 1940 (set (reg:SI 1462)
        (const_int 3205 [0xc85])) src/switch_core_media.c:3205 -1
     (nil))

(insn 1940 1939 1941 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3205 -1
     (nil))

(insn 1941 1940 1942 (set (reg:SI 1463)
        (const_int 3 [0x3])) src/switch_core_media.c:3205 -1
     (nil))

(insn 1942 1941 1943 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1463)) src/switch_core_media.c:3205 -1
     (nil))

(insn 1943 1942 1944 (set (reg:SI 1465)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC187") [flags 0x82]  <var_decl 0x4229e4e0 *.LC187>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1003 [0x3eb])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1003 [0x3eb])
            ] 29)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC187") [flags 0x82]  <var_decl 0x4229e4e0 *.LC187>)
        (nil)))

(insn 1944 1943 1945 (set (reg/f:SI 1464)
        (reg:SI 1465)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC187") [flags 0x82]  <var_decl 0x4229e4e0 *.LC187>)
        (nil)))

(insn 1945 1944 1946 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1464)) src/switch_core_media.c:3205 -1
     (nil))

(insn 1946 1945 1947 (set (reg/f:SI 1466)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 err+0 S4 A32])) src/switch_core_media.c:3205 -1
     (nil))

(insn 1947 1946 1948 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 1466)) src/switch_core_media.c:3205 -1
     (nil))

(insn 1948 1947 1949 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3205 -1
     (nil))

(insn 1949 1948 1950 (set (reg:SI 1 r1)
        (reg:SI 1456)) src/switch_core_media.c:3205 -1
     (nil))

(insn 1950 1949 1951 (set (reg:SI 2 r2)
        (reg:SI 1460)) src/switch_core_media.c:3205 -1
     (nil))

(insn 1951 1950 1952 (set (reg:SI 3 r3)
        (reg:SI 1462)) src/switch_core_media.c:3205 -1
     (nil))

(call_insn 1952 1951 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3205 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_perform_hangup (channel_162, "src/switch_core_media.c", &__func__, 3206, 88);

(insn 1953 1952 1954 (set (reg:SI 1468)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1004 [0x3ec])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1004 [0x3ec])
            ] 29)) src/switch_core_media.c:3206 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1954 1953 1955 (set (reg:SI 1467)
        (reg:SI 1468)) src/switch_core_media.c:3206 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1955 1954 1956 (set (reg:SI 1470)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1005 [0x3ed])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1005 [0x3ed])
            ] 29)) src/switch_core_media.c:3206 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1956 1955 1957 (set (reg/f:SI 1469)
        (reg:SI 1470)) src/switch_core_media.c:3206 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1957 1956 1958 (set (reg:SI 1472)
        (plus:SI (reg/f:SI 1469)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3206 -1
     (nil))

(insn 1958 1957 1959 (set (reg:SI 1471)
        (plus:SI (reg:SI 1472)
            (const_int 8 [0x8]))) src/switch_core_media.c:3206 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1469)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1959 1958 1960 (set (reg:SI 1473)
        (const_int 3206 [0xc86])) src/switch_core_media.c:3206 -1
     (nil))

(insn 1960 1959 1961 (set (reg:SI 1474)
        (const_int 88 [0x58])) src/switch_core_media.c:3206 -1
     (nil))

(insn 1961 1960 1962 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1474)) src/switch_core_media.c:3206 -1
     (nil))

(insn 1962 1961 1963 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:3206 -1
     (nil))

(insn 1963 1962 1964 (set (reg:SI 1 r1)
        (reg:SI 1467)) src/switch_core_media.c:3206 -1
     (nil))

(insn 1964 1963 1965 (set (reg:SI 2 r2)
        (reg:SI 1471)) src/switch_core_media.c:3206 -1
     (nil))

(insn 1965 1964 1966 (set (reg:SI 3 r3)
        (reg:SI 1473)) src/switch_core_media.c:3206 -1
     (nil))

(call_insn 1966 1965 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_perform_hangup") [flags 0x41]  <function_decl 0x4084f800 switch_channel_perform_hangup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3206 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 167

;; 

(code_label 1967 1966 1968 1391 "" [0 uses])

(note 1968 1967 0 NOTE_INSN_BASIC_BLOCK)

;; switch_core_media_copy_t38_options (t38_options_394, other_session.89_481);

(insn 1969 1968 1970 (set (reg:SI 1475)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3213 -1
     (nil))

(insn 1970 1969 1971 (set (reg:SI 0 r0)
        (reg/v/f:SI 342 [ t38_options ])) src/switch_core_media.c:3213 -1
     (nil))

(insn 1971 1970 1972 (set (reg:SI 1 r1)
        (reg:SI 1475)) src/switch_core_media.c:3213 -1
     (nil))

(call_insn 1972 1971 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_media_copy_t38_options") [flags 0x1]  <function_decl 0x40945880 switch_core_media_copy_t38_options>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3213 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; switch_channel_set_flag_value (D.44482_483, 101, 1);

(insn 1973 1972 1974 (set (reg/f:SI 1476)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:3215 -1
     (nil))

(insn 1974 1973 1975 (set (reg:SI 1477)
        (mem/s/f:SI (plus:SI (reg/f:SI 1476)
                (const_int 24 [0x18])) [2 D.44481_482->channel+0 S4 A32])) src/switch_core_media.c:3215 -1
     (nil))

(insn 1975 1974 1976 (set (reg:SI 0 r0)
        (reg:SI 1477)) src/switch_core_media.c:3215 -1
     (nil))

(insn 1976 1975 1977 (set (reg:SI 1 r1)
        (const_int 101 [0x65])) src/switch_core_media.c:3215 -1
     (nil))

(insn 1977 1976 1978 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3215 -1
     (nil))

(call_insn 1978 1977 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_set_flag_value") [flags 0x41]  <function_decl 0x40846900 switch_channel_set_flag_value>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3215 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

;; switch_channel_set_flag_value (D.44772_485, 101, 1);

(insn 1979 1978 1980 (set (reg/f:SI 1478)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3216 -1
     (nil))

(insn 1980 1979 1981 (set (reg:SI 1479)
        (mem/s/f:SI (plus:SI (reg/f:SI 1478)
                (const_int 24 [0x18])) [2 other_session.89_484->channel+0 S4 A32])) src/switch_core_media.c:3216 -1
     (nil))

(insn 1981 1980 1982 (set (reg:SI 0 r0)
        (reg:SI 1479)) src/switch_core_media.c:3216 -1
     (nil))

(insn 1982 1981 1983 (set (reg:SI 1 r1)
        (const_int 101 [0x65])) src/switch_core_media.c:3216 -1
     (nil))

(insn 1983 1982 1984 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3216 -1
     (nil))

(call_insn 1984 1983 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_set_flag_value") [flags 0x41]  <function_decl 0x40846900 switch_channel_set_flag_value>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3216 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

;; msg_487 = switch_core_perform_session_alloc (other_session.89_486, 108, "src/switch_core_media.c", &__func__, 3218);

(insn 1985 1984 1986 (set (reg:SI 1480)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3218 -1
     (nil))

(insn 1986 1985 1987 (set (reg:SI 1482)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1006 [0x3ee])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1006 [0x3ee])
            ] 29)) src/switch_core_media.c:3218 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1987 1986 1988 (set (reg:SI 1481)
        (reg:SI 1482)) src/switch_core_media.c:3218 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1988 1987 1989 (set (reg:SI 1484)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1007 [0x3ef])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1007 [0x3ef])
            ] 29)) src/switch_core_media.c:3218 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1989 1988 1990 (set (reg/f:SI 1483)
        (reg:SI 1484)) src/switch_core_media.c:3218 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1990 1989 1991 (set (reg:SI 1486)
        (plus:SI (reg/f:SI 1483)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3218 -1
     (nil))

(insn 1991 1990 1992 (set (reg:SI 1485)
        (plus:SI (reg:SI 1486)
            (const_int 8 [0x8]))) src/switch_core_media.c:3218 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1483)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1992 1991 1993 (set (reg:SI 1487)
        (const_int 3218 [0xc92])) src/switch_core_media.c:3218 -1
     (nil))

(insn 1993 1992 1994 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1487)) src/switch_core_media.c:3218 -1
     (nil))

(insn 1994 1993 1995 (set (reg:SI 0 r0)
        (reg:SI 1480)) src/switch_core_media.c:3218 -1
     (nil))

(insn 1995 1994 1996 (set (reg:SI 1 r1)
        (const_int 108 [0x6c])) src/switch_core_media.c:3218 -1
     (nil))

(insn 1996 1995 1997 (set (reg:SI 2 r2)
        (reg:SI 1481)) src/switch_core_media.c:3218 -1
     (nil))

(insn 1997 1996 1998 (set (reg:SI 3 r3)
        (reg:SI 1485)) src/switch_core_media.c:3218 -1
     (nil))

(call_insn 1998 1997 1999 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_alloc") [flags 0x41]  <function_decl 0x406f3380 switch_core_perform_session_alloc>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3218 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1999 1998 0 (set (reg/v/f:SI 425 [ msg ])
        (reg:SI 0 r0)) src/switch_core_media.c:3218 -1
     (nil))

;; # DEBUG msg => msg_487

(debug_insn 2000 1999 0 (var_location:SI msg (const_int 0 [0])) src/switch_core_media.c:3218 -1
     (nil))
;; msg_487->message_id = 21;

(insn 2001 2000 2002 (set (reg:SI 1488)
        (const_int 21 [0x15])) src/switch_core_media.c:3219 -1
     (nil))

(insn 2002 2001 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 425 [ msg ])
                (const_int 4 [0x4])) [56 msg_487->message_id+0 S4 A32])
        (reg:SI 1488)) src/switch_core_media.c:3219 -1
     (nil))

;; msg_487->from = "src/switch_core_media.c";

(insn 2003 2002 2004 (set (reg:SI 1490)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1008 [0x3f0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1008 [0x3f0])
            ] 29)) src/switch_core_media.c:3220 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2004 2003 2005 (set (reg/f:SI 1489)
        (reg:SI 1490)) src/switch_core_media.c:3220 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2005 2004 0 (set (mem/s/f:SI (reg/v/f:SI 425 [ msg ]) [2 msg_487->from+0 S4 A32])
        (reg/f:SI 1489)) src/switch_core_media.c:3220 -1
     (nil))

;; D.44773_489 = switch_core_perform_session_strdup (other_session.89_488, r_sdp_193(D), "src/switch_core_media.c", &__func__, 3221);

(insn 2006 2005 2007 (set (reg:SI 1491)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3221 -1
     (nil))

(insn 2007 2006 2008 (set (reg:SI 1493)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1009 [0x3f1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1009 [0x3f1])
            ] 29)) src/switch_core_media.c:3221 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2008 2007 2009 (set (reg:SI 1492)
        (reg:SI 1493)) src/switch_core_media.c:3221 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2009 2008 2010 (set (reg:SI 1495)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1010 [0x3f2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1010 [0x3f2])
            ] 29)) src/switch_core_media.c:3221 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2010 2009 2011 (set (reg/f:SI 1494)
        (reg:SI 1495)) src/switch_core_media.c:3221 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2011 2010 2012 (set (reg:SI 1497)
        (plus:SI (reg/f:SI 1494)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3221 -1
     (nil))

(insn 2012 2011 2013 (set (reg:SI 1496)
        (plus:SI (reg:SI 1497)
            (const_int 8 [0x8]))) src/switch_core_media.c:3221 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1494)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2013 2012 2014 (set (reg:SI 1498)
        (const_int 3221 [0xc95])) src/switch_core_media.c:3221 -1
     (nil))

(insn 2014 2013 2015 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1498)) src/switch_core_media.c:3221 -1
     (nil))

(insn 2015 2014 2016 (set (reg:SI 0 r0)
        (reg:SI 1491)) src/switch_core_media.c:3221 -1
     (nil))

(insn 2016 2015 2017 (set (reg:SI 1 r1)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:3221 -1
     (nil))

(insn 2017 2016 2018 (set (reg:SI 2 r2)
        (reg:SI 1492)) src/switch_core_media.c:3221 -1
     (nil))

(insn 2018 2017 2019 (set (reg:SI 3 r3)
        (reg:SI 1496)) src/switch_core_media.c:3221 -1
     (nil))

(call_insn 2019 2018 2020 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3221 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 2020 2019 0 (set (reg/f:SI 427 [ D.44773 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3221 -1
     (nil))

;; msg_487->string_arg = D.44773_489;

(insn 2021 2020 0 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 425 [ msg ])
                (const_int 12 [0xc])) [2 msg_487->string_arg+0 S4 A32])
        (reg/f:SI 427 [ D.44773 ])) src/switch_core_media.c:3221 -1
     (nil))

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3222, session_161(D), 7, "Passing T38 req to other leg.\n%s\n", r_sdp_193(D));

(insn 2022 2021 2023 (set (reg:SI 1500)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1011 [0x3f3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1011 [0x3f3])
            ] 29)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2023 2022 2024 (set (reg:SI 1499)
        (reg:SI 1500)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2024 2023 2025 (set (reg:SI 1502)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1012 [0x3f4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1012 [0x3f4])
            ] 29)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2025 2024 2026 (set (reg/f:SI 1501)
        (reg:SI 1502)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2026 2025 2027 (set (reg:SI 1504)
        (plus:SI (reg/f:SI 1501)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3222 -1
     (nil))

(insn 2027 2026 2028 (set (reg:SI 1503)
        (plus:SI (reg:SI 1504)
            (const_int 8 [0x8]))) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1501)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2028 2027 2029 (set (reg:SI 1505)
        (const_int 3222 [0xc96])) src/switch_core_media.c:3222 -1
     (nil))

(insn 2029 2028 2030 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3222 -1
     (nil))

(insn 2030 2029 2031 (set (reg:SI 1506)
        (const_int 7 [0x7])) src/switch_core_media.c:3222 -1
     (nil))

(insn 2031 2030 2032 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1506)) src/switch_core_media.c:3222 -1
     (nil))

(insn 2032 2031 2033 (set (reg:SI 1508)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC325") [flags 0x82]  <var_decl 0x40410cc0 *.LC325>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1013 [0x3f5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1013 [0x3f5])
            ] 29)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC325") [flags 0x82]  <var_decl 0x40410cc0 *.LC325>)
        (nil)))

(insn 2033 2032 2034 (set (reg/f:SI 1507)
        (reg:SI 1508)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC325") [flags 0x82]  <var_decl 0x40410cc0 *.LC325>)
        (nil)))

(insn 2034 2033 2035 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1507)) src/switch_core_media.c:3222 -1
     (nil))

(insn 2035 2034 2036 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:3222 -1
     (nil))

(insn 2036 2035 2037 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3222 -1
     (nil))

(insn 2037 2036 2038 (set (reg:SI 1 r1)
        (reg:SI 1499)) src/switch_core_media.c:3222 -1
     (nil))

(insn 2038 2037 2039 (set (reg:SI 2 r2)
        (reg:SI 1503)) src/switch_core_media.c:3222 -1
     (nil))

(insn 2039 2038 2040 (set (reg:SI 3 r3)
        (reg:SI 1505)) src/switch_core_media.c:3222 -1
     (nil))

(call_insn 2040 2039 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3222 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_core_session_queue_message (other_session.89_490, msg_487);

(insn 2041 2040 2042 (set (reg:SI 1509)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3223 -1
     (nil))

(insn 2042 2041 2043 (set (reg:SI 0 r0)
        (reg:SI 1509)) src/switch_core_media.c:3223 -1
     (nil))

(insn 2043 2042 2044 (set (reg:SI 1 r1)
        (reg/v/f:SI 425 [ msg ])) src/switch_core_media.c:3223 -1
     (nil))

(call_insn 2044 2043 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_queue_message") [flags 0x41]  <function_decl 0x40704180 switch_core_session_queue_message>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3223 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; switch_core_session_rwunlock (other_session.89_491);

(insn 2045 2044 2046 (set (reg:SI 1510)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3224 -1
     (nil))

(insn 2046 2045 2047 (set (reg:SI 0 r0)
        (reg:SI 1510)) src/switch_core_media.c:3224 -1
     (nil))

(call_insn 2047 2046 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_session_rwunlock") [flags 0x41]  <function_decl 0x406e6c00 switch_core_session_rwunlock>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3224 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 168

;; 

(code_label 2050 2049 2051 1379 "" [0 uses])

(note 2051 2050 0 NOTE_INSN_BASIC_BLOCK)

;; if (prephitmp.1049_1814 == 2)

(insn 2052 2051 2053 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 979 [ prephitmp.1049 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3232 -1
     (nil))

(jump_insn 2053 2052 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3232 -1
     (expr_list:REG_BR_PROB (const_int 6748 [0x1a5c])
        (nil)))

;; Generating RTL for gimple basic block 169

;; if (D.44779_497 != 0)

(insn 2055 2054 2056 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 183 [ got_audio ])
            (const_int 0 [0]))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2056 2055 2057 (set (reg:SI 1512)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2057 2056 2058 (set (reg:QI 1511)
        (subreg:QI (reg:SI 1512) 0)) src/switch_core_media.c:3232 -1
     (nil))

(insn 2058 2057 2059 (set (reg:SI 1514)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 20 [0x14])) [26 m_1764->m_port+0 S4 A32])) src/switch_core_media.c:3232 -1
     (nil))

(insn 2059 2058 2060 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1514)
            (const_int 0 [0]))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2060 2059 2061 (set (reg:SI 1515)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2061 2060 2062 (set (reg:QI 1513)
        (subreg:QI (reg:SI 1515) 0)) src/switch_core_media.c:3232 -1
     (nil))

(insn 2062 2061 2063 (set (reg:SI 1516)
        (and:SI (subreg:SI (reg:QI 1511) 0)
            (subreg:SI (reg:QI 1513) 0))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2063 2062 2064 (set (reg:QI 1517)
        (subreg:QI (reg:SI 1516) 0)) src/switch_core_media.c:3232 -1
     (nil))

(insn 2064 2063 2065 (set (reg:SI 1518)
        (zero_extend:SI (reg:QI 1517))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2065 2064 2066 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1518)
            (const_int 0 [0]))) src/switch_core_media.c:3232 -1
     (nil))

(jump_insn 2066 2065 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3232 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 170

;; D.44781_498 = switch_rtp_has_dtls ();

(call_insn 2068 2067 2069 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_has_dtls") [flags 0x41]  <function_decl 0x408d7080 switch_rtp_has_dtls>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3235 -1
     (nil)
    (nil))

(insn 2069 2068 0 (set (reg:SI 434 [ D.44781 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3235 -1
     (nil))

;; if (D.44781_498 != 0)

(insn 2070 2069 2071 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 434 [ D.44781 ])
            (const_int 0 [0]))) src/switch_core_media.c:3235 -1
     (nil))

(jump_insn 2071 2070 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3235 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 171

;; D.44784_499 = dtls_ok (session_161(D));

(insn 2073 2072 2074 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3235 -1
     (nil))

(call_insn 2074 2073 2075 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dtls_ok") [flags 0x3]  <function_decl 0x414f3900 dtls_ok>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3235 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 2075 2074 0 (set (reg:SI 435 [ D.44784 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3235 -1
     (nil))

;; if (D.44784_499 != 0)

(insn 2076 2075 2077 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 435 [ D.44784 ])
            (const_int 0 [0]))) src/switch_core_media.c:3235 -1
     (nil))

(jump_insn 2077 2076 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3235 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 172

;; attr_500 = m_1764->m_attributes;

(insn 2079 2078 0 (set (reg/v/f:SI 440 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 60 [0x3c])) [2 m_1764->m_attributes+0 S4 A32])) src/switch_core_media.c:3236 -1
     (nil))

;; # DEBUG attr => attr_500

(debug_insn 2080 2079 0 (var_location:SI attr (const_int 0 [0])) src/switch_core_media.c:3236 -1
     (nil))
;; # DEBUG got_crypto => got_crypto_1866

(debug_insn 2081 2080 0 (var_location:SI got_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG attr => attr_500

(debug_insn 2082 2081 0 (var_location:SI attr (const_int 0 [0])) -1
     (nil))
;; if (attr_500 != 0B)

(insn 2083 2082 2084 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 440 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3236 -1
     (nil))

(jump_insn 2084 2083 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3236 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 173

;; Generating RTL for gimple basic block 174

;; D.44787_502 = strcasecmp (D.44590_501, "fingerprint");

(insn 2087 2086 2088 (set (reg:SI 1519)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 439 [ attr ])
                (const_int 8 [0x8])) [2 attr_1559->a_name+0 S4 A32])) src/switch_core_media.c:3238 -1
     (nil))

(insn 2088 2087 2089 (set (reg:SI 1521)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1014 [0x3f6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1014 [0x3f6])
            ] 29)) src/switch_core_media.c:3238 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
        (nil)))

(insn 2089 2088 2090 (set (reg:SI 1520)
        (reg:SI 1521)) src/switch_core_media.c:3238 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
        (nil)))

(insn 2090 2089 2091 (set (reg:SI 0 r0)
        (reg:SI 1519)) src/switch_core_media.c:3238 -1
     (nil))

(insn 2091 2090 2092 (set (reg:SI 1 r1)
        (reg:SI 1520)) src/switch_core_media.c:3238 -1
     (nil))

(call_insn/i 2092 2091 2093 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3238 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2093 2092 0 (set (reg:SI 437 [ D.44787 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3238 -1
     (nil))

;; if (D.44787_502 == 0)

(insn 2094 2093 2095 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 437 [ D.44787 ])
            (const_int 0 [0]))) src/switch_core_media.c:3238 -1
     (nil))

(jump_insn 2095 2094 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3238 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 175

;; D.44619_503 = attr_1559->a_value;

(insn 2097 2096 0 (set (reg/f:SI 438 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 439 [ attr ])
                (const_int 12 [0xc])) [2 attr_1559->a_value+0 S4 A32])) src/switch_core_media.c:3238 -1
     (nil))

;; # DEBUG s => D.44619_503

(debug_insn 2098 2097 0 (var_location:SI s (const_int 0 [0])) src/switch_core_media.c:3238 -1
     (nil))
;; if (D.44619_503 == 0B)

(insn 2099 2098 2100 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 438 [ D.44619 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2100 2099 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 176

;; if (D.47887_1469 == 0)

(insn 2102 2101 2103 (set (reg:SI 1522)
        (zero_extend:SI (mem:QI (reg/f:SI 438 [ D.44619 ]) [0 *D.44619_503+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 2103 2102 2104 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1522)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2104 2103 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 177

;; Generating RTL for gimple basic block 178

;; 

(code_label 2106 2105 2107 1395 "" [0 uses])

(note 2107 2106 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG got_crypto => got_crypto_50

(debug_insn 2108 2107 0 (var_location:SI got_crypto (const_int 0 [0])) -1
     (nil))
;; attr_506 = attr_1559->a_next;

(insn 2109 2108 0 (set (reg/v/f:SI 439 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 439 [ attr ])
                (const_int 4 [0x4])) [2 attr_1559->a_next+0 S4 A32])) src/switch_core_media.c:3236 -1
     (nil))

;; # DEBUG attr => attr_506

(debug_insn 2110 2109 0 (var_location:SI attr (const_int 0 [0])) src/switch_core_media.c:3236 -1
     (nil))
;; # DEBUG got_crypto => got_crypto_50

(debug_insn 2111 2110 0 (var_location:SI got_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG attr => attr_506

(debug_insn 2112 2111 0 (var_location:SI attr (const_int 0 [0])) -1
     (nil))
;; if (attr_506 != 0B)

(insn 2114 2112 2115 178 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 439 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3236 -1
     (nil))

(jump_insn 2115 2114 2118 178 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2113)
            (pc))) src/switch_core_media.c:3236 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

(note 2118 2115 2116 454 [bb 454] NOTE_INSN_BASIC_BLOCK)

(jump_insn 2116 2118 2117 454 (set (pc)
        (label_ref 0)) src/switch_core_media.c:3236 -1
     (nil))

(barrier 2117 2116 0)

;; Generating RTL for gimple basic block 179

;; 

(code_label 2119 2117 2120 1393 "" [0 uses])

(note 2120 2119 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG got_crypto => got_crypto_1866

(debug_insn 2121 2120 0 (var_location:SI got_crypto (const_int 0 [0])) -1
     (nil))
;; attr_507 = m_1764->m_attributes;

(insn 2122 2121 0 (set (reg/v/f:SI 440 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 60 [0x3c])) [2 m_1764->m_attributes+0 S4 A32])) src/switch_core_media.c:3244 -1
     (nil))

;; # DEBUG attr => attr_507

(debug_insn 2123 2122 0 (var_location:SI attr (const_int 0 [0])) src/switch_core_media.c:3244 -1
     (nil))
;; # DEBUG got_crypto => got_crypto_1866

(debug_insn 2124 2123 0 (var_location:SI got_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG maxptime => dmaxptime_1005

(debug_insn 2125 2124 0 (var_location:SI maxptime (const_int 0 [0])) -1
     (nil))
;; # DEBUG ptime => dptime_1035

(debug_insn 2126 2125 0 (var_location:SI ptime (const_int 0 [0])) -1
     (nil))
;; # DEBUG attr => attr_507

(debug_insn 2127 2126 0 (var_location:SI attr (const_int 0 [0])) -1
     (nil))
;; if (attr_507 != 0B)

(insn 2128 2127 2129 179 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 440 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3244 -1
     (nil))

(jump_insn 2129 2128 2132 179 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3244 -1
     (expr_list:REG_BR_PROB (const_int 9472 [0x2500])
        (nil)))

(note 2132 2129 2130 455 [bb 455] NOTE_INSN_BASIC_BLOCK)

(jump_insn 2130 2132 2131 455 (set (pc)
        (label_ref 0)) src/switch_core_media.c:3244 -1
     (nil))

(barrier 2131 2130 0)

;; Generating RTL for gimple basic block 180

;; D.44590_508 = attr_1599->a_name;

(insn 2134 2133 0 (set (reg/f:SI 441 [ D.44590 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 8 [0x8])) [2 attr_1599->a_name+0 S4 A32])) src/switch_core_media.c:3246 -1
     (nil))

;; D.44795_509 = strcasecmp (D.44590_508, "rtcp");

(insn 2135 2134 2136 (set (reg:SI 1524)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1015 [0x3f7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1015 [0x3f7])
            ] 29)) src/switch_core_media.c:3246 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
        (nil)))

(insn 2136 2135 2137 (set (reg:SI 1523)
        (reg:SI 1524)) src/switch_core_media.c:3246 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
        (nil)))

(insn 2137 2136 2138 (set (reg:SI 0 r0)
        (reg/f:SI 441 [ D.44590 ])) src/switch_core_media.c:3246 -1
     (nil))

(insn 2138 2137 2139 (set (reg:SI 1 r1)
        (reg:SI 1523)) src/switch_core_media.c:3246 -1
     (nil))

(call_insn/i 2139 2138 2140 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3246 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2140 2139 0 (set (reg:SI 442 [ D.44795 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3246 -1
     (nil))

;; if (D.44795_509 == 0)

(insn 2141 2140 2142 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 442 [ D.44795 ])
            (const_int 0 [0]))) src/switch_core_media.c:3246 -1
     (nil))

(jump_insn 2142 2141 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3246 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 181

;; D.44619_510 = attr_1599->a_value;

(insn 2144 2143 0 (set (reg/f:SI 443 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) src/switch_core_media.c:3246 -1
     (nil))

;; if (D.44619_510 != 0B)

(insn 2145 2144 2146 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 443 [ D.44619 ])
            (const_int 0 [0]))) src/switch_core_media.c:3246 -1
     (nil))

(jump_insn 2146 2145 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3246 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 182

;; switch_channel_set_variable_var_check (D.44530_511, "rtp_remote_audio_rtcp_port", D.44619_510, 1);

(insn 2148 2147 2149 (set (reg:SI 1525)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3247 -1
     (nil))

(insn 2149 2148 2150 (set (reg:SI 1527)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC248") [flags 0x82]  <var_decl 0x40344540 *.LC248>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1016 [0x3f8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1016 [0x3f8])
            ] 29)) src/switch_core_media.c:3247 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC248") [flags 0x82]  <var_decl 0x40344540 *.LC248>)
        (nil)))

(insn 2150 2149 2151 (set (reg:SI 1526)
        (reg:SI 1527)) src/switch_core_media.c:3247 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC248") [flags 0x82]  <var_decl 0x40344540 *.LC248>)
        (nil)))

(insn 2151 2150 2152 (set (reg:SI 0 r0)
        (reg:SI 1525)) src/switch_core_media.c:3247 -1
     (nil))

(insn 2152 2151 2153 (set (reg:SI 1 r1)
        (reg:SI 1526)) src/switch_core_media.c:3247 -1
     (nil))

(insn 2153 2152 2154 (set (reg:SI 2 r2)
        (reg/f:SI 443 [ D.44619 ])) src/switch_core_media.c:3247 -1
     (nil))

(insn 2154 2153 2155 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3247 -1
     (nil))

(call_insn 2155 2154 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3247 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG __nptr => D.44619_513

(debug_insn 2156 2155 0 (var_location:SI __nptr (const_int 0 [0])) src/switch_core_media.c:3248 -1
     (nil))
;; D.47890_1471 = strtol (D.44619_513, 0B, 10);

(insn 2157 2156 2158 (set (reg:SI 1528)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2158 2157 2159 (set (reg:SI 0 r0)
        (reg:SI 1528)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2159 2158 2160 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2160 2159 2161 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 2161 2160 2162 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 2162 2161 0 (set (reg:SI 840 [ D.47890 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].remote_rtcp_port = D.44799_515;

(insn 2163 2162 2164 (set (reg:SI 1529)
        (const_int 1896 [0x768])) src/switch_core_media.c:3248 -1
     (nil))

(insn 2164 2163 0 (set (mem/s:HI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1529)) [13 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].remote_rtcp_port+0 S2 A32])
        (subreg:HI (reg:SI 840 [ D.47890 ]) 0)) src/switch_core_media.c:3248 -1
     (nil))

;; D.44471_516 = smh_186->mparams;

(insn 2165 2164 2166 (set (reg:SI 1530)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3249 -1
     (nil))

(insn 2166 2165 0 (set (reg/f:SI 448 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1530)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3249 -1
     (nil))

;; if (D.44800_517 == 0B)

(insn 2167 2166 2168 (set (reg:SI 1531)
        (mem/s/f:SI (plus:SI (reg/f:SI 448 [ D.44471 ])
                (const_int 80 [0x50])) [2 D.44471_516->rtcp_audio_interval_msec+0 S4 A32])) src/switch_core_media.c:3249 -1
     (nil))

(insn 2168 2167 2169 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1531)
            (const_int 0 [0]))) src/switch_core_media.c:3249 -1
     (nil))

(jump_insn 2169 2168 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3249 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))

;; Generating RTL for gimple basic block 183

;; D.44471_516->rtcp_audio_interval_msec = "5000";

(insn 2171 2170 2172 (set (reg:SI 1533)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1017 [0x3f9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1017 [0x3f9])
            ] 29)) src/switch_core_media.c:3250 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
        (nil)))

(insn 2172 2171 2173 (set (reg/f:SI 1532)
        (reg:SI 1533)) src/switch_core_media.c:3250 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
        (nil)))

(insn 2173 2172 0 (set (mem/s/f:SI (plus:SI (reg/f:SI 448 [ D.44471 ])
                (const_int 80 [0x50])) [2 D.44471_516->rtcp_audio_interval_msec+0 S4 A32])
        (reg/f:SI 1532)) src/switch_core_media.c:3250 -1
     (nil))

;; Generating RTL for gimple basic block 184

;; 

(code_label 2176 2175 2177 1398 "" [0 uses])

(note 2177 2176 0 NOTE_INSN_BASIC_BLOCK)

;; D.44805_520 = strcasecmp (D.44590_508, "ptime");

(insn 2178 2177 2179 (set (reg:SI 1535)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1018 [0x3fa])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1018 [0x3fa])
            ] 29)) src/switch_core_media.c:3252 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
        (nil)))

(insn 2179 2178 2180 (set (reg:SI 1534)
        (reg:SI 1535)) src/switch_core_media.c:3252 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
        (nil)))

(insn 2180 2179 2181 (set (reg:SI 0 r0)
        (reg/f:SI 441 [ D.44590 ])) src/switch_core_media.c:3252 -1
     (nil))

(insn 2181 2180 2182 (set (reg:SI 1 r1)
        (reg:SI 1534)) src/switch_core_media.c:3252 -1
     (nil))

(call_insn/i 2182 2181 2183 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3252 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2183 2182 0 (set (reg:SI 451 [ D.44805 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3252 -1
     (nil))

;; if (D.44805_520 == 0)

(insn 2184 2183 2185 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 451 [ D.44805 ])
            (const_int 0 [0]))) src/switch_core_media.c:3252 -1
     (nil))

(jump_insn 2185 2184 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3252 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 185

;; D.44619_521 = attr_1599->a_value;

(insn 2187 2186 0 (set (reg/f:SI 452 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) src/switch_core_media.c:3252 -1
     (nil))

;; if (D.44619_521 != 0B)

(insn 2188 2187 2189 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 452 [ D.44619 ])
            (const_int 0 [0]))) src/switch_core_media.c:3252 -1
     (nil))

(jump_insn 2189 2188 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3252 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 186

;; # DEBUG __nptr => D.44619_521

(debug_insn 2191 2190 0 (var_location:SI __nptr (const_int 0 [0])) src/switch_core_media.c:3253 -1
     (nil))
;; ptime_1472 = strtol (D.44619_521, 0B, 10);

(insn 2192 2191 2193 (set (reg:SI 0 r0)
        (reg/f:SI 452 [ D.44619 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2193 2192 2194 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2194 2193 2195 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 2195 2194 2196 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 2196 2195 0 (set (reg/v:SI 158 [ ptime ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; # DEBUG ptime => NULL

(debug_insn 2197 2196 0 (var_location:SI ptime (const_int 0 [0])) src/switch_core_media.c:3253 -1
     (nil))
;; Generating RTL for gimple basic block 187

;; 

(code_label 2200 2199 2201 1400 "" [0 uses])

(note 2201 2200 0 NOTE_INSN_BASIC_BLOCK)

;; D.44810_525 = strcasecmp (D.44590_508, "maxptime");

(insn 2202 2201 2203 (set (reg:SI 1537)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1019 [0x3fb])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1019 [0x3fb])
            ] 29)) src/switch_core_media.c:3254 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
        (nil)))

(insn 2203 2202 2204 (set (reg:SI 1536)
        (reg:SI 1537)) src/switch_core_media.c:3254 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
        (nil)))

(insn 2204 2203 2205 (set (reg:SI 0 r0)
        (reg/f:SI 441 [ D.44590 ])) src/switch_core_media.c:3254 -1
     (nil))

(insn 2205 2204 2206 (set (reg:SI 1 r1)
        (reg:SI 1536)) src/switch_core_media.c:3254 -1
     (nil))

(call_insn/i 2206 2205 2207 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3254 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2207 2206 0 (set (reg:SI 454 [ D.44810 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3254 -1
     (nil))

;; if (D.44810_525 == 0)

(insn 2208 2207 2209 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 454 [ D.44810 ])
            (const_int 0 [0]))) src/switch_core_media.c:3254 -1
     (nil))

(jump_insn 2209 2208 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 188

;; D.44619_526 = attr_1599->a_value;

(insn 2211 2210 0 (set (reg/f:SI 455 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) src/switch_core_media.c:3254 -1
     (nil))

;; if (D.44619_526 != 0B)

(insn 2212 2211 2213 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 455 [ D.44619 ])
            (const_int 0 [0]))) src/switch_core_media.c:3254 -1
     (nil))

(jump_insn 2213 2212 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3254 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 189

;; # DEBUG __nptr => D.44619_526

(debug_insn 2215 2214 0 (var_location:SI __nptr (const_int 0 [0])) src/switch_core_media.c:3255 -1
     (nil))
;; maxptime_1473 = strtol (D.44619_526, 0B, 10);

(insn 2216 2215 2217 (set (reg:SI 0 r0)
        (reg/f:SI 455 [ D.44619 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2217 2216 2218 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2218 2217 2219 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 2219 2218 2220 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 2220 2219 0 (set (reg/v:SI 162 [ maxptime ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; # DEBUG maxptime => NULL

(debug_insn 2221 2220 0 (var_location:SI maxptime (const_int 0 [0])) src/switch_core_media.c:3255 -1
     (nil))
;; Generating RTL for gimple basic block 190

;; 

(code_label 2224 2223 2225 1401 "" [0 uses])

(note 2225 2224 0 NOTE_INSN_BASIC_BLOCK)

;; if (got_crypto_1118 <= 0)

(insn 2226 2225 2227 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 175 [ got_crypto ])
            (const_int 0 [0]))) src/switch_core_media.c:3256 -1
     (nil))

(jump_insn 2227 2226 0 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3256 -1
     (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
        (nil)))

;; Generating RTL for gimple basic block 191

;; D.44815_530 = strcasecmp (D.44590_508, "crypto");

(insn 2229 2228 2230 (set (reg:SI 1539)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1020 [0x3fc])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1020 [0x3fc])
            ] 29)) src/switch_core_media.c:3256 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
        (nil)))

(insn 2230 2229 2231 (set (reg:SI 1538)
        (reg:SI 1539)) src/switch_core_media.c:3256 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
        (nil)))

(insn 2231 2230 2232 (set (reg:SI 0 r0)
        (reg/f:SI 441 [ D.44590 ])) src/switch_core_media.c:3256 -1
     (nil))

(insn 2232 2231 2233 (set (reg:SI 1 r1)
        (reg:SI 1538)) src/switch_core_media.c:3256 -1
     (nil))

(call_insn/i 2233 2232 2234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2234 2233 0 (set (reg:SI 456 [ D.44815 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3256 -1
     (nil))

;; if (D.44815_530 == 0)

(insn 2235 2234 2236 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 456 [ D.44815 ])
            (const_int 0 [0]))) src/switch_core_media.c:3256 -1
     (nil))

(jump_insn 2236 2235 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3256 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 192

;; prephitmp.1031_531 = attr_1599->a_value;

(insn 2238 2237 0 (set (reg/f:SI 457 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) src/switch_core_media.c:3256 -1
     (nil))

;; # DEBUG s => prephitmp.1031_531

(debug_insn 2239 2238 0 (var_location:SI s (const_int 0 [0])) src/switch_core_media.c:3256 -1
     (nil))
;; if (prephitmp.1031_531 == 0B)

(insn 2240 2239 2241 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 457 [ prephitmp.1031 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2241 2240 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 193

;; if (D.47900_1474 == 0)

(insn 2243 2242 2244 193 (set (reg:SI 1540)
        (zero_extend:SI (mem:QI (reg/f:SI 457 [ prephitmp.1031 ]) [0 *prephitmp.1031_531+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 2244 2243 2245 193 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1540)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2245 2244 2248 193 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 2248 2245 2246 456 [bb 456] NOTE_INSN_BASIC_BLOCK)

(jump_insn 2246 2248 2247 456 (set (pc)
        (label_ref 0)) ./src/include/switch_utils.h:254 -1
     (nil))

(barrier 2247 2246 0)

;; Generating RTL for gimple basic block 194

;; D.44825_537 = switch_channel_get_variable_dup (D.44530_536, "rtp_allow_crypto_in_avp", 1, -1);

(insn 2250 2249 2251 (set (reg:SI 1541)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3260 -1
     (nil))

(insn 2251 2250 2252 (set (reg:SI 1543)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1021 [0x3fd])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1021 [0x3fd])
            ] 29)) src/switch_core_media.c:3260 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
        (nil)))

(insn 2252 2251 2253 (set (reg:SI 1542)
        (reg:SI 1543)) src/switch_core_media.c:3260 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
        (nil)))

(insn 2253 2252 2254 (set (reg:SI 0 r0)
        (reg:SI 1541)) src/switch_core_media.c:3260 -1
     (nil))

(insn 2254 2253 2255 (set (reg:SI 1 r1)
        (reg:SI 1542)) src/switch_core_media.c:3260 -1
     (nil))

(insn 2255 2254 2256 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3260 -1
     (nil))

(insn 2256 2255 2257 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3260 -1
     (nil))

(call_insn 2257 2256 2258 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3260 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 2258 2257 0 (set (reg/f:SI 462 [ D.44825 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3260 -1
     (nil))

;; # DEBUG expr => D.44825_537

(debug_insn 2259 2258 0 (var_location:SI expr (const_int 0 [0])) src/switch_core_media.c:3260 -1
     (nil))
;; if (D.44825_537 != 0B)

(insn 2260 2259 2261 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 462 [ D.44825 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 2261 2260 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 195

;; D.49723_1590 = strcasecmp (D.44825_537, "yes");

(insn 2263 2262 2264 (set (reg:SI 1545)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1022 [0x3fe])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1022 [0x3fe])
            ] 29)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 2264 2263 2265 (set (reg:SI 1544)
        (reg:SI 1545)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 2265 2264 2266 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 2266 2265 2267 (set (reg:SI 1 r1)
        (reg:SI 1544)) ./src/include/switch_utils.h:429 -1
     (nil))

(call_insn/i 2267 2266 2268 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2268 2267 0 (set (reg:SI 908 [ D.49723 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:429 -1
     (nil))

;; if (D.49723_1590 == 0)

(insn 2269 2268 2270 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 908 [ D.49723 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 2270 2269 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 196

;; D.49724_1591 = strcasecmp (D.44825_537, "on");

(insn 2272 2271 2273 (set (reg:SI 1547)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1023 [0x3ff])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1023 [0x3ff])
            ] 29)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 2273 2272 2274 (set (reg:SI 1546)
        (reg:SI 1547)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 2274 2273 2275 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 2275 2274 2276 (set (reg:SI 1 r1)
        (reg:SI 1546)) ./src/include/switch_utils.h:430 -1
     (nil))

(call_insn/i 2276 2275 2277 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2277 2276 0 (set (reg:SI 909 [ D.49724 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:430 -1
     (nil))

;; if (D.49724_1591 == 0)

(insn 2278 2277 2279 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 909 [ D.49724 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 2279 2278 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 197

;; D.49725_1592 = strcasecmp (D.44825_537, "true");

(insn 2281 2280 2282 (set (reg:SI 1549)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1024 [0x400])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1024 [0x400])
            ] 29)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 2282 2281 2283 (set (reg:SI 1548)
        (reg:SI 1549)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 2283 2282 2284 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 2284 2283 2285 (set (reg:SI 1 r1)
        (reg:SI 1548)) ./src/include/switch_utils.h:431 -1
     (nil))

(call_insn/i 2285 2284 2286 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2286 2285 0 (set (reg:SI 910 [ D.49725 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:431 -1
     (nil))

;; if (D.49725_1592 == 0)

(insn 2287 2286 2288 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 910 [ D.49725 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:430 -1
     (nil))

(jump_insn 2288 2287 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 198

;; D.49726_1593 = strcasecmp (D.44825_537, "t");

(insn 2290 2289 2291 (set (reg:SI 1551)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1025 [0x401])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1025 [0x401])
            ] 29)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 2291 2290 2292 (set (reg:SI 1550)
        (reg:SI 1551)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 2292 2291 2293 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 2293 2292 2294 (set (reg:SI 1 r1)
        (reg:SI 1550)) ./src/include/switch_utils.h:432 -1
     (nil))

(call_insn/i 2294 2293 2295 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2295 2294 0 (set (reg:SI 911 [ D.49726 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:432 -1
     (nil))

;; if (D.49726_1593 == 0)

(insn 2296 2295 2297 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 911 [ D.49726 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:431 -1
     (nil))

(jump_insn 2297 2296 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 199

;; D.49727_1594 = strcasecmp (D.44825_537, "enabled");

(insn 2299 2298 2300 (set (reg:SI 1553)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1026 [0x402])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1026 [0x402])
            ] 29)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 2300 2299 2301 (set (reg:SI 1552)
        (reg:SI 1553)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 2301 2300 2302 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 2302 2301 2303 (set (reg:SI 1 r1)
        (reg:SI 1552)) ./src/include/switch_utils.h:433 -1
     (nil))

(call_insn/i 2303 2302 2304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2304 2303 0 (set (reg:SI 912 [ D.49727 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:433 -1
     (nil))

;; if (D.49727_1594 == 0)

(insn 2305 2304 2306 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 912 [ D.49727 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:432 -1
     (nil))

(jump_insn 2306 2305 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 200

;; D.49728_1595 = strcasecmp (D.44825_537, "active");

(insn 2308 2307 2309 (set (reg:SI 1555)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1027 [0x403])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1027 [0x403])
            ] 29)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 2309 2308 2310 (set (reg:SI 1554)
        (reg:SI 1555)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 2310 2309 2311 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 2311 2310 2312 (set (reg:SI 1 r1)
        (reg:SI 1554)) ./src/include/switch_utils.h:434 -1
     (nil))

(call_insn/i 2312 2311 2313 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2313 2312 0 (set (reg:SI 913 [ D.49728 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:434 -1
     (nil))

;; if (D.49728_1595 == 0)

(insn 2314 2313 2315 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 913 [ D.49728 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:433 -1
     (nil))

(jump_insn 2315 2314 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 201

;; D.49729_1596 = strcasecmp (D.44825_537, "allow");

(insn 2317 2316 2318 (set (reg:SI 1557)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1028 [0x404])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1028 [0x404])
            ] 29)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 2318 2317 2319 (set (reg:SI 1556)
        (reg:SI 1557)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 2319 2318 2320 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 2320 2319 2321 (set (reg:SI 1 r1)
        (reg:SI 1556)) ./src/include/switch_utils.h:435 -1
     (nil))

(call_insn/i 2321 2320 2322 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2322 2321 0 (set (reg:SI 914 [ D.49729 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:435 -1
     (nil))

;; if (D.49729_1596 == 0)

(insn 2323 2322 2324 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 914 [ D.49729 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:434 -1
     (nil))

(jump_insn 2324 2323 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))

;; Generating RTL for gimple basic block 202

;; D.49730_1597 = switch_is_number (D.44825_537);

(insn 2326 2325 2327 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:436 -1
     (nil))

(call_insn 2327 2326 2328 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:436 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 2328 2327 0 (set (reg:SI 915 [ D.49730 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:436 -1
     (nil))

;; if (D.49730_1597 != 0)

(insn 2329 2328 2330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 915 [ D.49730 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:435 -1
     (nil))

(jump_insn 2330 2329 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 203

;; # DEBUG __nptr => D.44825_537

(debug_insn 2332 2331 0 (var_location:SI __nptr (const_int 0 [0])) -1
     (nil))
;; D.49731_1598 = strtol (D.44825_537, 0B, 10);

(insn 2333 2332 2334 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2334 2333 2335 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2335 2334 2336 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 2336 2335 2337 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 2337 2336 0 (set (reg:SI 916 [ D.49731 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; if (D.49731_1598 != 0)

(insn 2338 2337 2339 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 916 [ D.49731 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 2339 2338 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 204

;; 

(code_label 2340 2339 2341 1404 "" [0 uses])

(note 2341 2340 0 NOTE_INSN_BASIC_BLOCK)

;; prephitmp.1031_1639 = attr_1599->a_value;

(insn 2342 2341 0 (set (reg/f:SI 457 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) ./src/include/switch_utils.h:436 -1
     (nil))

;; Generating RTL for gimple basic block 205

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3262, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");

(insn 2346 2345 2347 (set (reg:SI 1559)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1029 [0x405])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1029 [0x405])
            ] 29)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2347 2346 2348 (set (reg:SI 1558)
        (reg:SI 1559)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2348 2347 2349 (set (reg:SI 1561)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1030 [0x406])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1030 [0x406])
            ] 29)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2349 2348 2350 (set (reg/f:SI 1560)
        (reg:SI 1561)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2350 2349 2351 (set (reg:SI 1563)
        (plus:SI (reg/f:SI 1560)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3262 -1
     (nil))

(insn 2351 2350 2352 (set (reg:SI 1562)
        (plus:SI (reg:SI 1563)
            (const_int 8 [0x8]))) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1560)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2352 2351 2353 (set (reg:SI 1564)
        (const_int 3262 [0xcbe])) src/switch_core_media.c:3262 -1
     (nil))

(insn 2353 2352 2354 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3262 -1
     (nil))

(insn 2354 2353 2355 (set (reg:SI 1565)
        (const_int 3 [0x3])) src/switch_core_media.c:3262 -1
     (nil))

(insn 2355 2354 2356 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1565)) src/switch_core_media.c:3262 -1
     (nil))

(insn 2356 2355 2357 (set (reg:SI 1567)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1031 [0x407])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1031 [0x407])
            ] 29)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
        (nil)))

(insn 2357 2356 2358 (set (reg/f:SI 1566)
        (reg:SI 1567)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
        (nil)))

(insn 2358 2357 2359 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1566)) src/switch_core_media.c:3262 -1
     (nil))

(insn 2359 2358 2360 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3262 -1
     (nil))

(insn 2360 2359 2361 (set (reg:SI 1 r1)
        (reg:SI 1558)) src/switch_core_media.c:3262 -1
     (nil))

(insn 2361 2360 2362 (set (reg:SI 2 r2)
        (reg:SI 1562)) src/switch_core_media.c:3262 -1
     (nil))

(insn 2362 2361 2363 (set (reg:SI 3 r3)
        (reg:SI 1564)) src/switch_core_media.c:3262 -1
     (nil))

(call_insn 2363 2362 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3262 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG match => 0

(debug_insn 2364 2363 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3263 -1
     (nil))
;; Generating RTL for gimple basic block 206

;; 

(code_label 2367 2366 2368 1405 "" [0 uses])

(note 2368 2367 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG crypto => prephitmp.1031_1892

(debug_insn 2369 2368 0 (var_location:SI crypto (const_int 0 [0])) src/switch_core_media.c:3268 -1
     (nil))
;; # DEBUG __nptr => prephitmp.1031_1892

(debug_insn 2370 2369 0 (var_location:SI __nptr (const_int 0 [0])) src/switch_core_media.c:3268 -1
     (nil))
;; crypto_tag_1476 = strtol (prephitmp.1031_1892, 0B, 10);

(insn 2371 2370 2372 (set (reg:SI 0 r0)
        (reg/f:SI 457 [ prephitmp.1031 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2372 2371 2373 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2373 2372 2374 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 2374 2373 2375 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 2375 2374 0 (set (reg/v:SI 842 [ crypto_tag ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; # DEBUG crypto_tag => NULL

(debug_insn 2376 2375 0 (var_location:SI crypto_tag (const_int 0 [0])) src/switch_core_media.c:3269 -1
     (nil))
;; got_crypto_547 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_crypto", 0, prephitmp.1031_1892, crypto_tag_1476, sdp_type_546(D));

(insn 2377 2376 2378 (set (reg:SI 1569)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC331") [flags 0x82]  <var_decl 0x40410f00 *.LC331>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1032 [0x408])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1032 [0x408])
            ] 29)) src/switch_core_media.c:3270 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC331") [flags 0x82]  <var_decl 0x40410f00 *.LC331>)
        (nil)))

(insn 2378 2377 2379 (set (reg:SI 1568)
        (reg:SI 1569)) src/switch_core_media.c:3270 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC331") [flags 0x82]  <var_decl 0x40410f00 *.LC331>)
        (nil)))

(insn 2379 2378 2380 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 842 [ crypto_tag ])) src/switch_core_media.c:3270 -1
     (nil))

(insn 2380 2379 2381 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 1028 [ sdp_type ])) src/switch_core_media.c:3270 -1
     (nil))

(insn 2381 2380 2382 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3270 -1
     (nil))

(insn 2382 2381 2383 (set (reg:SI 1 r1)
        (reg:SI 1568)) src/switch_core_media.c:3270 -1
     (nil))

(insn 2383 2382 2384 (set (reg:SI 2 r2)
        (const_int 0 [0])) src/switch_core_media.c:3270 -1
     (nil))

(insn 2384 2383 2385 (set (reg:SI 3 r3)
        (reg/f:SI 457 [ prephitmp.1031 ])) src/switch_core_media.c:3270 -1
     (nil))

(call_insn 2385 2384 2386 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_check_incoming_crypto") [flags 0x1]  <function_decl 0x40945400 switch_core_session_check_incoming_crypto>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3270 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 2386 2385 0 (set (reg/v:SI 175 [ got_crypto ])
        (reg:SI 0 r0)) src/switch_core_media.c:3270 -1
     (nil))

;; # DEBUG got_crypto => got_crypto_547

(debug_insn 2387 2386 0 (var_location:SI got_crypto (const_int 0 [0])) src/switch_core_media.c:3270 -1
     (nil))
;; Generating RTL for gimple basic block 207

;; 

(code_label 2388 2387 2389 1399 "" [0 uses])

(note 2389 2388 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG got_crypto => got_crypto_53

(debug_insn 2390 2389 0 (var_location:SI got_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG maxptime => maxptime_38

(debug_insn 2391 2390 0 (var_location:SI maxptime (const_int 0 [0])) -1
     (nil))
;; # DEBUG ptime => ptime_34

(debug_insn 2392 2391 0 (var_location:SI ptime (const_int 0 [0])) -1
     (nil))
;; attr_548 = attr_1599->a_next;

(insn 2393 2392 0 (set (reg/v/f:SI 440 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 4 [0x4])) [2 attr_1599->a_next+0 S4 A32])) src/switch_core_media.c:3244 -1
     (nil))

;; # DEBUG attr => attr_548

(debug_insn 2394 2393 0 (var_location:SI attr (const_int 0 [0])) src/switch_core_media.c:3244 -1
     (nil))
;; # DEBUG got_crypto => got_crypto_53

(debug_insn 2395 2394 0 (var_location:SI got_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG maxptime => maxptime_38

(debug_insn 2396 2395 0 (var_location:SI maxptime (const_int 0 [0])) -1
     (nil))
;; # DEBUG ptime => ptime_34

(debug_insn 2397 2396 0 (var_location:SI ptime (const_int 0 [0])) -1
     (nil))
;; # DEBUG attr => attr_548

(debug_insn 2398 2397 0 (var_location:SI attr (const_int 0 [0])) -1
     (nil))
;; if (attr_548 != 0B)

(insn 2400 2398 2401 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 440 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3244 -1
     (nil))

(jump_insn 2401 2400 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2399)
            (pc))) src/switch_core_media.c:3244 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 208

;; 

(code_label 2402 2401 2403 1394 "" [0 uses])

(note 2403 2402 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44836_551 != 0)

(insn 2404 2403 2405 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 175 [ got_crypto ])
            (const_int -1 [0xffffffffffffffff]))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2405 2404 2406 (set (reg:SI 1571)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2406 2405 2407 (set (reg:QI 1570)
        (subreg:QI (reg:SI 1571) 0)) src/switch_core_media.c:3276 -1
     (nil))

(insn 2407 2406 2408 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 445 [ got_savp ])
            (const_int 0 [0]))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2408 2407 2409 (set (reg:SI 1573)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2409 2408 2410 (set (reg:QI 1572)
        (subreg:QI (reg:SI 1573) 0)) src/switch_core_media.c:3276 -1
     (nil))

(insn 2410 2409 2411 (set (reg:SI 1574)
        (and:SI (subreg:SI (reg:QI 1570) 0)
            (subreg:SI (reg:QI 1572) 0))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2411 2410 2412 (set (reg:QI 1575)
        (subreg:QI (reg:SI 1574) 0)) src/switch_core_media.c:3276 -1
     (nil))

(insn 2412 2411 2413 (set (reg:SI 1576)
        (zero_extend:SI (reg:QI 1575))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2413 2412 2414 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1576)
            (const_int 0 [0]))) src/switch_core_media.c:3276 -1
     (nil))

(jump_insn 2414 2413 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3276 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 209

;; if (D.44839_552 == 0)

(insn 2416 2415 2417 (set (reg:SI 1577)
        (ior:SI (reg/v:SI 544 [ got_avp ])
            (reg/v:SI 188 [ got_webrtc ]))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2417 2416 2418 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1577)
            (const_int 0 [0]))) src/switch_core_media.c:3276 -1
     (nil))

(jump_insn 2418 2417 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3276 -1
     (expr_list:REG_BR_PROB (const_int 9800 [0x2648])
        (nil)))

;; Generating RTL for gimple basic block 210

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3277, session_161(D), 4, "Declining invite with only SAVP because secure media is administratively disabled\n");

(insn 2420 2419 2421 (set (reg:SI 1579)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1033 [0x409])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1033 [0x409])
            ] 29)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2421 2420 2422 (set (reg:SI 1578)
        (reg:SI 1579)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2422 2421 2423 (set (reg:SI 1581)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1034 [0x40a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1034 [0x40a])
            ] 29)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2423 2422 2424 (set (reg/f:SI 1580)
        (reg:SI 1581)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2424 2423 2425 (set (reg:SI 1583)
        (plus:SI (reg/f:SI 1580)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3277 -1
     (nil))

(insn 2425 2424 2426 (set (reg:SI 1582)
        (plus:SI (reg:SI 1583)
            (const_int 8 [0x8]))) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1580)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2426 2425 2427 (set (reg:SI 1584)
        (const_int 3277 [0xccd])) src/switch_core_media.c:3277 -1
     (nil))

(insn 2427 2426 2428 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3277 -1
     (nil))

(insn 2428 2427 2429 (set (reg:SI 1585)
        (const_int 4 [0x4])) src/switch_core_media.c:3277 -1
     (nil))

(insn 2429 2428 2430 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1585)) src/switch_core_media.c:3277 -1
     (nil))

(insn 2430 2429 2431 (set (reg:SI 1587)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC332") [flags 0x82]  <var_decl 0x40410f60 *.LC332>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1035 [0x40b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1035 [0x40b])
            ] 29)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC332") [flags 0x82]  <var_decl 0x40410f60 *.LC332>)
        (nil)))

(insn 2431 2430 2432 (set (reg/f:SI 1586)
        (reg:SI 1587)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC332") [flags 0x82]  <var_decl 0x40410f60 *.LC332>)
        (nil)))

(insn 2432 2431 2433 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1586)) src/switch_core_media.c:3277 -1
     (nil))

(insn 2433 2432 2434 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3277 -1
     (nil))

(insn 2434 2433 2435 (set (reg:SI 1 r1)
        (reg:SI 1578)) src/switch_core_media.c:3277 -1
     (nil))

(insn 2435 2434 2436 (set (reg:SI 2 r2)
        (reg:SI 1582)) src/switch_core_media.c:3277 -1
     (nil))

(insn 2436 2435 2437 (set (reg:SI 3 r3)
        (reg:SI 1584)) src/switch_core_media.c:3277 -1
     (nil))

(call_insn 2437 2436 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3277 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG match => 0

(debug_insn 2438 2437 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3278 -1
     (nil))
;; Generating RTL for gimple basic block 211

;; 

(code_label 2441 2440 2442 1407 "" [0 uses])

(note 2442 2441 0 NOTE_INSN_BASIC_BLOCK)

;; connection_554 = sdp_198->sdp_connection;

(insn 2443 2442 0 (set (reg/v/f:SI 471 [ connection ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 36 [0x24])) [2 sdp_198->sdp_connection+0 S4 A32])) src/switch_core_media.c:3282 -1
     (nil))

;; # DEBUG connection => connection_554

(debug_insn 2444 2443 0 (var_location:SI connection (const_int 0 [0])) src/switch_core_media.c:3282 -1
     (nil))
;; connection_555 = m_1764->m_connections;

(insn 2445 2444 0 (set (reg/v/f:SI 228 [ connection ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 48 [0x30])) [2 m_1764->m_connections+0 S4 A32])) src/switch_core_media.c:3283 -1
     (nil))

;; if (connection_555 != 0B)

(insn 2446 2445 2447 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 228 [ connection ])
            (const_int 0 [0]))) src/switch_core_media.c:3283 -1
     (nil))

(jump_insn 2447 2446 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3283 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))

;; Generating RTL for gimple basic block 212

;; # DEBUG connection => connection_554

(debug_insn 2449 2448 0 (var_location:SI connection (const_int 0 [0])) -1
     (nil))
;; if (connection_554 == 0B)

(insn 2450 2449 2451 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 471 [ connection ])
            (const_int 0 [0]))) src/switch_core_media.c:3287 -1
     (nil))

(jump_insn 2451 2450 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3287 -1
     (expr_list:REG_BR_PROB (const_int 8650 [0x21ca])
        (nil)))

;; Generating RTL for gimple basic block 213

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3288, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");

(insn 2453 2452 2454 (set (reg:SI 1589)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1036 [0x40c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1036 [0x40c])
            ] 29)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2454 2453 2455 (set (reg:SI 1588)
        (reg:SI 1589)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2455 2454 2456 (set (reg:SI 1591)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1037 [0x40d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1037 [0x40d])
            ] 29)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2456 2455 2457 (set (reg/f:SI 1590)
        (reg:SI 1591)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2457 2456 2458 (set (reg:SI 1593)
        (plus:SI (reg/f:SI 1590)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3288 -1
     (nil))

(insn 2458 2457 2459 (set (reg:SI 1592)
        (plus:SI (reg:SI 1593)
            (const_int 8 [0x8]))) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1590)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2459 2458 2460 (set (reg:SI 1594)
        (const_int 3288 [0xcd8])) src/switch_core_media.c:3288 -1
     (nil))

(insn 2460 2459 2461 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3288 -1
     (nil))

(insn 2461 2460 2462 (set (reg:SI 1595)
        (const_int 3 [0x3])) src/switch_core_media.c:3288 -1
     (nil))

(insn 2462 2461 2463 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1595)) src/switch_core_media.c:3288 -1
     (nil))

(insn 2463 2462 2464 (set (reg:SI 1597)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1038 [0x40e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1038 [0x40e])
            ] 29)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
        (nil)))

(insn 2464 2463 2465 (set (reg/f:SI 1596)
        (reg:SI 1597)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
        (nil)))

(insn 2465 2464 2466 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1596)) src/switch_core_media.c:3288 -1
     (nil))

(insn 2466 2465 2467 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3288 -1
     (nil))

(insn 2467 2466 2468 (set (reg:SI 1 r1)
        (reg:SI 1588)) src/switch_core_media.c:3288 -1
     (nil))

(insn 2468 2467 2469 (set (reg:SI 2 r2)
        (reg:SI 1592)) src/switch_core_media.c:3288 -1
     (nil))

(insn 2469 2468 2470 (set (reg:SI 3 r3)
        (reg:SI 1594)) src/switch_core_media.c:3288 -1
     (nil))

(call_insn 2470 2469 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3288 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG match => 0

(debug_insn 2471 2470 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3289 -1
     (nil))
;; Generating RTL for gimple basic block 214

;; 

(code_label 2474 2473 2475 1408 "" [0 uses])

(note 2475 2474 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG x => 0

(debug_insn 2476 2475 0 (var_location:SI x (const_int 0 [0])) src/switch_core_media.c:3293 -1
     (nil))
;; map_559 = m_1764->m_rtpmaps;

(insn 2477 2476 0 (set (reg/v/f:SI 283 [ map ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 40 [0x28])) [2 m_1764->m_rtpmaps+0 S4 A32])) src/switch_core_media.c:3295 -1
     (nil))

;; # DEBUG map => map_559

(debug_insn 2478 2477 0 (var_location:SI map (const_int 0 [0])) src/switch_core_media.c:3295 -1
     (nil))
;; # DEBUG map => map_559

(debug_insn 2479 2478 0 (var_location:SI map (const_int 0 [0])) -1
     (nil))
;; # DEBUG nm_idx => nm_idx_1749

(debug_insn 2480 2479 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_1869

(debug_insn 2481 2480 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG codec_ms => codec_ms_477

(debug_insn 2482 2481 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; # DEBUG x => NULL

(debug_insn 2483 2482 0 (var_location:SI x (const_int 0 [0])) -1
     (nil))
;; # DEBUG cng_pt => cng_pt_1717

(debug_insn 2484 2483 0 (var_location:QI cng_pt (const_int 0 [0])) -1
     (nil))
;; # DEBUG best_te => best_te_680

(debug_insn 2485 2484 0 (var_location:QI best_te (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => match_1800

(debug_insn 2486 2485 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (map_559 != 0B)

(insn 2487 2486 2488 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 283 [ map ])
            (const_int 0 [0]))) src/switch_core_media.c:3295 -1
     (nil))

(jump_insn 2488 2487 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3295 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 215

;; Generating RTL for gimple basic block 216

;; # DEBUG map_bit_rate => 0

(debug_insn 2491 2490 0 (var_location:SI map_bit_rate (const_int 0 [0])) src/switch_core_media.c:3298 -1
     (nil))
;; codec_fmtp = {};

(insn 2492 2491 2493 (set (reg:SI 1598)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3299 -1
     (nil))

(insn 2493 2492 2494 (set (reg:SI 1599)
        (const_int 0 [0])) src/switch_core_media.c:3299 -1
     (nil))

(insn 2494 2493 2495 (set (mem/s/c:SI (reg:SI 1598) [32 codec_fmtp+0 S4 A64])
        (reg:SI 1599)) src/switch_core_media.c:3299 -1
     (nil))

(insn 2495 2494 2496 (set (reg:SI 1598)
        (plus:SI (reg:SI 1598)
            (const_int 4 [0x4]))) src/switch_core_media.c:3299 -1
     (nil))

(insn 2496 2495 2497 (set (reg:SI 1600)
        (const_int 0 [0])) src/switch_core_media.c:3299 -1
     (nil))

(insn 2497 2496 2498 (set (mem/s/c:SI (reg:SI 1598) [32 codec_fmtp+4 S4 A32])
        (reg:SI 1600)) src/switch_core_media.c:3299 -1
     (nil))

(insn 2498 2497 2499 (set (reg:SI 1598)
        (plus:SI (reg:SI 1598)
            (const_int 4 [0x4]))) src/switch_core_media.c:3299 -1
     (nil))

(insn 2499 2498 2500 (set (reg:SI 1601)
        (const_int 0 [0])) src/switch_core_media.c:3299 -1
     (nil))

(insn 2500 2499 2501 (set (mem/s/c:SI (reg:SI 1598) [32 codec_fmtp+8 S4 A64])
        (reg:SI 1601)) src/switch_core_media.c:3299 -1
     (nil))

(insn 2501 2500 2502 (set (reg:SI 1598)
        (plus:SI (reg:SI 1598)
            (const_int 4 [0x4]))) src/switch_core_media.c:3299 -1
     (nil))

(insn 2502 2501 2503 (set (reg:SI 1602)
        (const_int 0 [0])) src/switch_core_media.c:3299 -1
     (nil))

(insn 2503 2502 2504 (set (mem/s/c:SI (reg:SI 1598) [32 codec_fmtp+12 S4 A32])
        (reg:SI 1602)) src/switch_core_media.c:3299 -1
     (nil))

(insn 2504 2503 0 (set (reg:SI 1598)
        (plus:SI (reg:SI 1598)
            (const_int 4 [0x4]))) src/switch_core_media.c:3299 -1
     (nil))

;; rm_encoding_561 = map_1728->rm_encoding;

(insn 2505 2504 0 (set (reg/v/f:SI 221 [ rm_encoding ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 8 [0x8])) [2 map_1728->rm_encoding+0 S4 A32])) src/switch_core_media.c:3301 -1
     (nil))

;; # DEBUG rm_encoding => rm_encoding_561

(debug_insn 2506 2505 0 (var_location:SI rm_encoding (const_int 0 [0])) src/switch_core_media.c:3301 -1
     (nil))
;; if (rm_encoding_561 == 0B)

(insn 2507 2506 2508 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 221 [ rm_encoding ])
            (const_int 0 [0]))) src/switch_core_media.c:3301 -1
     (nil))

(jump_insn 2508 2507 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3301 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 217

;; Generating RTL for gimple basic block 218

;; 

(code_label 2510 2509 2511 1410 "" [0 uses])

(note 2511 2510 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG rm_encoding => rm_encoding_130

(debug_insn 2512 2511 0 (var_location:SI rm_encoding (const_int 0 [0])) -1
     (nil))
;; D.44848_563 = strcasecmp (rm_encoding_130, "telephone-event");

(insn 2513 2512 2514 (set (reg:SI 1604)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC333") [flags 0x82]  <var_decl 0x40418000 *.LC333>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1039 [0x40f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1039 [0x40f])
            ] 29)) src/switch_core_media.c:3306 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC333") [flags 0x82]  <var_decl 0x40418000 *.LC333>)
        (nil)))

(insn 2514 2513 2515 (set (reg:SI 1603)
        (reg:SI 1604)) src/switch_core_media.c:3306 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC333") [flags 0x82]  <var_decl 0x40418000 *.LC333>)
        (nil)))

(insn 2515 2514 2516 (set (reg:SI 0 r0)
        (reg/v/f:SI 221 [ rm_encoding ])) src/switch_core_media.c:3306 -1
     (nil))

(insn 2516 2515 2517 (set (reg:SI 1 r1)
        (reg:SI 1603)) src/switch_core_media.c:3306 -1
     (nil))

(call_insn/i 2517 2516 2518 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3306 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2518 2517 0 (set (reg:SI 472 [ D.44848 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3306 -1
     (nil))

;; if (D.44848_563 == 0)

(insn 2519 2518 2520 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 472 [ D.44848 ])
            (const_int 0 [0]))) src/switch_core_media.c:3306 -1
     (nil))

(jump_insn 2520 2519 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3306 -1
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))

;; Generating RTL for gimple basic block 219

;; if (best_te_1898 == 0)

(insn 2522 2521 2523 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ best_te ])
            (const_int 0 [0]))) src/switch_core_media.c:3307 -1
     (nil))

(jump_insn 2523 2522 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3307 -1
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))

;; Generating RTL for gimple basic block 220

;; if (D.44854_564 == D.44855_566)

(insn 2525 2524 2526 (set (reg/f:SI 1605)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3307 -1
     (nil))

(insn 2526 2525 2527 (set (reg:SI 1606)
        (mem/s:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 12 [0xc])) [26 map_1728->rm_rate+0 S4 A32])) src/switch_core_media.c:3307 -1
     (nil))

(insn 2527 2526 2528 (set (reg:SI 1607)
        (mem/s:SI (plus:SI (reg/f:SI 1605)
                (const_int 36 [0x24])) [26 D.44750_565->rm_rate+0 S4 A32])) src/switch_core_media.c:3307 -1
     (nil))

(insn 2528 2527 2529 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1606)
            (reg:SI 1607))) src/switch_core_media.c:3307 -1
     (nil))

(jump_insn 2529 2528 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3307 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 221

;; 

(code_label 2530 2529 2531 1412 "" [0 uses])

(note 2531 2530 0 NOTE_INSN_BASIC_BLOCK)

;; best_te_568 = (switch_payload_t) D.44856_567;

(insn 2532 2531 2533 (set (reg:SI 1608)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3308 -1
     (nil))

(insn 2533 2532 2534 (set (reg:SI 1609)
        (lshiftrt:SI (reg:SI 1608)
            (const_int 1 [0x1]))) src/switch_core_media.c:3308 -1
     (nil))

(insn 2534 2533 0 (set (reg/v:SI 145 [ best_te ])
        (zero_extend:SI (subreg:QI (reg:SI 1609) 0))) src/switch_core_media.c:3308 -1
     (nil))

;; # DEBUG best_te => best_te_568

(debug_insn 2535 2534 0 (var_location:QI best_te (const_int 0 [0])) src/switch_core_media.c:3308 -1
     (nil))
;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3309, session_161(D), 7, "Set telephone-event payload to %u\n", D.44857_569);

(insn 2536 2535 2537 (set (reg:SI 1611)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1040 [0x410])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1040 [0x410])
            ] 29)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2537 2536 2538 (set (reg:SI 1610)
        (reg:SI 1611)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2538 2537 2539 (set (reg:SI 1613)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1041 [0x411])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1041 [0x411])
            ] 29)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2539 2538 2540 (set (reg/f:SI 1612)
        (reg:SI 1613)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2540 2539 2541 (set (reg:SI 1615)
        (plus:SI (reg/f:SI 1612)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3309 -1
     (nil))

(insn 2541 2540 2542 (set (reg:SI 1614)
        (plus:SI (reg:SI 1615)
            (const_int 8 [0x8]))) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1612)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2542 2541 2543 (set (reg:SI 1616)
        (const_int 3309 [0xced])) src/switch_core_media.c:3309 -1
     (nil))

(insn 2543 2542 2544 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3309 -1
     (nil))

(insn 2544 2543 2545 (set (reg:SI 1617)
        (const_int 7 [0x7])) src/switch_core_media.c:3309 -1
     (nil))

(insn 2545 2544 2546 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1617)) src/switch_core_media.c:3309 -1
     (nil))

(insn 2546 2545 2547 (set (reg:SI 1619)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC334") [flags 0x82]  <var_decl 0x40418060 *.LC334>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1042 [0x412])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1042 [0x412])
            ] 29)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC334") [flags 0x82]  <var_decl 0x40418060 *.LC334>)
        (nil)))

(insn 2547 2546 2548 (set (reg/f:SI 1618)
        (reg:SI 1619)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC334") [flags 0x82]  <var_decl 0x40418060 *.LC334>)
        (nil)))

(insn 2548 2547 2549 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1618)) src/switch_core_media.c:3309 -1
     (nil))

(insn 2549 2548 2550 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3309 -1
     (nil))

(insn 2550 2549 2551 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3309 -1
     (nil))

(insn 2551 2550 2552 (set (reg:SI 1 r1)
        (reg:SI 1610)) src/switch_core_media.c:3309 -1
     (nil))

(insn 2552 2551 2553 (set (reg:SI 2 r2)
        (reg:SI 1614)) src/switch_core_media.c:3309 -1
     (nil))

(insn 2553 2552 2554 (set (reg:SI 3 r3)
        (reg:SI 1616)) src/switch_core_media.c:3309 -1
     (nil))

(call_insn 2554 2553 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3309 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 222

;; 

(code_label 2557 2556 2558 1411 "" [0 uses])

(note 2558 2557 0 NOTE_INSN_BASIC_BLOCK)

;; D.44858_570 = switch_media_handle_test_media_flag (smh_186, 9);

(insn 2559 2558 2560 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3314 -1
     (nil))

(insn 2560 2559 2561 (set (reg:SI 1 r1)
        (const_int 9 [0x9])) src/switch_core_media.c:3314 -1
     (nil))

(call_insn 2561 2560 2562 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3314 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2562 2561 0 (set (reg:SI 478 [ D.44858 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3314 -1
     (nil))

;; if (D.44858_570 == 0)

(insn 2563 2562 2564 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 478 [ D.44858 ])
            (const_int 0 [0]))) src/switch_core_media.c:3314 -1
     (nil))

(jump_insn 2564 2563 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3314 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 223

;; if (cng_pt_1667 == 0)

(insn 2566 2565 2567 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 149 [ cng_pt ])
            (const_int 0 [0]))) src/switch_core_media.c:3314 -1
     (nil))

(jump_insn 2567 2566 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3314 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 224

;; D.44863_571 = strcasecmp (rm_encoding_130, "CN");

(insn 2569 2568 2570 (set (reg:SI 1621)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC335") [flags 0x82]  <var_decl 0x404180c0 *.LC335>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1043 [0x413])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1043 [0x413])
            ] 29)) src/switch_core_media.c:3314 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC335") [flags 0x82]  <var_decl 0x404180c0 *.LC335>)
        (nil)))

(insn 2570 2569 2571 (set (reg:SI 1620)
        (reg:SI 1621)) src/switch_core_media.c:3314 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC335") [flags 0x82]  <var_decl 0x404180c0 *.LC335>)
        (nil)))

(insn 2571 2570 2572 (set (reg:SI 0 r0)
        (reg/v/f:SI 221 [ rm_encoding ])) src/switch_core_media.c:3314 -1
     (nil))

(insn 2572 2571 2573 (set (reg:SI 1 r1)
        (reg:SI 1620)) src/switch_core_media.c:3314 -1
     (nil))

(call_insn/i 2573 2572 2574 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3314 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2574 2573 0 (set (reg:SI 479 [ D.44863 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3314 -1
     (nil))

;; if (D.44863_571 == 0)

(insn 2575 2574 2576 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 479 [ D.44863 ])
            (const_int 0 [0]))) src/switch_core_media.c:3314 -1
     (nil))

(jump_insn 2576 2575 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3314 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 225

;; cng_pt_573 = (switch_payload_t) D.44856_572;

(insn 2578 2577 2579 (set (reg:SI 1622)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3315 -1
     (nil))

(insn 2579 2578 2580 (set (reg:SI 1623)
        (lshiftrt:SI (reg:SI 1622)
            (const_int 1 [0x1]))) src/switch_core_media.c:3315 -1
     (nil))

(insn 2580 2579 0 (set (reg/v:SI 149 [ cng_pt ])
        (zero_extend:SI (subreg:QI (reg:SI 1623) 0))) src/switch_core_media.c:3315 -1
     (nil))

;; # DEBUG cng_pt => cng_pt_573

(debug_insn 2581 2580 0 (var_location:QI cng_pt (const_int 0 [0])) src/switch_core_media.c:3315 -1
     (nil))
;; if (D.44605_574 != 0B)

(insn 2582 2581 2583 (set (reg:SI 1624)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3316 -1
     (nil))

(insn 2583 2582 2584 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1624)
            (const_int 0 [0]))) src/switch_core_media.c:3316 -1
     (nil))

(jump_insn 2584 2583 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3316 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 226

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3317, session_161(D), 7, "Set comfort noise payload to %u\n", D.44868_575);

(insn 2586 2585 2587 (set (reg:SI 1626)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1044 [0x414])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1044 [0x414])
            ] 29)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2587 2586 2588 (set (reg:SI 1625)
        (reg:SI 1626)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2588 2587 2589 (set (reg:SI 1628)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1045 [0x415])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1045 [0x415])
            ] 29)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2589 2588 2590 (set (reg/f:SI 1627)
        (reg:SI 1628)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2590 2589 2591 (set (reg:SI 1630)
        (plus:SI (reg/f:SI 1627)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3317 -1
     (nil))

(insn 2591 2590 2592 (set (reg:SI 1629)
        (plus:SI (reg:SI 1630)
            (const_int 8 [0x8]))) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1627)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2592 2591 2593 (set (reg:SI 1631)
        (const_int 3317 [0xcf5])) src/switch_core_media.c:3317 -1
     (nil))

(insn 2593 2592 2594 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3317 -1
     (nil))

(insn 2594 2593 2595 (set (reg:SI 1632)
        (const_int 7 [0x7])) src/switch_core_media.c:3317 -1
     (nil))

(insn 2595 2594 2596 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1632)) src/switch_core_media.c:3317 -1
     (nil))

(insn 2596 2595 2597 (set (reg:SI 1634)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC336") [flags 0x82]  <var_decl 0x40418120 *.LC336>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1046 [0x416])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1046 [0x416])
            ] 29)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC336") [flags 0x82]  <var_decl 0x40418120 *.LC336>)
        (nil)))

(insn 2597 2596 2598 (set (reg/f:SI 1633)
        (reg:SI 1634)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC336") [flags 0x82]  <var_decl 0x40418120 *.LC336>)
        (nil)))

(insn 2598 2597 2599 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1633)) src/switch_core_media.c:3317 -1
     (nil))

(insn 2599 2598 2600 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v:SI 149 [ cng_pt ])) src/switch_core_media.c:3317 -1
     (nil))

(insn 2600 2599 2601 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3317 -1
     (nil))

(insn 2601 2600 2602 (set (reg:SI 1 r1)
        (reg:SI 1625)) src/switch_core_media.c:3317 -1
     (nil))

(insn 2602 2601 2603 (set (reg:SI 2 r2)
        (reg:SI 1629)) src/switch_core_media.c:3317 -1
     (nil))

(insn 2603 2602 2604 (set (reg:SI 3 r3)
        (reg:SI 1631)) src/switch_core_media.c:3317 -1
     (nil))

(call_insn 2604 2603 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3317 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_rtp_set_cng_pt (D.44605_576, D.44869_578);

(insn 2605 2604 2606 (set (reg:SI 1635)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3318 -1
     (nil))

(insn 2606 2605 2607 (set (reg:SI 1637)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3318 -1
     (nil))

(insn 2607 2606 2608 (set (reg/f:SI 1636)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1637)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3318 -1
     (nil))

(insn 2608 2607 2609 (set (reg:SI 1638)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 1636)
                    (const_int 140 [0x8c])) [0 D.44471_577->cng_pt+0 S1 A32]))) src/switch_core_media.c:3318 -1
     (nil))

(insn 2609 2608 2610 (set (reg:SI 0 r0)
        (reg:SI 1635)) src/switch_core_media.c:3318 -1
     (nil))

(insn 2610 2609 2611 (set (reg:SI 1 r1)
        (reg:SI 1638)) src/switch_core_media.c:3318 -1
     (nil))

(call_insn 2611 2610 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_cng_pt") [flags 0x41]  <function_decl 0x408cec00 switch_rtp_set_cng_pt>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3318 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; Generating RTL for gimple basic block 227

;; 

(code_label 2614 2613 2615 1414 "" [0 uses])

(note 2615 2614 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG x => NULL

(debug_insn 2616 2615 0 (var_location:SI x (const_int 0 [0])) src/switch_core_media.c:3324 -1
     (nil))
;; if (match_1901 != 0)

(insn 2617 2616 2618 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ match ])
            (const_int 0 [0]))) src/switch_core_media.c:3328 -1
     (nil))

(jump_insn 2618 2617 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3328 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 228

;; # DEBUG codec_ms => ptime_1033

(debug_insn 2620 2619 0 (var_location:SI codec_ms (const_int 0 [0])) src/switch_core_media.c:3332 -1
     (nil))
;; if (maxptime_1040 != 0)

(insn 2621 2620 2622 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 162 [ maxptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3334 -1
     (nil))

(jump_insn 2622 2621 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3334 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 229

;; if (D.44879_584 != 0)

(insn 2624 2623 2625 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ ptime ])
            (reg/v:SI 162 [ maxptime ]))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2625 2624 2626 (set (reg:SI 1640)
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2626 2625 2627 (set (reg:QI 1639)
        (subreg:QI (reg:SI 1640) 0)) src/switch_core_media.c:3334 -1
     (nil))

(insn 2627 2626 2628 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ ptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2628 2627 2629 (set (reg:SI 1642)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2629 2628 2630 (set (reg:QI 1641)
        (subreg:QI (reg:SI 1642) 0)) src/switch_core_media.c:3334 -1
     (nil))

(insn 2630 2629 2631 (set (reg:SI 1643)
        (ior:SI (subreg:SI (reg:QI 1639) 0)
            (subreg:SI (reg:QI 1641) 0))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2631 2630 2632 (set (reg:QI 1644)
        (subreg:QI (reg:SI 1643) 0)) src/switch_core_media.c:3334 -1
     (nil))

(insn 2632 2631 2633 (set (reg:SI 1645)
        (zero_extend:SI (reg:QI 1644))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2633 2632 2634 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1645)
            (const_int 0 [0]))) src/switch_core_media.c:3334 -1
     (nil))

(jump_insn 2634 2633 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3334 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 230

;; Generating RTL for gimple basic block 231

;; 

(code_label 2638 2637 2639 1415 "" [0 uses])

(note 2639 2638 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG codec_ms => ptime_1033

(debug_insn 2640 2639 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; if (ptime_1033 == 0)

(insn 2641 2640 2642 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ ptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3338 -1
     (nil))

(jump_insn 2642 2641 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3338 -1
     (expr_list:REG_BR_PROB (const_int 4200 [0x1068])
        (nil)))

;; Generating RTL for gimple basic block 232

;; D.44885_588 = switch_default_ptime (rm_encoding_130, D.44884_587);

(insn 2644 2643 2645 (set (reg:SI 1646)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3339 -1
     (nil))

(insn 2645 2644 2646 (set (reg:SI 1647)
        (lshiftrt:SI (reg:SI 1646)
            (const_int 1 [0x1]))) src/switch_core_media.c:3339 -1
     (nil))

(insn 2646 2645 2647 (set (reg:SI 1648)
        (zero_extend:SI (subreg:QI (reg:SI 1647) 0))) src/switch_core_media.c:3339 -1
     (nil))

(insn 2647 2646 2648 (set (reg:SI 0 r0)
        (reg/v/f:SI 221 [ rm_encoding ])) src/switch_core_media.c:3339 -1
     (nil))

(insn 2648 2647 2649 (set (reg:SI 1 r1)
        (reg:SI 1648)) src/switch_core_media.c:3339 -1
     (nil))

(call_insn 2649 2648 2650 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_default_ptime") [flags 0x41]  <function_decl 0x40749700 switch_default_ptime>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3339 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2650 2649 0 (set (reg:SI 492 [ D.44885 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3339 -1
     (nil))

;; codec_ms_589 = (int) D.44885_588;

(insn 2651 2650 0 (set (reg/v:SI 196 [ codec_ms ])
        (reg:SI 492 [ D.44885 ])) src/switch_core_media.c:3339 -1
     (nil))

;; # DEBUG codec_ms => codec_ms_589

(debug_insn 2652 2651 0 (var_location:SI codec_ms (const_int 0 [0])) src/switch_core_media.c:3339 -1
     (nil))
;; Generating RTL for gimple basic block 233

;; 

(code_label 2653 2652 2654 1417 "" [0 uses])

(note 2654 2653 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG codec_ms => codec_ms_87

(debug_insn 2655 2654 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; csui.173_591 = (unsigned char) D.44856_590;

(insn 2656 2655 2657 (set (reg:SI 1649)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3342 -1
     (nil))

(insn 2657 2656 2658 (set (reg:SI 1650)
        (lshiftrt:SI (reg:SI 1649)
            (const_int 1 [0x1]))) src/switch_core_media.c:3342 -1
     (nil))

(insn 2658 2657 0 (set (reg:SI 494 [ csui.173 ])
        (zero_extend:SI (subreg:QI (reg:SI 1650) 0))) src/switch_core_media.c:3342 -1
     (nil))

;; # DEBUG payload => csui.173_591

(debug_insn 2659 2658 0 (var_location:QI payload (const_int 0 [0])) src/switch_core_media.c:3342 -1
     (nil))
;; if (csui.173_591 <= 18)

(insn 2660 2659 2661 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 494 [ csui.173 ])
            (const_int 18 [0x12]))) src/switch_core_media.c:3342 -1
     (nil))

(jump_insn 2661 2660 0 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3342 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 234

;; map_bit_rate_1479 = CSWTCH.174[csui.173_591];

(insn 2663 2662 2664 (set (reg:SI 1652)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1047 [0x417])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1047 [0x417])
            ] 29)) src/switch_core_media.c:3342 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2664 2663 2665 (set (reg/f:SI 1651)
        (reg:SI 1652)) src/switch_core_media.c:3342 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2665 2664 2666 (set (reg:SI 1653)
        (const_int 184 [0xb8])) src/switch_core_media.c:3342 -1
     (nil))

(insn 2666 2665 2667 (set (reg:SI 1654)
        (ashift:SI (reg:SI 494 [ csui.173 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3342 -1
     (nil))

(insn 2667 2666 2668 (set (reg:SI 1655)
        (plus:SI (reg/f:SI 1651)
            (reg:SI 1654))) src/switch_core_media.c:3342 -1
     (nil))

(insn 2668 2667 2669 (set (reg/f:SI 1656)
        (plus:SI (reg:SI 1655)
            (reg:SI 1653))) src/switch_core_media.c:3342 -1
     (nil))

(insn 2669 2668 0 (set (reg/v:SI 222 [ map_bit_rate ])
        (mem/s/u:SI (reg/f:SI 1656) [4 CSWTCH.174 S4 A32])) src/switch_core_media.c:3342 -1
     (nil))

;; Generating RTL for gimple basic block 235

;; 

(code_label 2670 2669 2671 1418 "" [0 uses])

(note 2671 2670 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG map_bit_rate => NULL

(debug_insn 2672 2671 0 (var_location:SI map_bit_rate (const_int 0 [0])) src/switch_core_media.c:3342 -1
     (nil))
;; if (ptime_1033 == 0)

(insn 2673 2672 2674 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ ptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3344 -1
     (nil))

(jump_insn 2674 2673 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3344 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 236

;; D.44890_594 = strcasecmp (D.44889_593, "g723");

(insn 2676 2675 2677 (set (reg:SI 1657)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 8 [0x8])) [2 map_1728->rm_encoding+0 S4 A32])) src/switch_core_media.c:3344 -1
     (nil))

(insn 2677 2676 2678 (set (reg:SI 1659)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC70") [flags 0x82]  <var_decl 0x41ea4000 *.LC70>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1048 [0x418])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1048 [0x418])
            ] 29)) src/switch_core_media.c:3344 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC70") [flags 0x82]  <var_decl 0x41ea4000 *.LC70>)
        (nil)))

(insn 2678 2677 2679 (set (reg:SI 1658)
        (reg:SI 1659)) src/switch_core_media.c:3344 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC70") [flags 0x82]  <var_decl 0x41ea4000 *.LC70>)
        (nil)))

(insn 2679 2678 2680 (set (reg:SI 0 r0)
        (reg:SI 1657)) src/switch_core_media.c:3344 -1
     (nil))

(insn 2680 2679 2681 (set (reg:SI 1 r1)
        (reg:SI 1658)) src/switch_core_media.c:3344 -1
     (nil))

(call_insn/i 2681 2680 2682 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3344 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2682 2681 0 (set (reg:SI 496 [ D.44890 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3344 -1
     (nil))

;; if (D.44890_594 == 0)

(insn 2683 2682 2684 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 496 [ D.44890 ])
            (const_int 0 [0]))) src/switch_core_media.c:3344 -1
     (nil))

(jump_insn 2684 2683 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3344 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 237

;; Generating RTL for gimple basic block 238

;; 

(code_label 2686 2685 2687 1419 "" [0 uses])

(note 2687 2686 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG codec_ms => codec_ms_88

(debug_insn 2688 2687 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; remote_codec_rate_596 = map_1728->rm_rate;

(insn 2689 2688 0 (set (reg/v:SI 199 [ remote_codec_rate ])
        (mem/s:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 12 [0xc])) [26 map_1728->rm_rate+0 S4 A32])) src/switch_core_media.c:3348 -1
     (nil))

;; # DEBUG remote_codec_rate => remote_codec_rate_596

(debug_insn 2690 2689 0 (var_location:SI remote_codec_rate (const_int 0 [0])) src/switch_core_media.c:3348 -1
     (nil))
;; # DEBUG fmtp_remote_codec_rate => 0

(debug_insn 2691 2690 0 (var_location:SI fmtp_remote_codec_rate (const_int 0 [0])) src/switch_core_media.c:3349 -1
     (nil))
;; memset (&codec_fmtp, 0, 16);

(insn 2692 2691 2693 (set (reg:SI 1660)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3350 -1
     (nil))

(insn 2693 2692 2694 (set (reg:SI 1661)
        (reg:SI 1660)) src/switch_core_media.c:3350 -1
     (nil))

(insn 2694 2693 2695 (set (reg:SI 1662)
        (const_int 0 [0])) src/switch_core_media.c:3350 -1
     (nil))

(insn 2695 2694 2696 (set (mem/s/c:SI (reg:SI 1661) [0 codec_fmtp+0 S4 A64])
        (reg:SI 1662)) src/switch_core_media.c:3350 -1
     (nil))

(insn 2696 2695 2697 (set (reg:SI 1661)
        (plus:SI (reg:SI 1661)
            (const_int 4 [0x4]))) src/switch_core_media.c:3350 -1
     (nil))

(insn 2697 2696 2698 (set (reg:SI 1663)
        (const_int 0 [0])) src/switch_core_media.c:3350 -1
     (nil))

(insn 2698 2697 2699 (set (mem/s/c:SI (reg:SI 1661) [0 codec_fmtp+4 S4 A32])
        (reg:SI 1663)) src/switch_core_media.c:3350 -1
     (nil))

(insn 2699 2698 2700 (set (reg:SI 1661)
        (plus:SI (reg:SI 1661)
            (const_int 4 [0x4]))) src/switch_core_media.c:3350 -1
     (nil))

(insn 2700 2699 2701 (set (reg:SI 1664)
        (const_int 0 [0])) src/switch_core_media.c:3350 -1
     (nil))

(insn 2701 2700 2702 (set (mem/s/c:SI (reg:SI 1661) [0 codec_fmtp+8 S4 A64])
        (reg:SI 1664)) src/switch_core_media.c:3350 -1
     (nil))

(insn 2702 2701 2703 (set (reg:SI 1661)
        (plus:SI (reg:SI 1661)
            (const_int 4 [0x4]))) src/switch_core_media.c:3350 -1
     (nil))

(insn 2703 2702 2704 (set (reg:SI 1665)
        (const_int 0 [0])) src/switch_core_media.c:3350 -1
     (nil))

(insn 2704 2703 2705 (set (mem/s/c:SI (reg:SI 1661) [0 codec_fmtp+12 S4 A32])
        (reg:SI 1665)) src/switch_core_media.c:3350 -1
     (nil))

(insn 2705 2704 0 (set (reg:SI 1661)
        (plus:SI (reg:SI 1661)
            (const_int 4 [0x4]))) src/switch_core_media.c:3350 -1
     (nil))

;; D.44893_598 = map_1728->rm_fmtp;

(insn 2706 2705 0 (set (reg/f:SI 497 [ D.44893 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 20 [0x14])) [2 map_1728->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3352 -1
     (nil))

;; # DEBUG s => D.44893_598

(debug_insn 2707 2706 0 (var_location:SI s (const_int 0 [0])) src/switch_core_media.c:3352 -1
     (nil))
;; if (D.44893_598 == 0B)

(insn 2708 2707 2709 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 497 [ D.44893 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2709 2708 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 239

;; if (D.47915_1481 == 0)

(insn 2711 2710 2712 (set (reg:SI 1666)
        (zero_extend:SI (mem:QI (reg/f:SI 497 [ D.44893 ]) [0 *D.44893_598+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 2712 2711 2713 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1666)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2713 2712 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 240

;; 

(code_label 2714 2713 2715 1420 "" [0 uses])

(note 2715 2714 0 NOTE_INSN_BASIC_BLOCK)

;; D.44889_600 = map_1728->rm_encoding;

(insn 2716 2715 0 (set (reg/f:SI 498 [ D.44889 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 8 [0x8])) [2 map_1728->rm_encoding+0 S4 A32])) src/switch_core_media.c:3353 -1
     (nil))

;; D.44897_601 = strcasecmp (D.44889_600, "ilbc");

(insn 2717 2716 2718 (set (reg:SI 1668)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1049 [0x419])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1049 [0x419])
            ] 29)) src/switch_core_media.c:3353 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
        (nil)))

(insn 2718 2717 2719 (set (reg:SI 1667)
        (reg:SI 1668)) src/switch_core_media.c:3353 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
        (nil)))

(insn 2719 2718 2720 (set (reg:SI 0 r0)
        (reg/f:SI 498 [ D.44889 ])) src/switch_core_media.c:3353 -1
     (nil))

(insn 2720 2719 2721 (set (reg:SI 1 r1)
        (reg:SI 1667)) src/switch_core_media.c:3353 -1
     (nil))

(call_insn/i 2721 2720 2722 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3353 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2722 2721 0 (set (reg:SI 499 [ D.44897 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3353 -1
     (nil))

;; if (D.44897_601 == 0)

(insn 2723 2722 2724 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 499 [ D.44897 ])
            (const_int 0 [0]))) src/switch_core_media.c:3353 -1
     (nil))

(jump_insn 2724 2723 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3353 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 241

;; D.44901_605 = strcasecmp (D.44889_600, "isac");

(insn 2726 2725 2727 (set (reg:SI 1670)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1050 [0x41a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1050 [0x41a])
            ] 29)) src/switch_core_media.c:3356 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
        (nil)))

(insn 2727 2726 2728 (set (reg:SI 1669)
        (reg:SI 1670)) src/switch_core_media.c:3356 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
        (nil)))

(insn 2728 2727 2729 (set (reg:SI 0 r0)
        (reg/f:SI 498 [ D.44889 ])) src/switch_core_media.c:3356 -1
     (nil))

(insn 2729 2728 2730 (set (reg:SI 1 r1)
        (reg:SI 1669)) src/switch_core_media.c:3356 -1
     (nil))

(call_insn/i 2730 2729 2731 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3356 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2731 2730 0 (set (reg:SI 500 [ D.44901 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3356 -1
     (nil))

;; if (D.44901_605 == 0)

(insn 2732 2731 2733 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 500 [ D.44901 ])
            (const_int 0 [0]))) src/switch_core_media.c:3356 -1
     (nil))

(jump_insn 2733 2732 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3356 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 242

;; Generating RTL for gimple basic block 243

;; D.44908_612 = codec_fmtp.bits_per_second;

(insn 2738 2737 0 (set (reg:SI 504 [ D.44908 ])
        (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [4 codec_fmtp.bits_per_second+0 S4 A32])) src/switch_core_media.c:3362 -1
     (nil))

;; if (D.44908_612 != 0)

(insn 2739 2738 2740 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 504 [ D.44908 ])
            (const_int 0 [0]))) src/switch_core_media.c:3362 -1
     (nil))

(jump_insn 2740 2739 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3362 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 244

;; map_bit_rate_614 = (uint32_t) D.44908_612;

(insn 2742 2741 0 (set (reg/v:SI 222 [ map_bit_rate ])
        (reg:SI 504 [ D.44908 ])) src/switch_core_media.c:3363 -1
     (nil))

;; # DEBUG map_bit_rate => map_bit_rate_614

(debug_insn 2743 2742 0 (var_location:SI map_bit_rate (const_int 0 [0])) src/switch_core_media.c:3363 -1
     (nil))
;; Generating RTL for gimple basic block 245

;; 

(code_label 2744 2743 2745 1423 "" [0 uses])

(note 2745 2744 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG map_bit_rate => map_bit_rate_131

(debug_insn 2746 2745 0 (var_location:SI map_bit_rate (const_int 0 [0])) -1
     (nil))
;; D.44911_615 = codec_fmtp.microseconds_per_packet;

(insn 2747 2746 0 (set (reg:SI 505 [ D.44911 ])
        (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [4 codec_fmtp.microseconds_per_packet+0 S4 A64])) src/switch_core_media.c:3365 -1
     (nil))

;; if (D.44911_615 != 0)

(insn 2748 2747 2749 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 505 [ D.44911 ])
            (const_int 0 [0]))) src/switch_core_media.c:3365 -1
     (nil))

(jump_insn 2749 2748 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3365 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 246

;; codec_ms_617 = D.44911_615 / 1000;

(insn 2751 2750 2752 (set (reg:SI 1672)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3366 -1
     (nil))

(insn 2752 2751 2753 (parallel [
            (set (reg:SI 1671)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 505 [ D.44911 ]))
                            (sign_extend:DI (reg:SI 1672)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3366 -1
     (nil))

(insn 2753 2752 2754 (set (reg:SI 1673)
        (ashiftrt:SI (reg:SI 1671)
            (const_int 6 [0x6]))) src/switch_core_media.c:3366 -1
     (nil))

(insn 2754 2753 2755 (set (reg:SI 1674)
        (ashiftrt:SI (reg:SI 505 [ D.44911 ])
            (const_int 31 [0x1f]))) src/switch_core_media.c:3366 -1
     (nil))

(insn 2755 2754 0 (set (reg/v:SI 196 [ codec_ms ])
        (minus:SI (reg:SI 1673)
            (reg:SI 1674))) src/switch_core_media.c:3366 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 505 [ D.44911 ])
            (const_int 1000 [0x3e8]))
        (nil)))

;; # DEBUG codec_ms => codec_ms_617

(debug_insn 2756 2755 0 (var_location:SI codec_ms (const_int 0 [0])) src/switch_core_media.c:3366 -1
     (nil))
;; Generating RTL for gimple basic block 247

;; 

(code_label 2757 2756 2758 1424 "" [0 uses])

(note 2758 2757 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG codec_ms => codec_ms_89

(debug_insn 2759 2758 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; fmtp_remote_codec_rate_618 = codec_fmtp.actual_samples_per_second;

(insn 2760 2759 0 (set (reg/v:SI 201 [ fmtp_remote_codec_rate ])
        (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [4 codec_fmtp.actual_samples_per_second+0 S4 A64])) src/switch_core_media.c:3368 -1
     (nil))

;; Generating RTL for gimple basic block 248

;; 

(code_label 2761 2760 2762 1422 "" [0 uses])

(note 2762 2761 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG map_bit_rate => map_bit_rate_132

(debug_insn 2763 2762 0 (var_location:SI map_bit_rate (const_int 0 [0])) -1
     (nil))
;; # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_99

(debug_insn 2764 2763 0 (var_location:SI fmtp_remote_codec_rate (const_int 0 [0])) -1
     (nil))
;; # DEBUG codec_ms => codec_ms_90

(debug_insn 2765 2764 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => 0

(debug_insn 2766 2765 0 (var_location:SI i (const_int 0 [0])) src/switch_core_media.c:3374 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 2767 2766 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; # DEBUG nm_idx => nm_idx_1755

(debug_insn 2768 2767 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_792

(debug_insn 2769 2768 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG remote_codec_rate => remote_codec_rate_596

(debug_insn 2770 2769 0 (var_location:SI remote_codec_rate (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => 0

(debug_insn 2771 2770 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (D.44999_1152 != 0)

(insn 2772 2771 2773 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 194 [ total_codecs ])
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2773 2772 2774 (set (reg:SI 1676)
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2774 2773 2775 (set (reg:QI 1675)
        (subreg:QI (reg:SI 1676) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 2775 2774 2776 (set (reg:SI 1678)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3374 -1
     (nil))

(insn 2776 2775 2777 (set (reg/f:SI 1677)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1678)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3374 -1
     (nil))

(insn 2777 2776 2778 (set (reg:SI 1680)
        (mem/s:SI (plus:SI (reg/f:SI 1677)
                (const_int 128 [0x80])) [4 D.44471_1501->num_codecs+0 S4 A32])) src/switch_core_media.c:3374 -1
     (nil))

(insn 2778 2777 2779 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1680)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2779 2778 2780 (set (reg:SI 1681)
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2780 2779 2781 (set (reg:QI 1679)
        (subreg:QI (reg:SI 1681) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 2781 2780 2782 (set (reg:SI 1682)
        (and:SI (subreg:SI (reg:QI 1675) 0)
            (subreg:SI (reg:QI 1679) 0))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2782 2781 2783 (set (reg:QI 1683)
        (subreg:QI (reg:SI 1682) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 2783 2782 2784 (set (reg:SI 1684)
        (zero_extend:SI (reg:QI 1683))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2784 2783 2785 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1684)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(jump_insn 2785 2784 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3374 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 249

;; D.44993_692 = codec_ms_90 * 1000;

(insn 2787 2786 2788 (set (reg:SI 1685)
        (const_int 1000 [0x3e8])) src/switch_core_media.c:3414 -1
     (nil))

(insn 2788 2787 0 (set (reg:SI 560 [ D.44993 ])
        (mult:SI (reg:SI 1685)
            (reg/v:SI 196 [ codec_ms ]))) src/switch_core_media.c:3414 -1
     (nil))

;; ivtmp.1076_1045 = (unsigned int) codec_array_84;

(insn 2789 2788 0 (set (reg:SI 340 [ ivtmp.1076 ])
        (reg/v/f:SI 193 [ codec_array ])) src/switch_core_media.c:3414 -1
     (nil))

;; Generating RTL for gimple basic block 250

;; imp_629 = MEM[base: D.49971_95, offset: 0B];

(insn 2791 2790 0 (set (reg/v/f:SI 515 [ imp ])
        (mem/f:SI (reg:SI 340 [ ivtmp.1076 ]) [2 MEM[base: D.49971_95, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3375 -1
     (nil))

;; ivtmp.1076_1813 = ivtmp.1076_392 + 4;

(insn 2792 2791 0 (set (reg:SI 340 [ ivtmp.1076 ])
        (plus:SI (reg:SI 340 [ ivtmp.1076 ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3375 -1
     (nil))

;; # DEBUG imp => imp_629

(debug_insn 2793 2792 0 (var_location:SI imp (const_int 0 [0])) src/switch_core_media.c:3375 -1
     (nil))
;; D.44920_630 = imp_629->bits_per_second;

(insn 2794 2793 0 (set (reg:SI 516 [ D.44920 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 24 [0x18])) [4 imp_629->bits_per_second+0 S4 A32])) src/switch_core_media.c:3376 -1
     (nil))

;; # DEBUG bit_rate => (uint32_t) D.44920_630

(debug_insn 2795 2794 0 (var_location:SI bit_rate (const_int 0 [0])) src/switch_core_media.c:3376 -1
     (nil))
;; codec_rate_632 = imp_629->samples_per_second;

(insn 2796 2795 0 (set (reg/v:SI 518 [ codec_rate ])
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 16 [0x10])) [4 imp_629->samples_per_second+0 S4 A32])) src/switch_core_media.c:3377 -1
     (nil))

;; # DEBUG codec_rate => codec_rate_632

(debug_insn 2797 2796 0 (var_location:SI codec_rate (const_int 0 [0])) src/switch_core_media.c:3377 -1
     (nil))
;; if (D.44921_633 != 0)

(insn 2798 2797 2799 (set (reg:SI 1686)
        (mem/s:SI (reg/v/f:SI 515 [ imp ]) [17 imp_629->codec_type+0 S4 A32])) src/switch_core_media.c:3379 -1
     (nil))

(insn 2799 2798 2800 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1686)
            (const_int 0 [0]))) src/switch_core_media.c:3379 -1
     (nil))

(jump_insn 2800 2799 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3379 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 251

;; bit_rate_631 = (uint32_t) D.44920_630;

(insn 2802 2801 0 (set (reg/v:SI 517 [ bit_rate ])
        (reg:SI 516 [ D.44920 ])) src/switch_core_media.c:3376 -1
     (nil))

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3383, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u]/[%s:%d:%u:%d:%u]\n", rm_encoding_130, D.44924_635, remote_codec_rate.92_636, codec_ms_90, map_bit_rate_132, D.44926_637, D.44928_639, codec_rate_632, D.44930_641, bit_rate_631);

(insn 2803 2802 2804 (set (reg:SI 1688)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1051 [0x41b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1051 [0x41b])
            ] 29)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2804 2803 2805 (set (reg:SI 1687)
        (reg:SI 1688)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2805 2804 2806 (set (reg:SI 1690)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1052 [0x41c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1052 [0x41c])
            ] 29)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2806 2805 2807 (set (reg/f:SI 1689)
        (reg:SI 1690)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2807 2806 2808 (set (reg:SI 1692)
        (plus:SI (reg/f:SI 1689)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3383 -1
     (nil))

(insn 2808 2807 2809 (set (reg:SI 1691)
        (plus:SI (reg:SI 1692)
            (const_int 8 [0x8]))) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1689)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2809 2808 2810 (set (reg:SI 1693)
        (const_int 3383 [0xd37])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2810 2809 2811 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2811 2810 2812 (set (reg:SI 1694)
        (const_int 7 [0x7])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2812 2811 2813 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1694)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2813 2812 2814 (set (reg:SI 1696)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC337") [flags 0x82]  <var_decl 0x40418180 *.LC337>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1053 [0x41d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1053 [0x41d])
            ] 29)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC337") [flags 0x82]  <var_decl 0x40418180 *.LC337>)
        (nil)))

(insn 2814 2813 2815 (set (reg/f:SI 1695)
        (reg:SI 1696)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC337") [flags 0x82]  <var_decl 0x40418180 *.LC337>)
        (nil)))

(insn 2815 2814 2816 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1695)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2816 2815 2817 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v/f:SI 221 [ rm_encoding ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2817 2816 2818 (set (reg:SI 1697)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3384 -1
     (nil))

(insn 2818 2817 2819 (set (reg:SI 1698)
        (lshiftrt:SI (reg:SI 1697)
            (const_int 1 [0x1]))) src/switch_core_media.c:3384 -1
     (nil))

(insn 2819 2818 2820 (set (reg:SI 1699)
        (zero_extend:SI (subreg:QI (reg:SI 1698) 0))) src/switch_core_media.c:3383 -1
     (nil))

(insn 2820 2819 2821 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 1699)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2821 2820 2822 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg/v:SI 199 [ remote_codec_rate ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2822 2821 2823 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg/v:SI 196 [ codec_ms ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2823 2822 2824 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 28 [0x1c])) [0 S4 A32])
        (reg/v:SI 222 [ map_bit_rate ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2824 2823 2825 (set (reg/f:SI 1700)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 8 [0x8])) [2 imp_629->iananame+0 S4 A32])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2825 2824 2826 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 32 [0x20])) [0 S4 A32])
        (reg/f:SI 1700)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2826 2825 2827 (set (reg:SI 1701)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 515 [ imp ])
                    (const_int 4 [0x4])) [0 imp_629->ianacode+0 S1 A32]))) src/switch_core_media.c:3383 -1
     (nil))

(insn 2827 2826 2828 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 36 [0x24])) [0 S4 A32])
        (reg:SI 1701)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2828 2827 2829 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 40 [0x28])) [0 S4 A32])
        (reg/v:SI 518 [ codec_rate ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2829 2828 2830 (set (reg:SI 1703)
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 28 [0x1c])) [4 imp_629->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2830 2829 2831 (set (reg:SI 1705)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2831 2830 2832 (parallel [
            (set (reg:SI 1704)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1703))
                            (sign_extend:DI (reg:SI 1705)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3383 -1
     (nil))

(insn 2832 2831 2833 (set (reg:SI 1706)
        (ashiftrt:SI (reg:SI 1704)
            (const_int 6 [0x6]))) src/switch_core_media.c:3383 -1
     (nil))

(insn 2833 2832 2834 (set (reg:SI 1707)
        (ashiftrt:SI (reg:SI 1703)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3383 -1
     (nil))

(insn 2834 2833 2835 (set (reg:SI 1702)
        (minus:SI (reg:SI 1706)
            (reg:SI 1707))) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1703)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 2835 2834 2836 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 44 [0x2c])) [0 S4 A32])
        (reg:SI 1702)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2836 2835 2837 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 48 [0x30])) [0 S4 A32])
        (reg/v:SI 517 [ bit_rate ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2837 2836 2838 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2838 2837 2839 (set (reg:SI 1 r1)
        (reg:SI 1687)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2839 2838 2840 (set (reg:SI 2 r2)
        (reg:SI 1691)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2840 2839 2841 (set (reg:SI 3 r3)
        (reg:SI 1693)) src/switch_core_media.c:3383 -1
     (nil))

(call_insn 2841 2840 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 56 [0x38]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3383 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; D.44889_642 = map_1728->rm_encoding;

(insn 2842 2841 0 (set (reg/f:SI 528 [ D.44889 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 8 [0x8])) [2 map_1728->rm_encoding+0 S4 A32])) src/switch_core_media.c:3386 -1
     (nil))

;; # DEBUG s => D.44889_642

(debug_insn 2843 2842 0 (var_location:SI s (const_int 0 [0])) src/switch_core_media.c:3386 -1
     (nil))
;; if (D.44889_642 == 0B)

(insn 2844 2843 2845 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 528 [ D.44889 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2845 2844 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 252

;; if (D.47919_1483 == 0)

(insn 2847 2846 2848 (set (reg:SI 1708)
        (zero_extend:SI (mem:QI (reg/f:SI 528 [ D.44889 ]) [0 *D.44889_642+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 2848 2847 2849 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1708)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2849 2848 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 253

;; 

(code_label 2850 2849 2851 1427 "" [0 uses])

(note 2851 2850 0 NOTE_INSN_BASIC_BLOCK)

;; D.44924_650 = (int) D.44856_649;

(insn 2852 2851 2853 (set (reg:SI 1709)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3386 -1
     (nil))

(insn 2853 2852 2854 (set (reg:SI 1710)
        (lshiftrt:SI (reg:SI 1709)
            (const_int 1 [0x1]))) src/switch_core_media.c:3386 -1
     (nil))

(insn 2854 2853 0 (set (reg:SI 534 [ D.44924 ])
        (zero_extend:SI (subreg:QI (reg:SI 1710) 0))) src/switch_core_media.c:3386 -1
     (nil))

;; if (D.44924_650 <= 95)

(insn 2855 2854 2856 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 534 [ D.44924 ])
            (const_int 95 [0x5f]))) src/switch_core_media.c:3386 -1
     (nil))

(jump_insn 2856 2855 0 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3386 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 254

;; match_655 = D.44924_650 == D.44928_654;

(insn 2858 2857 2859 (set (reg:SI 1711)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 515 [ imp ])
                    (const_int 4 [0x4])) [0 imp_629->ianacode+0 S1 A32]))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2859 2858 2860 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 534 [ D.44924 ])
            (reg:SI 1711))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2860 2859 2861 (set (reg:SI 1713)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2861 2860 2862 (set (reg:QI 1712)
        (subreg:QI (reg:SI 1713) 0)) src/switch_core_media.c:3387 -1
     (nil))

(insn 2862 2861 0 (set (reg/v:SI 134 [ match ])
        (zero_extend:SI (reg:QI 1712))) src/switch_core_media.c:3387 -1
     (nil))

;; # DEBUG match => match_655

(debug_insn 2863 2862 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3387 -1
     (nil))
;; prephitmp.1055_1879 = (_Bool) match_655;

(insn 2864 2863 0 (set (reg:SI 594 [ prephitmp.1055 ])
        (reg/v:SI 134 [ match ])) src/switch_core_media.c:3387 -1
     (nil))

;; prephitmp.1047_1734 = prephitmp.1055_1879 & pretmp.1054_1710;

(insn 2865 2864 2866 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 517 [ bit_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2866 2865 2867 (set (reg:SI 1715)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2867 2866 2868 (set (reg:QI 1714)
        (subreg:QI (reg:SI 1715) 0)) src/switch_core_media.c:3387 -1
     (nil))

(insn 2868 2867 2869 (set (reg:SI 1716)
        (and:SI (reg:SI 594 [ prephitmp.1055 ])
            (subreg:SI (reg:QI 1714) 0))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2869 2868 0 (set (reg:SI 954 [ prephitmp.1047 ])
        (zero_extend:SI (subreg:QI (reg:SI 1716) 0))) src/switch_core_media.c:3387 -1
     (nil))

;; Generating RTL for gimple basic block 255

;; 

(code_label 2872 2871 2873 1429 "" [0 uses])

(note 2873 2872 0 NOTE_INSN_BASIC_BLOCK)

;; D.44944_657 = strcasecmp (rm_encoding_130, D.44926_656);

(insn 2874 2873 2875 (set (reg:SI 1717)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 8 [0x8])) [2 imp_629->iananame+0 S4 A32])) src/switch_core_media.c:3389 -1
     (nil))

(insn 2875 2874 2876 (set (reg:SI 0 r0)
        (reg/v/f:SI 221 [ rm_encoding ])) src/switch_core_media.c:3389 -1
     (nil))

(insn 2876 2875 2877 (set (reg:SI 1 r1)
        (reg:SI 1717)) src/switch_core_media.c:3389 -1
     (nil))

(call_insn/i 2877 2876 2878 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3389 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2878 2877 0 (set (reg:SI 538 [ D.44944 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3389 -1
     (nil))

;; if (D.44944_657 == 0)

(insn 2879 2878 2880 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 538 [ D.44944 ])
            (const_int 0 [0]))) src/switch_core_media.c:3389 -1
     (nil))

(jump_insn 2880 2879 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3389 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 256

;; if (remote_codec_rate_1493 == codec_rate_632)

(insn 2882 2881 2883 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 199 [ remote_codec_rate ])
            (reg/v:SI 518 [ codec_rate ]))) src/switch_core_media.c:3390 -1
     (nil))

(jump_insn 2883 2882 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3390 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 257

;; prephitmp.1047_1810 = bit_rate_631 != 0;

(insn 2885 2884 2886 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 517 [ bit_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2886 2885 2887 (set (reg:SI 1719)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2887 2886 2888 (set (reg:QI 1718)
        (subreg:QI (reg:SI 1719) 0)) src/switch_core_media.c:3390 -1
     (nil))

(insn 2888 2887 0 (set (reg:SI 954 [ prephitmp.1047 ])
        (zero_extend:SI (reg:QI 1718))) src/switch_core_media.c:3390 -1
     (nil))

;; Generating RTL for gimple basic block 258

;; 

(code_label 2891 2890 2892 1432 "" [0 uses])

(note 2892 2891 0 NOTE_INSN_BASIC_BLOCK)

;; match_763 = fmtp_remote_codec_rate_99 == D.44947_658;

(insn 2893 2892 2894 (set (reg:SI 1721)
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 20 [0x14])) [4 imp_629->actual_samples_per_second+0 S4 A32])) src/switch_core_media.c:3390 -1
     (nil))

(insn 2894 2893 2895 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 201 [ fmtp_remote_codec_rate ])
            (reg:SI 1721))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2895 2894 2896 (set (reg:SI 1722)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2896 2895 2897 (set (reg:QI 1720)
        (subreg:QI (reg:SI 1722) 0)) src/switch_core_media.c:3390 -1
     (nil))

(insn 2897 2896 0 (set (reg/v:SI 134 [ match ])
        (zero_extend:SI (reg:QI 1720))) src/switch_core_media.c:3390 -1
     (nil))

;; prephitmp.1055_1735 = (_Bool) match_763;

(insn 2898 2897 0 (set (reg:SI 594 [ prephitmp.1055 ])
        (reg/v:SI 134 [ match ])) src/switch_core_media.c:3390 -1
     (nil))

;; prephitmp.1047_789 = prephitmp.1055_1735 & pretmp.1046_784;

(insn 2899 2898 2900 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 517 [ bit_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2900 2899 2901 (set (reg:SI 1724)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2901 2900 2902 (set (reg:QI 1723)
        (subreg:QI (reg:SI 1724) 0)) src/switch_core_media.c:3390 -1
     (nil))

(insn 2902 2901 2903 (set (reg:SI 1725)
        (and:SI (reg:SI 594 [ prephitmp.1055 ])
            (subreg:SI (reg:QI 1723) 0))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2903 2902 0 (set (reg:SI 954 [ prephitmp.1047 ])
        (zero_extend:SI (subreg:QI (reg:SI 1725) 0))) src/switch_core_media.c:3390 -1
     (nil))

;; Generating RTL for gimple basic block 259

;; 

(code_label 2904 2903 2905 1431 "" [0 uses])

(note 2905 2904 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG match => match_1678

(debug_insn 2906 2905 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3389 -1
     (nil))
;; if (fmtp_remote_codec_rate_99 != 0)

(insn 2907 2906 2908 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 201 [ fmtp_remote_codec_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3391 -1
     (nil))

(jump_insn 2908 2907 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3391 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 260

;; Generating RTL for gimple basic block 261

;; 

(code_label 2910 2909 2911 1430 "" [0 uses])

(note 2911 2910 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG remote_codec_rate => remote_codec_rate_96

(debug_insn 2912 2911 0 (var_location:SI remote_codec_rate (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => match_1

(debug_insn 2913 2912 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (prephitmp.1047_1806 != 0)

(insn 2914 2913 2915 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 954 [ prephitmp.1047 ])
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(jump_insn 2915 2914 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3396 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 262

;; if (D.44957_668 != 0)

(insn 2917 2916 2918 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 222 [ map_bit_rate ])
            (reg/v:SI 517 [ bit_rate ]))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2918 2917 2919 (set (reg:SI 1727)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2919 2918 2920 (set (reg:QI 1726)
        (subreg:QI (reg:SI 1727) 0)) src/switch_core_media.c:3396 -1
     (nil))

(insn 2920 2919 2921 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 222 [ map_bit_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2921 2920 2922 (set (reg:SI 1729)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2922 2921 2923 (set (reg:QI 1728)
        (subreg:QI (reg:SI 1729) 0)) src/switch_core_media.c:3396 -1
     (nil))

(insn 2923 2922 2924 (set (reg:SI 1730)
        (and:SI (subreg:SI (reg:QI 1726) 0)
            (subreg:SI (reg:QI 1728) 0))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2924 2923 2925 (set (reg:QI 1731)
        (subreg:QI (reg:SI 1730) 0)) src/switch_core_media.c:3396 -1
     (nil))

(insn 2925 2924 2926 (set (reg:SI 1732)
        (zero_extend:SI (reg:QI 1731))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2926 2925 2927 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1732)
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(jump_insn 2927 2926 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3396 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 263

;; D.44960_670 = strcasecmp (D.44889_642, "ilbc");

(insn 2929 2928 2930 (set (reg:SI 1734)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1054 [0x41e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1054 [0x41e])
            ] 29)) src/switch_core_media.c:3396 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
        (nil)))

(insn 2930 2929 2931 (set (reg:SI 1733)
        (reg:SI 1734)) src/switch_core_media.c:3396 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
        (nil)))

(insn 2931 2930 2932 (set (reg:SI 0 r0)
        (reg/f:SI 528 [ D.44889 ])) src/switch_core_media.c:3396 -1
     (nil))

(insn 2932 2931 2933 (set (reg:SI 1 r1)
        (reg:SI 1733)) src/switch_core_media.c:3396 -1
     (nil))

(call_insn/i 2933 2932 2934 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3396 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2934 2933 0 (set (reg:SI 543 [ D.44960 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3396 -1
     (nil))

;; if (D.44960_670 != 0)

(insn 2935 2934 2936 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 543 [ D.44960 ])
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(jump_insn 2936 2935 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3396 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 264

;; D.44963_672 = strcasecmp (D.44889_642, "isac");

(insn 2938 2937 2939 (set (reg:SI 1736)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1055 [0x41f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1055 [0x41f])
            ] 29)) src/switch_core_media.c:3397 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
        (nil)))

(insn 2939 2938 2940 (set (reg:SI 1735)
        (reg:SI 1736)) src/switch_core_media.c:3397 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
        (nil)))

(insn 2940 2939 2941 (set (reg:SI 0 r0)
        (reg/f:SI 528 [ D.44889 ])) src/switch_core_media.c:3397 -1
     (nil))

(insn 2941 2940 2942 (set (reg:SI 1 r1)
        (reg:SI 1735)) src/switch_core_media.c:3397 -1
     (nil))

(call_insn/i 2942 2941 2943 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3397 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2943 2942 0 (set (reg:SI 545 [ D.44963 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3397 -1
     (nil))

;; if (D.44963_672 != 0)

(insn 2944 2943 2945 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 545 [ D.44963 ])
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(jump_insn 2945 2944 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3396 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 265

;; 

(code_label 2946 2945 2947 1433 "" [0 uses])

(note 2947 2946 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG match => match_2

(debug_insn 2948 2947 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (D.44969_676 != 0)

(insn 2949 2948 2950 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 199 [ remote_codec_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2950 2949 2951 (set (reg:SI 1738)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2951 2950 2952 (set (reg:QI 1737)
        (subreg:QI (reg:SI 1738) 0)) src/switch_core_media.c:3402 -1
     (nil))

(insn 2952 2951 2953 (set (reg:SI 1739)
        (and:SI (reg:SI 594 [ prephitmp.1055 ])
            (subreg:SI (reg:QI 1737) 0))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2953 2952 2954 (set (reg:QI 1740)
        (subreg:QI (reg:SI 1739) 0)) src/switch_core_media.c:3402 -1
     (nil))

(insn 2954 2953 2955 (set (reg:SI 1741)
        (zero_extend:SI (reg:QI 1740))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2955 2954 2956 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1741)
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(jump_insn 2956 2955 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3402 -1
     (expr_list:REG_BR_PROB (const_int 4676 [0x1244])
        (nil)))

;; Generating RTL for gimple basic block 266

;; if (D.44974_679 != 0)

(insn 2958 2957 2959 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 199 [ remote_codec_rate ])
            (reg/v:SI 518 [ codec_rate ]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2959 2958 2960 (set (reg:SI 1743)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2960 2959 2961 (set (reg:QI 1742)
        (subreg:QI (reg:SI 1743) 0)) src/switch_core_media.c:3402 -1
     (nil))

(insn 2961 2960 2962 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 518 [ codec_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2962 2961 2963 (set (reg:SI 1745)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2963 2962 2964 (set (reg:QI 1744)
        (subreg:QI (reg:SI 1745) 0)) src/switch_core_media.c:3402 -1
     (nil))

(insn 2964 2963 2965 (set (reg:SI 1746)
        (and:SI (subreg:SI (reg:QI 1742) 0)
            (subreg:SI (reg:QI 1744) 0))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2965 2964 2966 (set (reg:QI 1747)
        (subreg:QI (reg:SI 1746) 0)) src/switch_core_media.c:3402 -1
     (nil))

(insn 2966 2965 2967 (set (reg:SI 1748)
        (zero_extend:SI (reg:QI 1747))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2967 2966 2968 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1748)
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(jump_insn 2968 2967 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3402 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 267

;; D.44977_681 = strcasecmp (D.44889_642, "pcma");

(insn 2970 2969 2971 (set (reg:SI 1750)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC338") [flags 0x82]  <var_decl 0x404181e0 *.LC338>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1056 [0x420])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1056 [0x420])
            ] 29)) src/switch_core_media.c:3402 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC338") [flags 0x82]  <var_decl 0x404181e0 *.LC338>)
        (nil)))

(insn 2971 2970 2972 (set (reg:SI 1749)
        (reg:SI 1750)) src/switch_core_media.c:3402 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC338") [flags 0x82]  <var_decl 0x404181e0 *.LC338>)
        (nil)))

(insn 2972 2971 2973 (set (reg:SI 0 r0)
        (reg/f:SI 528 [ D.44889 ])) src/switch_core_media.c:3402 -1
     (nil))

(insn 2973 2972 2974 (set (reg:SI 1 r1)
        (reg:SI 1749)) src/switch_core_media.c:3402 -1
     (nil))

(call_insn/i 2974 2973 2975 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3402 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2975 2974 0 (set (reg:SI 551 [ D.44977 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3402 -1
     (nil))

;; if (D.44977_681 == 0)

(insn 2976 2975 2977 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 551 [ D.44977 ])
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(jump_insn 2977 2976 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3402 -1
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))

;; Generating RTL for gimple basic block 268

;; D.44979_683 = strcasecmp (D.44889_642, "pcmu");

(insn 2979 2978 2980 (set (reg:SI 1752)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC339") [flags 0x82]  <var_decl 0x40418240 *.LC339>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1057 [0x421])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1057 [0x421])
            ] 29)) src/switch_core_media.c:3403 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC339") [flags 0x82]  <var_decl 0x40418240 *.LC339>)
        (nil)))

(insn 2980 2979 2981 (set (reg:SI 1751)
        (reg:SI 1752)) src/switch_core_media.c:3403 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC339") [flags 0x82]  <var_decl 0x40418240 *.LC339>)
        (nil)))

(insn 2981 2980 2982 (set (reg:SI 0 r0)
        (reg/f:SI 528 [ D.44889 ])) src/switch_core_media.c:3403 -1
     (nil))

(insn 2982 2981 2983 (set (reg:SI 1 r1)
        (reg:SI 1751)) src/switch_core_media.c:3403 -1
     (nil))

(call_insn/i 2983 2982 2984 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3403 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2984 2983 0 (set (reg:SI 552 [ D.44979 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3403 -1
     (nil))

;; if (D.44979_683 == 0)

(insn 2985 2984 2986 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 552 [ D.44979 ])
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(jump_insn 2986 2985 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3402 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 269

;; 

(code_label 2987 2986 2988 1436 "" [0 uses])

(note 2988 2987 0 NOTE_INSN_BASIC_BLOCK)

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3405, session_161(D), 7, "sampling rates have to match for G.711\n");

(insn 2989 2988 2990 (set (reg:SI 1754)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1058 [0x422])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1058 [0x422])
            ] 29)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2990 2989 2991 (set (reg:SI 1753)
        (reg:SI 1754)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2991 2990 2992 (set (reg:SI 1756)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1059 [0x423])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1059 [0x423])
            ] 29)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2992 2991 2993 (set (reg/f:SI 1755)
        (reg:SI 1756)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2993 2992 2994 (set (reg:SI 1758)
        (plus:SI (reg/f:SI 1755)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3405 -1
     (nil))

(insn 2994 2993 2995 (set (reg:SI 1757)
        (plus:SI (reg:SI 1758)
            (const_int 8 [0x8]))) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1755)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2995 2994 2996 (set (reg:SI 1759)
        (const_int 3405 [0xd4d])) src/switch_core_media.c:3405 -1
     (nil))

(insn 2996 2995 2997 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3405 -1
     (nil))

(insn 2997 2996 2998 (set (reg:SI 1760)
        (const_int 7 [0x7])) src/switch_core_media.c:3405 -1
     (nil))

(insn 2998 2997 2999 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1760)) src/switch_core_media.c:3405 -1
     (nil))

(insn 2999 2998 3000 (set (reg:SI 1762)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC340") [flags 0x82]  <var_decl 0x404182a0 *.LC340>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1060 [0x424])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1060 [0x424])
            ] 29)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC340") [flags 0x82]  <var_decl 0x404182a0 *.LC340>)
        (nil)))

(insn 3000 2999 3001 (set (reg/f:SI 1761)
        (reg:SI 1762)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC340") [flags 0x82]  <var_decl 0x404182a0 *.LC340>)
        (nil)))

(insn 3001 3000 3002 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1761)) src/switch_core_media.c:3405 -1
     (nil))

(insn 3002 3001 3003 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3405 -1
     (nil))

(insn 3003 3002 3004 (set (reg:SI 1 r1)
        (reg:SI 1753)) src/switch_core_media.c:3405 -1
     (nil))

(insn 3004 3003 3005 (set (reg:SI 2 r2)
        (reg:SI 1757)) src/switch_core_media.c:3405 -1
     (nil))

(insn 3005 3004 3006 (set (reg:SI 3 r3)
        (reg:SI 1759)) src/switch_core_media.c:3405 -1
     (nil))

(call_insn 3006 3005 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3405 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG match => 0

(debug_insn 3007 3006 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3406 -1
     (nil))
;; # DEBUG match => 0

(debug_insn 3008 3007 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 270

;; 

(code_label 3011 3010 3012 1434 "" [0 uses])

(note 3012 3011 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG match => match_2

(debug_insn 3013 3012 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (match_2 != 0)

(insn 3014 3013 3015 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ match ])
            (const_int 0 [0]))) src/switch_core_media.c:3409 -1
     (nil))

(jump_insn 3015 3014 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3409 -1
     (expr_list:REG_BR_PROB (const_int 6352 [0x18d0])
        (nil)))

;; Generating RTL for gimple basic block 271

;; 

(code_label 3016 3015 3017 1435 "" [0 uses])

(note 3017 3016 0 NOTE_INSN_BASIC_BLOCK)

;; if (scrooge_80 != 0)

(insn 3018 3017 3019 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ scrooge ])
            (const_int 0 [0]))) src/switch_core_media.c:3410 -1
     (nil))

(jump_insn 3019 3018 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3410 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 272

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3411, session_161(D), 7, "Bah HUMBUG! Sticking with %s@%uh@%ui\n", D.44926_685, D.44984_686, D.44930_688);

(insn 3021 3020 3022 (set (reg:SI 1764)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1061 [0x425])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1061 [0x425])
            ] 29)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3022 3021 3023 (set (reg:SI 1763)
        (reg:SI 1764)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3023 3022 3024 (set (reg:SI 1766)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1062 [0x426])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1062 [0x426])
            ] 29)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3024 3023 3025 (set (reg/f:SI 1765)
        (reg:SI 1766)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3025 3024 3026 (set (reg:SI 1768)
        (plus:SI (reg/f:SI 1765)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3411 -1
     (nil))

(insn 3026 3025 3027 (set (reg:SI 1767)
        (plus:SI (reg:SI 1768)
            (const_int 8 [0x8]))) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1765)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3027 3026 3028 (set (reg:SI 1769)
        (const_int 3411 [0xd53])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3028 3027 3029 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3029 3028 3030 (set (reg:SI 1770)
        (const_int 7 [0x7])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3030 3029 3031 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1770)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3031 3030 3032 (set (reg:SI 1772)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC341") [flags 0x82]  <var_decl 0x40418360 *.LC341>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1063 [0x427])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1063 [0x427])
            ] 29)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC341") [flags 0x82]  <var_decl 0x40418360 *.LC341>)
        (nil)))

(insn 3032 3031 3033 (set (reg/f:SI 1771)
        (reg:SI 1772)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC341") [flags 0x82]  <var_decl 0x40418360 *.LC341>)
        (nil)))

(insn 3033 3032 3034 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1771)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3034 3033 3035 (set (reg/f:SI 1773)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 8 [0x8])) [2 imp_629->iananame+0 S4 A32])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3035 3034 3036 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 1773)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3036 3035 3037 (set (reg:SI 1774)
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 16 [0x10])) [4 imp_629->samples_per_second+0 S4 A32])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3037 3036 3038 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 1774)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3038 3037 3039 (set (reg:SI 1776)
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 28 [0x1c])) [4 imp_629->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3039 3038 3040 (set (reg:SI 1778)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3040 3039 3041 (parallel [
            (set (reg:SI 1777)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1776))
                            (sign_extend:DI (reg:SI 1778)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3411 -1
     (nil))

(insn 3041 3040 3042 (set (reg:SI 1779)
        (ashiftrt:SI (reg:SI 1777)
            (const_int 6 [0x6]))) src/switch_core_media.c:3411 -1
     (nil))

(insn 3042 3041 3043 (set (reg:SI 1780)
        (ashiftrt:SI (reg:SI 1776)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3411 -1
     (nil))

(insn 3043 3042 3044 (set (reg:SI 1775)
        (minus:SI (reg:SI 1779)
            (reg:SI 1780))) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1776)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 3044 3043 3045 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg:SI 1775)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3045 3044 3046 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3046 3045 3047 (set (reg:SI 1 r1)
        (reg:SI 1763)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3047 3046 3048 (set (reg:SI 2 r2)
        (reg:SI 1767)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3048 3047 3049 (set (reg:SI 3 r3)
        (reg:SI 1769)) src/switch_core_media.c:3411 -1
     (nil))

(call_insn 3049 3048 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 24 [0x18]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3411 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 273

;; 

(code_label 3052 3051 3053 1437 "" [0 uses])

(note 3053 3052 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44991_691 != 0)

(insn 3054 3053 3055 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 196 [ codec_ms ])
            (const_int 0 [0]))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3055 3054 3056 (set (reg:SI 1782)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3056 3055 3057 (set (reg:QI 1781)
        (subreg:QI (reg:SI 1782) 0)) src/switch_core_media.c:3414 -1
     (nil))

(insn 3057 3056 3058 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ ptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3058 3057 3059 (set (reg:SI 1784)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3059 3058 3060 (set (reg:QI 1783)
        (subreg:QI (reg:SI 1784) 0)) src/switch_core_media.c:3414 -1
     (nil))

(insn 3060 3059 3061 (set (reg:SI 1785)
        (and:SI (subreg:SI (reg:QI 1781) 0)
            (subreg:SI (reg:QI 1783) 0))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3061 3060 3062 (set (reg:QI 1786)
        (subreg:QI (reg:SI 1785) 0)) src/switch_core_media.c:3414 -1
     (nil))

(insn 3062 3061 3063 (set (reg:SI 1787)
        (zero_extend:SI (reg:QI 1786))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3063 3062 3064 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1787)
            (const_int 0 [0]))) src/switch_core_media.c:3414 -1
     (nil))

(jump_insn 3064 3063 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3414 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 274

;; prephitmp.1043_693 = imp_629->microseconds_per_packet;

(insn 3066 3065 0 (set (reg:SI 561 [ prephitmp.1043 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 28 [0x1c])) [4 imp_629->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3414 -1
     (nil))

;; if (D.44993_692 != prephitmp.1043_693)

(insn 3067 3066 3068 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 560 [ D.44993 ])
            (reg:SI 561 [ prephitmp.1043 ]))) src/switch_core_media.c:3414 -1
     (nil))

(jump_insn 3068 3067 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3414 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 275

;; 

(code_label 3069 3068 3070 1439 "" [0 uses])

(note 3070 3069 0 NOTE_INSN_BASIC_BLOCK)

;; if (remote_codec_rate_96 != codec_rate_632)

(insn 3071 3070 3072 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 199 [ remote_codec_rate ])
            (reg/v:SI 518 [ codec_rate ]))) src/switch_core_media.c:3414 -1
     (nil))

(jump_insn 3072 3071 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3414 -1
     (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))

;; Generating RTL for gimple basic block 276

;; prephitmp.1043_1736 = imp_629->microseconds_per_packet;

(insn 3074 3073 0 (set (reg:SI 561 [ prephitmp.1043 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 28 [0x1c])) [4 imp_629->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3414 -1
     (nil))

;; Generating RTL for gimple basic block 277

;; 

(code_label 3075 3074 3076 1440 "" [0 uses])

(note 3076 3075 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG match => 0

(debug_insn 3077 3076 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3416 -1
     (nil))
;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3418, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] is saved as a near-match\n", D.44926_695, D.44928_697, codec_rate_632, D.44930_699, bit_rate_631);

(insn 3078 3077 3079 (set (reg:SI 1789)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1064 [0x428])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1064 [0x428])
            ] 29)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3079 3078 3080 (set (reg:SI 1788)
        (reg:SI 1789)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3080 3079 3081 (set (reg:SI 1791)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1065 [0x429])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1065 [0x429])
            ] 29)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3081 3080 3082 (set (reg/f:SI 1790)
        (reg:SI 1791)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3082 3081 3083 (set (reg:SI 1793)
        (plus:SI (reg/f:SI 1790)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3418 -1
     (nil))

(insn 3083 3082 3084 (set (reg:SI 1792)
        (plus:SI (reg:SI 1793)
            (const_int 8 [0x8]))) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1790)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3084 3083 3085 (set (reg:SI 1794)
        (const_int 3418 [0xd5a])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3085 3084 3086 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3086 3085 3087 (set (reg:SI 1795)
        (const_int 7 [0x7])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3087 3086 3088 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1795)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3088 3087 3089 (set (reg:SI 1797)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC342") [flags 0x82]  <var_decl 0x404183c0 *.LC342>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1066 [0x42a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1066 [0x42a])
            ] 29)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC342") [flags 0x82]  <var_decl 0x404183c0 *.LC342>)
        (nil)))

(insn 3089 3088 3090 (set (reg/f:SI 1796)
        (reg:SI 1797)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC342") [flags 0x82]  <var_decl 0x404183c0 *.LC342>)
        (nil)))

(insn 3090 3089 3091 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1796)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3091 3090 3092 (set (reg/f:SI 1798)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 8 [0x8])) [2 imp_629->iananame+0 S4 A32])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3092 3091 3093 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 1798)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3093 3092 3094 (set (reg:SI 1799)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 515 [ imp ])
                    (const_int 4 [0x4])) [0 imp_629->ianacode+0 S1 A32]))) src/switch_core_media.c:3418 -1
     (nil))

(insn 3094 3093 3095 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 1799)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3095 3094 3096 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg/v:SI 518 [ codec_rate ])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3096 3095 3097 (set (reg:SI 1802)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3097 3096 3098 (parallel [
            (set (reg:SI 1801)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 561 [ prephitmp.1043 ]))
                            (sign_extend:DI (reg:SI 1802)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3418 -1
     (nil))

(insn 3098 3097 3099 (set (reg:SI 1803)
        (ashiftrt:SI (reg:SI 1801)
            (const_int 6 [0x6]))) src/switch_core_media.c:3418 -1
     (nil))

(insn 3099 3098 3100 (set (reg:SI 1804)
        (ashiftrt:SI (reg:SI 561 [ prephitmp.1043 ])
            (const_int 31 [0x1f]))) src/switch_core_media.c:3418 -1
     (nil))

(insn 3100 3099 3101 (set (reg:SI 1800)
        (minus:SI (reg:SI 1803)
            (reg:SI 1804))) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 561 [ prephitmp.1043 ])
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 3101 3100 3102 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg:SI 1800)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3102 3101 3103 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 28 [0x1c])) [0 S4 A32])
        (reg/v:SI 517 [ bit_rate ])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3103 3102 3104 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3104 3103 3105 (set (reg:SI 1 r1)
        (reg:SI 1788)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3105 3104 3106 (set (reg:SI 2 r2)
        (reg:SI 1792)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3106 3105 3107 (set (reg:SI 3 r3)
        (reg:SI 1794)) src/switch_core_media.c:3418 -1
     (nil))

(call_insn 3107 3106 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 32 [0x20]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3418 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; near_matches[nm_idx_1139].codec_idx = i_1622;

(insn 3108 3107 3109 (set (reg:SI 1805)
        (const_int -568 [0xfffffffffffffdc8])) src/switch_core_media.c:3422 -1
     (nil))

(insn 3109 3108 3110 (set (reg:SI 1806)
        (ashift:SI (reg/v:SI 211 [ nm_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3422 -1
     (nil))

(insn 3110 3109 3111 (set (reg:SI 1807)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1806))) src/switch_core_media.c:3422 -1
     (nil))

(insn 3111 3110 3112 (set (reg/f:SI 1808)
        (plus:SI (reg:SI 1807)
            (reg:SI 1805))) src/switch_core_media.c:3422 -1
     (nil))

(insn 3112 3111 0 (set (mem/s:SI (plus:SI (reg/f:SI 1808)
                (const_int 4 [0x4])) [4 near_matches[nm_idx_1139].codec_idx+0 S4 A32])
        (reg/v:SI 573 [ i ])) src/switch_core_media.c:3422 -1
     (nil))

;; near_matches[nm_idx_1139].rate = remote_codec_rate.92_700;

(insn 3113 3112 3114 (set (reg:SI 1809)
        (const_int -568 [0xfffffffffffffdc8])) src/switch_core_media.c:3423 -1
     (nil))

(insn 3114 3113 3115 (set (reg:SI 1810)
        (ashift:SI (reg/v:SI 211 [ nm_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3423 -1
     (nil))

(insn 3115 3114 3116 (set (reg:SI 1811)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1810))) src/switch_core_media.c:3423 -1
     (nil))

(insn 3116 3115 3117 (set (reg/f:SI 1812)
        (plus:SI (reg:SI 1811)
            (reg:SI 1809))) src/switch_core_media.c:3423 -1
     (nil))

(insn 3117 3116 0 (set (mem/s:SI (reg/f:SI 1812) [4 near_matches[nm_idx_1139].rate+0 S4 A64])
        (reg/v:SI 199 [ remote_codec_rate ])) src/switch_core_media.c:3423 -1
     (nil))

;; near_matches[nm_idx_1139].imp = imp_629;

(insn 3118 3117 3119 (set (reg:SI 1813)
        (const_int -576 [0xfffffffffffffdc0])) src/switch_core_media.c:3424 -1
     (nil))

(insn 3119 3118 3120 (set (reg:SI 1814)
        (ashift:SI (reg/v:SI 211 [ nm_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3424 -1
     (nil))

(insn 3120 3119 3121 (set (reg:SI 1815)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1814))) src/switch_core_media.c:3424 -1
     (nil))

(insn 3121 3120 3122 (set (reg/f:SI 1816)
        (plus:SI (reg:SI 1815)
            (reg:SI 1813))) src/switch_core_media.c:3424 -1
     (nil))

(insn 3122 3121 0 (set (mem/s/f:SI (reg/f:SI 1816) [2 near_matches[nm_idx_1139].imp+0 S4 A64])
        (reg/v/f:SI 515 [ imp ])) src/switch_core_media.c:3424 -1
     (nil))

;; near_matches[nm_idx_1139].map = map_1728;

(insn 3123 3122 3124 (set (reg:SI 1817)
        (const_int -576 [0xfffffffffffffdc0])) src/switch_core_media.c:3425 -1
     (nil))

(insn 3124 3123 3125 (set (reg:SI 1818)
        (ashift:SI (reg/v:SI 211 [ nm_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3425 -1
     (nil))

(insn 3125 3124 3126 (set (reg:SI 1819)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1818))) src/switch_core_media.c:3425 -1
     (nil))

(insn 3126 3125 3127 (set (reg/f:SI 1820)
        (plus:SI (reg:SI 1819)
            (reg:SI 1817))) src/switch_core_media.c:3425 -1
     (nil))

(insn 3127 3126 0 (set (mem/s/f:SI (plus:SI (reg/f:SI 1820)
                (const_int 4 [0x4])) [2 near_matches[nm_idx_1139].map+0 S4 A32])
        (reg/v/f:SI 283 [ map ])) src/switch_core_media.c:3425 -1
     (nil))

;; nm_idx_701 = nm_idx_1139 + 1;

(insn 3128 3127 0 (set (reg/v:SI 211 [ nm_idx ])
        (plus:SI (reg/v:SI 211 [ nm_idx ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3426 -1
     (nil))

;; # DEBUG nm_idx => nm_idx_701

(debug_insn 3129 3128 0 (var_location:SI nm_idx (const_int 0 [0])) src/switch_core_media.c:3426 -1
     (nil))
;; Generating RTL for gimple basic block 278

;; 

(code_label 3132 3131 3133 1438 "" [0 uses])

(note 3133 3132 0 NOTE_INSN_BASIC_BLOCK)

;; matches[m_idx_1487].codec_idx = i_1622;

(insn 3134 3133 3135 (set (reg:SI 1821)
        (const_int -1048 [0xfffffffffffffbe8])) src/switch_core_media.c:3431 -1
     (nil))

(insn 3135 3134 3136 (set (reg:SI 1822)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3431 -1
     (nil))

(insn 3136 3135 3137 (set (reg:SI 1823)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1822))) src/switch_core_media.c:3431 -1
     (nil))

(insn 3137 3136 3138 (set (reg/f:SI 1824)
        (plus:SI (reg:SI 1823)
            (reg:SI 1821))) src/switch_core_media.c:3431 -1
     (nil))

(insn 3138 3137 0 (set (mem/s:SI (plus:SI (reg/f:SI 1824)
                (const_int 4 [0x4])) [4 matches[m_idx_1487].codec_idx+0 S4 A32])
        (reg/v:SI 573 [ i ])) src/switch_core_media.c:3431 -1
     (nil))

;; matches[m_idx_1487].rate = codec_rate.94_702;

(insn 3139 3138 3140 (set (reg:SI 1825)
        (const_int -1048 [0xfffffffffffffbe8])) src/switch_core_media.c:3432 -1
     (nil))

(insn 3140 3139 3141 (set (reg:SI 1826)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3432 -1
     (nil))

(insn 3141 3140 3142 (set (reg:SI 1827)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1826))) src/switch_core_media.c:3432 -1
     (nil))

(insn 3142 3141 3143 (set (reg/f:SI 1828)
        (plus:SI (reg:SI 1827)
            (reg:SI 1825))) src/switch_core_media.c:3432 -1
     (nil))

(insn 3143 3142 0 (set (mem/s:SI (reg/f:SI 1828) [4 matches[m_idx_1487].rate+0 S4 A64])
        (reg/v:SI 518 [ codec_rate ])) src/switch_core_media.c:3432 -1
     (nil))

;; matches[m_idx_1487].imp = imp_629;

(insn 3144 3143 3145 (set (reg:SI 1829)
        (const_int -1056 [0xfffffffffffffbe0])) src/switch_core_media.c:3433 -1
     (nil))

(insn 3145 3144 3146 (set (reg:SI 1830)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3433 -1
     (nil))

(insn 3146 3145 3147 (set (reg:SI 1831)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1830))) src/switch_core_media.c:3433 -1
     (nil))

(insn 3147 3146 3148 (set (reg/f:SI 1832)
        (plus:SI (reg:SI 1831)
            (reg:SI 1829))) src/switch_core_media.c:3433 -1
     (nil))

(insn 3148 3147 0 (set (mem/s/f:SI (reg/f:SI 1832) [2 matches[m_idx_1487].imp+0 S4 A64])
        (reg/v/f:SI 515 [ imp ])) src/switch_core_media.c:3433 -1
     (nil))

;; matches[m_idx_1487].map = map_1728;

(insn 3149 3148 3150 (set (reg:SI 1833)
        (const_int -1056 [0xfffffffffffffbe0])) src/switch_core_media.c:3434 -1
     (nil))

(insn 3150 3149 3151 (set (reg:SI 1834)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3434 -1
     (nil))

(insn 3151 3150 3152 (set (reg:SI 1835)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1834))) src/switch_core_media.c:3434 -1
     (nil))

(insn 3152 3151 3153 (set (reg/f:SI 1836)
        (plus:SI (reg:SI 1835)
            (reg:SI 1833))) src/switch_core_media.c:3434 -1
     (nil))

(insn 3153 3152 0 (set (mem/s/f:SI (plus:SI (reg/f:SI 1836)
                (const_int 4 [0x4])) [2 matches[m_idx_1487].map+0 S4 A32])
        (reg/v/f:SI 283 [ map ])) src/switch_core_media.c:3434 -1
     (nil))

;; m_idx_703 = m_idx_1487 + 1;

(insn 3154 3153 0 (set (reg/v:SI 202 [ m_idx ])
        (plus:SI (reg/v:SI 202 [ m_idx ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3435 -1
     (nil))

;; # DEBUG m_idx => m_idx_703

(debug_insn 3155 3154 0 (var_location:SI m_idx (const_int 0 [0])) src/switch_core_media.c:3435 -1
     (nil))
;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3437, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] ++++ is saved as a match\n", D.44926_704, D.44928_706, codec_rate_632, D.44930_708, bit_rate_631);

(insn 3156 3155 3157 (set (reg:SI 1838)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1067 [0x42b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1067 [0x42b])
            ] 29)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3157 3156 3158 (set (reg:SI 1837)
        (reg:SI 1838)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3158 3157 3159 (set (reg:SI 1840)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1068 [0x42c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1068 [0x42c])
            ] 29)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3159 3158 3160 (set (reg/f:SI 1839)
        (reg:SI 1840)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3160 3159 3161 (set (reg:SI 1842)
        (plus:SI (reg/f:SI 1839)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3437 -1
     (nil))

(insn 3161 3160 3162 (set (reg:SI 1841)
        (plus:SI (reg:SI 1842)
            (const_int 8 [0x8]))) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1839)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3162 3161 3163 (set (reg:SI 1843)
        (const_int 3437 [0xd6d])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3163 3162 3164 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3164 3163 3165 (set (reg:SI 1844)
        (const_int 7 [0x7])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3165 3164 3166 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1844)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3166 3165 3167 (set (reg:SI 1846)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC343") [flags 0x82]  <var_decl 0x40418420 *.LC343>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1069 [0x42d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1069 [0x42d])
            ] 29)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC343") [flags 0x82]  <var_decl 0x40418420 *.LC343>)
        (nil)))

(insn 3167 3166 3168 (set (reg/f:SI 1845)
        (reg:SI 1846)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC343") [flags 0x82]  <var_decl 0x40418420 *.LC343>)
        (nil)))

(insn 3168 3167 3169 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1845)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3169 3168 3170 (set (reg/f:SI 1847)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 8 [0x8])) [2 imp_629->iananame+0 S4 A32])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3170 3169 3171 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 1847)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3171 3170 3172 (set (reg:SI 1848)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 515 [ imp ])
                    (const_int 4 [0x4])) [0 imp_629->ianacode+0 S1 A32]))) src/switch_core_media.c:3437 -1
     (nil))

(insn 3172 3171 3173 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 1848)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3173 3172 3174 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg/v:SI 518 [ codec_rate ])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3174 3173 3175 (set (reg:SI 1850)
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 28 [0x1c])) [4 imp_629->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3175 3174 3176 (set (reg:SI 1852)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3176 3175 3177 (parallel [
            (set (reg:SI 1851)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1850))
                            (sign_extend:DI (reg:SI 1852)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3437 -1
     (nil))

(insn 3177 3176 3178 (set (reg:SI 1853)
        (ashiftrt:SI (reg:SI 1851)
            (const_int 6 [0x6]))) src/switch_core_media.c:3437 -1
     (nil))

(insn 3178 3177 3179 (set (reg:SI 1854)
        (ashiftrt:SI (reg:SI 1850)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3437 -1
     (nil))

(insn 3179 3178 3180 (set (reg:SI 1849)
        (minus:SI (reg:SI 1853)
            (reg:SI 1854))) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1850)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 3180 3179 3181 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg:SI 1849)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3181 3180 3182 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 28 [0x1c])) [0 S4 A32])
        (reg/v:SI 517 [ bit_rate ])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3182 3181 3183 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3183 3182 3184 (set (reg:SI 1 r1)
        (reg:SI 1837)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3184 3183 3185 (set (reg:SI 2 r2)
        (reg:SI 1841)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3185 3184 3186 (set (reg:SI 3 r3)
        (reg:SI 1843)) src/switch_core_media.c:3437 -1
     (nil))

(call_insn 3186 3185 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 32 [0x20]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3437 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; if (m_idx_703 > 29)

(insn 3187 3186 3188 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (const_int 29 [0x1d]))) src/switch_core_media.c:3441 -1
     (nil))

(jump_insn 3188 3187 0 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3441 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 279

;; 

(code_label 3189 3188 3190 1426 "" [0 uses])

(note 3190 3189 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG nm_idx => nm_idx_115

(debug_insn 3191 3190 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_100

(debug_insn 3192 3191 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG remote_codec_rate => remote_codec_rate_97

(debug_insn 3193 3192 0 (var_location:SI remote_codec_rate (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => 0

(debug_insn 3194 3193 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; i_710 = i_1622 + 1;

(insn 3195 3194 0 (set (reg/v:SI 573 [ i ])
        (plus:SI (reg/v:SI 573 [ i ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3374 -1
     (nil))

;; # DEBUG i => i_710

(debug_insn 3196 3195 0 (var_location:SI i (const_int 0 [0])) src/switch_core_media.c:3374 -1
     (nil))
;; # DEBUG i => i_710

(debug_insn 3197 3196 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; # DEBUG nm_idx => nm_idx_115

(debug_insn 3198 3197 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_100

(debug_insn 3199 3198 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG remote_codec_rate => remote_codec_rate_97

(debug_insn 3200 3199 0 (var_location:SI remote_codec_rate (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => 0

(debug_insn 3201 3200 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (D.44999_625 != 0)

(insn 3203 3201 3204 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 194 [ total_codecs ])
            (reg/v:SI 573 [ i ]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3204 3203 3205 (set (reg:SI 1856)
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3205 3204 3206 (set (reg:QI 1855)
        (subreg:QI (reg:SI 1856) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 3206 3205 3207 (set (reg:SI 1858)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3374 -1
     (nil))

(insn 3207 3206 3208 (set (reg/f:SI 1857)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1858)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3374 -1
     (nil))

(insn 3208 3207 3209 (set (reg:SI 1860)
        (mem/s:SI (plus:SI (reg/f:SI 1857)
                (const_int 128 [0x80])) [4 D.44471_621->num_codecs+0 S4 A32])) src/switch_core_media.c:3374 -1
     (nil))

(insn 3209 3208 3210 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1860)
            (reg/v:SI 573 [ i ]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3210 3209 3211 (set (reg:SI 1861)
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3211 3210 3212 (set (reg:QI 1859)
        (subreg:QI (reg:SI 1861) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 3212 3211 3213 (set (reg:SI 1862)
        (and:SI (subreg:SI (reg:QI 1855) 0)
            (subreg:SI (reg:QI 1859) 0))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3213 3212 3214 (set (reg:QI 1863)
        (subreg:QI (reg:SI 1862) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 3214 3213 3215 (set (reg:SI 1864)
        (zero_extend:SI (reg:QI 1863))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3215 3214 3216 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1864)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(jump_insn 3216 3215 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3202)
            (pc))) src/switch_core_media.c:3374 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 280

;; 

(code_label 3217 3216 3218 1425 "" [0 uses])

(note 3218 3217 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG m_idx => m_idx_102

(debug_insn 3219 3218 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => 0

(debug_insn 3220 3219 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (m_idx_102 > 29)

(insn 3221 3220 3222 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (const_int 29 [0x1d]))) src/switch_core_media.c:3449 -1
     (nil))

(jump_insn 3222 3221 0 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3449 -1
     (expr_list:REG_BR_PROB (const_int 0 [0])
        (nil)))

;; Generating RTL for gimple basic block 281

;; 

(code_label 3223 3222 3224 1413 "" [0 uses])

(note 3224 3223 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG nm_idx => nm_idx_117

(debug_insn 3225 3224 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_103

(debug_insn 3226 3225 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG codec_ms => codec_ms_91

(debug_insn 3227 3226 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; # DEBUG x => NULL

(debug_insn 3228 3227 0 (var_location:SI x (const_int 0 [0])) -1
     (nil))
;; # DEBUG cng_pt => cng_pt_24

(debug_insn 3229 3228 0 (var_location:QI cng_pt (const_int 0 [0])) -1
     (nil))
;; # DEBUG best_te => best_te_19

(debug_insn 3230 3229 0 (var_location:QI best_te (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => match_7

(debug_insn 3231 3230 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; map_711 = map_1728->rm_next;

(insn 3232 3231 0 (set (reg/v/f:SI 283 [ map ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 4 [0x4])) [2 map_1728->rm_next+0 S4 A32])) src/switch_core_media.c:3295 -1
     (nil))

;; # DEBUG map => map_711

(debug_insn 3233 3232 0 (var_location:SI map (const_int 0 [0])) src/switch_core_media.c:3295 -1
     (nil))
;; # DEBUG map => map_711

(debug_insn 3234 3233 0 (var_location:SI map (const_int 0 [0])) -1
     (nil))
;; # DEBUG nm_idx => nm_idx_117

(debug_insn 3235 3234 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_103

(debug_insn 3236 3235 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG codec_ms => codec_ms_91

(debug_insn 3237 3236 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; # DEBUG x => NULL

(debug_insn 3238 3237 0 (var_location:SI x (const_int 0 [0])) -1
     (nil))
;; # DEBUG cng_pt => cng_pt_24

(debug_insn 3239 3238 0 (var_location:QI cng_pt (const_int 0 [0])) -1
     (nil))
;; # DEBUG best_te => best_te_19

(debug_insn 3240 3239 0 (var_location:QI best_te (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => match_7

(debug_insn 3241 3240 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (map_711 != 0B)

(insn 3243 3241 3244 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 283 [ map ])
            (const_int 0 [0]))) src/switch_core_media.c:3295 -1
     (nil))

(jump_insn 3244 3243 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3242)
            (pc))) src/switch_core_media.c:3295 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 282

;; 

(code_label 3245 3244 3246 1409 "" [0 uses])

(note 3246 3245 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG nm_idx => nm_idx_119

(debug_insn 3247 3246 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_105

(debug_insn 3248 3247 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG codec_ms => codec_ms_93

(debug_insn 3249 3248 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => match_9

(debug_insn 3250 3249 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (D.45004_715 != 0)

(insn 3251 3250 3252 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 175 [ got_crypto ])
            (const_int 0 [0]))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3252 3251 3253 (set (reg:SI 1866)
        (le:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3253 3252 3254 (set (reg:QI 1865)
        (subreg:QI (reg:SI 1866) 0)) src/switch_core_media.c:3454 -1
     (nil))

(insn 3254 3253 3255 (set (reg:SI 1867)
        (const_int 23812 [0x5d04])) src/switch_core_media.c:3454 -1
     (nil))

(insn 3255 3254 3256 (set (reg:SI 1869)
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1867)) [23 smh_186->crypto_mode+0 S4 A32])) src/switch_core_media.c:3454 -1
     (nil))

(insn 3256 3255 3257 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1869)
            (const_int 1 [0x1]))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3257 3256 3258 (set (reg:SI 1870)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3258 3257 3259 (set (reg:QI 1868)
        (subreg:QI (reg:SI 1870) 0)) src/switch_core_media.c:3454 -1
     (nil))

(insn 3259 3258 3260 (set (reg:SI 1871)
        (and:SI (subreg:SI (reg:QI 1865) 0)
            (subreg:SI (reg:QI 1868) 0))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3260 3259 3261 (set (reg:QI 1872)
        (subreg:QI (reg:SI 1871) 0)) src/switch_core_media.c:3454 -1
     (nil))

(insn 3261 3260 3262 (set (reg:SI 1873)
        (zero_extend:SI (reg:QI 1872))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3262 3261 3263 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1873)
            (const_int 0 [0]))) src/switch_core_media.c:3454 -1
     (nil))

(jump_insn 3263 3262 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3454 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 283

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3455, session_161(D), 4, "Crypto not negotiated but required.\n");

(insn 3265 3264 3266 (set (reg:SI 1875)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1070 [0x42e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1070 [0x42e])
            ] 29)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3266 3265 3267 (set (reg:SI 1874)
        (reg:SI 1875)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3267 3266 3268 (set (reg:SI 1877)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1071 [0x42f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1071 [0x42f])
            ] 29)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3268 3267 3269 (set (reg/f:SI 1876)
        (reg:SI 1877)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3269 3268 3270 (set (reg:SI 1879)
        (plus:SI (reg/f:SI 1876)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3455 -1
     (nil))

(insn 3270 3269 3271 (set (reg:SI 1878)
        (plus:SI (reg:SI 1879)
            (const_int 8 [0x8]))) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1876)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3271 3270 3272 (set (reg:SI 1880)
        (const_int 3455 [0xd7f])) src/switch_core_media.c:3455 -1
     (nil))

(insn 3272 3271 3273 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3455 -1
     (nil))

(insn 3273 3272 3274 (set (reg:SI 1881)
        (const_int 4 [0x4])) src/switch_core_media.c:3455 -1
     (nil))

(insn 3274 3273 3275 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1881)) src/switch_core_media.c:3455 -1
     (nil))

(insn 3275 3274 3276 (set (reg:SI 1883)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1072 [0x430])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1072 [0x430])
            ] 29)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
        (nil)))

(insn 3276 3275 3277 (set (reg/f:SI 1882)
        (reg:SI 1883)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
        (nil)))

(insn 3277 3276 3278 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1882)) src/switch_core_media.c:3455 -1
     (nil))

(insn 3278 3277 3279 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3455 -1
     (nil))

(insn 3279 3278 3280 (set (reg:SI 1 r1)
        (reg:SI 1874)) src/switch_core_media.c:3455 -1
     (nil))

(insn 3280 3279 3281 (set (reg:SI 2 r2)
        (reg:SI 1878)) src/switch_core_media.c:3455 -1
     (nil))

(insn 3281 3280 3282 (set (reg:SI 3 r3)
        (reg:SI 1880)) src/switch_core_media.c:3455 -1
     (nil))

(call_insn 3282 3281 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3455 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG match => 0

(debug_insn 3283 3282 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3456 -1
     (nil))
;; # DEBUG nm_idx => 0

(debug_insn 3284 3283 0 (var_location:SI nm_idx (const_int 0 [0])) src/switch_core_media.c:3457 -1
     (nil))
;; # DEBUG m_idx => 0

(debug_insn 3285 3284 0 (var_location:SI m_idx (const_int 0 [0])) src/switch_core_media.c:3457 -1
     (nil))
;; # DEBUG nm_idx => 0

(debug_insn 3286 3285 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => 0

(debug_insn 3287 3286 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => 0

(debug_insn 3288 3287 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => 0

(debug_insn 3289 3288 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => 0

(debug_insn 3290 3289 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => 0

(debug_insn 3291 3290 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 284

;; 

(code_label 3294 3293 3295 1443 "" [0 uses])

(note 3295 3294 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG nm_idx => nm_idx_119

(debug_insn 3296 3295 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_105

(debug_insn 3297 3296 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => match_9

(debug_insn 3298 3297 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (D.45009_721 != 0)

(insn 3299 3298 3300 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 211 [ nm_idx ])
            (const_int 0 [0]))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3300 3299 3301 (set (reg:SI 1885)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3301 3300 3302 (set (reg:QI 1884)
        (subreg:QI (reg:SI 1885) 0)) src/switch_core_media.c:3461 -1
     (nil))

(insn 3302 3301 3303 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (const_int 0 [0]))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3303 3302 3304 (set (reg:SI 1887)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3304 3303 3305 (set (reg:QI 1886)
        (subreg:QI (reg:SI 1887) 0)) src/switch_core_media.c:3461 -1
     (nil))

(insn 3305 3304 3306 (set (reg:SI 1888)
        (and:SI (subreg:SI (reg:QI 1884) 0)
            (subreg:SI (reg:QI 1886) 0))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3306 3305 3307 (set (reg:QI 1889)
        (subreg:QI (reg:SI 1888) 0)) src/switch_core_media.c:3461 -1
     (nil))

(insn 3307 3306 3308 (set (reg:SI 1890)
        (zero_extend:SI (reg:QI 1889))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3308 3307 3309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1890)
            (const_int 0 [0]))) src/switch_core_media.c:3461 -1
     (nil))

(jump_insn 3309 3308 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3461 -1
     (expr_list:REG_BR_PROB (const_int 2896 [0xb50])
        (nil)))

;; Generating RTL for gimple basic block 285

;; ivtmp.1067_237 = (unsigned int) &near_matches[0].rate;

(insn 3311 3310 3312 (set (reg:SI 1891)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -576 [0xfffffffffffffdc0]))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3312 3311 0 (set (reg:SI 600 [ ivtmp.1067 ])
        (plus:SI (reg:SI 1891)
            (const_int 8 [0x8]))) src/switch_core_media.c:3461 -1
     (nil))

;; Generating RTL for gimple basic block 286

;; # DEBUG timp => 0B

(debug_insn 3314 3313 0 (var_location:SI timp (const_int 0 [0])) src/switch_core_media.c:3469 -1
     (nil))
;; D.49960_238 = (void *) ivtmp.1067_1654;

(insn 3315 3314 0 (set (reg/f:SI 266 [ D.49960 ])
        (reg:SI 600 [ ivtmp.1067 ])) src/switch_core_media.c:2890 -1
     (nil))

;; near_rate.96_724 = MEM[base: D.49960_238, offset: 0B];

(insn 3316 3315 0 (set (reg:SI 506 [ near_rate.96 ])
        (mem:SI (reg/f:SI 266 [ D.49960 ]) [3 MEM[base: D.49960_238, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3471 -1
     (nil))

;; near_rate_725 = (uint32_t) near_rate.96_724;

(insn 3317 3316 0 (set (reg/v:SI 230 [ near_rate ])
        (reg:SI 506 [ near_rate.96 ])) src/switch_core_media.c:3471 -1
     (nil))

;; # DEBUG near_rate => near_rate_725

(debug_insn 3318 3317 0 (var_location:SI near_rate (const_int 0 [0])) src/switch_core_media.c:3471 -1
     (nil))
;; near_match_726 = MEM[base: D.49960_238, offset: 4294967288B];

(insn 3319 3318 0 (set (reg/v/f:SI 581 [ near_match ])
        (mem/f:SI (plus:SI (reg/f:SI 266 [ D.49960 ])
                (const_int -8 [0xfffffffffffffff8])) [3 MEM[base: D.49960_238, offset: 4294967288B]+0 S4 A32])) src/switch_core_media.c:3472 -1
     (nil))

;; # DEBUG near_match => near_match_726

(debug_insn 3320 3319 0 (var_location:SI near_match (const_int 0 [0])) src/switch_core_media.c:3472 -1
     (nil))
;; near_map_727 = MEM[base: D.49960_238, offset: 4294967292B];

(insn 3321 3320 0 (set (reg/v/f:SI 582 [ near_map ])
        (mem/f:SI (plus:SI (reg/f:SI 266 [ D.49960 ])
                (const_int -4 [0xfffffffffffffffc])) [3 MEM[base: D.49960_238, offset: 4294967292B]+0 S4 A32])) src/switch_core_media.c:3473 -1
     (nil))

;; # DEBUG near_map => near_map_727

(debug_insn 3322 3321 0 (var_location:SI near_map (const_int 0 [0])) src/switch_core_media.c:3473 -1
     (nil))
;; D.45013_728 = near_match_726->iananame;

(insn 3323 3322 0 (set (reg/f:SI 583 [ D.45013 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 581 [ near_match ])
                (const_int 8 [0x8])) [2 near_match_726->iananame+0 S4 A32])) src/switch_core_media.c:3475 -1
     (nil))

;; if (near_rate_725 == 0)

(insn 3324 3323 3325 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 230 [ near_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3475 -1
     (nil))

(jump_insn 3325 3324 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3475 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 287

;; near_rate_729 = near_match_726->samples_per_second;

(insn 3327 3326 0 (set (reg/v:SI 230 [ near_rate ])
        (mem/s:SI (plus:SI (reg/v/f:SI 581 [ near_match ])
                (const_int 16 [0x10])) [4 near_match_726->samples_per_second+0 S4 A32])) src/switch_core_media.c:3475 -1
     (nil))

;; Generating RTL for gimple basic block 288

;; 

(code_label 3328 3327 3329 1446 "" [0 uses])

(note 3329 3328 0 NOTE_INSN_BASIC_BLOCK)

;; switch_snprintf (&tmp, 80, "%s@%uh@%ui", D.45013_728, near_rate_145, codec_ms_93);

(insn 3330 3329 3331 (set (reg:SI 1892)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3475 -1
     (nil))

(insn 3331 3330 3332 (set (reg:SI 1894)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC345") [flags 0x82]  <var_decl 0x404184e0 *.LC345>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1073 [0x431])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1073 [0x431])
            ] 29)) src/switch_core_media.c:3475 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC345") [flags 0x82]  <var_decl 0x404184e0 *.LC345>)
        (nil)))

(insn 3332 3331 3333 (set (reg:SI 1893)
        (reg:SI 1894)) src/switch_core_media.c:3475 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC345") [flags 0x82]  <var_decl 0x404184e0 *.LC345>)
        (nil)))

(insn 3333 3332 3334 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 230 [ near_rate ])) src/switch_core_media.c:3475 -1
     (nil))

(insn 3334 3333 3335 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 196 [ codec_ms ])) src/switch_core_media.c:3475 -1
     (nil))

(insn 3335 3334 3336 (set (reg:SI 0 r0)
        (reg:SI 1892)) src/switch_core_media.c:3475 -1
     (nil))

(insn 3336 3335 3337 (set (reg:SI 1 r1)
        (const_int 80 [0x50])) src/switch_core_media.c:3475 -1
     (nil))

(insn 3337 3336 3338 (set (reg:SI 2 r2)
        (reg:SI 1893)) src/switch_core_media.c:3475 -1
     (nil))

(insn 3338 3337 3339 (set (reg:SI 3 r3)
        (reg/f:SI 583 [ D.45013 ])) src/switch_core_media.c:3475 -1
     (nil))

(call_insn 3339 3338 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3475 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; prefs[0] = &tmp;

(insn 3340 3339 3341 (set (reg:SI 1895)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3478 -1
     (nil))

(insn 3341 3340 0 (set (mem/s/f/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 prefs+0 S4 A32])
        (reg:SI 1895)) src/switch_core_media.c:3478 -1
     (nil))

;; num_731 = switch_loadable_module_get_codecs_sorted (&search, 1, &prefs, 1);

(insn 3342 3341 3343 (set (reg:SI 1896)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))) src/switch_core_media.c:3479 -1
     (nil))

(insn 3343 3342 3344 (set (reg:SI 1897)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) src/switch_core_media.c:3479 -1
     (nil))

(insn 3344 3343 3345 (set (reg:SI 0 r0)
        (reg:SI 1896)) src/switch_core_media.c:3479 -1
     (nil))

(insn 3345 3344 3346 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) src/switch_core_media.c:3479 -1
     (nil))

(insn 3346 3345 3347 (set (reg:SI 2 r2)
        (reg:SI 1897)) src/switch_core_media.c:3479 -1
     (nil))

(insn 3347 3346 3348 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3479 -1
     (nil))

(call_insn 3348 3347 3349 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_loadable_module_get_codecs_sorted") [flags 0x41]  <function_decl 0x407cbb00 switch_loadable_module_get_codecs_sorted>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3479 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3349 3348 0 (set (reg/v:SI 584 [ num ])
        (reg:SI 0 r0)) src/switch_core_media.c:3479 -1
     (nil))

;; # DEBUG num => num_731

(debug_insn 3350 3349 0 (var_location:SI num (const_int 0 [0])) src/switch_core_media.c:3479 -1
     (nil))
;; if (num_731 != 0)

(insn 3351 3350 3352 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 584 [ num ])
            (const_int 0 [0]))) src/switch_core_media.c:3481 -1
     (nil))

(jump_insn 3352 3351 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3481 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 289

;; timp_732 = search[0];

(insn 3354 3353 0 (set (reg/v/f:SI 224 [ timp ])
        (mem/s/f/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 search+0 S4 A64])) src/switch_core_media.c:3482 -1
     (nil))

;; # DEBUG timp => timp_732

(debug_insn 3355 3354 0 (var_location:SI timp (const_int 0 [0])) src/switch_core_media.c:3482 -1
     (nil))
;; Generating RTL for gimple basic block 290

;; 

(code_label 3356 3355 3357 1447 "" [0 uses])

(note 3357 3356 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG timp => timp_134

(debug_insn 3358 3357 0 (var_location:SI timp (const_int 0 [0])) -1
     (nil))
;; if (maxptime_1040 == 0)

(insn 3359 3358 3360 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 162 [ maxptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3487 -1
     (nil))

(jump_insn 3360 3359 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3487 -1
     (expr_list:REG_BR_PROB (const_int 9700 [0x25e4])
        (nil)))

;; Generating RTL for gimple basic block 291

;; prephitmp.1039_846 = pretmp.1036_1896 / 1000;

(insn 3362 3361 3363 (set (reg:SI 1898)
        (mem/s:SI (plus:SI (reg/v/f:SI 302 [ timp ])
                (const_int 28 [0x1c])) [4 timp_330->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3487 -1
     (nil))

(insn 3363 3362 3364 (set (reg:SI 1900)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3487 -1
     (nil))

(insn 3364 3363 3365 (parallel [
            (set (reg:SI 1899)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1898))
                            (sign_extend:DI (reg:SI 1900)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3487 -1
     (nil))

(insn 3365 3364 3366 (set (reg:SI 1901)
        (ashiftrt:SI (reg:SI 1899)
            (const_int 6 [0x6]))) src/switch_core_media.c:3487 -1
     (nil))

(insn 3366 3365 3367 (set (reg:SI 1902)
        (ashiftrt:SI (reg:SI 1898)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3487 -1
     (nil))

(insn 3367 3366 0 (set (reg:SI 586 [ prephitmp.1039 ])
        (minus:SI (reg:SI 1901)
            (reg:SI 1902))) src/switch_core_media.c:3487 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1898)
            (const_int 1000 [0x3e8]))
        (nil)))

;; Generating RTL for gimple basic block 292

;; 

(code_label 3370 3369 3371 1448 "" [0 uses])

(note 3371 3370 0 NOTE_INSN_BASIC_BLOCK)

;; prephitmp.1039_735 = D.45024_734 / 1000;

(insn 3372 3371 3373 (set (reg:SI 1903)
        (mem/s:SI (plus:SI (reg/v/f:SI 224 [ timp ])
                (const_int 28 [0x1c])) [4 timp_134->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3487 -1
     (nil))

(insn 3373 3372 3374 (set (reg:SI 1905)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3487 -1
     (nil))

(insn 3374 3373 3375 (parallel [
            (set (reg:SI 1904)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1903))
                            (sign_extend:DI (reg:SI 1905)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3487 -1
     (nil))

(insn 3375 3374 3376 (set (reg:SI 1906)
        (ashiftrt:SI (reg:SI 1904)
            (const_int 6 [0x6]))) src/switch_core_media.c:3487 -1
     (nil))

(insn 3376 3375 3377 (set (reg:SI 1907)
        (ashiftrt:SI (reg:SI 1903)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3487 -1
     (nil))

(insn 3377 3376 0 (set (reg:SI 586 [ prephitmp.1039 ])
        (minus:SI (reg:SI 1906)
            (reg:SI 1907))) src/switch_core_media.c:3487 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1903)
            (const_int 1000 [0x3e8]))
        (nil)))

;; if (prephitmp.1039_735 <= maxptime_1040)

(insn 3378 3377 3379 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 586 [ prephitmp.1039 ])
            (reg/v:SI 162 [ maxptime ]))) src/switch_core_media.c:3487 -1
     (nil))

(jump_insn 3379 3378 0 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3487 -1
     (expr_list:REG_BR_PROB (const_int 9700 [0x25e4])
        (nil)))

;; Generating RTL for gimple basic block 293

;; 

(code_label 3380 3379 3381 1449 "" [0 uses])

(note 3381 3380 0 NOTE_INSN_BASIC_BLOCK)

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3488, session_161(D), 7, "Substituting codec %s@%ui@%uh\n", D.45026_737, prephitmp.1039_857, D.45027_740);

(insn 3382 3381 3383 (set (reg:SI 1909)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1074 [0x432])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1074 [0x432])
            ] 29)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3383 3382 3384 (set (reg:SI 1908)
        (reg:SI 1909)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3384 3383 3385 (set (reg:SI 1911)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1075 [0x433])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1075 [0x433])
            ] 29)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3385 3384 3386 (set (reg/f:SI 1910)
        (reg:SI 1911)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3386 3385 3387 (set (reg:SI 1913)
        (plus:SI (reg/f:SI 1910)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3488 -1
     (nil))

(insn 3387 3386 3388 (set (reg:SI 1912)
        (plus:SI (reg:SI 1913)
            (const_int 8 [0x8]))) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1910)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3388 3387 3389 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3389 3388 3390 (set (reg:SI 1914)
        (const_int 7 [0x7])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3390 3389 3391 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1914)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3391 3390 3392 (set (reg:SI 1916)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC346") [flags 0x82]  <var_decl 0x404186c0 *.LC346>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1076 [0x434])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1076 [0x434])
            ] 29)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC346") [flags 0x82]  <var_decl 0x404186c0 *.LC346>)
        (nil)))

(insn 3392 3391 3393 (set (reg/f:SI 1915)
        (reg:SI 1916)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC346") [flags 0x82]  <var_decl 0x404186c0 *.LC346>)
        (nil)))

(insn 3393 3392 3394 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1915)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3394 3393 3395 (set (reg/f:SI 1917)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 224 [ timp ])
                (const_int 8 [0x8])) [2 timp_1785->iananame+0 S4 A32])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3395 3394 3396 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 1917)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3396 3395 3397 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 586 [ prephitmp.1039 ])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3397 3396 3398 (set (reg:SI 1918)
        (mem/s:SI (plus:SI (reg/v/f:SI 224 [ timp ])
                (const_int 20 [0x14])) [4 timp_1785->actual_samples_per_second+0 S4 A32])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3398 3397 3399 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg:SI 1918)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3399 3398 3400 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3400 3399 3401 (set (reg:SI 1 r1)
        (reg:SI 1908)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3401 3400 3402 (set (reg:SI 2 r2)
        (reg:SI 1912)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3402 3401 3403 (set (reg:SI 3 r3)
        (const_int 3488 [0xda0])) src/switch_core_media.c:3488 -1
     (nil))

(call_insn 3403 3402 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 24 [0x18]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3488 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG match => 1

(debug_insn 3404 3403 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3490 -1
     (nil))
;; matches[0].codec_idx = D.45028_742;

(insn 3405 3404 3406 (set (reg:SI 1919)
        (const_int -568 [0xfffffffffffffdc8])) src/switch_core_media.c:3492 -1
     (nil))

(insn 3406 3405 3407 (set (reg:SI 1920)
        (ashift:SI (reg/v:SI 587 [ j ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3492 -1
     (nil))

(insn 3407 3406 3408 (set (reg:SI 1921)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1920))) src/switch_core_media.c:3492 -1
     (nil))

(insn 3408 3407 3409 (set (reg/f:SI 1922)
        (plus:SI (reg:SI 1921)
            (reg:SI 1919))) src/switch_core_media.c:3492 -1
     (nil))

(insn 3409 3408 3410 (set (reg:SI 1923)
        (mem/s:SI (plus:SI (reg/f:SI 1922)
                (const_int 4 [0x4])) [4 near_matches[j_1786].codec_idx+0 S4 A32])) src/switch_core_media.c:3492 -1
     (nil))

(insn 3410 3409 0 (set (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -1044 [0xfffffffffffffbec])) [4 matches[0].codec_idx+0 S4 A32])
        (reg:SI 1923)) src/switch_core_media.c:3492 -1
     (nil))

;; matches[0].rate = near_rate.96_616;

(insn 3411 3410 0 (set (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -1048 [0xfffffffffffffbe8])) [4 matches[0].rate+0 S4 A64])
        (reg:SI 506 [ near_rate.96 ])) src/switch_core_media.c:3493 -1
     (nil))

;; matches[0].imp = timp_1785;

(insn 3412 3411 0 (set (mem/s/f/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -1056 [0xfffffffffffffbe0])) [2 matches[0].imp+0 S4 A64])
        (reg/v/f:SI 224 [ timp ])) src/switch_core_media.c:3494 -1
     (nil))

;; matches[0].map = near_map_1787;

(insn 3413 3412 0 (set (mem/s/f/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -1052 [0xfffffffffffffbe4])) [2 matches[0].map+0 S4 A32])
        (reg/v/f:SI 582 [ near_map ])) src/switch_core_media.c:3495 -1
     (nil))

;; # DEBUG m_idx => 1

(debug_insn 3414 3413 0 (var_location:SI m_idx (const_int 0 [0])) src/switch_core_media.c:3496 -1
     (nil))
;; # DEBUG m_idx => 1

(debug_insn 3415 3414 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => 1

(debug_insn 3416 3415 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 294

;; 

(code_label 3419 3418 3420 1450 "" [0 uses])

(note 3420 3419 0 NOTE_INSN_BASIC_BLOCK)

;; j_736 = j_1845 + 1;

(insn 3421 3420 0 (set (reg/v:SI 587 [ j ])
        (plus:SI (reg/v:SI 587 [ j ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3464 -1
     (nil))

;; # DEBUG j => j_736

(debug_insn 3422 3421 0 (var_location:SI j (const_int 0 [0])) src/switch_core_media.c:3464 -1
     (nil))
;; # DEBUG j => j_736

(debug_insn 3423 3422 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; ivtmp.1067_756 = ivtmp.1067_1654 + 16;

(insn 3424 3423 0 (set (reg:SI 600 [ ivtmp.1067 ])
        (plus:SI (reg:SI 600 [ ivtmp.1067 ])
            (const_int 16 [0x10]))) src/switch_core_media.c:3464 -1
     (nil))

;; if (nm_idx_119 > j_736)

(insn 3426 3424 3427 294 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 211 [ nm_idx ])
            (reg/v:SI 587 [ j ]))) src/switch_core_media.c:3464 -1
     (nil))

(jump_insn 3427 3426 3430 294 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3425)
            (pc))) src/switch_core_media.c:3464 -1
     (expr_list:REG_BR_PROB (const_int 9672 [0x25c8])
        (nil)))

(note 3430 3427 3428 457 [bb 457] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3428 3430 3429 457 (set (pc)
        (label_ref 0)) src/switch_core_media.c:3464 -1
     (nil))

(barrier 3429 3428 0)

;; Generating RTL for gimple basic block 295

;; 

(code_label 3431 3429 3432 1445 "" [0 uses])

(note 3432 3431 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG m_idx => m_idx_105

(debug_insn 3433 3432 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => match_9

(debug_insn 3434 3433 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (m_idx_105 != 0)

(insn 3435 3434 3436 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (const_int 0 [0]))) src/switch_core_media.c:3503 -1
     (nil))

(jump_insn 3436 3435 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3503 -1
     (expr_list:REG_BR_PROB (const_int 1003 [0x3eb])
        (nil)))

;; Generating RTL for gimple basic block 296

;; 

(code_label 3437 3436 3438 1451 "" [0 uses])

(note 3438 3437 0 NOTE_INSN_BASIC_BLOCK)

;; if (greedy_47 != 0)

(insn 3439 3438 3440 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 170 [ greedy ])
            (const_int 0 [0]))) src/switch_core_media.c:3506 -1
     (nil))

(jump_insn 3440 3439 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3506 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 297

;; greedy_sort (smh_186, &matches, m_idx_1715, codec_array_84, total_codecs_85);

(insn 3442 3441 3443 (set (reg:SI 1924)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3507 -1
     (nil))

(insn 3443 3442 3444 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 194 [ total_codecs ])) src/switch_core_media.c:3507 -1
     (nil))

(insn 3444 3443 3445 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3507 -1
     (nil))

(insn 3445 3444 3446 (set (reg:SI 1 r1)
        (reg:SI 1924)) src/switch_core_media.c:3507 -1
     (nil))

(insn 3446 3445 3447 (set (reg:SI 2 r2)
        (reg/v:SI 202 [ m_idx ])) src/switch_core_media.c:3507 -1
     (nil))

(insn 3447 3446 3448 (set (reg:SI 3 r3)
        (reg/v/f:SI 193 [ codec_array ])) src/switch_core_media.c:3507 -1
     (nil))

(call_insn 3448 3447 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("greedy_sort") [flags 0x3]  <function_decl 0x414f3b00 greedy_sort>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3507 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 298

;; 

(code_label 3449 3448 3450 1454 "" [0 uses])

(note 3450 3449 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG match => 1

(debug_insn 3451 3450 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3510 -1
     (nil))
;; MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].codec_negotiated = 1;

(insn 3452 3451 3453 (set (reg:SI 1925)
        (const_int 11489 [0x2ce1])) src/switch_core_media.c:3511 -1
     (nil))

(insn 3453 3452 3454 (set (reg:SI 1926)
        (const_int 1 [0x1])) src/switch_core_media.c:3511 -1
     (nil))

(insn 3454 3453 3455 (set (reg:QI 1927)
        (subreg:QI (reg:SI 1926) 0)) src/switch_core_media.c:3511 -1
     (nil))

(insn 3455 3454 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1925)) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].codec_negotiated+0 S1 A8])
        (reg:QI 1927)) src/switch_core_media.c:3511 -1
     (nil))

;; smh_186->num_negotiated_codecs = 0;

(insn 3456 3455 3457 (set (reg:SI 1928)
        (const_int 23532 [0x5bec])) src/switch_core_media.c:3512 -1
     (nil))

(insn 3457 3456 3458 (set (reg:SI 1929)
        (const_int 0 [0])) src/switch_core_media.c:3512 -1
     (nil))

(insn 3458 3457 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1928)) [4 smh_186->num_negotiated_codecs+0 S4 A32])
        (reg:SI 1929)) src/switch_core_media.c:3512 -1
     (nil))

;; # DEBUG j => 0

(debug_insn 3459 3458 0 (var_location:SI j (const_int 0 [0])) src/switch_core_media.c:3514 -1
     (nil))
;; # DEBUG j => 0

(debug_insn 3460 3459 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 299

;; D.49951_345 = &matches + ivtmp.1062_1793;

(insn 3462 3461 3463 (set (reg:SI 1930)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:2890 -1
     (nil))

(insn 3463 3462 0 (set (reg/f:SI 315 [ D.49951 ])
        (plus:SI (reg:SI 1930)
            (reg:SI 453 [ ivtmp.1062 ]))) src/switch_core_media.c:2890 -1
     (nil))

;; D.45034_747 = MEM[base: D.49951_345, offset: 4B];

(insn 3464 3463 0 (set (reg/f:SI 592 [ D.45034 ])
        (mem/f:SI (plus:SI (reg/f:SI 315 [ D.49951 ])
                (const_int 4 [0x4])) [3 MEM[base: D.49951_345, offset: 4B]+0 S4 A32])) src/switch_core_media.c:3517 -1
     (nil))

;; D.45039_754 = MEM[symbol: matches, index: ivtmp.1062_1793, offset: 0B];

(insn 3465 3464 3466 (set (reg:SI 1931)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3521 -1
     (nil))

(insn 3466 3465 0 (set (reg/f:SI 598 [ D.45039 ])
        (mem/f:SI (plus:SI (reg:SI 453 [ ivtmp.1062 ])
                (reg:SI 1931)) [3 MEM[symbol: matches, index: ivtmp.1062_1793, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3521 -1
     (nil))

;; pmap_760 = switch_core_media_add_payload_map (session_161(D), 0, D.45035_748, D.45036_750, sdp_type_546(D), D.45038_753, D.45040_755, D.45043_759, 1);

(insn 3467 3466 3468 (set (reg:SI 1932)
        (mem/s/f:SI (plus:SI (reg/f:SI 592 [ D.45034 ])
                (const_int 8 [0x8])) [2 D.45034_747->rm_encoding+0 S4 A32])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3468 3467 3469 (set (reg:SI 1933)
        (mem/s/f:SI (plus:SI (reg/f:SI 592 [ D.45034 ])
                (const_int 20 [0x14])) [2 D.45034_747->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3469 3468 3470 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 1028 [ sdp_type ])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3470 3469 3471 (set (reg:SI 1934)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 592 [ D.45034 ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3520 -1
     (nil))

(insn 3471 3470 3472 (set (reg:SI 1935)
        (lshiftrt:SI (reg:SI 1934)
            (const_int 1 [0x1]))) src/switch_core_media.c:3520 -1
     (nil))

(insn 3472 3471 3473 (set (reg:SI 1936)
        (zero_extend:SI (subreg:QI (reg:SI 1935) 0))) src/switch_core_media.c:3515 -1
     (nil))

(insn 3473 3472 3474 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1936)) src/switch_core_media.c:3515 -1
     (nil))

(insn 3474 3473 3475 (set (reg:SI 1937)
        (mem/s:SI (plus:SI (reg/f:SI 598 [ D.45039 ])
                (const_int 16 [0x10])) [4 D.45039_754->samples_per_second+0 S4 A32])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3475 3474 3476 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 1937)) src/switch_core_media.c:3515 -1
     (nil))

(insn 3476 3475 3477 (set (reg:SI 1939)
        (mem/s:SI (plus:SI (reg/f:SI 598 [ D.45039 ])
                (const_int 28 [0x1c])) [4 D.45039_754->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3522 -1
     (nil))

(insn 3477 3476 3478 (set (reg:SI 1941)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3522 -1
     (nil))

(insn 3478 3477 3479 (parallel [
            (set (reg:SI 1940)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1939))
                            (sign_extend:DI (reg:SI 1941)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3522 -1
     (nil))

(insn 3479 3478 3480 (set (reg:SI 1942)
        (ashiftrt:SI (reg:SI 1940)
            (const_int 6 [0x6]))) src/switch_core_media.c:3522 -1
     (nil))

(insn 3480 3479 3481 (set (reg:SI 1943)
        (ashiftrt:SI (reg:SI 1939)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3522 -1
     (nil))

(insn 3481 3480 3482 (set (reg:SI 1938)
        (minus:SI (reg:SI 1942)
            (reg:SI 1943))) src/switch_core_media.c:3522 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1939)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 3482 3481 3483 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 1938)) src/switch_core_media.c:3515 -1
     (nil))

(insn 3483 3482 3484 (set (reg:SI 1944)
        (const_int 1 [0x1])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3484 3483 3485 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 1944)) src/switch_core_media.c:3515 -1
     (nil))

(insn 3485 3484 3486 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3486 3485 3487 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3487 3486 3488 (set (reg:SI 2 r2)
        (reg:SI 1932)) src/switch_core_media.c:3515 -1
     (nil))

(insn 3488 3487 3489 (set (reg:SI 3 r3)
        (reg:SI 1933)) src/switch_core_media.c:3515 -1
     (nil))

(call_insn 3489 3488 3490 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_add_payload_map") [flags 0x1]  <function_decl 0x40957200 switch_core_media_add_payload_map>) [0 S4 A32])
                    (const_int 24 [0x18])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3515 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3490 3489 0 (set (reg/v/f:SI 604 [ pmap ])
        (reg:SI 0 r0)) src/switch_core_media.c:3515 -1
     (nil))

;; # DEBUG pmap => pmap_760

(debug_insn 3491 3490 0 (var_location:SI pmap (const_int 0 [0])) src/switch_core_media.c:3515 -1
     (nil))
;; mimp_761 = MEM[symbol: matches, index: ivtmp.1062_1793, offset: 0B];

(insn 3492 3491 3493 (set (reg:SI 1945)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3524 -1
     (nil))

(insn 3493 3492 0 (set (reg/v/f:SI 605 [ mimp ])
        (mem/f:SI (plus:SI (reg:SI 453 [ ivtmp.1062 ])
                (reg:SI 1945)) [3 MEM[symbol: matches, index: ivtmp.1062_1793, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3524 -1
     (nil))

;; # DEBUG mimp => mimp_761

(debug_insn 3494 3493 0 (var_location:SI mimp (const_int 0 [0])) src/switch_core_media.c:3524 -1
     (nil))
;; mmap_762 = MEM[base: D.49951_345, offset: 4B];

(insn 3495 3494 0 (set (reg/v/f:SI 606 [ mmap ])
        (mem/f:SI (plus:SI (reg/f:SI 315 [ D.49951 ])
                (const_int 4 [0x4])) [3 MEM[base: D.49951_345, offset: 4B]+0 S4 A32])) src/switch_core_media.c:3525 -1
     (nil))

;; # DEBUG mmap => mmap_762

(debug_insn 3496 3495 0 (var_location:SI mmap (const_int 0 [0])) src/switch_core_media.c:3525 -1
     (nil))
;; if (j_1881 == 0)

(insn 3497 3496 3498 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 642 [ j ])
            (const_int 0 [0]))) src/switch_core_media.c:3527 -1
     (nil))

(jump_insn 3498 3497 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3527 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 300

;; MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map = pmap_760;

(insn 3500 3499 0 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])
        (reg/v/f:SI 604 [ pmap ])) src/switch_core_media.c:3528 -1
     (nil))

;; pmap_760->current = 1;

(insn 3501 3500 3502 (set (reg:SI 1946)
        (const_int 1 [0x1])) src/switch_core_media.c:3529 -1
     (nil))

(insn 3502 3501 3503 (set (reg:QI 1947)
        (subreg:QI (reg:SI 1946) 0)) src/switch_core_media.c:3529 -1
     (nil))

(insn 3503 3502 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 18 [0x12])) [0 pmap_760->current+0 S1 A16])
        (reg:QI 1947)) src/switch_core_media.c:3529 -1
     (nil))

;; D.44605_764 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

(insn 3504 3503 0 (set (reg/f:SI 607 [ D.44605 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3530 -1
     (nil))

;; if (D.44605_764 != 0B)

(insn 3505 3504 3506 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 607 [ D.44605 ])
            (const_int 0 [0]))) src/switch_core_media.c:3530 -1
     (nil))

(jump_insn 3506 3505 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3530 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 301

;; switch_rtp_set_default_payload (D.44605_764, D.45048_766);

(insn 3508 3507 3509 (set (reg:SI 1948)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 604 [ pmap ])
                    (const_int 32 [0x20])) [0 pmap_760->pt+0 S1 A32]))) src/switch_core_media.c:3531 -1
     (nil))

(insn 3509 3508 3510 (set (reg:SI 0 r0)
        (reg/f:SI 607 [ D.44605 ])) src/switch_core_media.c:3531 -1
     (nil))

(insn 3510 3509 3511 (set (reg:SI 1 r1)
        (reg:SI 1948)) src/switch_core_media.c:3531 -1
     (nil))

(call_insn 3511 3510 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_default_payload") [flags 0x41]  <function_decl 0x408ce200 switch_rtp_set_default_payload>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3531 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; Generating RTL for gimple basic block 302

;; 

(code_label 3512 3511 3513 1455 "" [0 uses])

(note 3513 3512 0 NOTE_INSN_BASIC_BLOCK)

;; D.45050_768 = switch_core_perform_session_strdup (session_161(D), D.45049_767, "src/switch_core_media.c", &__func__, 3535);

(insn 3514 3513 3515 (set (reg:SI 1949)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 606 [ mmap ])
                (const_int 8 [0x8])) [2 mmap_762->rm_encoding+0 S4 A32])) src/switch_core_media.c:3535 -1
     (nil))

(insn 3515 3514 3516 (set (reg:SI 1951)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1077 [0x435])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1077 [0x435])
            ] 29)) src/switch_core_media.c:3535 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3516 3515 3517 (set (reg:SI 1950)
        (reg:SI 1951)) src/switch_core_media.c:3535 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3517 3516 3518 (set (reg:SI 1953)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1078 [0x436])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1078 [0x436])
            ] 29)) src/switch_core_media.c:3535 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3518 3517 3519 (set (reg/f:SI 1952)
        (reg:SI 1953)) src/switch_core_media.c:3535 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3519 3518 3520 (set (reg:SI 1955)
        (plus:SI (reg/f:SI 1952)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3535 -1
     (nil))

(insn 3520 3519 3521 (set (reg:SI 1954)
        (plus:SI (reg:SI 1955)
            (const_int 8 [0x8]))) src/switch_core_media.c:3535 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1952)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3521 3520 3522 (set (reg:SI 1956)
        (const_int 3535 [0xdcf])) src/switch_core_media.c:3535 -1
     (nil))

(insn 3522 3521 3523 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1956)) src/switch_core_media.c:3535 -1
     (nil))

(insn 3523 3522 3524 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3535 -1
     (nil))

(insn 3524 3523 3525 (set (reg:SI 1 r1)
        (reg:SI 1949)) src/switch_core_media.c:3535 -1
     (nil))

(insn 3525 3524 3526 (set (reg:SI 2 r2)
        (reg:SI 1950)) src/switch_core_media.c:3535 -1
     (nil))

(insn 3526 3525 3527 (set (reg:SI 3 r3)
        (reg:SI 1954)) src/switch_core_media.c:3535 -1
     (nil))

(call_insn 3527 3526 3528 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3535 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3528 3527 0 (set (reg/f:SI 610 [ D.45050 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3535 -1
     (nil))

;; pmap_760->rm_encoding = D.45050_768;

(insn 3529 3528 0 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 24 [0x18])) [2 pmap_760->rm_encoding+0 S4 A32])
        (reg/f:SI 610 [ D.45050 ])) src/switch_core_media.c:3535 -1
     (nil))

;; D.45052_770 = switch_core_perform_session_strdup (session_161(D), D.45051_769, "src/switch_core_media.c", &__func__, 3536);

(insn 3530 3529 3531 (set (reg:SI 1957)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 8 [0x8])) [2 mimp_761->iananame+0 S4 A32])) src/switch_core_media.c:3536 -1
     (nil))

(insn 3531 3530 3532 (set (reg:SI 1959)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1079 [0x437])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1079 [0x437])
            ] 29)) src/switch_core_media.c:3536 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3532 3531 3533 (set (reg:SI 1958)
        (reg:SI 1959)) src/switch_core_media.c:3536 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3533 3532 3534 (set (reg:SI 1961)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1080 [0x438])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1080 [0x438])
            ] 29)) src/switch_core_media.c:3536 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3534 3533 3535 (set (reg/f:SI 1960)
        (reg:SI 1961)) src/switch_core_media.c:3536 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3535 3534 3536 (set (reg:SI 1963)
        (plus:SI (reg/f:SI 1960)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3536 -1
     (nil))

(insn 3536 3535 3537 (set (reg:SI 1962)
        (plus:SI (reg:SI 1963)
            (const_int 8 [0x8]))) src/switch_core_media.c:3536 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1960)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3537 3536 3538 (set (reg:SI 1964)
        (const_int 3536 [0xdd0])) src/switch_core_media.c:3536 -1
     (nil))

(insn 3538 3537 3539 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1964)) src/switch_core_media.c:3536 -1
     (nil))

(insn 3539 3538 3540 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3536 -1
     (nil))

(insn 3540 3539 3541 (set (reg:SI 1 r1)
        (reg:SI 1957)) src/switch_core_media.c:3536 -1
     (nil))

(insn 3541 3540 3542 (set (reg:SI 2 r2)
        (reg:SI 1958)) src/switch_core_media.c:3536 -1
     (nil))

(insn 3542 3541 3543 (set (reg:SI 3 r3)
        (reg:SI 1962)) src/switch_core_media.c:3536 -1
     (nil))

(call_insn 3543 3542 3544 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3536 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3544 3543 0 (set (reg/f:SI 612 [ D.45052 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3536 -1
     (nil))

;; pmap_760->iananame = D.45052_770;

(insn 3545 3544 0 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 28 [0x1c])) [2 pmap_760->iananame+0 S4 A32])
        (reg/f:SI 612 [ D.45052 ])) src/switch_core_media.c:3536 -1
     (nil))

;; pmap_760->recv_pt = D.45054_772;

(insn 3546 3545 3547 (set (reg:SI 1965)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 606 [ mmap ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3537 -1
     (nil))

(insn 3547 3546 3548 (set (reg:SI 1966)
        (lshiftrt:SI (reg:SI 1965)
            (const_int 1 [0x1]))) src/switch_core_media.c:3537 -1
     (nil))

(insn 3548 3547 3549 (set (reg:QI 1967)
        (subreg:QI (reg:SI 1966) 0)) src/switch_core_media.c:3537 -1
     (nil))

(insn 3549 3548 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 57 [0x39])) [0 pmap_760->recv_pt+0 S1 A8])
        (reg:QI 1967)) src/switch_core_media.c:3537 -1
     (nil))

;; D.45055_773 = mimp_761->samples_per_second;

(insn 3550 3549 0 (set (reg:SI 615 [ D.45055 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 16 [0x10])) [4 mimp_761->samples_per_second+0 S4 A32])) src/switch_core_media.c:3538 -1
     (nil))

;; pmap_760->rm_rate = D.45055_773;

(insn 3551 3550 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 36 [0x24])) [26 pmap_760->rm_rate+0 S4 A32])
        (reg:SI 615 [ D.45055 ])) src/switch_core_media.c:3538 -1
     (nil))

;; pmap_760->adv_rm_rate = D.45055_773;

(insn 3552 3551 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 40 [0x28])) [26 pmap_760->adv_rm_rate+0 S4 A32])
        (reg:SI 615 [ D.45055 ])) src/switch_core_media.c:3539 -1
     (nil))

;; D.45056_776 = strcasecmp (D.45051_775, "g722");

(insn 3553 3552 3554 (set (reg:SI 1968)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 8 [0x8])) [2 mimp_761->iananame+0 S4 A32])) src/switch_core_media.c:3540 -1
     (nil))

(insn 3554 3553 3555 (set (reg:SI 1970)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC347") [flags 0x82]  <var_decl 0x404187e0 *.LC347>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1081 [0x439])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1081 [0x439])
            ] 29)) src/switch_core_media.c:3540 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC347") [flags 0x82]  <var_decl 0x404187e0 *.LC347>)
        (nil)))

(insn 3555 3554 3556 (set (reg:SI 1969)
        (reg:SI 1970)) src/switch_core_media.c:3540 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC347") [flags 0x82]  <var_decl 0x404187e0 *.LC347>)
        (nil)))

(insn 3556 3555 3557 (set (reg:SI 0 r0)
        (reg:SI 1968)) src/switch_core_media.c:3540 -1
     (nil))

(insn 3557 3556 3558 (set (reg:SI 1 r1)
        (reg:SI 1969)) src/switch_core_media.c:3540 -1
     (nil))

(call_insn/i 3558 3557 3559 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3540 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 3559 3558 0 (set (reg:SI 617 [ D.45056 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3540 -1
     (nil))

;; if (D.45056_776 != 0)

(insn 3560 3559 3561 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 617 [ D.45056 ])
            (const_int 0 [0]))) src/switch_core_media.c:3540 -1
     (nil))

(jump_insn 3561 3560 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3540 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 303

;; pmap_760->rm_rate = D.45059_777;

(insn 3563 3562 3564 (set (reg:SI 1971)
        (mem/s:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 20 [0x14])) [4 mimp_761->actual_samples_per_second+0 S4 A32])) src/switch_core_media.c:3541 -1
     (nil))

(insn 3564 3563 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 36 [0x24])) [26 pmap_760->rm_rate+0 S4 A32])
        (reg:SI 1971)) src/switch_core_media.c:3541 -1
     (nil))

;; Generating RTL for gimple basic block 304

;; 

(code_label 3565 3564 3566 1456 "" [0 uses])

(note 3566 3565 0 NOTE_INSN_BASIC_BLOCK)

;; pmap_760->codec_ms = D.45062_780;

(insn 3567 3566 3568 (set (reg:SI 1973)
        (mem/s:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 28 [0x1c])) [4 mimp_761->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3543 -1
     (nil))

(insn 3568 3567 3569 (set (reg:SI 1975)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3543 -1
     (nil))

(insn 3569 3568 3570 (parallel [
            (set (reg:SI 1974)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1973))
                            (sign_extend:DI (reg:SI 1975)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3543 -1
     (nil))

(insn 3570 3569 3571 (set (reg:SI 1976)
        (ashiftrt:SI (reg:SI 1974)
            (const_int 6 [0x6]))) src/switch_core_media.c:3543 -1
     (nil))

(insn 3571 3570 3572 (set (reg:SI 1977)
        (ashiftrt:SI (reg:SI 1973)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3543 -1
     (nil))

(insn 3572 3571 3573 (set (reg:SI 1972)
        (minus:SI (reg:SI 1976)
            (reg:SI 1977))) src/switch_core_media.c:3543 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1973)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 3573 3572 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 44 [0x2c])) [4 pmap_760->codec_ms+0 S4 A32])
        (reg:SI 1972)) src/switch_core_media.c:3543 -1
     (nil))

;; pmap_760->bitrate = D.45064_782;

(insn 3574 3573 3575 (set (reg:SI 1978)
        (mem/s:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 24 [0x18])) [4 mimp_761->bits_per_second+0 S4 A32])) src/switch_core_media.c:3544 -1
     (nil))

(insn 3575 3574 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 48 [0x30])) [4 pmap_760->bitrate+0 S4 A32])
        (reg:SI 1978)) src/switch_core_media.c:3544 -1
     (nil))

;; D.45066_783 = mmap_762->rm_params;

(insn 3576 3575 0 (set (reg/f:SI 624 [ D.45066 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 606 [ mmap ])
                (const_int 16 [0x10])) [2 mmap_762->rm_params+0 S4 A32])) src/switch_core_media.c:3545 -1
     (nil))

;; if (D.45066_783 != 0B)

(insn 3577 3576 3578 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 624 [ D.45066 ])
            (const_int 0 [0]))) src/switch_core_media.c:3545 -1
     (nil))

(jump_insn 3578 3577 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3545 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 305

;; # DEBUG __nptr => D.45066_783

(debug_insn 3580 3579 0 (var_location:SI __nptr (const_int 0 [0])) src/switch_core_media.c:3545 -1
     (nil))
;; D.47922_1485 = strtol (D.45066_783, 0B, 10);

(insn 3581 3580 3582 (set (reg:SI 0 r0)
        (reg/f:SI 624 [ D.45066 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 3582 3581 3583 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 3583 3582 3584 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 3584 3583 3585 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 3585 3584 0 (set (reg:SI 231 [ D.47922 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; Generating RTL for gimple basic block 306

;; 

(code_label 3586 3585 3587 1457 "" [0 uses])

(note 3587 3586 0 NOTE_INSN_BASIC_BLOCK)

;; pmap_760->channels = D.47922_146;

(insn 3588 3587 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 72 [0x48])) [4 pmap_760->channels+0 S4 A32])
        (reg:SI 231 [ D.47922 ])) src/switch_core_media.c:3545 -1
     (nil))

;; D.45070_788 = strcasecmp (D.45049_787, "opus");

(insn 3589 3588 3590 (set (reg:SI 1979)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 606 [ mmap ])
                (const_int 8 [0x8])) [2 mmap_762->rm_encoding+0 S4 A32])) src/switch_core_media.c:3547 -1
     (nil))

(insn 3590 3589 3591 (set (reg:SI 1981)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC78") [flags 0x82]  <var_decl 0x41ea4840 *.LC78>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1082 [0x43a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1082 [0x43a])
            ] 29)) src/switch_core_media.c:3547 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC78") [flags 0x82]  <var_decl 0x41ea4840 *.LC78>)
        (nil)))

(insn 3591 3590 3592 (set (reg:SI 1980)
        (reg:SI 1981)) src/switch_core_media.c:3547 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC78") [flags 0x82]  <var_decl 0x41ea4840 *.LC78>)
        (nil)))

(insn 3592 3591 3593 (set (reg:SI 0 r0)
        (reg:SI 1979)) src/switch_core_media.c:3547 -1
     (nil))

(insn 3593 3592 3594 (set (reg:SI 1 r1)
        (reg:SI 1980)) src/switch_core_media.c:3547 -1
     (nil))

(call_insn/i 3594 3593 3595 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3547 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 3595 3594 0 (set (reg:SI 627 [ D.45070 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3547 -1
     (nil))

;; if (D.45070_788 == 0)

(insn 3596 3595 3597 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 627 [ D.45070 ])
            (const_int 0 [0]))) src/switch_core_media.c:3547 -1
     (nil))

(jump_insn 3597 3596 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3547 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 307

;; if (D.47922_146 == 1)

(insn 3599 3598 3600 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 231 [ D.47922 ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3548 -1
     (nil))

(jump_insn 3600 3599 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3548 -1
     (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil)))

;; Generating RTL for gimple basic block 308

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3549, session_161(D), 4, "Invalid SDP for opus.  Don\'t ask.. but it needs a /2\n");

(insn 3602 3601 3603 (set (reg:SI 1983)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1083 [0x43b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1083 [0x43b])
            ] 29)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3603 3602 3604 (set (reg:SI 1982)
        (reg:SI 1983)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3604 3603 3605 (set (reg:SI 1985)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1084 [0x43c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1084 [0x43c])
            ] 29)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3605 3604 3606 (set (reg/f:SI 1984)
        (reg:SI 1985)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3606 3605 3607 (set (reg:SI 1987)
        (plus:SI (reg/f:SI 1984)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3549 -1
     (nil))

(insn 3607 3606 3608 (set (reg:SI 1986)
        (plus:SI (reg:SI 1987)
            (const_int 8 [0x8]))) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1984)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3608 3607 3609 (set (reg:SI 1988)
        (const_int 3549 [0xddd])) src/switch_core_media.c:3549 -1
     (nil))

(insn 3609 3608 3610 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3549 -1
     (nil))

(insn 3610 3609 3611 (set (reg:SI 1989)
        (const_int 4 [0x4])) src/switch_core_media.c:3549 -1
     (nil))

(insn 3611 3610 3612 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1989)) src/switch_core_media.c:3549 -1
     (nil))

(insn 3612 3611 3613 (set (reg:SI 1991)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC348") [flags 0x82]  <var_decl 0x40418840 *.LC348>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1085 [0x43d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1085 [0x43d])
            ] 29)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC348") [flags 0x82]  <var_decl 0x40418840 *.LC348>)
        (nil)))

(insn 3613 3612 3614 (set (reg/f:SI 1990)
        (reg:SI 1991)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC348") [flags 0x82]  <var_decl 0x40418840 *.LC348>)
        (nil)))

(insn 3614 3613 3615 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1990)) src/switch_core_media.c:3549 -1
     (nil))

(insn 3615 3614 3616 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3549 -1
     (nil))

(insn 3616 3615 3617 (set (reg:SI 1 r1)
        (reg:SI 1982)) src/switch_core_media.c:3549 -1
     (nil))

(insn 3617 3616 3618 (set (reg:SI 2 r2)
        (reg:SI 1986)) src/switch_core_media.c:3549 -1
     (nil))

(insn 3618 3617 3619 (set (reg:SI 3 r3)
        (reg:SI 1988)) src/switch_core_media.c:3549 -1
     (nil))

(call_insn 3619 3618 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3549 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; pmap_760->adv_channels = 1;

(insn 3620 3619 3621 (set (reg:SI 1992)
        (const_int 1 [0x1])) src/switch_core_media.c:3550 -1
     (nil))

(insn 3621 3620 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 76 [0x4c])) [4 pmap_760->adv_channels+0 S4 A32])
        (reg:SI 1992)) src/switch_core_media.c:3550 -1
     (nil))

;; Generating RTL for gimple basic block 309

;; 

(code_label 3624 3623 3625 1459 "" [0 uses])

(note 3625 3624 0 NOTE_INSN_BASIC_BLOCK)

;; pmap_760->adv_channels = 2;

(insn 3626 3625 3627 (set (reg:SI 1993)
        (const_int 2 [0x2])) src/switch_core_media.c:3552 -1
     (nil))

(insn 3627 3626 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 76 [0x4c])) [4 pmap_760->adv_channels+0 S4 A32])
        (reg:SI 1993)) src/switch_core_media.c:3552 -1
     (nil))

;; Generating RTL for gimple basic block 310

;; 

(code_label 3628 3627 3629 1460 "" [0 uses])

(note 3629 3628 0 NOTE_INSN_BASIC_BLOCK)

;; D.45079_790 = mmap_762->rm_fmtp;

(insn 3630 3629 0 (set (reg/f:SI 628 [ D.45079 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 606 [ mmap ])
                (const_int 20 [0x14])) [2 mmap_762->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3554 -1
     (nil))

;; # DEBUG s => D.45079_790

(debug_insn 3631 3630 0 (var_location:SI s (const_int 0 [0])) src/switch_core_media.c:3554 -1
     (nil))
;; if (D.45079_790 == 0B)

(insn 3632 3631 3633 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 628 [ D.45079 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 3633 3632 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 311

;; if (D.47926_1486 == 0)

(insn 3635 3634 3636 311 (set (reg:SI 1994)
        (zero_extend:SI (mem:QI (reg/f:SI 628 [ D.45079 ]) [0 *D.45079_790+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 3636 3635 3637 311 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1994)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 3637 3636 3640 311 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 3640 3637 3638 458 [bb 458] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3638 3640 3639 458 (set (pc)
        (label_ref 0)) ./src/include/switch_utils.h:254 -1
     (nil))

(barrier 3639 3638 0)

;; Generating RTL for gimple basic block 312

;; pmap_760->channels = 2;

(insn 3642 3641 3643 (set (reg:SI 1995)
        (const_int 2 [0x2])) src/switch_core_media.c:3555 -1
     (nil))

(insn 3643 3642 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 72 [0x48])) [4 pmap_760->channels+0 S4 A32])
        (reg:SI 1995)) src/switch_core_media.c:3555 -1
     (nil))

;; Generating RTL for gimple basic block 313

;; 

(code_label 3646 3645 3647 1461 "" [0 uses])

(note 3647 3646 0 NOTE_INSN_BASIC_BLOCK)

;; pmap_760->channels = 1;

(insn 3648 3647 3649 (set (reg:SI 1996)
        (const_int 1 [0x1])) src/switch_core_media.c:3557 -1
     (nil))

(insn 3649 3648 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 72 [0x48])) [4 pmap_760->channels+0 S4 A32])
        (reg:SI 1996)) src/switch_core_media.c:3557 -1
     (nil))

;; Generating RTL for gimple basic block 314

;; 

(code_label 3652 3651 3653 1458 "" [0 uses])

(note 3653 3652 0 NOTE_INSN_BASIC_BLOCK)

;; pmap_760->adv_channels = D.47922_146;

(insn 3654 3653 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 76 [0x4c])) [4 pmap_760->adv_channels+0 S4 A32])
        (reg:SI 231 [ D.47922 ])) src/switch_core_media.c:3560 -1
     (nil))

;; Generating RTL for gimple basic block 315

;; 

(code_label 3655 3654 3656 1463 "" [0 uses])

(note 3656 3655 0 NOTE_INSN_BASIC_BLOCK)

;; D.45086_796 = switch_core_perform_session_strdup (session_161(D), D.45085_795, "src/switch_core_media.c", &__func__, 3563);

(insn 3657 3656 3658 (set (reg:SI 1997)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 228 [ connection ])
                (const_int 16 [0x10])) [2 connection_139->c_address+0 S4 A32])) src/switch_core_media.c:3563 -1
     (nil))

(insn 3658 3657 3659 (set (reg:SI 1999)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1086 [0x43e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1086 [0x43e])
            ] 29)) src/switch_core_media.c:3563 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3659 3658 3660 (set (reg:SI 1998)
        (reg:SI 1999)) src/switch_core_media.c:3563 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3660 3659 3661 (set (reg:SI 2001)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1087 [0x43f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1087 [0x43f])
            ] 29)) src/switch_core_media.c:3563 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3661 3660 3662 (set (reg/f:SI 2000)
        (reg:SI 2001)) src/switch_core_media.c:3563 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3662 3661 3663 (set (reg:SI 2003)
        (plus:SI (reg/f:SI 2000)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3563 -1
     (nil))

(insn 3663 3662 3664 (set (reg:SI 2002)
        (plus:SI (reg:SI 2003)
            (const_int 8 [0x8]))) src/switch_core_media.c:3563 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2000)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3664 3663 3665 (set (reg:SI 2004)
        (const_int 3563 [0xdeb])) src/switch_core_media.c:3563 -1
     (nil))

(insn 3665 3664 3666 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 2004)) src/switch_core_media.c:3563 -1
     (nil))

(insn 3666 3665 3667 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3563 -1
     (nil))

(insn 3667 3666 3668 (set (reg:SI 1 r1)
        (reg:SI 1997)) src/switch_core_media.c:3563 -1
     (nil))

(insn 3668 3667 3669 (set (reg:SI 2 r2)
        (reg:SI 1998)) src/switch_core_media.c:3563 -1
     (nil))

(insn 3669 3668 3670 (set (reg:SI 3 r3)
        (reg:SI 2002)) src/switch_core_media.c:3563 -1
     (nil))

(call_insn 3670 3669 3671 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3563 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3671 3670 0 (set (reg/f:SI 631 [ D.45086 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3563 -1
     (nil))

;; pmap_760->remote_sdp_ip = D.45086_796;

(insn 3672 3671 0 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 64 [0x40])) [2 pmap_760->remote_sdp_ip+0 S4 A32])
        (reg/f:SI 631 [ D.45086 ])) src/switch_core_media.c:3563 -1
     (nil))

;; pmap_760->remote_sdp_port = D.45087_798;

(insn 3673 3672 3674 (set (reg:SI 2005)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 20 [0x14])) [26 m_1764->m_port+0 S4 A32])) src/switch_core_media.c:3564 -1
     (nil))

(insn 3674 3673 0 (set (mem/s:HI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 68 [0x44])) [13 pmap_760->remote_sdp_port+0 S2 A32])
        (subreg:HI (reg:SI 2005) 0)) src/switch_core_media.c:3564 -1
     (nil))

;; D.45088_800 = switch_core_perform_session_strdup (session_161(D), D.45079_799, "src/switch_core_media.c", &__func__, 3565);

(insn 3675 3674 3676 (set (reg:SI 2006)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 606 [ mmap ])
                (const_int 20 [0x14])) [2 mmap_762->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3565 -1
     (nil))

(insn 3676 3675 3677 (set (reg:SI 2008)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1088 [0x440])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1088 [0x440])
            ] 29)) src/switch_core_media.c:3565 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3677 3676 3678 (set (reg:SI 2007)
        (reg:SI 2008)) src/switch_core_media.c:3565 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3678 3677 3679 (set (reg:SI 2010)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1089 [0x441])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1089 [0x441])
            ] 29)) src/switch_core_media.c:3565 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3679 3678 3680 (set (reg/f:SI 2009)
        (reg:SI 2010)) src/switch_core_media.c:3565 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3680 3679 3681 (set (reg:SI 2012)
        (plus:SI (reg/f:SI 2009)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3565 -1
     (nil))

(insn 3681 3680 3682 (set (reg:SI 2011)
        (plus:SI (reg:SI 2012)
            (const_int 8 [0x8]))) src/switch_core_media.c:3565 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2009)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3682 3681 3683 (set (reg:SI 2013)
        (const_int 3565 [0xded])) src/switch_core_media.c:3565 -1
     (nil))

(insn 3683 3682 3684 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 2013)) src/switch_core_media.c:3565 -1
     (nil))

(insn 3684 3683 3685 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3565 -1
     (nil))

(insn 3685 3684 3686 (set (reg:SI 1 r1)
        (reg:SI 2006)) src/switch_core_media.c:3565 -1
     (nil))

(insn 3686 3685 3687 (set (reg:SI 2 r2)
        (reg:SI 2007)) src/switch_core_media.c:3565 -1
     (nil))

(insn 3687 3686 3688 (set (reg:SI 3 r3)
        (reg:SI 2011)) src/switch_core_media.c:3565 -1
     (nil))

(call_insn 3688 3687 3689 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3565 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3689 3688 0 (set (reg/f:SI 635 [ D.45088 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3565 -1
     (nil))

;; pmap_760->rm_fmtp = D.45088_800;

(insn 3690 3689 0 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 52 [0x34])) [2 pmap_760->rm_fmtp+0 S4 A32])
        (reg/f:SI 635 [ D.45088 ])) src/switch_core_media.c:3565 -1
     (nil))

;; pmap_760->agreed_pt = D.45054_802;

(insn 3691 3690 3692 (set (reg:SI 2014)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 606 [ mmap ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3567 -1
     (nil))

(insn 3692 3691 3693 (set (reg:SI 2015)
        (lshiftrt:SI (reg:SI 2014)
            (const_int 1 [0x1]))) src/switch_core_media.c:3567 -1
     (nil))

(insn 3693 3692 3694 (set (reg:QI 2016)
        (subreg:QI (reg:SI 2015) 0)) src/switch_core_media.c:3567 -1
     (nil))

(insn 3694 3693 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 56 [0x38])) [0 pmap_760->agreed_pt+0 S1 A32])
        (reg:QI 2016)) src/switch_core_media.c:3567 -1
     (nil))

;; D.44655_803 = smh_186->num_negotiated_codecs;

(insn 3695 3694 3696 (set (reg:SI 2017)
        (const_int 23532 [0x5bec])) src/switch_core_media.c:3568 -1
     (nil))

(insn 3696 3695 0 (set (reg:SI 638 [ D.44655 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2017)) [4 smh_186->num_negotiated_codecs+0 S4 A32])) src/switch_core_media.c:3568 -1
     (nil))

;; smh_186->negotiated_codecs[D.44655_803] = mimp_761;

(insn 3697 3696 3698 (set (reg:SI 2019)
        (plus:SI (reg:SI 638 [ D.44655 ])
            (const_int 5824 [0x16c0]))) src/switch_core_media.c:3568 -1
     (nil))

(insn 3698 3697 3699 (set (reg:SI 2018)
        (plus:SI (reg:SI 2019)
            (const_int 8 [0x8]))) src/switch_core_media.c:3568 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 638 [ D.44655 ])
            (const_int 5832 [0x16c8]))
        (nil)))

(insn 3699 3698 3700 (set (reg:SI 2020)
        (const_int 4 [0x4])) src/switch_core_media.c:3568 -1
     (nil))

(insn 3700 3699 3701 (set (reg:SI 2021)
        (ashift:SI (reg:SI 2018)
            (const_int 2 [0x2]))) src/switch_core_media.c:3568 -1
     (nil))

(insn 3701 3700 3702 (set (reg:SI 2022)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2021))) src/switch_core_media.c:3568 -1
     (nil))

(insn 3702 3701 3703 (set (reg/f:SI 2023)
        (plus:SI (reg:SI 2022)
            (reg:SI 2020))) src/switch_core_media.c:3568 -1
     (nil))

(insn 3703 3702 0 (set (mem/s/f:SI (reg/f:SI 2023) [2 smh_186->negotiated_codecs S4 A32])
        (reg/v/f:SI 605 [ mimp ])) src/switch_core_media.c:3568 -1
     (nil))

;; smh_186->num_negotiated_codecs = D.45089_804;

(insn 3704 3703 3705 (set (reg:SI 2024)
        (const_int 23532 [0x5bec])) src/switch_core_media.c:3568 -1
     (nil))

(insn 3705 3704 3706 (set (reg:SI 2025)
        (plus:SI (reg:SI 638 [ D.44655 ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3568 -1
     (nil))

(insn 3706 3705 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2024)) [4 smh_186->num_negotiated_codecs+0 S4 A32])
        (reg:SI 2025)) src/switch_core_media.c:3568 -1
     (nil))

;; pmap_760->recv_pt = D.45054_806;

(insn 3707 3706 3708 (set (reg:SI 2026)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 606 [ mmap ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3569 -1
     (nil))

(insn 3708 3707 3709 (set (reg:SI 2027)
        (lshiftrt:SI (reg:SI 2026)
            (const_int 1 [0x1]))) src/switch_core_media.c:3569 -1
     (nil))

(insn 3709 3708 3710 (set (reg:QI 2028)
        (subreg:QI (reg:SI 2027) 0)) src/switch_core_media.c:3569 -1
     (nil))

(insn 3710 3709 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 57 [0x39])) [0 pmap_760->recv_pt+0 S1 A8])
        (reg:QI 2028)) src/switch_core_media.c:3569 -1
     (nil))

;; j_807 = j_1881 + 1;

(insn 3711 3710 0 (set (reg/v:SI 642 [ j ])
        (plus:SI (reg/v:SI 642 [ j ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3514 -1
     (nil))

;; # DEBUG j => j_807

(debug_insn 3712 3711 0 (var_location:SI j (const_int 0 [0])) src/switch_core_media.c:3514 -1
     (nil))
;; # DEBUG j => j_807

(debug_insn 3713 3712 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; ivtmp.1062_522 = ivtmp.1062_1793 + 16;

(insn 3714 3713 0 (set (reg:SI 453 [ ivtmp.1062 ])
        (plus:SI (reg:SI 453 [ ivtmp.1062 ])
            (const_int 16 [0x10]))) src/switch_core_media.c:3514 -1
     (nil))

;; if (j_807 != m_idx_1715)

(insn 3716 3714 3717 315 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 642 [ j ])
            (reg/v:SI 202 [ m_idx ]))) src/switch_core_media.c:3514 -1
     (nil))

(jump_insn 3717 3716 3720 315 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3715)
            (pc))) src/switch_core_media.c:3514 -1
     (expr_list:REG_BR_PROB (const_int 9677 [0x25cd])
        (nil)))

(note 3720 3717 3718 459 [bb 459] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3718 3720 3719 459 (set (pc)
        (label_ref 0)) src/switch_core_media.c:3514 -1
     (nil))

(barrier 3719 3718 0)

;; Generating RTL for gimple basic block 316

;; 

(code_label 3721 3719 3722 1453 "" [0 uses])

(note 3722 3721 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG match => match_9

(debug_insn 3723 3722 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (match_9 != 0)

(insn 3724 3723 3725 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ match ])
            (const_int 0 [0]))) src/switch_core_media.c:3574 -1
     (nil))

(jump_insn 3725 3724 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3574 -1
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil)))

;; Generating RTL for gimple basic block 317

;; 

(code_label 3726 3725 3727 1465 "" [0 uses])

(note 3727 3726 0 NOTE_INSN_BASIC_BLOCK)

;; switch_snprintf (&tmp, 50, "%d", D.44767_810);

(insn 3728 3727 3729 (set (reg:SI 2029)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3579 -1
     (nil))

(insn 3729 3728 3730 (set (reg:SI 2031)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1090 [0x442])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1090 [0x442])
            ] 29)) src/switch_core_media.c:3579 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3730 3729 3731 (set (reg:SI 2030)
        (reg:SI 2031)) src/switch_core_media.c:3579 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3731 3730 3732 (set (reg/f:SI 2032)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3579 -1
     (nil))

(insn 3732 3731 3733 (set (reg:SI 2033)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 2032)
                    (const_int 68 [0x44])) [13 D.44750_808->remote_sdp_port+0 S2 A32]))) src/switch_core_media.c:3579 -1
     (nil))

(insn 3733 3732 3734 (set (reg:SI 0 r0)
        (reg:SI 2029)) src/switch_core_media.c:3579 -1
     (nil))

(insn 3734 3733 3735 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) src/switch_core_media.c:3579 -1
     (nil))

(insn 3735 3734 3736 (set (reg:SI 2 r2)
        (reg:SI 2030)) src/switch_core_media.c:3579 -1
     (nil))

(insn 3736 3735 3737 (set (reg:SI 3 r3)
        (reg:SI 2033)) src/switch_core_media.c:3579 -1
     (nil))

(call_insn 3737 3736 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3579 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_811, "remote_media_ip", D.44760_813, 1);

(insn 3738 3737 3739 (set (reg:SI 2034)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3580 -1
     (nil))

(insn 3739 3738 3740 (set (reg:SI 2036)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1091 [0x443])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1091 [0x443])
            ] 29)) src/switch_core_media.c:3580 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
        (nil)))

(insn 3740 3739 3741 (set (reg:SI 2035)
        (reg:SI 2036)) src/switch_core_media.c:3580 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
        (nil)))

(insn 3741 3740 3742 (set (reg/f:SI 2037)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3580 -1
     (nil))

(insn 3742 3741 3743 (set (reg:SI 2038)
        (mem/s/f:SI (plus:SI (reg/f:SI 2037)
                (const_int 64 [0x40])) [2 D.44750_812->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3580 -1
     (nil))

(insn 3743 3742 3744 (set (reg:SI 0 r0)
        (reg:SI 2034)) src/switch_core_media.c:3580 -1
     (nil))

(insn 3744 3743 3745 (set (reg:SI 1 r1)
        (reg:SI 2035)) src/switch_core_media.c:3580 -1
     (nil))

(insn 3745 3744 3746 (set (reg:SI 2 r2)
        (reg:SI 2038)) src/switch_core_media.c:3580 -1
     (nil))

(insn 3746 3745 3747 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3580 -1
     (nil))

(call_insn 3747 3746 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3580 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_814, "remote_media_port", &tmp, 1);

(insn 3748 3747 3749 (set (reg:SI 2039)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3581 -1
     (nil))

(insn 3749 3748 3750 (set (reg:SI 2041)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1092 [0x444])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1092 [0x444])
            ] 29)) src/switch_core_media.c:3581 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
        (nil)))

(insn 3750 3749 3751 (set (reg:SI 2040)
        (reg:SI 2041)) src/switch_core_media.c:3581 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
        (nil)))

(insn 3751 3750 3752 (set (reg:SI 2042)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3581 -1
     (nil))

(insn 3752 3751 3753 (set (reg:SI 0 r0)
        (reg:SI 2039)) src/switch_core_media.c:3581 -1
     (nil))

(insn 3753 3752 3754 (set (reg:SI 1 r1)
        (reg:SI 2040)) src/switch_core_media.c:3581 -1
     (nil))

(insn 3754 3753 3755 (set (reg:SI 2 r2)
        (reg:SI 2042)) src/switch_core_media.c:3581 -1
     (nil))

(insn 3755 3754 3756 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3581 -1
     (nil))

(call_insn 3756 3755 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3581 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_snprintf (&tmp, 50, "%d", D.45093_817);

(insn 3757 3756 3758 (set (reg:SI 2043)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3592 -1
     (nil))

(insn 3758 3757 3759 (set (reg:SI 2045)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1093 [0x445])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1093 [0x445])
            ] 29)) src/switch_core_media.c:3592 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3759 3758 3760 (set (reg:SI 2044)
        (reg:SI 2045)) src/switch_core_media.c:3592 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3760 3759 3761 (set (reg/f:SI 2046)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3592 -1
     (nil))

(insn 3761 3760 3762 (set (reg:SI 2047)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 2046)
                    (const_int 57 [0x39])) [0 D.44750_815->recv_pt+0 S1 A8]))) src/switch_core_media.c:3592 -1
     (nil))

(insn 3762 3761 3763 (set (reg:SI 0 r0)
        (reg:SI 2043)) src/switch_core_media.c:3592 -1
     (nil))

(insn 3763 3762 3764 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) src/switch_core_media.c:3592 -1
     (nil))

(insn 3764 3763 3765 (set (reg:SI 2 r2)
        (reg:SI 2044)) src/switch_core_media.c:3592 -1
     (nil))

(insn 3765 3764 3766 (set (reg:SI 3 r3)
        (reg:SI 2047)) src/switch_core_media.c:3592 -1
     (nil))

(call_insn 3766 3765 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3592 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_818, "rtp_audio_recv_pt", &tmp, 1);

(insn 3767 3766 3768 (set (reg:SI 2048)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3593 -1
     (nil))

(insn 3768 3767 3769 (set (reg:SI 2050)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC349") [flags 0x82]  <var_decl 0x404188a0 *.LC349>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1094 [0x446])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1094 [0x446])
            ] 29)) src/switch_core_media.c:3593 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC349") [flags 0x82]  <var_decl 0x404188a0 *.LC349>)
        (nil)))

(insn 3769 3768 3770 (set (reg:SI 2049)
        (reg:SI 2050)) src/switch_core_media.c:3593 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC349") [flags 0x82]  <var_decl 0x404188a0 *.LC349>)
        (nil)))

(insn 3770 3769 3771 (set (reg:SI 2051)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3593 -1
     (nil))

(insn 3771 3770 3772 (set (reg:SI 0 r0)
        (reg:SI 2048)) src/switch_core_media.c:3593 -1
     (nil))

(insn 3772 3771 3773 (set (reg:SI 1 r1)
        (reg:SI 2049)) src/switch_core_media.c:3593 -1
     (nil))

(insn 3773 3772 3774 (set (reg:SI 2 r2)
        (reg:SI 2051)) src/switch_core_media.c:3593 -1
     (nil))

(insn 3774 3773 3775 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3593 -1
     (nil))

(call_insn 3775 3774 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3593 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG D#75 => &MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].read_codec

(debug_insn 3776 3775 0 (var_location:SI D#75 (const_int 0 [0])) src/switch_core_media.c:3595 -1
     (nil))
;; # DEBUG codec => D#75

(debug_insn 3777 3776 0 (var_location:SI codec (const_int 0 [0])) src/switch_core_media.c:3595 -1
     (nil))
;; if (D.47933_1489 != 0)

(insn 3778 3777 3779 (set (reg:SI 2053)
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1620 [0x654])) [4 MEM[(struct switch_codec_t *)smh_186 + 1604B].flags+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 3779 3778 3780 (set (reg:SI 2052)
        (and:SI (reg:SI 2053)
            (const_int 256 [0x100]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 3780 3779 3781 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2052)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 3781 3780 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 318

;; if (D.47932_1490 != 0B)

(insn 3783 3782 3784 (set (reg:SI 2054)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1636 [0x664])) [2 MEM[(struct switch_codec_t *)smh_186 + 1604B].mutex+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 3784 3783 3785 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2054)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 3785 3784 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 319

;; if (D.47931_1491 != 0B)

(insn 3787 3786 3788 (set (reg:SI 2055)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1604 [0x644])) [2 MEM[(struct switch_codec_t *)smh_186 + 1604B].codec_interface+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 3788 3787 3789 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2055)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 3789 3788 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 320

;; if (D.47930_1492 != 0B)

(insn 3791 3790 3792 (set (reg:SI 2056)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1608 [0x648])) [2 MEM[(struct switch_codec_t *)smh_186 + 1604B].implementation+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 3792 3791 3793 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2056)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 3793 3792 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 321

;; MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].reset_codec = 1;

(insn 3795 3794 3796 (set (reg:SI 2057)
        (const_int 11488 [0x2ce0])) src/switch_core_media.c:3596 -1
     (nil))

(insn 3796 3795 3797 (set (reg:SI 2058)
        (const_int 1 [0x1])) src/switch_core_media.c:3596 -1
     (nil))

(insn 3797 3796 3798 (set (reg:QI 2059)
        (subreg:QI (reg:SI 2058) 0)) src/switch_core_media.c:3596 -1
     (nil))

(insn 3798 3797 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2057)) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].reset_codec+0 S1 A32])
        (reg:QI 2059)) src/switch_core_media.c:3596 -1
     (nil))

;; Generating RTL for gimple basic block 322

;; 

(code_label 3799 3798 3800 1466 "" [0 uses])

(note 3800 3799 0 NOTE_INSN_BASIC_BLOCK)

;; D.45099_823 = switch_core_media_set_codec (session_161(D), 0, D.45098_822);

(insn 3801 3800 3802 (set (reg:SI 2061)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3599 -1
     (nil))

(insn 3802 3801 3803 (set (reg/f:SI 2060)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2061)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3599 -1
     (nil))

(insn 3803 3802 3804 (set (reg:SI 2062)
        (mem/s:SI (plus:SI (reg/f:SI 2060)
                (const_int 12 [0xc])) [4 D.44471_821->codec_flags+0 S4 A32])) src/switch_core_media.c:3599 -1
     (nil))

(insn 3804 3803 3805 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3599 -1
     (nil))

(insn 3805 3804 3806 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3599 -1
     (nil))

(insn 3806 3805 3807 (set (reg:SI 2 r2)
        (reg:SI 2062)) src/switch_core_media.c:3599 -1
     (nil))

(call_insn 3807 3806 3808 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_set_codec") [flags 0x1]  <function_decl 0x40945a00 switch_core_media_set_codec>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3599 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 3808 3807 0 (set (reg:SI 656 [ D.45099 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3599 -1
     (nil))

;; if (D.45099_823 == 0)

(insn 3809 3808 3810 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 656 [ D.45099 ])
            (const_int 0 [0]))) src/switch_core_media.c:3599 -1
     (nil))

(jump_insn 3810 3809 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3599 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 323

;; # DEBUG got_audio => 1

(debug_insn 3812 3811 0 (var_location:SI got_audio (const_int 0 [0])) src/switch_core_media.c:3600 -1
     (nil))
;; check_ice (smh_186, 0, sdp_198, m_1764);

(insn 3813 3812 3814 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3601 -1
     (nil))

(insn 3814 3813 3815 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3601 -1
     (nil))

(insn 3815 3814 3816 (set (reg:SI 2 r2)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3601 -1
     (nil))

(insn 3816 3815 3817 (set (reg:SI 3 r3)
        (reg/v/f:SI 813 [ m ])) src/switch_core_media.c:3601 -1
     (nil))

(call_insn 3817 3816 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("check_ice") [flags 0x3]  <function_decl 0x414f3a00 check_ice>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3601 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 324

;; 

(code_label 3818 3817 3819 1444 "" [0 uses])

(note 3819 3818 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG got_audio => got_audio_65

(debug_insn 3820 3819 0 (var_location:SI got_audio (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => match_13

(debug_insn 3821 3820 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (best_te_1624 == 0)

(insn 3822 3821 3823 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ best_te ])
            (const_int 0 [0]))) src/switch_core_media.c:3607 -1
     (nil))

(jump_insn 3823 3822 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3607 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 325

;; D.45107_826 = switch_media_handle_test_media_flag (smh_186, 8);

(insn 3825 3824 3826 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3607 -1
     (nil))

(insn 3826 3825 3827 (set (reg:SI 1 r1)
        (const_int 8 [0x8])) src/switch_core_media.c:3607 -1
     (nil))

(call_insn 3827 3826 3828 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3607 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 3828 3827 0 (set (reg:SI 657 [ D.45107 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3607 -1
     (nil))

;; if (D.45107_826 != 0)

(insn 3829 3828 3830 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 657 [ D.45107 ])
            (const_int 0 [0]))) src/switch_core_media.c:3607 -1
     (nil))

(jump_insn 3830 3829 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3607 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 326

;; D.45109_828 = switch_channel_test_flag (D.44530_827, 93);

(insn 3832 3831 3833 (set (reg:SI 2063)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3608 -1
     (nil))

(insn 3833 3832 3834 (set (reg:SI 0 r0)
        (reg:SI 2063)) src/switch_core_media.c:3608 -1
     (nil))

(insn 3834 3833 3835 (set (reg:SI 1 r1)
        (const_int 93 [0x5d])) src/switch_core_media.c:3608 -1
     (nil))

(call_insn 3835 3834 3836 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3608 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 3836 3835 0 (set (reg:SI 659 [ D.45109 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3608 -1
     (nil))

;; if (D.45109_828 != 0)

(insn 3837 3836 3838 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 659 [ D.45109 ])
            (const_int 0 [0]))) src/switch_core_media.c:3607 -1
     (nil))

(jump_insn 3838 3837 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3607 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 327

;; 

(code_label 3839 3838 3840 1468 "" [0 uses])

(note 3840 3839 0 NOTE_INSN_BASIC_BLOCK)

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3609, session_161(D), 7, "No 2833 in SDP. Liberal DTMF mode adding %d as telephone-event.\n", D.45111_831);

(insn 3841 3840 3842 (set (reg:SI 2065)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1095 [0x447])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1095 [0x447])
            ] 29)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3842 3841 3843 (set (reg:SI 2064)
        (reg:SI 2065)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3843 3842 3844 (set (reg:SI 2067)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1096 [0x448])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1096 [0x448])
            ] 29)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3844 3843 3845 (set (reg/f:SI 2066)
        (reg:SI 2067)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3845 3844 3846 (set (reg:SI 2069)
        (plus:SI (reg/f:SI 2066)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3609 -1
     (nil))

(insn 3846 3845 3847 (set (reg:SI 2068)
        (plus:SI (reg:SI 2069)
            (const_int 8 [0x8]))) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2066)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3847 3846 3848 (set (reg:SI 2070)
        (const_int 3609 [0xe19])) src/switch_core_media.c:3609 -1
     (nil))

(insn 3848 3847 3849 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3609 -1
     (nil))

(insn 3849 3848 3850 (set (reg:SI 2071)
        (const_int 7 [0x7])) src/switch_core_media.c:3609 -1
     (nil))

(insn 3850 3849 3851 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2071)) src/switch_core_media.c:3609 -1
     (nil))

(insn 3851 3850 3852 (set (reg:SI 2073)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC350") [flags 0x82]  <var_decl 0x40418900 *.LC350>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1097 [0x449])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1097 [0x449])
            ] 29)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC350") [flags 0x82]  <var_decl 0x40418900 *.LC350>)
        (nil)))

(insn 3852 3851 3853 (set (reg/f:SI 2072)
        (reg:SI 2073)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC350") [flags 0x82]  <var_decl 0x40418900 *.LC350>)
        (nil)))

(insn 3853 3852 3854 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2072)) src/switch_core_media.c:3609 -1
     (nil))

(insn 3854 3853 3855 (set (reg:SI 2075)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3610 -1
     (nil))

(insn 3855 3854 3856 (set (reg/f:SI 2074)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2075)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3610 -1
     (nil))

(insn 3856 3855 3857 (set (reg:SI 2076)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 2074)
                    (const_int 120 [0x78])) [0 D.44471_829->te+0 S1 A32]))) src/switch_core_media.c:3609 -1
     (nil))

(insn 3857 3856 3858 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 2076)) src/switch_core_media.c:3609 -1
     (nil))

(insn 3858 3857 3859 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3609 -1
     (nil))

(insn 3859 3858 3860 (set (reg:SI 1 r1)
        (reg:SI 2064)) src/switch_core_media.c:3609 -1
     (nil))

(insn 3860 3859 3861 (set (reg:SI 2 r2)
        (reg:SI 2068)) src/switch_core_media.c:3609 -1
     (nil))

(insn 3861 3860 3862 (set (reg:SI 3 r3)
        (reg:SI 2070)) src/switch_core_media.c:3609 -1
     (nil))

(call_insn 3862 3861 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3609 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; best_te_833 = D.44471_832->te;

(insn 3863 3862 3864 (set (reg:SI 2078)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3611 -1
     (nil))

(insn 3864 3863 3865 (set (reg/f:SI 2077)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2078)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3611 -1
     (nil))

(insn 3865 3864 0 (set (reg/v:SI 664 [ best_te ])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 2077)
                    (const_int 120 [0x78])) [0 D.44471_832->te+0 S1 A32]))) src/switch_core_media.c:3611 -1
     (nil))

;; # DEBUG best_te => best_te_833

(debug_insn 3866 3865 0 (var_location:QI best_te (const_int 0 [0])) src/switch_core_media.c:3611 -1
     (nil))
;; # DEBUG best_te => best_te_833

(debug_insn 3867 3866 0 (var_location:QI best_te (const_int 0 [0])) -1
     (nil))
;; if (best_te_833 != 0)

(insn 3868 3867 3869 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 664 [ best_te ])
            (const_int 0 [0]))) src/switch_core_media.c:3614 -1
     (nil))

(jump_insn 3869 3868 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3614 -1
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil)))

;; Generating RTL for gimple basic block 328

;; 

(code_label 3870 3869 3871 1467 "" [0 uses])

(note 3871 3870 0 NOTE_INSN_BASIC_BLOCK)

;; D.45114_834 = switch_channel_direction (channel_162);

(insn 3872 3871 3873 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:3615 -1
     (nil))

(call_insn 3873 3872 3874 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_direction") [flags 0x41]  <function_decl 0x4085b700 switch_channel_direction>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3615 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 3874 3873 0 (set (reg:SI 665 [ D.45114 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3615 -1
     (nil))

;; if (D.45114_834 == 1)

(insn 3875 3874 3876 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 665 [ D.45114 ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3615 -1
     (nil))

(jump_insn 3876 3875 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3615 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 329

;; D.44471_835 = smh_186->mparams;

(insn 3878 3877 3879 (set (reg:SI 2079)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3616 -1
     (nil))

(insn 3879 3878 0 (set (reg/f:SI 666 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2079)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3616 -1
     (nil))

;; D.44471_835->te = best_te_1860;

(insn 3880 3879 3881 (set (reg:QI 2080)
        (subreg/s/u:QI (reg/v:SI 145 [ best_te ]) 0)) src/switch_core_media.c:3616 -1
     (nil))

(insn 3881 3880 0 (set (mem/s:QI (plus:SI (reg/f:SI 666 [ D.44471 ])
                (const_int 120 [0x78])) [0 D.44471_835->te+0 S1 A32])
        (reg:QI 2080)) src/switch_core_media.c:3616 -1
     (nil))

;; # DEBUG D#11 => D.44471_835->te

(debug_insn 3882 3881 0 (var_location:QI D#11 (const_int 0 [0])) src/switch_core_media.c:3616 -1
     (nil))
;; # DEBUG te => D#11

(debug_insn 3883 3882 0 (var_location:QI te (const_int 0 [0])) src/switch_core_media.c:3616 -1
     (nil))
;; D.44857_837 = (int) best_te_1860;

(insn 3884 3883 0 (set (reg:SI 667 [ D.44857 ])
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3617 -1
     (nil))

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3617, session_161(D), 7, "Set 2833 dtmf send payload to %u\n", D.44857_837);

(insn 3885 3884 3886 (set (reg:SI 2082)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1098 [0x44a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1098 [0x44a])
            ] 29)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3886 3885 3887 (set (reg:SI 2081)
        (reg:SI 2082)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3887 3886 3888 (set (reg:SI 2084)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1099 [0x44b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1099 [0x44b])
            ] 29)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3888 3887 3889 (set (reg/f:SI 2083)
        (reg:SI 2084)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3889 3888 3890 (set (reg:SI 2086)
        (plus:SI (reg/f:SI 2083)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3617 -1
     (nil))

(insn 3890 3889 3891 (set (reg:SI 2085)
        (plus:SI (reg:SI 2086)
            (const_int 8 [0x8]))) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2083)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3891 3890 3892 (set (reg:SI 2087)
        (const_int 3617 [0xe21])) src/switch_core_media.c:3617 -1
     (nil))

(insn 3892 3891 3893 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3617 -1
     (nil))

(insn 3893 3892 3894 (set (reg:SI 2088)
        (const_int 7 [0x7])) src/switch_core_media.c:3617 -1
     (nil))

(insn 3894 3893 3895 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2088)) src/switch_core_media.c:3617 -1
     (nil))

(insn 3895 3894 3896 (set (reg:SI 2090)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC351") [flags 0x82]  <var_decl 0x40418960 *.LC351>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1100 [0x44c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1100 [0x44c])
            ] 29)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC351") [flags 0x82]  <var_decl 0x40418960 *.LC351>)
        (nil)))

(insn 3896 3895 3897 (set (reg/f:SI 2089)
        (reg:SI 2090)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC351") [flags 0x82]  <var_decl 0x40418960 *.LC351>)
        (nil)))

(insn 3897 3896 3898 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2089)) src/switch_core_media.c:3617 -1
     (nil))

(insn 3898 3897 3899 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 667 [ D.44857 ])) src/switch_core_media.c:3617 -1
     (nil))

(insn 3899 3898 3900 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3617 -1
     (nil))

(insn 3900 3899 3901 (set (reg:SI 1 r1)
        (reg:SI 2081)) src/switch_core_media.c:3617 -1
     (nil))

(insn 3901 3900 3902 (set (reg:SI 2 r2)
        (reg:SI 2085)) src/switch_core_media.c:3617 -1
     (nil))

(insn 3902 3901 3903 (set (reg:SI 3 r3)
        (reg:SI 2087)) src/switch_core_media.c:3617 -1
     (nil))

(call_insn 3903 3902 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3617 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_838, "dtmf_type", "rfc2833", 1);

(insn 3904 3903 3905 (set (reg:SI 2091)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3618 -1
     (nil))

(insn 3905 3904 3906 (set (reg:SI 2093)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1101 [0x44d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1101 [0x44d])
            ] 29)) src/switch_core_media.c:3618 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 3906 3905 3907 (set (reg:SI 2092)
        (reg:SI 2093)) src/switch_core_media.c:3618 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 3907 3906 3908 (set (reg:SI 2095)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1102 [0x44e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1102 [0x44e])
            ] 29)) src/switch_core_media.c:3618 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
        (nil)))

(insn 3908 3907 3909 (set (reg:SI 2094)
        (reg:SI 2095)) src/switch_core_media.c:3618 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
        (nil)))

(insn 3909 3908 3910 (set (reg:SI 0 r0)
        (reg:SI 2091)) src/switch_core_media.c:3618 -1
     (nil))

(insn 3910 3909 3911 (set (reg:SI 1 r1)
        (reg:SI 2092)) src/switch_core_media.c:3618 -1
     (nil))

(insn 3911 3910 3912 (set (reg:SI 2 r2)
        (reg:SI 2094)) src/switch_core_media.c:3618 -1
     (nil))

(insn 3912 3911 3913 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3618 -1
     (nil))

(call_insn 3913 3912 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3618 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; D.44471_839->dtmf_type = 0;

(insn 3914 3913 3915 (set (reg:SI 2097)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3619 -1
     (nil))

(insn 3915 3914 3916 (set (reg/f:SI 2096)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2097)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3619 -1
     (nil))

(insn 3916 3915 3917 (set (reg:SI 2098)
        (const_int 0 [0])) src/switch_core_media.c:3619 -1
     (nil))

(insn 3917 3916 0 (set (mem/s:SI (plus:SI (reg/f:SI 2096)
                (const_int 136 [0x88])) [30 D.44471_839->dtmf_type+0 S4 A32])
        (reg:SI 2098)) src/switch_core_media.c:3619 -1
     (nil))

;; D.44605_840 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

(insn 3918 3917 0 (set (reg/f:SI 670 [ D.44605 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3620 -1
     (nil))

;; if (D.44605_840 != 0B)

(insn 3919 3918 3920 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 670 [ D.44605 ])
            (const_int 0 [0]))) src/switch_core_media.c:3620 -1
     (nil))

(jump_insn 3920 3919 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3620 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 330

;; switch_rtp_set_telephony_event (D.44605_840, best_te_1860);

(insn 3922 3921 3923 (set (reg:SI 0 r0)
        (reg/f:SI 670 [ D.44605 ])) src/switch_core_media.c:3621 -1
     (nil))

(insn 3923 3922 3924 (set (reg:SI 1 r1)
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3621 -1
     (nil))

(call_insn 3924 3923 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_telephony_event") [flags 0x41]  <function_decl 0x408ceb00 switch_rtp_set_telephony_event>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3621 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; switch_channel_set_variable_printf (D.44530_842, "rtp_2833_send_payload", "%d", D.44857_837);

(insn 3925 3924 3926 (set (reg:SI 2099)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3622 -1
     (nil))

(insn 3926 3925 3927 (set (reg:SI 2101)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1103 [0x44f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1103 [0x44f])
            ] 29)) src/switch_core_media.c:3622 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
        (nil)))

(insn 3927 3926 3928 (set (reg:SI 2100)
        (reg:SI 2101)) src/switch_core_media.c:3622 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
        (nil)))

(insn 3928 3927 3929 (set (reg:SI 2103)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1104 [0x450])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1104 [0x450])
            ] 29)) src/switch_core_media.c:3622 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3929 3928 3930 (set (reg:SI 2102)
        (reg:SI 2103)) src/switch_core_media.c:3622 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3930 3929 3931 (set (reg:SI 0 r0)
        (reg:SI 2099)) src/switch_core_media.c:3622 -1
     (nil))

(insn 3931 3930 3932 (set (reg:SI 1 r1)
        (reg:SI 2100)) src/switch_core_media.c:3622 -1
     (nil))

(insn 3932 3931 3933 (set (reg:SI 2 r2)
        (reg:SI 2102)) src/switch_core_media.c:3622 -1
     (nil))

(insn 3933 3932 3934 (set (reg:SI 3 r3)
        (reg:SI 667 [ D.44857 ])) src/switch_core_media.c:3622 -1
     (nil))

(call_insn 3934 3933 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_printf") [flags 0x41]  <function_decl 0x4083dc00 switch_channel_set_variable_printf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3622 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 331

;; 

(code_label 3937 3936 3938 1470 "" [0 uses])

(note 3938 3937 0 NOTE_INSN_BASIC_BLOCK)

;; D.44471_845 = smh_186->mparams;

(insn 3939 3938 3940 (set (reg:SI 2104)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3625 -1
     (nil))

(insn 3940 3939 0 (set (reg/f:SI 672 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2104)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3625 -1
     (nil))

;; D.44471_845->te = best_te_1860;

(insn 3941 3940 3942 (set (reg:QI 2105)
        (subreg/s/u:QI (reg/v:SI 145 [ best_te ]) 0)) src/switch_core_media.c:3625 -1
     (nil))

(insn 3942 3941 0 (set (mem/s:QI (plus:SI (reg/f:SI 672 [ D.44471 ])
                (const_int 120 [0x78])) [0 D.44471_845->te+0 S1 A32])
        (reg:QI 2105)) src/switch_core_media.c:3625 -1
     (nil))

;; D.44471_845->recv_te = best_te_1860;

(insn 3943 3942 3944 (set (reg:QI 2106)
        (subreg/s/u:QI (reg/v:SI 145 [ best_te ]) 0)) src/switch_core_media.c:3625 -1
     (nil))

(insn 3944 3943 0 (set (mem/s:QI (plus:SI (reg/f:SI 672 [ D.44471 ])
                (const_int 121 [0x79])) [0 D.44471_845->recv_te+0 S1 A8])
        (reg:QI 2106)) src/switch_core_media.c:3625 -1
     (nil))

;; # DEBUG te => best_te_1860

(debug_insn 3945 3944 0 (var_location:QI te (const_int 0 [0])) src/switch_core_media.c:3625 -1
     (nil))
;; D.45120_848 = (int) best_te_1860;

(insn 3946 3945 0 (set (reg:SI 674 [ D.45120 ])
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3626 -1
     (nil))

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3626, session_161(D), 7, "Set 2833 dtmf send/recv payload to %u\n", D.45120_848);

(insn 3947 3946 3948 (set (reg:SI 2108)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1105 [0x451])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1105 [0x451])
            ] 29)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3948 3947 3949 (set (reg:SI 2107)
        (reg:SI 2108)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3949 3948 3950 (set (reg:SI 2110)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1106 [0x452])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1106 [0x452])
            ] 29)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3950 3949 3951 (set (reg/f:SI 2109)
        (reg:SI 2110)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3951 3950 3952 (set (reg:SI 2112)
        (plus:SI (reg/f:SI 2109)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3626 -1
     (nil))

(insn 3952 3951 3953 (set (reg:SI 2111)
        (plus:SI (reg:SI 2112)
            (const_int 8 [0x8]))) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2109)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3953 3952 3954 (set (reg:SI 2113)
        (const_int 3626 [0xe2a])) src/switch_core_media.c:3626 -1
     (nil))

(insn 3954 3953 3955 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3626 -1
     (nil))

(insn 3955 3954 3956 (set (reg:SI 2114)
        (const_int 7 [0x7])) src/switch_core_media.c:3626 -1
     (nil))

(insn 3956 3955 3957 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2114)) src/switch_core_media.c:3626 -1
     (nil))

(insn 3957 3956 3958 (set (reg:SI 2116)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC355") [flags 0x82]  <var_decl 0x40418ae0 *.LC355>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1107 [0x453])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1107 [0x453])
            ] 29)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC355") [flags 0x82]  <var_decl 0x40418ae0 *.LC355>)
        (nil)))

(insn 3958 3957 3959 (set (reg/f:SI 2115)
        (reg:SI 2116)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC355") [flags 0x82]  <var_decl 0x40418ae0 *.LC355>)
        (nil)))

(insn 3959 3958 3960 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2115)) src/switch_core_media.c:3626 -1
     (nil))

(insn 3960 3959 3961 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 674 [ D.45120 ])) src/switch_core_media.c:3626 -1
     (nil))

(insn 3961 3960 3962 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3626 -1
     (nil))

(insn 3962 3961 3963 (set (reg:SI 1 r1)
        (reg:SI 2107)) src/switch_core_media.c:3626 -1
     (nil))

(insn 3963 3962 3964 (set (reg:SI 2 r2)
        (reg:SI 2111)) src/switch_core_media.c:3626 -1
     (nil))

(insn 3964 3963 3965 (set (reg:SI 3 r3)
        (reg:SI 2113)) src/switch_core_media.c:3626 -1
     (nil))

(call_insn 3965 3964 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3626 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_849, "dtmf_type", "rfc2833", 1);

(insn 3966 3965 3967 (set (reg:SI 2117)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3627 -1
     (nil))

(insn 3967 3966 3968 (set (reg:SI 2119)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1108 [0x454])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1108 [0x454])
            ] 29)) src/switch_core_media.c:3627 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 3968 3967 3969 (set (reg:SI 2118)
        (reg:SI 2119)) src/switch_core_media.c:3627 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 3969 3968 3970 (set (reg:SI 2121)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1109 [0x455])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1109 [0x455])
            ] 29)) src/switch_core_media.c:3627 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
        (nil)))

(insn 3970 3969 3971 (set (reg:SI 2120)
        (reg:SI 2121)) src/switch_core_media.c:3627 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
        (nil)))

(insn 3971 3970 3972 (set (reg:SI 0 r0)
        (reg:SI 2117)) src/switch_core_media.c:3627 -1
     (nil))

(insn 3972 3971 3973 (set (reg:SI 1 r1)
        (reg:SI 2118)) src/switch_core_media.c:3627 -1
     (nil))

(insn 3973 3972 3974 (set (reg:SI 2 r2)
        (reg:SI 2120)) src/switch_core_media.c:3627 -1
     (nil))

(insn 3974 3973 3975 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3627 -1
     (nil))

(call_insn 3975 3974 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3627 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; D.44471_850->dtmf_type = 0;

(insn 3976 3975 3977 (set (reg:SI 2123)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3628 -1
     (nil))

(insn 3977 3976 3978 (set (reg/f:SI 2122)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2123)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3628 -1
     (nil))

(insn 3978 3977 3979 (set (reg:SI 2124)
        (const_int 0 [0])) src/switch_core_media.c:3628 -1
     (nil))

(insn 3979 3978 0 (set (mem/s:SI (plus:SI (reg/f:SI 2122)
                (const_int 136 [0x88])) [30 D.44471_850->dtmf_type+0 S4 A32])
        (reg:SI 2124)) src/switch_core_media.c:3628 -1
     (nil))

;; D.44605_851 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

(insn 3980 3979 0 (set (reg/f:SI 677 [ D.44605 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3629 -1
     (nil))

;; if (D.44605_851 != 0B)

(insn 3981 3980 3982 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 677 [ D.44605 ])
            (const_int 0 [0]))) src/switch_core_media.c:3629 -1
     (nil))

(jump_insn 3982 3981 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3629 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 332

;; switch_rtp_set_telephony_event (D.44605_851, best_te_1860);

(insn 3984 3983 3985 (set (reg:SI 0 r0)
        (reg/f:SI 677 [ D.44605 ])) src/switch_core_media.c:3630 -1
     (nil))

(insn 3985 3984 3986 (set (reg:SI 1 r1)
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3630 -1
     (nil))

(call_insn 3986 3985 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_telephony_event") [flags 0x41]  <function_decl 0x408ceb00 switch_rtp_set_telephony_event>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3630 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; switch_channel_set_variable_printf (D.44530_853, "rtp_2833_send_payload", "%d", D.45120_848);

(insn 3987 3986 3988 (set (reg:SI 2125)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3631 -1
     (nil))

(insn 3988 3987 3989 (set (reg:SI 2127)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1110 [0x456])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1110 [0x456])
            ] 29)) src/switch_core_media.c:3631 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
        (nil)))

(insn 3989 3988 3990 (set (reg:SI 2126)
        (reg:SI 2127)) src/switch_core_media.c:3631 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
        (nil)))

(insn 3990 3989 3991 (set (reg:SI 2129)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1111 [0x457])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1111 [0x457])
            ] 29)) src/switch_core_media.c:3631 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3991 3990 3992 (set (reg:SI 2128)
        (reg:SI 2129)) src/switch_core_media.c:3631 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3992 3991 3993 (set (reg:SI 0 r0)
        (reg:SI 2125)) src/switch_core_media.c:3631 -1
     (nil))

(insn 3993 3992 3994 (set (reg:SI 1 r1)
        (reg:SI 2126)) src/switch_core_media.c:3631 -1
     (nil))

(insn 3994 3993 3995 (set (reg:SI 2 r2)
        (reg:SI 2128)) src/switch_core_media.c:3631 -1
     (nil))

(insn 3995 3994 3996 (set (reg:SI 3 r3)
        (reg:SI 674 [ D.45120 ])) src/switch_core_media.c:3631 -1
     (nil))

(call_insn 3996 3995 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_printf") [flags 0x41]  <function_decl 0x4083dc00 switch_channel_set_variable_printf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3631 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_rtp_set_telephony_recv_event (D.44605_855, best_te_1860);

(insn 3997 3996 3998 (set (reg:SI 2130)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3632 -1
     (nil))

(insn 3998 3997 3999 (set (reg:SI 0 r0)
        (reg:SI 2130)) src/switch_core_media.c:3632 -1
     (nil))

(insn 3999 3998 4000 (set (reg:SI 1 r1)
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3632 -1
     (nil))

(call_insn 4000 3999 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_telephony_recv_event") [flags 0x41]  <function_decl 0x408ceb80 switch_rtp_set_telephony_recv_event>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3632 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; switch_channel_set_variable_printf (D.44530_856, "rtp_2833_recv_payload", "%d", D.45120_848);

(insn 4001 4000 4002 (set (reg:SI 2131)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3633 -1
     (nil))

(insn 4002 4001 4003 (set (reg:SI 2133)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC356") [flags 0x82]  <var_decl 0x40418b40 *.LC356>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1112 [0x458])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1112 [0x458])
            ] 29)) src/switch_core_media.c:3633 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC356") [flags 0x82]  <var_decl 0x40418b40 *.LC356>)
        (nil)))

(insn 4003 4002 4004 (set (reg:SI 2132)
        (reg:SI 2133)) src/switch_core_media.c:3633 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC356") [flags 0x82]  <var_decl 0x40418b40 *.LC356>)
        (nil)))

(insn 4004 4003 4005 (set (reg:SI 2135)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1113 [0x459])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1113 [0x459])
            ] 29)) src/switch_core_media.c:3633 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4005 4004 4006 (set (reg:SI 2134)
        (reg:SI 2135)) src/switch_core_media.c:3633 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4006 4005 4007 (set (reg:SI 0 r0)
        (reg:SI 2131)) src/switch_core_media.c:3633 -1
     (nil))

(insn 4007 4006 4008 (set (reg:SI 1 r1)
        (reg:SI 2132)) src/switch_core_media.c:3633 -1
     (nil))

(insn 4008 4007 4009 (set (reg:SI 2 r2)
        (reg:SI 2134)) src/switch_core_media.c:3633 -1
     (nil))

(insn 4009 4008 4010 (set (reg:SI 3 r3)
        (reg:SI 674 [ D.45120 ])) src/switch_core_media.c:3633 -1
     (nil))

(call_insn 4010 4009 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_printf") [flags 0x41]  <function_decl 0x4083dc00 switch_channel_set_variable_printf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3633 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 333

;; 

(code_label 4013 4012 4014 1469 "" [0 uses])

(note 4014 4013 0 NOTE_INSN_BASIC_BLOCK)

;; D.45124_858 = switch_channel_get_variable_dup (channel_162, "rtp_info_when_no_2833", 1, -1);

(insn 4015 4014 4016 (set (reg:SI 2137)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC357") [flags 0x82]  <var_decl 0x40418ba0 *.LC357>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1114 [0x45a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1114 [0x45a])
            ] 29)) src/switch_core_media.c:3638 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC357") [flags 0x82]  <var_decl 0x40418ba0 *.LC357>)
        (nil)))

(insn 4016 4015 4017 (set (reg:SI 2136)
        (reg:SI 2137)) src/switch_core_media.c:3638 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC357") [flags 0x82]  <var_decl 0x40418ba0 *.LC357>)
        (nil)))

(insn 4017 4016 4018 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:3638 -1
     (nil))

(insn 4018 4017 4019 (set (reg:SI 1 r1)
        (reg:SI 2136)) src/switch_core_media.c:3638 -1
     (nil))

(insn 4019 4018 4020 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3638 -1
     (nil))

(insn 4020 4019 4021 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3638 -1
     (nil))

(call_insn 4021 4020 4022 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3638 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4022 4021 0 (set (reg/f:SI 683 [ D.45124 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3638 -1
     (nil))

;; # DEBUG expr => D.45124_858

(debug_insn 4023 4022 0 (var_location:SI expr (const_int 0 [0])) src/switch_core_media.c:3638 -1
     (nil))
;; if (D.45124_858 != 0B)

(insn 4024 4023 4025 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 683 [ D.45124 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:461 -1
     (nil))

(jump_insn 4025 4024 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 334

;; D.49735_1600 = strcasecmp (D.45124_858, "no");

(insn 4027 4026 4028 (set (reg:SI 2139)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1115 [0x45b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1115 [0x45b])
            ] 29)) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
        (nil)))

(insn 4028 4027 4029 (set (reg:SI 2138)
        (reg:SI 2139)) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
        (nil)))

(insn 4029 4028 4030 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:461 -1
     (nil))

(insn 4030 4029 4031 (set (reg:SI 1 r1)
        (reg:SI 2138)) ./src/include/switch_utils.h:461 -1
     (nil))

(call_insn/i 4031 4030 4032 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4032 4031 0 (set (reg:SI 917 [ D.49735 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:461 -1
     (nil))

;; if (D.49735_1600 == 0)

(insn 4033 4032 4034 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 917 [ D.49735 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:468 -1
     (nil))

(jump_insn 4034 4033 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:468 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 335

;; D.49736_1601 = strcasecmp (D.45124_858, "off");

(insn 4036 4035 4037 (set (reg:SI 2141)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1116 [0x45c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1116 [0x45c])
            ] 29)) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
        (nil)))

(insn 4037 4036 4038 (set (reg:SI 2140)
        (reg:SI 2141)) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
        (nil)))

(insn 4038 4037 4039 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:462 -1
     (nil))

(insn 4039 4038 4040 (set (reg:SI 1 r1)
        (reg:SI 2140)) ./src/include/switch_utils.h:462 -1
     (nil))

(call_insn/i 4040 4039 4041 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4041 4040 0 (set (reg:SI 918 [ D.49736 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:462 -1
     (nil))

;; if (D.49736_1601 == 0)

(insn 4042 4041 4043 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 918 [ D.49736 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:461 -1
     (nil))

(jump_insn 4043 4042 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 336

;; D.49737_1602 = strcasecmp (D.45124_858, "false");

(insn 4045 4044 4046 (set (reg:SI 2143)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1117 [0x45d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1117 [0x45d])
            ] 29)) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
        (nil)))

(insn 4046 4045 4047 (set (reg:SI 2142)
        (reg:SI 2143)) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
        (nil)))

(insn 4047 4046 4048 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:463 -1
     (nil))

(insn 4048 4047 4049 (set (reg:SI 1 r1)
        (reg:SI 2142)) ./src/include/switch_utils.h:463 -1
     (nil))

(call_insn/i 4049 4048 4050 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4050 4049 0 (set (reg:SI 919 [ D.49737 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:463 -1
     (nil))

;; if (D.49737_1602 == 0)

(insn 4051 4050 4052 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 919 [ D.49737 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:462 -1
     (nil))

(jump_insn 4052 4051 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 337

;; D.49738_1603 = strcasecmp (D.45124_858, "f");

(insn 4054 4053 4055 (set (reg:SI 2145)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1118 [0x45e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1118 [0x45e])
            ] 29)) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
        (nil)))

(insn 4055 4054 4056 (set (reg:SI 2144)
        (reg:SI 2145)) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
        (nil)))

(insn 4056 4055 4057 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:464 -1
     (nil))

(insn 4057 4056 4058 (set (reg:SI 1 r1)
        (reg:SI 2144)) ./src/include/switch_utils.h:464 -1
     (nil))

(call_insn/i 4058 4057 4059 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4059 4058 0 (set (reg:SI 920 [ D.49738 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:464 -1
     (nil))

;; if (D.49738_1603 == 0)

(insn 4060 4059 4061 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 920 [ D.49738 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:463 -1
     (nil))

(jump_insn 4061 4060 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 338

;; D.49739_1604 = strcasecmp (D.45124_858, "disabled");

(insn 4063 4062 4064 (set (reg:SI 2147)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1119 [0x45f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1119 [0x45f])
            ] 29)) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
        (nil)))

(insn 4064 4063 4065 (set (reg:SI 2146)
        (reg:SI 2147)) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
        (nil)))

(insn 4065 4064 4066 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:465 -1
     (nil))

(insn 4066 4065 4067 (set (reg:SI 1 r1)
        (reg:SI 2146)) ./src/include/switch_utils.h:465 -1
     (nil))

(call_insn/i 4067 4066 4068 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4068 4067 0 (set (reg:SI 921 [ D.49739 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:465 -1
     (nil))

;; if (D.49739_1604 == 0)

(insn 4069 4068 4070 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 921 [ D.49739 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:464 -1
     (nil))

(jump_insn 4070 4069 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 339

;; D.49740_1605 = strcasecmp (D.45124_858, "inactive");

(insn 4072 4071 4073 (set (reg:SI 2149)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1120 [0x460])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1120 [0x460])
            ] 29)) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 4073 4072 4074 (set (reg:SI 2148)
        (reg:SI 2149)) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 4074 4073 4075 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:466 -1
     (nil))

(insn 4075 4074 4076 (set (reg:SI 1 r1)
        (reg:SI 2148)) ./src/include/switch_utils.h:466 -1
     (nil))

(call_insn/i 4076 4075 4077 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4077 4076 0 (set (reg:SI 922 [ D.49740 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:466 -1
     (nil))

;; if (D.49740_1605 == 0)

(insn 4078 4077 4079 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 922 [ D.49740 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:465 -1
     (nil))

(jump_insn 4079 4078 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 340

;; D.49741_1606 = strcasecmp (D.45124_858, "disallow");

(insn 4081 4080 4082 (set (reg:SI 2151)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1121 [0x461])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1121 [0x461])
            ] 29)) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
        (nil)))

(insn 4082 4081 4083 (set (reg:SI 2150)
        (reg:SI 2151)) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
        (nil)))

(insn 4083 4082 4084 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:467 -1
     (nil))

(insn 4084 4083 4085 (set (reg:SI 1 r1)
        (reg:SI 2150)) ./src/include/switch_utils.h:467 -1
     (nil))

(call_insn/i 4085 4084 4086 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4086 4085 0 (set (reg:SI 923 [ D.49741 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:467 -1
     (nil))

;; if (D.49741_1606 == 0)

(insn 4087 4086 4088 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 923 [ D.49741 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:466 -1
     (nil))

(jump_insn 4088 4087 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))

;; Generating RTL for gimple basic block 341

;; D.49742_1607 = switch_is_number (D.45124_858);

(insn 4090 4089 4091 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:468 -1
     (nil))

(call_insn 4091 4090 4092 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:468 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 4092 4091 0 (set (reg:SI 924 [ D.49742 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:468 -1
     (nil))

;; if (D.49742_1607 != 0)

(insn 4093 4092 4094 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 924 [ D.49742 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:467 -1
     (nil))

(jump_insn 4094 4093 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 342

;; # DEBUG __nptr => D.45124_858

(debug_insn 4096 4095 0 (var_location:SI __nptr (const_int 0 [0])) -1
     (nil))
;; D.49743_1608 = strtol (D.45124_858, 0B, 10);

(insn 4097 4096 4098 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4098 4097 4099 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4099 4098 4100 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 4100 4099 4101 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4101 4100 0 (set (reg:SI 925 [ D.49743 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; if (D.49743_1608 == 0)

(insn 4102 4101 4103 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 925 [ D.49743 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:468 -1
     (nil))

(jump_insn 4103 4102 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:468 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 343

;; 

(code_label 4104 4103 4105 1472 "" [0 uses])

(note 4105 4104 0 NOTE_INSN_BASIC_BLOCK)

;; switch_channel_set_variable_var_check (D.44530_866, "dtmf_type", "none", 1);

(insn 4106 4105 4107 (set (reg:SI 2152)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3644 -1
     (nil))

(insn 4107 4106 4108 (set (reg:SI 2154)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1122 [0x462])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1122 [0x462])
            ] 29)) src/switch_core_media.c:3644 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 4108 4107 4109 (set (reg:SI 2153)
        (reg:SI 2154)) src/switch_core_media.c:3644 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 4109 4108 4110 (set (reg:SI 2156)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC358") [flags 0x82]  <var_decl 0x40418c00 *.LC358>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1123 [0x463])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1123 [0x463])
            ] 29)) src/switch_core_media.c:3644 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC358") [flags 0x82]  <var_decl 0x40418c00 *.LC358>)
        (nil)))

(insn 4110 4109 4111 (set (reg:SI 2155)
        (reg:SI 2156)) src/switch_core_media.c:3644 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC358") [flags 0x82]  <var_decl 0x40418c00 *.LC358>)
        (nil)))

(insn 4111 4110 4112 (set (reg:SI 0 r0)
        (reg:SI 2152)) src/switch_core_media.c:3644 -1
     (nil))

(insn 4112 4111 4113 (set (reg:SI 1 r1)
        (reg:SI 2153)) src/switch_core_media.c:3644 -1
     (nil))

(insn 4113 4112 4114 (set (reg:SI 2 r2)
        (reg:SI 2155)) src/switch_core_media.c:3644 -1
     (nil))

(insn 4114 4113 4115 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3644 -1
     (nil))

(call_insn 4115 4114 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3644 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; D.44471_867 = smh_186->mparams;

(insn 4116 4115 4117 (set (reg:SI 2157)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3645 -1
     (nil))

(insn 4117 4116 0 (set (reg/f:SI 689 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2157)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3645 -1
     (nil))

;; D.44471_867->dtmf_type = 2;

(insn 4118 4117 4119 (set (reg:SI 2158)
        (const_int 2 [0x2])) src/switch_core_media.c:3645 -1
     (nil))

(insn 4119 4118 0 (set (mem/s:SI (plus:SI (reg/f:SI 689 [ D.44471 ])
                (const_int 136 [0x88])) [30 D.44471_867->dtmf_type+0 S4 A32])
        (reg:SI 2158)) src/switch_core_media.c:3645 -1
     (nil))

;; D.44471_867->te = 0;

(insn 4120 4119 4121 (set (reg:SI 2159)
        (const_int 0 [0])) src/switch_core_media.c:3646 -1
     (nil))

(insn 4121 4120 4122 (set (reg:QI 2160)
        (subreg:QI (reg:SI 2159) 0)) src/switch_core_media.c:3646 -1
     (nil))

(insn 4122 4121 0 (set (mem/s:QI (plus:SI (reg/f:SI 689 [ D.44471 ])
                (const_int 120 [0x78])) [0 D.44471_867->te+0 S1 A32])
        (reg:QI 2160)) src/switch_core_media.c:3646 -1
     (nil))

;; D.44471_867->recv_te = 0;

(insn 4123 4122 4124 (set (reg:SI 2161)
        (const_int 0 [0])) src/switch_core_media.c:3646 -1
     (nil))

(insn 4124 4123 4125 (set (reg:QI 2162)
        (subreg:QI (reg:SI 2161) 0)) src/switch_core_media.c:3646 -1
     (nil))

(insn 4125 4124 0 (set (mem/s:QI (plus:SI (reg/f:SI 689 [ D.44471 ])
                (const_int 121 [0x79])) [0 D.44471_867->recv_te+0 S1 A8])
        (reg:QI 2162)) src/switch_core_media.c:3646 -1
     (nil))

;; # DEBUG D#13 => D.44471_867->recv_te

(debug_insn 4126 4125 0 (var_location:QI D#13 (const_int 0 [0])) src/switch_core_media.c:3646 -1
     (nil))
;; # DEBUG te => D#13

(debug_insn 4127 4126 0 (var_location:QI te (const_int 0 [0])) src/switch_core_media.c:3646 -1
     (nil))
;; Generating RTL for gimple basic block 344

;; 

(code_label 4130 4129 4131 1392 "" [0 uses])

(note 4131 4130 0 NOTE_INSN_BASIC_BLOCK)

;; if (prephitmp.1049_1814 == 3)

(insn 4132 4131 4133 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 979 [ prephitmp.1049 ])
            (const_int 3 [0x3]))) src/switch_core_media.c:3650 -1
     (nil))

(jump_insn 4133 4132 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3650 -1
     (expr_list:REG_BR_PROB (const_int 5580 [0x15cc])
        (nil)))

;; Generating RTL for gimple basic block 345

;; if (D.44697_873 != 0)

(insn 4135 4134 4136 (set (reg:SI 2163)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 20 [0x14])) [26 m_1764->m_port+0 S4 A32])) src/switch_core_media.c:3650 -1
     (nil))

(insn 4136 4135 4137 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2163)
            (const_int 0 [0]))) src/switch_core_media.c:3650 -1
     (nil))

(jump_insn 4137 4136 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3650 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 346

;; # DEBUG mimp => 0B

(debug_insn 4139 4138 0 (var_location:SI mimp (const_int 0 [0])) src/switch_core_media.c:3653 -1
     (nil))
;; # DEBUG vmatch => 0

(debug_insn 4140 4139 0 (var_location:SI vmatch (const_int 0 [0])) src/switch_core_media.c:3654 -1
     (nil))
;; # DEBUG nm_idx => 0

(debug_insn 4141 4140 0 (var_location:SI nm_idx (const_int 0 [0])) src/switch_core_media.c:3656 -1
     (nil))
;; # DEBUG m_idx => 0

(debug_insn 4142 4141 0 (var_location:SI m_idx (const_int 0 [0])) src/switch_core_media.c:3657 -1
     (nil))
;; memset (&matches, 0, 480);

(insn 4143 4142 4144 (set (reg:SI 2164)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3658 -1
     (nil))

(insn 4144 4143 4145 (set (reg:SI 2165)
        (reg:SI 2164)) src/switch_core_media.c:3658 -1
     (nil))

(insn 4145 4144 4146 (set (reg:SI 2166)
        (const_int 480 [0x1e0])) src/switch_core_media.c:3658 -1
     (nil))

(insn 4146 4145 4147 (set (reg:SI 0 r0)
        (reg:SI 2165)) src/switch_core_media.c:3658 -1
     (nil))

(insn 4147 4146 4148 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3658 -1
     (nil))

(insn 4148 4147 4149 (set (reg:SI 2 r2)
        (reg:SI 2166)) src/switch_core_media.c:3658 -1
     (nil))

(call_insn 4149 4148 4150 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x41afec00 memset>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3658 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4150 4149 0 (set (reg:SI 2167)
        (reg:SI 0 r0)) src/switch_core_media.c:3658 -1
     (nil))

;; memset (&near_matches, 0, 480);

(insn 4151 4150 4152 (set (reg:SI 2168)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -576 [0xfffffffffffffdc0]))) src/switch_core_media.c:3659 -1
     (nil))

(insn 4152 4151 4153 (set (reg:SI 2169)
        (reg:SI 2168)) src/switch_core_media.c:3659 -1
     (nil))

(insn 4153 4152 4154 (set (reg:SI 2170)
        (const_int 480 [0x1e0])) src/switch_core_media.c:3659 -1
     (nil))

(insn 4154 4153 4155 (set (reg:SI 0 r0)
        (reg:SI 2169)) src/switch_core_media.c:3659 -1
     (nil))

(insn 4155 4154 4156 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3659 -1
     (nil))

(insn 4156 4155 4157 (set (reg:SI 2 r2)
        (reg:SI 2170)) src/switch_core_media.c:3659 -1
     (nil))

(call_insn 4157 4156 4158 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x41afec00 memset>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3659 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4158 4157 0 (set (reg:SI 2171)
        (reg:SI 0 r0)) src/switch_core_media.c:3659 -1
     (nil))

;; switch_channel_set_variable_var_check (D.44530_878, "video_possible", "true", 1);

(insn 4159 4158 4160 (set (reg:SI 2172)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3661 -1
     (nil))

(insn 4160 4159 4161 (set (reg:SI 2174)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC359") [flags 0x82]  <var_decl 0x40418de0 *.LC359>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1124 [0x464])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1124 [0x464])
            ] 29)) src/switch_core_media.c:3661 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC359") [flags 0x82]  <var_decl 0x40418de0 *.LC359>)
        (nil)))

(insn 4161 4160 4162 (set (reg:SI 2173)
        (reg:SI 2174)) src/switch_core_media.c:3661 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC359") [flags 0x82]  <var_decl 0x40418de0 *.LC359>)
        (nil)))

(insn 4162 4161 4163 (set (reg:SI 2176)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1125 [0x465])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1125 [0x465])
            ] 29)) src/switch_core_media.c:3661 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 4163 4162 4164 (set (reg:SI 2175)
        (reg:SI 2176)) src/switch_core_media.c:3661 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 4164 4163 4165 (set (reg:SI 0 r0)
        (reg:SI 2172)) src/switch_core_media.c:3661 -1
     (nil))

(insn 4165 4164 4166 (set (reg:SI 1 r1)
        (reg:SI 2173)) src/switch_core_media.c:3661 -1
     (nil))

(insn 4166 4165 4167 (set (reg:SI 2 r2)
        (reg:SI 2175)) src/switch_core_media.c:3661 -1
     (nil))

(insn 4167 4166 4168 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3661 -1
     (nil))

(call_insn 4168 4167 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3661 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; connection_879 = sdp_198->sdp_connection;

(insn 4169 4168 0 (set (reg/v/f:SI 693 [ connection ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 36 [0x24])) [2 sdp_198->sdp_connection+0 S4 A32])) src/switch_core_media.c:3663 -1
     (nil))

;; # DEBUG connection => connection_879

(debug_insn 4170 4169 0 (var_location:SI connection (const_int 0 [0])) src/switch_core_media.c:3663 -1
     (nil))
;; connection_880 = m_1764->m_connections;

(insn 4171 4170 0 (set (reg/v/f:SI 207 [ connection ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 48 [0x30])) [2 m_1764->m_connections+0 S4 A32])) src/switch_core_media.c:3664 -1
     (nil))

;; if (connection_880 != 0B)

(insn 4172 4171 4173 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 207 [ connection ])
            (const_int 0 [0]))) src/switch_core_media.c:3664 -1
     (nil))

(jump_insn 4173 4172 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3664 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))

;; Generating RTL for gimple basic block 347

;; # DEBUG connection => connection_879

(debug_insn 4175 4174 0 (var_location:SI connection (const_int 0 [0])) -1
     (nil))
;; if (connection_879 == 0B)

(insn 4176 4175 4177 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 693 [ connection ])
            (const_int 0 [0]))) src/switch_core_media.c:3668 -1
     (nil))

(jump_insn 4177 4176 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3668 -1
     (expr_list:REG_BR_PROB (const_int 8750 [0x222e])
        (nil)))

;; Generating RTL for gimple basic block 348

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3669, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");

(insn 4179 4178 4180 (set (reg:SI 2178)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1126 [0x466])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1126 [0x466])
            ] 29)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4180 4179 4181 (set (reg:SI 2177)
        (reg:SI 2178)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4181 4180 4182 (set (reg:SI 2180)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1127 [0x467])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1127 [0x467])
            ] 29)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4182 4181 4183 (set (reg/f:SI 2179)
        (reg:SI 2180)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4183 4182 4184 (set (reg:SI 2182)
        (plus:SI (reg/f:SI 2179)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3669 -1
     (nil))

(insn 4184 4183 4185 (set (reg:SI 2181)
        (plus:SI (reg:SI 2182)
            (const_int 8 [0x8]))) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2179)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4185 4184 4186 (set (reg:SI 2183)
        (const_int 3669 [0xe55])) src/switch_core_media.c:3669 -1
     (nil))

(insn 4186 4185 4187 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3669 -1
     (nil))

(insn 4187 4186 4188 (set (reg:SI 2184)
        (const_int 3 [0x3])) src/switch_core_media.c:3669 -1
     (nil))

(insn 4188 4187 4189 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2184)) src/switch_core_media.c:3669 -1
     (nil))

(insn 4189 4188 4190 (set (reg:SI 2186)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1128 [0x468])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1128 [0x468])
            ] 29)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
        (nil)))

(insn 4190 4189 4191 (set (reg/f:SI 2185)
        (reg:SI 2186)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
        (nil)))

(insn 4191 4190 4192 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2185)) src/switch_core_media.c:3669 -1
     (nil))

(insn 4192 4191 4193 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3669 -1
     (nil))

(insn 4193 4192 4194 (set (reg:SI 1 r1)
        (reg:SI 2177)) src/switch_core_media.c:3669 -1
     (nil))

(insn 4194 4193 4195 (set (reg:SI 2 r2)
        (reg:SI 2181)) src/switch_core_media.c:3669 -1
     (nil))

(insn 4195 4194 4196 (set (reg:SI 3 r3)
        (reg:SI 2183)) src/switch_core_media.c:3669 -1
     (nil))

(call_insn 4196 4195 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3669 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG match => 0

(debug_insn 4197 4196 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3670 -1
     (nil))
;; Generating RTL for gimple basic block 349

;; 

(code_label 4200 4199 4201 1473 "" [0 uses])

(note 4201 4200 0 NOTE_INSN_BASIC_BLOCK)

;; map_883 = m_1764->m_rtpmaps;

(insn 4202 4201 0 (set (reg/v/f:SI 757 [ map ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 40 [0x28])) [2 m_1764->m_rtpmaps+0 S4 A32])) src/switch_core_media.c:3674 -1
     (nil))

;; # DEBUG map => map_883

(debug_insn 4203 4202 0 (var_location:SI map (const_int 0 [0])) src/switch_core_media.c:3674 -1
     (nil))
;; # DEBUG map => map_883

(debug_insn 4204 4203 0 (var_location:SI map (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => 0

(debug_insn 4205 4204 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_crypto => got_video_crypto_1674

(debug_insn 4206 4205 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; if (map_883 != 0B)

(insn 4207 4206 4208 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 757 [ map ])
            (const_int 0 [0]))) src/switch_core_media.c:3674 -1
     (nil))

(jump_insn 4208 4207 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3674 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 350

;; D.45137_884 = switch_rtp_has_dtls ();

(call_insn 4210 4209 4211 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_has_dtls") [flags 0x41]  <function_decl 0x408d7080 switch_rtp_has_dtls>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3676 -1
     (nil)
    (nil))

(insn 4211 4210 0 (set (reg:SI 695 [ D.45137 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3676 -1
     (nil))

;; if (D.45137_884 != 0)

(insn 4212 4211 4213 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 695 [ D.45137 ])
            (const_int 0 [0]))) src/switch_core_media.c:3676 -1
     (nil))

(jump_insn 4213 4212 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3676 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 351

;; D.45140_885 = dtls_ok (session_161(D));

(insn 4215 4214 4216 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3676 -1
     (nil))

(call_insn 4216 4215 4217 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dtls_ok") [flags 0x3]  <function_decl 0x414f3900 dtls_ok>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3676 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 4217 4216 0 (set (reg:SI 696 [ D.45140 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3676 -1
     (nil))

;; if (D.45140_885 != 0)

(insn 4218 4217 4219 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 696 [ D.45140 ])
            (const_int 0 [0]))) src/switch_core_media.c:3676 -1
     (nil))

(jump_insn 4219 4218 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3676 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 352

;; attr_886 = m_1764->m_attributes;

(insn 4221 4220 0 (set (reg/v/f:SI 507 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 60 [0x3c])) [2 m_1764->m_attributes+0 S4 A32])) src/switch_core_media.c:3677 -1
     (nil))

;; # DEBUG attr => attr_886

(debug_insn 4222 4221 0 (var_location:SI attr (const_int 0 [0])) src/switch_core_media.c:3677 -1
     (nil))
;; # DEBUG got_video_crypto => got_video_crypto_556

(debug_insn 4223 4222 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG attr => attr_886

(debug_insn 4224 4223 0 (var_location:SI attr (const_int 0 [0])) -1
     (nil))
;; if (attr_886 != 0B)

(insn 4225 4224 4226 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 507 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3677 -1
     (nil))

(jump_insn 4226 4225 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3677 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 353

;; Generating RTL for gimple basic block 354

;; D.45143_888 = strcasecmp (D.44590_887, "fingerprint");

(insn 4229 4228 4230 (set (reg:SI 2187)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 700 [ attr ])
                (const_int 8 [0x8])) [2 attr_1850->a_name+0 S4 A32])) src/switch_core_media.c:3678 -1
     (nil))

(insn 4230 4229 4231 (set (reg:SI 2189)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1129 [0x469])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1129 [0x469])
            ] 29)) src/switch_core_media.c:3678 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
        (nil)))

(insn 4231 4230 4232 (set (reg:SI 2188)
        (reg:SI 2189)) src/switch_core_media.c:3678 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
        (nil)))

(insn 4232 4231 4233 (set (reg:SI 0 r0)
        (reg:SI 2187)) src/switch_core_media.c:3678 -1
     (nil))

(insn 4233 4232 4234 (set (reg:SI 1 r1)
        (reg:SI 2188)) src/switch_core_media.c:3678 -1
     (nil))

(call_insn/i 4234 4233 4235 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3678 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4235 4234 0 (set (reg:SI 698 [ D.45143 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3678 -1
     (nil))

;; if (D.45143_888 == 0)

(insn 4236 4235 4237 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 698 [ D.45143 ])
            (const_int 0 [0]))) src/switch_core_media.c:3678 -1
     (nil))

(jump_insn 4237 4236 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3678 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 355

;; D.44619_889 = attr_1850->a_value;

(insn 4239 4238 0 (set (reg/f:SI 699 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 700 [ attr ])
                (const_int 12 [0xc])) [2 attr_1850->a_value+0 S4 A32])) src/switch_core_media.c:3678 -1
     (nil))

;; # DEBUG s => D.44619_889

(debug_insn 4240 4239 0 (var_location:SI s (const_int 0 [0])) src/switch_core_media.c:3678 -1
     (nil))
;; if (D.44619_889 == 0B)

(insn 4241 4240 4242 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 699 [ D.44619 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4242 4241 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 356

;; if (D.47939_1495 == 0)

(insn 4244 4243 4245 (set (reg:SI 2190)
        (zero_extend:SI (mem:QI (reg/f:SI 699 [ D.44619 ]) [0 *D.44619_889+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 4245 4244 4246 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2190)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4246 4245 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 357

;; Generating RTL for gimple basic block 358

;; 

(code_label 4248 4247 4249 1477 "" [0 uses])

(note 4249 4248 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG got_video_crypto => got_video_crypto_57

(debug_insn 4250 4249 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; attr_892 = attr_1850->a_next;

(insn 4251 4250 0 (set (reg/v/f:SI 700 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 700 [ attr ])
                (const_int 4 [0x4])) [2 attr_1850->a_next+0 S4 A32])) src/switch_core_media.c:3677 -1
     (nil))

;; # DEBUG attr => attr_892

(debug_insn 4252 4251 0 (var_location:SI attr (const_int 0 [0])) src/switch_core_media.c:3677 -1
     (nil))
;; # DEBUG got_video_crypto => got_video_crypto_57

(debug_insn 4253 4252 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG attr => attr_892

(debug_insn 4254 4253 0 (var_location:SI attr (const_int 0 [0])) -1
     (nil))
;; if (attr_892 != 0B)

(insn 4256 4254 4257 358 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 700 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3677 -1
     (nil))

(jump_insn 4257 4256 4260 358 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4255)
            (pc))) src/switch_core_media.c:3677 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

(note 4260 4257 4258 460 [bb 460] NOTE_INSN_BASIC_BLOCK)

(jump_insn 4258 4260 4259 460 (set (pc)
        (label_ref 0)) src/switch_core_media.c:3677 -1
     (nil))

(barrier 4259 4258 0)

;; Generating RTL for gimple basic block 359

;; 

(code_label 4261 4259 4262 1475 "" [0 uses])

(note 4262 4261 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG got_video_crypto => got_video_crypto_556

(debug_insn 4263 4262 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; attr_893 = m_1764->m_attributes;

(insn 4264 4263 0 (set (reg/v/f:SI 507 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 60 [0x3c])) [2 m_1764->m_attributes+0 S4 A32])) src/switch_core_media.c:3684 -1
     (nil))

;; # DEBUG attr => attr_893

(debug_insn 4265 4264 0 (var_location:SI attr (const_int 0 [0])) src/switch_core_media.c:3684 -1
     (nil))
;; # DEBUG got_video_crypto => got_video_crypto_556

(debug_insn 4266 4265 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG attr => attr_893

(debug_insn 4267 4266 0 (var_location:SI attr (const_int 0 [0])) -1
     (nil))
;; if (attr_893 != 0B)

(insn 4268 4267 4269 359 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 507 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3684 -1
     (nil))

(jump_insn 4269 4268 4272 359 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3684 -1
     (expr_list:REG_BR_PROB (const_int 9627 [0x259b])
        (nil)))

(note 4272 4269 4270 461 [bb 461] NOTE_INSN_BASIC_BLOCK)

(jump_insn 4270 4272 4271 461 (set (pc)
        (label_ref 0)) src/switch_core_media.c:3684 -1
     (nil))

(barrier 4271 4270 0)

;; Generating RTL for gimple basic block 360

;; D.44590_894 = attr_619->a_name;

(insn 4274 4273 0 (set (reg/f:SI 701 [ D.44590 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 8 [0x8])) [2 attr_619->a_name+0 S4 A32])) src/switch_core_media.c:3685 -1
     (nil))

;; D.45151_895 = strcasecmp (D.44590_894, "framerate");

(insn 4275 4274 4276 (set (reg:SI 2192)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC360") [flags 0x82]  <var_decl 0x40418e40 *.LC360>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1130 [0x46a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1130 [0x46a])
            ] 29)) src/switch_core_media.c:3685 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC360") [flags 0x82]  <var_decl 0x40418e40 *.LC360>)
        (nil)))

(insn 4276 4275 4277 (set (reg:SI 2191)
        (reg:SI 2192)) src/switch_core_media.c:3685 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC360") [flags 0x82]  <var_decl 0x40418e40 *.LC360>)
        (nil)))

(insn 4277 4276 4278 (set (reg:SI 0 r0)
        (reg/f:SI 701 [ D.44590 ])) src/switch_core_media.c:3685 -1
     (nil))

(insn 4278 4277 4279 (set (reg:SI 1 r1)
        (reg:SI 2191)) src/switch_core_media.c:3685 -1
     (nil))

(call_insn/i 4279 4278 4280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3685 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4280 4279 0 (set (reg:SI 702 [ D.45151 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3685 -1
     (nil))

;; if (D.45151_895 == 0)

(insn 4281 4280 4282 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 702 [ D.45151 ])
            (const_int 0 [0]))) src/switch_core_media.c:3685 -1
     (nil))

(jump_insn 4282 4281 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3685 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 361

;; if (D.44619_896 != 0B)

(insn 4284 4283 4285 (set (reg:SI 2193)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) src/switch_core_media.c:3685 -1
     (nil))

(insn 4285 4284 4286 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2193)
            (const_int 0 [0]))) src/switch_core_media.c:3685 -1
     (nil))

(jump_insn 4286 4285 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3685 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))

;; Generating RTL for gimple basic block 362

;; 

(code_label 4287 4286 4288 1480 "" [0 uses])

(note 4288 4287 0 NOTE_INSN_BASIC_BLOCK)

;; D.45154_898 = strcasecmp (D.44590_894, "rtcp-fb");

(insn 4289 4288 4290 (set (reg:SI 2195)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC361") [flags 0x82]  <var_decl 0x40418ea0 *.LC361>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1131 [0x46b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1131 [0x46b])
            ] 29)) src/switch_core_media.c:3687 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC361") [flags 0x82]  <var_decl 0x40418ea0 *.LC361>)
        (nil)))

(insn 4290 4289 4291 (set (reg:SI 2194)
        (reg:SI 2195)) src/switch_core_media.c:3687 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC361") [flags 0x82]  <var_decl 0x40418ea0 *.LC361>)
        (nil)))

(insn 4291 4290 4292 (set (reg:SI 0 r0)
        (reg/f:SI 701 [ D.44590 ])) src/switch_core_media.c:3687 -1
     (nil))

(insn 4292 4291 4293 (set (reg:SI 1 r1)
        (reg:SI 2194)) src/switch_core_media.c:3687 -1
     (nil))

(call_insn/i 4293 4292 4294 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3687 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4294 4293 0 (set (reg:SI 704 [ D.45154 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3687 -1
     (nil))

;; if (D.45154_898 == 0)

(insn 4295 4294 4296 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 704 [ D.45154 ])
            (const_int 0 [0]))) src/switch_core_media.c:3687 -1
     (nil))

(jump_insn 4296 4295 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3687 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 363

;; D.44619_899 = attr_619->a_value;

(insn 4298 4297 0 (set (reg/f:SI 705 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) src/switch_core_media.c:3688 -1
     (nil))

;; # DEBUG s => D.44619_899

(debug_insn 4299 4298 0 (var_location:SI s (const_int 0 [0])) src/switch_core_media.c:3688 -1
     (nil))
;; if (D.44619_899 == 0B)

(insn 4300 4299 4301 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 705 [ D.44619 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4301 4300 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 364

;; if (D.47943_1497 == 0)

(insn 4303 4302 4304 364 (set (reg:SI 2196)
        (zero_extend:SI (mem:QI (reg/f:SI 705 [ D.44619 ]) [0 *D.44619_899+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 4304 4303 4305 364 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2196)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4305 4304 4308 364 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 4308 4305 4306 462 [bb 462] NOTE_INSN_BASIC_BLOCK)

(jump_insn 4306 4308 4307 462 (set (pc)
        (label_ref 0)) ./src/include/switch_utils.h:254 -1
     (nil))

(barrier 4307 4306 0)

;; Generating RTL for gimple basic block 365

;; MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir = D.45164_904;

(insn 4310 4309 4311 (set (reg:SI 2197)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3690 -1
     (nil))

(insn 4311 4310 4312 (set (reg:SI 2198)
        (const_int 11410 [0x2c92])) src/switch_core_media.c:3690 -1
     (nil))

(insn 4312 4311 4313 (set (reg:SI 2199)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2197))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4313 4312 4314 (set (reg/f:SI 2200)
        (plus:SI (reg:SI 2199)
            (reg:SI 2198))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4314 4313 4315 (set (reg:SI 2201)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3690 -1
     (nil))

(insn 4315 4314 4316 (set (reg:SI 2202)
        (const_int 11410 [0x2c92])) src/switch_core_media.c:3690 -1
     (nil))

(insn 4316 4315 4317 (set (reg:SI 2203)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2201))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4317 4316 4318 (set (reg/f:SI 2204)
        (plus:SI (reg:SI 2203)
            (reg:SI 2202))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4318 4317 4319 (set (reg:SI 2206)
        (zero_extend:SI (mem/s:QI (reg/f:SI 2204) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir+0 S1 A16]))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4319 4318 4320 (set (reg:QI 2205)
        (subreg:QI (reg:SI 2206) 0)) src/switch_core_media.c:3690 -1
     (nil))

(insn 4320 4319 4321 (set (reg:SI 2207)
        (plus:SI (subreg:SI (reg:QI 2205) 0)
            (const_int 1 [0x1]))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4321 4320 4322 (set (reg:QI 2208)
        (subreg:QI (reg:SI 2207) 0)) src/switch_core_media.c:3690 -1
     (nil))

(insn 4322 4321 0 (set (mem/s:QI (reg/f:SI 2200) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir+0 S1 A16])
        (reg:QI 2208)) src/switch_core_media.c:3690 -1
     (nil))

;; Generating RTL for gimple basic block 366

;; D.44471_905->rtcp_video_interval_msec = "10000";

(insn 4324 4323 4325 (set (reg:SI 2210)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3697 -1
     (nil))

(insn 4325 4324 4326 (set (reg/f:SI 2209)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2210)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3697 -1
     (nil))

(insn 4326 4325 4327 (set (reg:SI 2212)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC285") [flags 0x82]  <var_decl 0x40377120 *.LC285>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1132 [0x46c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1132 [0x46c])
            ] 29)) src/switch_core_media.c:3697 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC285") [flags 0x82]  <var_decl 0x40377120 *.LC285>)
        (nil)))

(insn 4327 4326 4328 (set (reg/f:SI 2211)
        (reg:SI 2212)) src/switch_core_media.c:3697 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC285") [flags 0x82]  <var_decl 0x40377120 *.LC285>)
        (nil)))

(insn 4328 4327 0 (set (mem/s/f:SI (plus:SI (reg/f:SI 2209)
                (const_int 84 [0x54])) [2 D.44471_905->rtcp_video_interval_msec+0 S4 A32])
        (reg/f:SI 2211)) src/switch_core_media.c:3697 -1
     (nil))

;; Generating RTL for gimple basic block 367

;; 

(code_label 4331 4330 4332 1482 "" [0 uses])

(note 4332 4331 0 NOTE_INSN_BASIC_BLOCK)

;; D.45168_907 = strcasecmp (D.44590_894, "rtcp");

(insn 4333 4332 4334 (set (reg:SI 2214)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1133 [0x46d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1133 [0x46d])
            ] 29)) src/switch_core_media.c:3699 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
        (nil)))

(insn 4334 4333 4335 (set (reg:SI 2213)
        (reg:SI 2214)) src/switch_core_media.c:3699 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
        (nil)))

(insn 4335 4334 4336 (set (reg:SI 0 r0)
        (reg/f:SI 701 [ D.44590 ])) src/switch_core_media.c:3699 -1
     (nil))

(insn 4336 4335 4337 (set (reg:SI 1 r1)
        (reg:SI 2213)) src/switch_core_media.c:3699 -1
     (nil))

(call_insn/i 4337 4336 4338 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3699 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4338 4337 0 (set (reg:SI 710 [ D.45168 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3699 -1
     (nil))

;; if (D.45168_907 == 0)

(insn 4339 4338 4340 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 710 [ D.45168 ])
            (const_int 0 [0]))) src/switch_core_media.c:3699 -1
     (nil))

(jump_insn 4340 4339 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3699 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 368

;; D.44619_908 = attr_619->a_value;

(insn 4342 4341 0 (set (reg/f:SI 711 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) src/switch_core_media.c:3699 -1
     (nil))

;; if (D.44619_908 != 0B)

(insn 4343 4342 4344 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 711 [ D.44619 ])
            (const_int 0 [0]))) src/switch_core_media.c:3699 -1
     (nil))

(jump_insn 4344 4343 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3699 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 369

;; # DEBUG __s2_len => 1

(debug_insn 4346 4345 0 (var_location:SI __s2_len (const_int 0 [0])) src/switch_core_media.c:3699 -1
     (nil))
;; # DEBUG __s1 => D.44619_908

(debug_insn 4347 4346 0 (var_location:SI __s1 (const_int 0 [0])) src/switch_core_media.c:3699 -1
     (nil))
;; # DEBUG D#78 => (int) D.45174_911

(debug_insn 4348 4347 0 (var_location:SI D#78 (const_int 0 [0])) src/switch_core_media.c:3699 -1
     (nil))
;; # DEBUG __result => D#78 + -49

(debug_insn 4349 4348 0 (var_location:SI __result (const_int 0 [0])) src/switch_core_media.c:3699 -1
     (nil))
;; if (D.45174_911 == 49)

(insn 4350 4349 4351 (set (reg:SI 2215)
        (zero_extend:SI (mem:QI (reg/f:SI 711 [ D.44619 ]) [0 MEM[(const unsigned char *)D.44619_908]+0 S1 A8]))) src/switch_core_media.c:3699 -1
     (nil))

(insn 4351 4350 4352 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2215)
            (const_int 49 [0x31]))) src/switch_core_media.c:3699 -1
     (nil))

(jump_insn 4352 4351 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3699 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 370

;; # DEBUG D#79 => (int) D.45185_921

(debug_insn 4354 4353 0 (var_location:SI D#79 (const_int 0 [0])) src/switch_core_media.c:3699 -1
     (nil))
;; # DEBUG __result => D#79

(debug_insn 4355 4354 0 (var_location:SI __result (const_int 0 [0])) src/switch_core_media.c:3699 -1
     (nil))
;; # DEBUG __result => D#79

(debug_insn 4356 4355 0 (var_location:SI __result (const_int 0 [0])) -1
     (nil))
;; if (D.45185_921 == 0)

(insn 4357 4356 4358 (set (reg:SI 2216)
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 711 [ D.44619 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)D.44619_908 + 1B]+0 S1 A8]))) src/switch_core_media.c:3699 -1
     (nil))

(insn 4358 4357 4359 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2216)
            (const_int 0 [0]))) src/switch_core_media.c:3699 -1
     (nil))

(jump_insn 4359 4358 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3699 -1
     (expr_list:REG_BR_PROB (const_int 4195 [0x1063])
        (nil)))

;; Generating RTL for gimple basic block 371

;; switch_channel_set_variable_var_check (D.44530_952, "rtp_remote_video_rtcp_port", D.44619_908, 1);

(insn 4361 4360 4362 (set (reg:SI 2217)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3700 -1
     (nil))

(insn 4362 4361 4363 (set (reg:SI 2219)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC247") [flags 0x82]  <var_decl 0x40344420 *.LC247>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1134 [0x46e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1134 [0x46e])
            ] 29)) src/switch_core_media.c:3700 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC247") [flags 0x82]  <var_decl 0x40344420 *.LC247>)
        (nil)))

(insn 4363 4362 4364 (set (reg:SI 2218)
        (reg:SI 2219)) src/switch_core_media.c:3700 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC247") [flags 0x82]  <var_decl 0x40344420 *.LC247>)
        (nil)))

(insn 4364 4363 4365 (set (reg:SI 0 r0)
        (reg:SI 2217)) src/switch_core_media.c:3700 -1
     (nil))

(insn 4365 4364 4366 (set (reg:SI 1 r1)
        (reg:SI 2218)) src/switch_core_media.c:3700 -1
     (nil))

(insn 4366 4365 4367 (set (reg:SI 2 r2)
        (reg/f:SI 711 [ D.44619 ])) src/switch_core_media.c:3700 -1
     (nil))

(insn 4367 4366 4368 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3700 -1
     (nil))

(call_insn 4368 4367 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3700 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG __nptr => D.44619_954

(debug_insn 4369 4368 0 (var_location:SI __nptr (const_int 0 [0])) src/switch_core_media.c:3701 -1
     (nil))
;; D.47946_1499 = strtol (D.44619_954, 0B, 10);

(insn 4370 4369 4371 (set (reg:SI 2220)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4371 4370 4372 (set (reg:SI 0 r0)
        (reg:SI 2220)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4372 4371 4373 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4373 4372 4374 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 4374 4373 4375 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4375 4374 0 (set (reg:SI 857 [ D.47946 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].remote_rtcp_port = D.45213_956;

(insn 4376 4375 4377 (set (reg:SI 2221)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3701 -1
     (nil))

(insn 4377 4376 4378 (set (reg:SI 2222)
        (const_int 1816 [0x718])) src/switch_core_media.c:3701 -1
     (nil))

(insn 4378 4377 4379 (set (reg:SI 2223)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2221))) src/switch_core_media.c:3701 -1
     (nil))

(insn 4379 4378 4380 (set (reg/f:SI 2224)
        (plus:SI (reg:SI 2223)
            (reg:SI 2222))) src/switch_core_media.c:3701 -1
     (nil))

(insn 4380 4379 0 (set (mem/s:HI (reg/f:SI 2224) [13 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].remote_rtcp_port+0 S2 A32])
        (subreg:HI (reg:SI 857 [ D.47946 ]) 0)) src/switch_core_media.c:3701 -1
     (nil))

;; D.44471_957 = smh_186->mparams;

(insn 4381 4380 4382 (set (reg:SI 2225)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3702 -1
     (nil))

(insn 4382 4381 0 (set (reg/f:SI 717 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2225)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3702 -1
     (nil))

;; if (D.45214_958 == 0B)

(insn 4383 4382 4384 (set (reg:SI 2226)
        (mem/s/f:SI (plus:SI (reg/f:SI 717 [ D.44471 ])
                (const_int 84 [0x54])) [2 D.44471_957->rtcp_video_interval_msec+0 S4 A32])) src/switch_core_media.c:3702 -1
     (nil))

(insn 4384 4383 4385 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2226)
            (const_int 0 [0]))) src/switch_core_media.c:3702 -1
     (nil))

(jump_insn 4385 4384 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3702 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))

;; Generating RTL for gimple basic block 372

;; D.44471_957->rtcp_video_interval_msec = "5000";

(insn 4387 4386 4388 (set (reg:SI 2228)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1135 [0x46f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1135 [0x46f])
            ] 29)) src/switch_core_media.c:3703 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
        (nil)))

(insn 4388 4387 4389 (set (reg/f:SI 2227)
        (reg:SI 2228)) src/switch_core_media.c:3703 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
        (nil)))

(insn 4389 4388 0 (set (mem/s/f:SI (plus:SI (reg/f:SI 717 [ D.44471 ])
                (const_int 84 [0x54])) [2 D.44471_957->rtcp_video_interval_msec+0 S4 A32])
        (reg/f:SI 2227)) src/switch_core_media.c:3703 -1
     (nil))

;; Generating RTL for gimple basic block 373

;; 

(code_label 4392 4391 4393 1484 "" [0 uses])

(note 4393 4392 0 NOTE_INSN_BASIC_BLOCK)

;; if (got_video_crypto_1885 == 0)

(insn 4394 4393 4395 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 179 [ got_video_crypto ])
            (const_int 0 [0]))) src/switch_core_media.c:3705 -1
     (nil))

(jump_insn 4395 4394 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3705 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 374

;; D.45219_961 = strcasecmp (D.44590_894, "crypto");

(insn 4397 4396 4398 (set (reg:SI 2230)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1136 [0x470])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1136 [0x470])
            ] 29)) src/switch_core_media.c:3705 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
        (nil)))

(insn 4398 4397 4399 (set (reg:SI 2229)
        (reg:SI 2230)) src/switch_core_media.c:3705 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
        (nil)))

(insn 4399 4398 4400 (set (reg:SI 0 r0)
        (reg/f:SI 701 [ D.44590 ])) src/switch_core_media.c:3705 -1
     (nil))

(insn 4400 4399 4401 (set (reg:SI 1 r1)
        (reg:SI 2229)) src/switch_core_media.c:3705 -1
     (nil))

(call_insn/i 4401 4400 4402 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3705 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4402 4401 0 (set (reg:SI 719 [ D.45219 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3705 -1
     (nil))

;; if (D.45219_961 == 0)

(insn 4403 4402 4404 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 719 [ D.45219 ])
            (const_int 0 [0]))) src/switch_core_media.c:3705 -1
     (nil))

(jump_insn 4404 4403 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3705 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 375

;; prephitmp.1031_962 = attr_619->a_value;

(insn 4406 4405 0 (set (reg/f:SI 720 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) src/switch_core_media.c:3705 -1
     (nil))

;; # DEBUG s => prephitmp.1031_962

(debug_insn 4407 4406 0 (var_location:SI s (const_int 0 [0])) src/switch_core_media.c:3705 -1
     (nil))
;; if (prephitmp.1031_962 == 0B)

(insn 4408 4407 4409 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 720 [ prephitmp.1031 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4409 4408 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 376

;; if (D.47950_1500 == 0)

(insn 4411 4410 4412 376 (set (reg:SI 2231)
        (zero_extend:SI (mem:QI (reg/f:SI 720 [ prephitmp.1031 ]) [0 *prephitmp.1031_962+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 4412 4411 4413 376 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2231)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4413 4412 4416 376 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 4416 4413 4414 463 [bb 463] NOTE_INSN_BASIC_BLOCK)

(jump_insn 4414 4416 4415 463 (set (pc)
        (label_ref 0)) ./src/include/switch_utils.h:254 -1
     (nil))

(barrier 4415 4414 0)

;; Generating RTL for gimple basic block 377

;; D.45227_968 = switch_channel_get_variable_dup (D.44530_967, "rtp_allow_crypto_in_avp", 1, -1);

(insn 4418 4417 4419 (set (reg:SI 2232)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3709 -1
     (nil))

(insn 4419 4418 4420 (set (reg:SI 2234)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1137 [0x471])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1137 [0x471])
            ] 29)) src/switch_core_media.c:3709 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
        (nil)))

(insn 4420 4419 4421 (set (reg:SI 2233)
        (reg:SI 2234)) src/switch_core_media.c:3709 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
        (nil)))

(insn 4421 4420 4422 (set (reg:SI 0 r0)
        (reg:SI 2232)) src/switch_core_media.c:3709 -1
     (nil))

(insn 4422 4421 4423 (set (reg:SI 1 r1)
        (reg:SI 2233)) src/switch_core_media.c:3709 -1
     (nil))

(insn 4423 4422 4424 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3709 -1
     (nil))

(insn 4424 4423 4425 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3709 -1
     (nil))

(call_insn 4425 4424 4426 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3709 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4426 4425 0 (set (reg/f:SI 725 [ D.45227 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3709 -1
     (nil))

;; # DEBUG expr => D.45227_968

(debug_insn 4427 4426 0 (var_location:SI expr (const_int 0 [0])) src/switch_core_media.c:3709 -1
     (nil))
;; if (D.45227_968 != 0B)

(insn 4428 4427 4429 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 725 [ D.45227 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 4429 4428 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 378

;; D.49747_1610 = strcasecmp (D.45227_968, "yes");

(insn 4431 4430 4432 (set (reg:SI 2236)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1138 [0x472])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1138 [0x472])
            ] 29)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 4432 4431 4433 (set (reg:SI 2235)
        (reg:SI 2236)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 4433 4432 4434 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 4434 4433 4435 (set (reg:SI 1 r1)
        (reg:SI 2235)) ./src/include/switch_utils.h:429 -1
     (nil))

(call_insn/i 4435 4434 4436 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4436 4435 0 (set (reg:SI 927 [ D.49747 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:429 -1
     (nil))

;; if (D.49747_1610 == 0)

(insn 4437 4436 4438 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 927 [ D.49747 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 4438 4437 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 379

;; D.49748_1611 = strcasecmp (D.45227_968, "on");

(insn 4440 4439 4441 (set (reg:SI 2238)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1139 [0x473])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1139 [0x473])
            ] 29)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 4441 4440 4442 (set (reg:SI 2237)
        (reg:SI 2238)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 4442 4441 4443 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 4443 4442 4444 (set (reg:SI 1 r1)
        (reg:SI 2237)) ./src/include/switch_utils.h:430 -1
     (nil))

(call_insn/i 4444 4443 4445 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4445 4444 0 (set (reg:SI 928 [ D.49748 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:430 -1
     (nil))

;; if (D.49748_1611 == 0)

(insn 4446 4445 4447 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 928 [ D.49748 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 4447 4446 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 380

;; D.49749_1612 = strcasecmp (D.45227_968, "true");

(insn 4449 4448 4450 (set (reg:SI 2240)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1140 [0x474])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1140 [0x474])
            ] 29)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 4450 4449 4451 (set (reg:SI 2239)
        (reg:SI 2240)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 4451 4450 4452 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 4452 4451 4453 (set (reg:SI 1 r1)
        (reg:SI 2239)) ./src/include/switch_utils.h:431 -1
     (nil))

(call_insn/i 4453 4452 4454 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4454 4453 0 (set (reg:SI 929 [ D.49749 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:431 -1
     (nil))

;; if (D.49749_1612 == 0)

(insn 4455 4454 4456 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 929 [ D.49749 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:430 -1
     (nil))

(jump_insn 4456 4455 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 381

;; D.49750_1613 = strcasecmp (D.45227_968, "t");

(insn 4458 4457 4459 (set (reg:SI 2242)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1141 [0x475])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1141 [0x475])
            ] 29)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 4459 4458 4460 (set (reg:SI 2241)
        (reg:SI 2242)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 4460 4459 4461 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 4461 4460 4462 (set (reg:SI 1 r1)
        (reg:SI 2241)) ./src/include/switch_utils.h:432 -1
     (nil))

(call_insn/i 4462 4461 4463 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4463 4462 0 (set (reg:SI 930 [ D.49750 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:432 -1
     (nil))

;; if (D.49750_1613 == 0)

(insn 4464 4463 4465 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 930 [ D.49750 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:431 -1
     (nil))

(jump_insn 4465 4464 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 382

;; D.49751_1614 = strcasecmp (D.45227_968, "enabled");

(insn 4467 4466 4468 (set (reg:SI 2244)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1142 [0x476])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1142 [0x476])
            ] 29)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 4468 4467 4469 (set (reg:SI 2243)
        (reg:SI 2244)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 4469 4468 4470 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 4470 4469 4471 (set (reg:SI 1 r1)
        (reg:SI 2243)) ./src/include/switch_utils.h:433 -1
     (nil))

(call_insn/i 4471 4470 4472 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4472 4471 0 (set (reg:SI 931 [ D.49751 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:433 -1
     (nil))

;; if (D.49751_1614 == 0)

(insn 4473 4472 4474 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 931 [ D.49751 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:432 -1
     (nil))

(jump_insn 4474 4473 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 383

;; D.49752_1615 = strcasecmp (D.45227_968, "active");

(insn 4476 4475 4477 (set (reg:SI 2246)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1143 [0x477])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1143 [0x477])
            ] 29)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 4477 4476 4478 (set (reg:SI 2245)
        (reg:SI 2246)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 4478 4477 4479 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 4479 4478 4480 (set (reg:SI 1 r1)
        (reg:SI 2245)) ./src/include/switch_utils.h:434 -1
     (nil))

(call_insn/i 4480 4479 4481 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4481 4480 0 (set (reg:SI 932 [ D.49752 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:434 -1
     (nil))

;; if (D.49752_1615 == 0)

(insn 4482 4481 4483 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 932 [ D.49752 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:433 -1
     (nil))

(jump_insn 4483 4482 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))

;; Generating RTL for gimple basic block 384

;; D.49753_1616 = strcasecmp (D.45227_968, "allow");

(insn 4485 4484 4486 (set (reg:SI 2248)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1144 [0x478])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1144 [0x478])
            ] 29)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 4486 4485 4487 (set (reg:SI 2247)
        (reg:SI 2248)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 4487 4486 4488 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 4488 4487 4489 (set (reg:SI 1 r1)
        (reg:SI 2247)) ./src/include/switch_utils.h:435 -1
     (nil))

(call_insn/i 4489 4488 4490 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4490 4489 0 (set (reg:SI 933 [ D.49753 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:435 -1
     (nil))

;; if (D.49753_1616 == 0)

(insn 4491 4490 4492 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 933 [ D.49753 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:434 -1
     (nil))

(jump_insn 4492 4491 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))

;; Generating RTL for gimple basic block 385

;; D.49754_1617 = switch_is_number (D.45227_968);

(insn 4494 4493 4495 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:436 -1
     (nil))

(call_insn 4495 4494 4496 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:436 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 4496 4495 0 (set (reg:SI 934 [ D.49754 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:436 -1
     (nil))

;; if (D.49754_1617 != 0)

(insn 4497 4496 4498 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 934 [ D.49754 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:435 -1
     (nil))

(jump_insn 4498 4497 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 386

;; # DEBUG __nptr => D.45227_968

(debug_insn 4500 4499 0 (var_location:SI __nptr (const_int 0 [0])) -1
     (nil))
;; D.49755_1618 = strtol (D.45227_968, 0B, 10);

(insn 4501 4500 4502 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4502 4501 4503 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4503 4502 4504 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 4504 4503 4505 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4505 4504 0 (set (reg:SI 935 [ D.49755 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; if (D.49755_1618 != 0)

(insn 4506 4505 4507 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 935 [ D.49755 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 4507 4506 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 387

;; 

(code_label 4508 4507 4509 1487 "" [0 uses])

(note 4509 4508 0 NOTE_INSN_BASIC_BLOCK)

;; prephitmp.1031_1889 = attr_619->a_value;

(insn 4510 4509 0 (set (reg/f:SI 720 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) ./src/include/switch_utils.h:436 -1
     (nil))

;; Generating RTL for gimple basic block 388

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3711, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");

(insn 4514 4513 4515 (set (reg:SI 2250)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1145 [0x479])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1145 [0x479])
            ] 29)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4515 4514 4516 (set (reg:SI 2249)
        (reg:SI 2250)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4516 4515 4517 (set (reg:SI 2252)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1146 [0x47a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1146 [0x47a])
            ] 29)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4517 4516 4518 (set (reg/f:SI 2251)
        (reg:SI 2252)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4518 4517 4519 (set (reg:SI 2254)
        (plus:SI (reg/f:SI 2251)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3711 -1
     (nil))

(insn 4519 4518 4520 (set (reg:SI 2253)
        (plus:SI (reg:SI 2254)
            (const_int 8 [0x8]))) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2251)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4520 4519 4521 (set (reg:SI 2255)
        (const_int 3711 [0xe7f])) src/switch_core_media.c:3711 -1
     (nil))

(insn 4521 4520 4522 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3711 -1
     (nil))

(insn 4522 4521 4523 (set (reg:SI 2256)
        (const_int 3 [0x3])) src/switch_core_media.c:3711 -1
     (nil))

(insn 4523 4522 4524 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2256)) src/switch_core_media.c:3711 -1
     (nil))

(insn 4524 4523 4525 (set (reg:SI 2258)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1147 [0x47b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1147 [0x47b])
            ] 29)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
        (nil)))

(insn 4525 4524 4526 (set (reg/f:SI 2257)
        (reg:SI 2258)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
        (nil)))

(insn 4526 4525 4527 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2257)) src/switch_core_media.c:3711 -1
     (nil))

(insn 4527 4526 4528 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3711 -1
     (nil))

(insn 4528 4527 4529 (set (reg:SI 1 r1)
        (reg:SI 2249)) src/switch_core_media.c:3711 -1
     (nil))

(insn 4529 4528 4530 (set (reg:SI 2 r2)
        (reg:SI 2253)) src/switch_core_media.c:3711 -1
     (nil))

(insn 4530 4529 4531 (set (reg:SI 3 r3)
        (reg:SI 2255)) src/switch_core_media.c:3711 -1
     (nil))

(call_insn 4531 4530 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3711 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG match => 0

(debug_insn 4532 4531 0 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3712 -1
     (nil))
;; Generating RTL for gimple basic block 389

;; 

(code_label 4535 4534 4536 1488 "" [0 uses])

(note 4536 4535 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG crypto => prephitmp.1031_1812

(debug_insn 4537 4536 0 (var_location:SI crypto (const_int 0 [0])) src/switch_core_media.c:3717 -1
     (nil))
;; # DEBUG __nptr => prephitmp.1031_1812

(debug_insn 4538 4537 0 (var_location:SI __nptr (const_int 0 [0])) src/switch_core_media.c:3717 -1
     (nil))
;; crypto_tag_1502 = strtol (prephitmp.1031_1812, 0B, 10);

(insn 4539 4538 4540 (set (reg:SI 0 r0)
        (reg/f:SI 720 [ prephitmp.1031 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4540 4539 4541 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4541 4540 4542 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 4542 4541 4543 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4543 4542 0 (set (reg/v:SI 860 [ crypto_tag ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

;; # DEBUG crypto_tag => NULL

(debug_insn 4544 4543 0 (var_location:SI crypto_tag (const_int 0 [0])) src/switch_core_media.c:3718 -1
     (nil))
;; got_video_crypto_977 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_video_crypto", 1, prephitmp.1031_1812, crypto_tag_1502, sdp_type_546(D));

(insn 4545 4544 4546 (set (reg:SI 2260)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC362") [flags 0x82]  <var_decl 0x40418f00 *.LC362>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1148 [0x47c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1148 [0x47c])
            ] 29)) src/switch_core_media.c:3720 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC362") [flags 0x82]  <var_decl 0x40418f00 *.LC362>)
        (nil)))

(insn 4546 4545 4547 (set (reg:SI 2259)
        (reg:SI 2260)) src/switch_core_media.c:3720 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC362") [flags 0x82]  <var_decl 0x40418f00 *.LC362>)
        (nil)))

(insn 4547 4546 4548 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 860 [ crypto_tag ])) src/switch_core_media.c:3720 -1
     (nil))

(insn 4548 4547 4549 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 1028 [ sdp_type ])) src/switch_core_media.c:3720 -1
     (nil))

(insn 4549 4548 4550 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3720 -1
     (nil))

(insn 4550 4549 4551 (set (reg:SI 1 r1)
        (reg:SI 2259)) src/switch_core_media.c:3720 -1
     (nil))

(insn 4551 4550 4552 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3720 -1
     (nil))

(insn 4552 4551 4553 (set (reg:SI 3 r3)
        (reg/f:SI 720 [ prephitmp.1031 ])) src/switch_core_media.c:3720 -1
     (nil))

(call_insn 4553 4552 4554 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_check_incoming_crypto") [flags 0x1]  <function_decl 0x40945400 switch_core_session_check_incoming_crypto>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3720 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4554 4553 0 (set (reg/v:SI 179 [ got_video_crypto ])
        (reg:SI 0 r0)) src/switch_core_media.c:3720 -1
     (nil))

;; # DEBUG got_video_crypto => got_video_crypto_977

(debug_insn 4555 4554 0 (var_location:SI got_video_crypto (const_int 0 [0])) src/switch_core_media.c:3720 -1
     (nil))
;; Generating RTL for gimple basic block 390

;; 

(code_label 4556 4555 4557 1481 "" [0 uses])

(note 4557 4556 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG got_video_crypto => got_video_crypto_60

(debug_insn 4558 4557 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; attr_978 = attr_619->a_next;

(insn 4559 4558 0 (set (reg/v/f:SI 507 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 4 [0x4])) [2 attr_619->a_next+0 S4 A32])) src/switch_core_media.c:3684 -1
     (nil))

;; # DEBUG attr => attr_978

(debug_insn 4560 4559 0 (var_location:SI attr (const_int 0 [0])) src/switch_core_media.c:3684 -1
     (nil))
;; # DEBUG got_video_crypto => got_video_crypto_60

(debug_insn 4561 4560 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG attr => attr_978

(debug_insn 4562 4561 0 (var_location:SI attr (const_int 0 [0])) -1
     (nil))
;; if (attr_978 != 0B)

(insn 4564 4562 4565 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 507 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3684 -1
     (nil))

(jump_insn 4565 4564 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4563)
            (pc))) src/switch_core_media.c:3684 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 391

;; 

(code_label 4566 4565 4567 1476 "" [0 uses])

(note 4567 4566 0 NOTE_INSN_BASIC_BLOCK)

;; rm_encoding_979 = map_1620->rm_encoding;

(insn 4568 4567 0 (set (reg/v/f:SI 226 [ rm_encoding ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 757 [ map ])
                (const_int 8 [0x8])) [2 map_1620->rm_encoding+0 S4 A32])) src/switch_core_media.c:3727 -1
     (nil))

;; # DEBUG rm_encoding => rm_encoding_979

(debug_insn 4569 4568 0 (var_location:SI rm_encoding (const_int 0 [0])) src/switch_core_media.c:3727 -1
     (nil))
;; if (rm_encoding_979 == 0B)

(insn 4570 4569 4571 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 226 [ rm_encoding ])
            (const_int 0 [0]))) src/switch_core_media.c:3727 -1
     (nil))

(jump_insn 4571 4570 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3727 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 392

;; Generating RTL for gimple basic block 393

;; 

(code_label 4573 4572 4574 1490 "" [0 uses])

(note 4574 4573 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG rm_encoding => rm_encoding_137

(debug_insn 4575 4574 0 (var_location:SI rm_encoding (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => 0

(debug_insn 4576 4575 0 (var_location:SI i (const_int 0 [0])) src/switch_core_media.c:3731 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 4577 4576 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_819

(debug_insn 4578 4577 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; if (total_codecs_85 > 0)

(insn 4579 4578 4580 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 194 [ total_codecs ])
            (const_int 0 [0]))) src/switch_core_media.c:3731 -1
     (nil))

(jump_insn 4580 4579 0 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3731 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 394

;; ivtmp.1090_544 = (unsigned int) codec_array_84;

(insn 4582 4581 0 (set (reg:SI 181 [ ivtmp.1090 ])
        (reg/v/f:SI 193 [ codec_array ])) src/switch_core_media.c:3731 -1
     (nil))

;; Generating RTL for gimple basic block 395

;; imp_985 = MEM[base: D.49988_872, offset: 0B];

(insn 4584 4583 0 (set (reg/v/f:SI 730 [ imp ])
        (mem/f:SI (reg:SI 181 [ ivtmp.1090 ]) [2 MEM[base: D.49988_872, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3732 -1
     (nil))

;; ivtmp.1090_62 = ivtmp.1090_136 + 4;

(insn 4585 4584 0 (set (reg:SI 181 [ ivtmp.1090 ])
        (plus:SI (reg:SI 181 [ ivtmp.1090 ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3732 -1
     (nil))

;; # DEBUG imp => imp_985

(debug_insn 4586 4585 0 (var_location:SI imp (const_int 0 [0])) src/switch_core_media.c:3732 -1
     (nil))
;; if (D.45238_986 != 1)

(insn 4587 4586 4588 (set (reg:SI 2261)
        (mem/s:SI (reg/v/f:SI 730 [ imp ]) [17 imp_985->codec_type+0 S4 A32])) src/switch_core_media.c:3734 -1
     (nil))

(insn 4588 4587 4589 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2261)
            (const_int 1 [0x1]))) src/switch_core_media.c:3734 -1
     (nil))

(jump_insn 4589 4588 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3734 -1
     (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil)))

;; Generating RTL for gimple basic block 396

;; D.45241_988 = switch_channel_direction (D.44530_987);

(insn 4591 4590 4592 (set (reg:SI 2262)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3738 -1
     (nil))

(insn 4592 4591 4593 (set (reg:SI 0 r0)
        (reg:SI 2262)) src/switch_core_media.c:3738 -1
     (nil))

(call_insn 4593 4592 4594 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_direction") [flags 0x41]  <function_decl 0x4085b700 switch_channel_direction>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3738 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 4594 4593 0 (set (reg:SI 733 [ D.45241 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3738 -1
     (nil))

;; if (D.45241_988 == 0)

(insn 4595 4594 4596 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 733 [ D.45241 ])
            (const_int 0 [0]))) src/switch_core_media.c:3738 -1
     (nil))

(jump_insn 4596 4595 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3738 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 397

;; D.45244_990 = switch_channel_test_flag (D.44530_989, 114);

(insn 4598 4597 4599 (set (reg:SI 2263)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3739 -1
     (nil))

(insn 4599 4598 4600 (set (reg:SI 0 r0)
        (reg:SI 2263)) src/switch_core_media.c:3739 -1
     (nil))

(insn 4600 4599 4601 (set (reg:SI 1 r1)
        (const_int 114 [0x72])) src/switch_core_media.c:3739 -1
     (nil))

(call_insn 4601 4600 4602 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3739 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4602 4601 0 (set (reg:SI 735 [ D.45244 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3739 -1
     (nil))

;; if (D.45244_990 != 0)

(insn 4603 4602 4604 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 735 [ D.45244 ])
            (const_int 0 [0]))) src/switch_core_media.c:3738 -1
     (nil))

(jump_insn 4604 4603 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3738 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 398

;; 

(code_label 4605 4604 4606 1493 "" [0 uses])

(note 4606 4605 0 NOTE_INSN_BASIC_BLOCK)

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3743, session_161(D), 7, "Video Codec Compare [%s:%d]/[%s:%d]\n", rm_encoding_137, D.45248_992, D.45249_993, D.45251_995);

(insn 4607 4606 4608 (set (reg:SI 2265)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1149 [0x47d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1149 [0x47d])
            ] 29)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4608 4607 4609 (set (reg:SI 2264)
        (reg:SI 2265)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4609 4608 4610 (set (reg:SI 2267)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1150 [0x47e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1150 [0x47e])
            ] 29)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4610 4609 4611 (set (reg/f:SI 2266)
        (reg:SI 2267)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4611 4610 4612 (set (reg:SI 2269)
        (plus:SI (reg/f:SI 2266)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3743 -1
     (nil))

(insn 4612 4611 4613 (set (reg:SI 2268)
        (plus:SI (reg:SI 2269)
            (const_int 8 [0x8]))) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2266)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4613 4612 4614 (set (reg:SI 2270)
        (const_int 3743 [0xe9f])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4614 4613 4615 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4615 4614 4616 (set (reg:SI 2271)
        (const_int 7 [0x7])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4616 4615 4617 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2271)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4617 4616 4618 (set (reg:SI 2273)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC363") [flags 0x82]  <var_decl 0x40418f60 *.LC363>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1151 [0x47f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1151 [0x47f])
            ] 29)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC363") [flags 0x82]  <var_decl 0x40418f60 *.LC363>)
        (nil)))

(insn 4618 4617 4619 (set (reg/f:SI 2272)
        (reg:SI 2273)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC363") [flags 0x82]  <var_decl 0x40418f60 *.LC363>)
        (nil)))

(insn 4619 4618 4620 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2272)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4620 4619 4621 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v/f:SI 226 [ rm_encoding ])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4621 4620 4622 (set (reg:SI 2274)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 757 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3744 -1
     (nil))

(insn 4622 4621 4623 (set (reg:SI 2275)
        (lshiftrt:SI (reg:SI 2274)
            (const_int 1 [0x1]))) src/switch_core_media.c:3744 -1
     (nil))

(insn 4623 4622 4624 (set (reg:SI 2276)
        (zero_extend:SI (subreg:QI (reg:SI 2275) 0))) src/switch_core_media.c:3743 -1
     (nil))

(insn 4624 4623 4625 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 2276)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4625 4624 4626 (set (reg/f:SI 2277)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 730 [ imp ])
                (const_int 8 [0x8])) [2 imp_985->iananame+0 S4 A32])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4626 4625 4627 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg/f:SI 2277)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4627 4626 4628 (set (reg:SI 2278)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 730 [ imp ])
                    (const_int 4 [0x4])) [0 imp_985->ianacode+0 S1 A32]))) src/switch_core_media.c:3743 -1
     (nil))

(insn 4628 4627 4629 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg:SI 2278)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4629 4628 4630 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4630 4629 4631 (set (reg:SI 1 r1)
        (reg:SI 2264)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4631 4630 4632 (set (reg:SI 2 r2)
        (reg:SI 2268)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4632 4631 4633 (set (reg:SI 3 r3)
        (reg:SI 2270)) src/switch_core_media.c:3743 -1
     (nil))

(call_insn 4633 4632 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 32 [0x20]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3743 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; D.45255_996 = map_1620->rm_encoding;

(insn 4634 4633 0 (set (reg/f:SI 741 [ D.45255 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 757 [ map ])
                (const_int 8 [0x8])) [2 map_1620->rm_encoding+0 S4 A32])) src/switch_core_media.c:3745 -1
     (nil))

;; # DEBUG s => D.45255_996

(debug_insn 4635 4634 0 (var_location:SI s (const_int 0 [0])) src/switch_core_media.c:3745 -1
     (nil))
;; if (D.45255_996 == 0B)

(insn 4636 4635 4637 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 741 [ D.45255 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4637 4636 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 399

;; if (D.47957_1503 == 0)

(insn 4639 4638 4640 (set (reg:SI 2279)
        (zero_extend:SI (mem:QI (reg/f:SI 741 [ D.45255 ]) [0 *D.45255_996+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 4640 4639 4641 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2279)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4641 4640 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 400

;; 

(code_label 4642 4641 4643 1494 "" [0 uses])

(note 4643 4642 0 NOTE_INSN_BASIC_BLOCK)

;; D.45248_1004 = (int) D.45247_1003;

(insn 4644 4643 4645 (set (reg:SI 2280)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 757 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3745 -1
     (nil))

(insn 4645 4644 4646 (set (reg:SI 2281)
        (lshiftrt:SI (reg:SI 2280)
            (const_int 1 [0x1]))) src/switch_core_media.c:3745 -1
     (nil))

(insn 4646 4645 0 (set (reg:SI 747 [ D.45248 ])
        (zero_extend:SI (subreg:QI (reg:SI 2281) 0))) src/switch_core_media.c:3745 -1
     (nil))

;; if (D.45248_1004 <= 95)

(insn 4647 4646 4648 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 747 [ D.45248 ])
            (const_int 95 [0x5f]))) src/switch_core_media.c:3745 -1
     (nil))

(jump_insn 4648 4647 0 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3745 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 401

;; vmatch_1009 = D.45248_1004 == D.45251_1008;

(insn 4650 4649 4651 (set (reg:SI 2282)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 730 [ imp ])
                    (const_int 4 [0x4])) [0 imp_985->ianacode+0 S1 A32]))) src/switch_core_media.c:3746 -1
     (nil))

(insn 4651 4650 4652 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 747 [ D.45248 ])
            (reg:SI 2282))) src/switch_core_media.c:3746 -1
     (nil))

(insn 4652 4651 4653 (set (reg:SI 2283)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3746 -1
     (nil))

(insn 4653 4652 0 (set (reg/v:SI 227 [ vmatch ])
        (reg:SI 2283)) src/switch_core_media.c:3746 -1
     (nil))

;; # DEBUG vmatch => vmatch_1009

(debug_insn 4654 4653 0 (var_location:SI vmatch (const_int 0 [0])) src/switch_core_media.c:3746 -1
     (nil))
;; Generating RTL for gimple basic block 402

;; 

(code_label 4657 4656 4658 1496 "" [0 uses])

(note 4658 4657 0 NOTE_INSN_BASIC_BLOCK)

;; D.45259_1011 = strcasecmp (rm_encoding_137, D.45249_1010);

(insn 4659 4658 4660 (set (reg:SI 2284)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 730 [ imp ])
                (const_int 8 [0x8])) [2 imp_985->iananame+0 S4 A32])) src/switch_core_media.c:3748 -1
     (nil))

(insn 4660 4659 4661 (set (reg:SI 0 r0)
        (reg/v/f:SI 226 [ rm_encoding ])) src/switch_core_media.c:3748 -1
     (nil))

(insn 4661 4660 4662 (set (reg:SI 1 r1)
        (reg:SI 2284)) src/switch_core_media.c:3748 -1
     (nil))

(call_insn/i 4662 4661 4663 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3748 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4663 4662 0 (set (reg:SI 751 [ D.45259 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3748 -1
     (nil))

;; vmatch_1012 = D.45259_1011 == 0;

(insn 4664 4663 4665 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 751 [ D.45259 ])
            (const_int 0 [0]))) src/switch_core_media.c:3748 -1
     (nil))

(insn 4665 4664 4666 (set (reg:SI 2285)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3748 -1
     (nil))

(insn 4666 4665 0 (set (reg/v:SI 227 [ vmatch ])
        (reg:SI 2285)) src/switch_core_media.c:3748 -1
     (nil))

;; # DEBUG vmatch => vmatch_1012

(debug_insn 4667 4666 0 (var_location:SI vmatch (const_int 0 [0])) src/switch_core_media.c:3748 -1
     (nil))
;; Generating RTL for gimple basic block 403

;; 

(code_label 4668 4667 4669 1497 "" [0 uses])

(note 4669 4668 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG vmatch => vmatch_138

(debug_insn 4670 4669 0 (var_location:SI vmatch (const_int 0 [0])) -1
     (nil))
;; if (vmatch_138 != 0)

(insn 4671 4670 4672 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 227 [ vmatch ])
            (const_int 0 [0]))) src/switch_core_media.c:3752 -1
     (nil))

(jump_insn 4672 4671 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3752 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 404

;; if (D.45262_1013 == D.45263_1014)

(insn 4674 4673 4675 (set (reg:SI 2286)
        (mem/s:SI (plus:SI (reg/v/f:SI 757 [ map ])
                (const_int 12 [0xc])) [26 map_1620->rm_rate+0 S4 A32])) src/switch_core_media.c:3752 -1
     (nil))

(insn 4675 4674 4676 (set (reg:SI 2287)
        (mem/s:SI (plus:SI (reg/v/f:SI 730 [ imp ])
                (const_int 16 [0x10])) [4 imp_985->samples_per_second+0 S4 A32])) src/switch_core_media.c:3752 -1
     (nil))

(insn 4676 4675 4677 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2286)
            (reg:SI 2287))) src/switch_core_media.c:3752 -1
     (nil))

(jump_insn 4677 4676 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3752 -1
     (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil)))

;; Generating RTL for gimple basic block 405

;; matches[m_idx_910].imp = imp_985;

(insn 4679 4678 4680 (set (reg:SI 2288)
        (const_int -1056 [0xfffffffffffffbe0])) src/switch_core_media.c:3753 -1
     (nil))

(insn 4680 4679 4681 (set (reg:SI 2289)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3753 -1
     (nil))

(insn 4681 4680 4682 (set (reg:SI 2290)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 2289))) src/switch_core_media.c:3753 -1
     (nil))

(insn 4682 4681 4683 (set (reg/f:SI 2291)
        (plus:SI (reg:SI 2290)
            (reg:SI 2288))) src/switch_core_media.c:3753 -1
     (nil))

(insn 4683 4682 0 (set (mem/s/f:SI (reg/f:SI 2291) [2 matches[m_idx_910].imp+0 S4 A64])
        (reg/v/f:SI 730 [ imp ])) src/switch_core_media.c:3753 -1
     (nil))

;; matches[m_idx_910].map = map_1620;

(insn 4684 4683 4685 (set (reg:SI 2292)
        (const_int -1056 [0xfffffffffffffbe0])) src/switch_core_media.c:3754 -1
     (nil))

(insn 4685 4684 4686 (set (reg:SI 2293)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3754 -1
     (nil))

(insn 4686 4685 4687 (set (reg:SI 2294)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 2293))) src/switch_core_media.c:3754 -1
     (nil))

(insn 4687 4686 4688 (set (reg/f:SI 2295)
        (plus:SI (reg:SI 2294)
            (reg:SI 2292))) src/switch_core_media.c:3754 -1
     (nil))

(insn 4688 4687 0 (set (mem/s/f:SI (plus:SI (reg/f:SI 2295)
                (const_int 4 [0x4])) [2 matches[m_idx_910].map+0 S4 A32])
        (reg/v/f:SI 757 [ map ])) src/switch_core_media.c:3754 -1
     (nil))

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3756, session_161(D), 7, "Video Codec Compare [%s:%d] +++ is saved as a match\n", D.45249_1015, D.45251_1017);

(insn 4689 4688 4690 (set (reg:SI 2297)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1152 [0x480])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1152 [0x480])
            ] 29)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4690 4689 4691 (set (reg:SI 2296)
        (reg:SI 2297)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4691 4690 4692 (set (reg:SI 2299)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1153 [0x481])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1153 [0x481])
            ] 29)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4692 4691 4693 (set (reg/f:SI 2298)
        (reg:SI 2299)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4693 4692 4694 (set (reg:SI 2301)
        (plus:SI (reg/f:SI 2298)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3756 -1
     (nil))

(insn 4694 4693 4695 (set (reg:SI 2300)
        (plus:SI (reg:SI 2301)
            (const_int 8 [0x8]))) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2298)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4695 4694 4696 (set (reg:SI 2302)
        (const_int 3756 [0xeac])) src/switch_core_media.c:3756 -1
     (nil))

(insn 4696 4695 4697 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3756 -1
     (nil))

(insn 4697 4696 4698 (set (reg:SI 2303)
        (const_int 7 [0x7])) src/switch_core_media.c:3756 -1
     (nil))

(insn 4698 4697 4699 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2303)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4699 4698 4700 (set (reg:SI 2305)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC364") [flags 0x82]  <var_decl 0x4041f000 *.LC364>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1154 [0x482])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1154 [0x482])
            ] 29)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC364") [flags 0x82]  <var_decl 0x4041f000 *.LC364>)
        (nil)))

(insn 4700 4699 4701 (set (reg/f:SI 2304)
        (reg:SI 2305)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC364") [flags 0x82]  <var_decl 0x4041f000 *.LC364>)
        (nil)))

(insn 4701 4700 4702 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2304)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4702 4701 4703 (set (reg/f:SI 2306)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 730 [ imp ])
                (const_int 8 [0x8])) [2 imp_985->iananame+0 S4 A32])) src/switch_core_media.c:3756 -1
     (nil))

(insn 4703 4702 4704 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 2306)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4704 4703 4705 (set (reg:SI 2307)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 730 [ imp ])
                    (const_int 4 [0x4])) [0 imp_985->ianacode+0 S1 A32]))) src/switch_core_media.c:3756 -1
     (nil))

(insn 4705 4704 4706 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 2307)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4706 4705 4707 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3756 -1
     (nil))

(insn 4707 4706 4708 (set (reg:SI 1 r1)
        (reg:SI 2296)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4708 4707 4709 (set (reg:SI 2 r2)
        (reg:SI 2300)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4709 4708 4710 (set (reg:SI 3 r3)
        (reg:SI 2302)) src/switch_core_media.c:3756 -1
     (nil))

(call_insn 4710 4709 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 24 [0x18]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3756 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; m_idx_1018 = m_idx_910 + 1;

(insn 4711 4710 0 (set (reg/v:SI 202 [ m_idx ])
        (plus:SI (reg/v:SI 202 [ m_idx ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3758 -1
     (nil))

;; # DEBUG m_idx => m_idx_1018

(debug_insn 4712 4711 0 (var_location:SI m_idx (const_int 0 [0])) src/switch_core_media.c:3758 -1
     (nil))
;; Generating RTL for gimple basic block 406

;; 

(code_label 4713 4712 4714 1492 "" [0 uses])

(note 4714 4713 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG m_idx => m_idx_109

(debug_insn 4715 4714 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; i_1020 = i_864 + 1;

(insn 4716 4715 0 (set (reg/v:SI 687 [ i ])
        (plus:SI (reg/v:SI 687 [ i ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3731 -1
     (nil))

;; # DEBUG i => i_1020

(debug_insn 4717 4716 0 (var_location:SI i (const_int 0 [0])) src/switch_core_media.c:3731 -1
     (nil))
;; # DEBUG i => i_1020

(debug_insn 4718 4717 0 (var_location:SI i (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_109

(debug_insn 4719 4718 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; if (i_1020 != total_codecs_85)

(insn 4721 4719 4722 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 687 [ i ])
            (reg/v:SI 194 [ total_codecs ]))) src/switch_core_media.c:3731 -1
     (nil))

(jump_insn 4722 4721 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4720)
            (pc))) src/switch_core_media.c:3731 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 407

;; 

(code_label 4723 4722 4724 1491 "" [0 uses])

(note 4724 4723 0 NOTE_INSN_BASIC_BLOCK)

;; map_1021 = map_1620->rm_next;

(insn 4725 4724 0 (set (reg/v/f:SI 757 [ map ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 757 [ map ])
                (const_int 4 [0x4])) [2 map_1620->rm_next+0 S4 A32])) src/switch_core_media.c:3674 -1
     (nil))

;; # DEBUG map => map_1021

(debug_insn 4726 4725 0 (var_location:SI map (const_int 0 [0])) src/switch_core_media.c:3674 -1
     (nil))
;; # DEBUG map => map_1021

(debug_insn 4727 4726 0 (var_location:SI map (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_953

(debug_insn 4728 4727 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_crypto => got_video_crypto_960

(debug_insn 4729 4728 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; if (map_1021 != 0B)

(insn 4731 4729 4732 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 757 [ map ])
            (const_int 0 [0]))) src/switch_core_media.c:3674 -1
     (nil))

(jump_insn 4732 4731 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4730)
            (pc))) src/switch_core_media.c:3674 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))

;; Generating RTL for gimple basic block 408

;; 

(code_label 4733 4732 4734 1474 "" [0 uses])

(note 4734 4733 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.45267_1025 != 0)

(insn 4735 4734 4736 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 179 [ got_video_crypto ])
            (const_int 0 [0]))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4736 4735 4737 (set (reg:SI 2309)
        (le:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4737 4736 4738 (set (reg:QI 2308)
        (subreg:QI (reg:SI 2309) 0)) src/switch_core_media.c:3765 -1
     (nil))

(insn 4738 4737 4739 (set (reg:SI 2310)
        (const_int 23812 [0x5d04])) src/switch_core_media.c:3765 -1
     (nil))

(insn 4739 4738 4740 (set (reg:SI 2312)
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2310)) [23 smh_186->crypto_mode+0 S4 A32])) src/switch_core_media.c:3765 -1
     (nil))

(insn 4740 4739 4741 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2312)
            (const_int 1 [0x1]))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4741 4740 4742 (set (reg:SI 2313)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4742 4741 4743 (set (reg:QI 2311)
        (subreg:QI (reg:SI 2313) 0)) src/switch_core_media.c:3765 -1
     (nil))

(insn 4743 4742 4744 (set (reg:SI 2314)
        (and:SI (subreg:SI (reg:QI 2308) 0)
            (subreg:SI (reg:QI 2311) 0))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4744 4743 4745 (set (reg:QI 2315)
        (subreg:QI (reg:SI 2314) 0)) src/switch_core_media.c:3765 -1
     (nil))

(insn 4745 4744 4746 (set (reg:SI 2316)
        (zero_extend:SI (reg:QI 2315))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4746 4745 4747 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2316)
            (const_int 0 [0]))) src/switch_core_media.c:3765 -1
     (nil))

(jump_insn 4747 4746 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3765 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 409

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3766, session_161(D), 4, "Crypto not negotiated but required.\n");

(insn 4749 4748 4750 (set (reg:SI 2318)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1155 [0x483])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1155 [0x483])
            ] 29)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4750 4749 4751 (set (reg:SI 2317)
        (reg:SI 2318)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4751 4750 4752 (set (reg:SI 2320)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1156 [0x484])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1156 [0x484])
            ] 29)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4752 4751 4753 (set (reg/f:SI 2319)
        (reg:SI 2320)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4753 4752 4754 (set (reg:SI 2322)
        (plus:SI (reg/f:SI 2319)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3766 -1
     (nil))

(insn 4754 4753 4755 (set (reg:SI 2321)
        (plus:SI (reg:SI 2322)
            (const_int 8 [0x8]))) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2319)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4755 4754 4756 (set (reg:SI 2323)
        (const_int 3766 [0xeb6])) src/switch_core_media.c:3766 -1
     (nil))

(insn 4756 4755 4757 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3766 -1
     (nil))

(insn 4757 4756 4758 (set (reg:SI 2324)
        (const_int 4 [0x4])) src/switch_core_media.c:3766 -1
     (nil))

(insn 4758 4757 4759 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2324)) src/switch_core_media.c:3766 -1
     (nil))

(insn 4759 4758 4760 (set (reg:SI 2326)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1157 [0x485])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1157 [0x485])
            ] 29)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
        (nil)))

(insn 4760 4759 4761 (set (reg/f:SI 2325)
        (reg:SI 2326)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
        (nil)))

(insn 4761 4760 4762 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2325)) src/switch_core_media.c:3766 -1
     (nil))

(insn 4762 4761 4763 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3766 -1
     (nil))

(insn 4763 4762 4764 (set (reg:SI 1 r1)
        (reg:SI 2317)) src/switch_core_media.c:3766 -1
     (nil))

(insn 4764 4763 4765 (set (reg:SI 2 r2)
        (reg:SI 2321)) src/switch_core_media.c:3766 -1
     (nil))

(insn 4765 4764 4766 (set (reg:SI 3 r3)
        (reg:SI 2323)) src/switch_core_media.c:3766 -1
     (nil))

(call_insn 4766 4765 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3766 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; # DEBUG vmatch => 0

(debug_insn 4767 4766 0 (var_location:SI vmatch (const_int 0 [0])) src/switch_core_media.c:3767 -1
     (nil))
;; # DEBUG m_idx => 0

(debug_insn 4768 4767 0 (var_location:SI m_idx (const_int 0 [0])) src/switch_core_media.c:3768 -1
     (nil))
;; # DEBUG m_idx => 0

(debug_insn 4769 4768 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 410

;; 

(code_label 4772 4771 4773 1500 "" [0 uses])

(note 4773 4772 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG m_idx => m_idx_906

(debug_insn 4774 4773 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; if (m_idx_906 != 0)

(insn 4775 4774 4776 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (const_int 0 [0]))) src/switch_core_media.c:3771 -1
     (nil))

(jump_insn 4776 4775 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3771 -1
     (expr_list:REG_BR_PROB (const_int 3000 [0xbb8])
        (nil)))

;; Generating RTL for gimple basic block 411

;; # DEBUG j => 0

(debug_insn 4778 4777 0 (var_location:SI j (const_int 0 [0])) src/switch_core_media.c:3774 -1
     (nil))
;; if (greedy_47 != 0)

(insn 4779 4778 4780 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 170 [ greedy ])
            (const_int 0 [0]))) src/switch_core_media.c:3776 -1
     (nil))

(jump_insn 4780 4779 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3776 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 412

;; greedy_sort (smh_186, &matches, m_idx_906, codec_array_84, total_codecs_85);

(insn 4782 4781 4783 (set (reg:SI 2327)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3777 -1
     (nil))

(insn 4783 4782 4784 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 194 [ total_codecs ])) src/switch_core_media.c:3777 -1
     (nil))

(insn 4784 4783 4785 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3777 -1
     (nil))

(insn 4785 4784 4786 (set (reg:SI 1 r1)
        (reg:SI 2327)) src/switch_core_media.c:3777 -1
     (nil))

(insn 4786 4785 4787 (set (reg:SI 2 r2)
        (reg/v:SI 202 [ m_idx ])) src/switch_core_media.c:3777 -1
     (nil))

(insn 4787 4786 4788 (set (reg:SI 3 r3)
        (reg/v/f:SI 193 [ codec_array ])) src/switch_core_media.c:3777 -1
     (nil))

(call_insn 4788 4787 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("greedy_sort") [flags 0x3]  <function_decl 0x414f3b00 greedy_sort>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3777 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 413

;; 

(code_label 4789 4788 4790 1501 "" [0 uses])

(note 4790 4789 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG vmatch => 1

(debug_insn 4791 4790 0 (var_location:SI vmatch (const_int 0 [0])) src/switch_core_media.c:3780 -1
     (nil))
;; MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].codec_negotiated = 1;

(insn 4792 4791 4793 (set (reg:SI 2328)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3781 -1
     (nil))

(insn 4793 4792 4794 (set (reg:SI 2329)
        (const_int 11409 [0x2c91])) src/switch_core_media.c:3781 -1
     (nil))

(insn 4794 4793 4795 (set (reg:SI 2330)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2328))) src/switch_core_media.c:3781 -1
     (nil))

(insn 4795 4794 4796 (set (reg/f:SI 2331)
        (plus:SI (reg:SI 2330)
            (reg:SI 2329))) src/switch_core_media.c:3781 -1
     (nil))

(insn 4796 4795 4797 (set (reg:SI 2332)
        (const_int 1 [0x1])) src/switch_core_media.c:3781 -1
     (nil))

(insn 4797 4796 4798 (set (reg:QI 2333)
        (subreg:QI (reg:SI 2332) 0)) src/switch_core_media.c:3781 -1
     (nil))

(insn 4798 4797 0 (set (mem/s:QI (reg/f:SI 2331) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].codec_negotiated+0 S1 A8])
        (reg:QI 2333)) src/switch_core_media.c:3781 -1
     (nil))

;; # DEBUG j => 0

(debug_insn 4799 4798 0 (var_location:SI j (const_int 0 [0])) src/switch_core_media.c:3783 -1
     (nil))
;; # DEBUG j => 0

(debug_insn 4800 4799 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 414

;; D.49978_628 = &matches + ivtmp.1083_626;

(insn 4802 4801 4803 (set (reg:SI 2334)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:2890 -1
     (nil))

(insn 4803 4802 0 (set (reg/f:SI 514 [ D.49978 ])
        (plus:SI (reg:SI 2334)
            (reg:SI 513 [ ivtmp.1083 ]))) src/switch_core_media.c:2890 -1
     (nil))

;; D.45274_1031 = MEM[base: D.49978_628, offset: 4B];

(insn 4804 4803 0 (set (reg/f:SI 762 [ D.45274 ])
        (mem/f:SI (plus:SI (reg/f:SI 514 [ D.49978 ])
                (const_int 4 [0x4])) [3 MEM[base: D.49978_628, offset: 4B]+0 S4 A32])) src/switch_core_media.c:3786 -1
     (nil))

;; D.45279_1038 = MEM[symbol: matches, index: ivtmp.1083_626, offset: 0B];

(insn 4805 4804 4806 (set (reg:SI 2335)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3790 -1
     (nil))

(insn 4806 4805 0 (set (reg/f:SI 767 [ D.45279 ])
        (mem/f:SI (plus:SI (reg:SI 513 [ ivtmp.1083 ])
                (reg:SI 2335)) [3 MEM[symbol: matches, index: ivtmp.1083_626, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3790 -1
     (nil))

;; pmap_1044 = switch_core_media_add_payload_map (session_161(D), 1, D.45275_1032, D.45276_1034, sdp_type_546(D), D.45278_1037, D.45280_1039, D.45283_1043, 1);

(insn 4807 4806 4808 (set (reg:SI 2336)
        (mem/s/f:SI (plus:SI (reg/f:SI 762 [ D.45274 ])
                (const_int 8 [0x8])) [2 D.45274_1031->rm_encoding+0 S4 A32])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4808 4807 4809 (set (reg:SI 2337)
        (mem/s/f:SI (plus:SI (reg/f:SI 762 [ D.45274 ])
                (const_int 20 [0x14])) [2 D.45274_1031->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4809 4808 4810 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 1028 [ sdp_type ])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4810 4809 4811 (set (reg:SI 2338)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 762 [ D.45274 ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3789 -1
     (nil))

(insn 4811 4810 4812 (set (reg:SI 2339)
        (lshiftrt:SI (reg:SI 2338)
            (const_int 1 [0x1]))) src/switch_core_media.c:3789 -1
     (nil))

(insn 4812 4811 4813 (set (reg:SI 2340)
        (zero_extend:SI (subreg:QI (reg:SI 2339) 0))) src/switch_core_media.c:3784 -1
     (nil))

(insn 4813 4812 4814 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2340)) src/switch_core_media.c:3784 -1
     (nil))

(insn 4814 4813 4815 (set (reg:SI 2341)
        (mem/s:SI (plus:SI (reg/f:SI 767 [ D.45279 ])
                (const_int 16 [0x10])) [4 D.45279_1038->samples_per_second+0 S4 A32])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4815 4814 4816 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 2341)) src/switch_core_media.c:3784 -1
     (nil))

(insn 4816 4815 4817 (set (reg:SI 2343)
        (mem/s:SI (plus:SI (reg/f:SI 767 [ D.45279 ])
                (const_int 28 [0x1c])) [4 D.45279_1038->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3791 -1
     (nil))

(insn 4817 4816 4818 (set (reg:SI 2345)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3791 -1
     (nil))

(insn 4818 4817 4819 (parallel [
            (set (reg:SI 2344)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 2343))
                            (sign_extend:DI (reg:SI 2345)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3791 -1
     (nil))

(insn 4819 4818 4820 (set (reg:SI 2346)
        (ashiftrt:SI (reg:SI 2344)
            (const_int 6 [0x6]))) src/switch_core_media.c:3791 -1
     (nil))

(insn 4820 4819 4821 (set (reg:SI 2347)
        (ashiftrt:SI (reg:SI 2343)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3791 -1
     (nil))

(insn 4821 4820 4822 (set (reg:SI 2342)
        (minus:SI (reg:SI 2346)
            (reg:SI 2347))) src/switch_core_media.c:3791 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 2343)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 4822 4821 4823 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 2342)) src/switch_core_media.c:3784 -1
     (nil))

(insn 4823 4822 4824 (set (reg:SI 2348)
        (const_int 1 [0x1])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4824 4823 4825 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 2348)) src/switch_core_media.c:3784 -1
     (nil))

(insn 4825 4824 4826 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4826 4825 4827 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4827 4826 4828 (set (reg:SI 2 r2)
        (reg:SI 2336)) src/switch_core_media.c:3784 -1
     (nil))

(insn 4828 4827 4829 (set (reg:SI 3 r3)
        (reg:SI 2337)) src/switch_core_media.c:3784 -1
     (nil))

(call_insn 4829 4828 4830 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_add_payload_map") [flags 0x1]  <function_decl 0x40957200 switch_core_media_add_payload_map>) [0 S4 A32])
                    (const_int 24 [0x18])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3784 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4830 4829 0 (set (reg/v/f:SI 772 [ pmap ])
        (reg:SI 0 r0)) src/switch_core_media.c:3784 -1
     (nil))

;; # DEBUG pmap => pmap_1044

(debug_insn 4831 4830 0 (var_location:SI pmap (const_int 0 [0])) src/switch_core_media.c:3784 -1
     (nil))
;; if (j_1844 == 0)

(insn 4832 4831 4833 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 793 [ j ])
            (const_int 0 [0]))) src/switch_core_media.c:3793 -1
     (nil))

(jump_insn 4833 4832 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3793 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 415

;; MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map = pmap_1044;

(insn 4835 4834 4836 (set (reg:SI 2349)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3794 -1
     (nil))

(insn 4836 4835 4837 (set (reg:SI 2350)
        (const_int 1856 [0x740])) src/switch_core_media.c:3794 -1
     (nil))

(insn 4837 4836 4838 (set (reg:SI 2351)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2349))) src/switch_core_media.c:3794 -1
     (nil))

(insn 4838 4837 4839 (set (reg/f:SI 2352)
        (plus:SI (reg:SI 2351)
            (reg:SI 2350))) src/switch_core_media.c:3794 -1
     (nil))

(insn 4839 4838 0 (set (mem/s/f:SI (reg/f:SI 2352) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])
        (reg/v/f:SI 772 [ pmap ])) src/switch_core_media.c:3794 -1
     (nil))

;; pmap_1044->current = 1;

(insn 4840 4839 4841 (set (reg:SI 2353)
        (const_int 1 [0x1])) src/switch_core_media.c:3795 -1
     (nil))

(insn 4841 4840 4842 (set (reg:QI 2354)
        (subreg:QI (reg:SI 2353) 0)) src/switch_core_media.c:3795 -1
     (nil))

(insn 4842 4841 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 18 [0x12])) [0 pmap_1044->current+0 S1 A16])
        (reg:QI 2354)) src/switch_core_media.c:3795 -1
     (nil))

;; D.45287_1046 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session;

(insn 4843 4842 4844 (set (reg:SI 2355)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3796 -1
     (nil))

(insn 4844 4843 4845 (set (reg:SI 2356)
        (const_int 1448 [0x5a8])) src/switch_core_media.c:3796 -1
     (nil))

(insn 4845 4844 4846 (set (reg:SI 2357)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2355))) src/switch_core_media.c:3796 -1
     (nil))

(insn 4846 4845 4847 (set (reg/f:SI 2358)
        (plus:SI (reg:SI 2357)
            (reg:SI 2356))) src/switch_core_media.c:3796 -1
     (nil))

(insn 4847 4846 0 (set (reg/f:SI 773 [ D.45287 ])
        (mem/s/f:SI (reg/f:SI 2358) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session+0 S4 A32])) src/switch_core_media.c:3796 -1
     (nil))

;; if (D.45287_1046 != 0B)

(insn 4848 4847 4849 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 773 [ D.45287 ])
            (const_int 0 [0]))) src/switch_core_media.c:3796 -1
     (nil))

(jump_insn 4849 4848 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3796 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))

;; Generating RTL for gimple basic block 416

;; switch_rtp_set_default_payload (D.45287_1046, D.45290_1048);

(insn 4851 4850 4852 (set (reg:SI 2359)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 772 [ pmap ])
                    (const_int 32 [0x20])) [0 pmap_1044->pt+0 S1 A32]))) src/switch_core_media.c:3797 -1
     (nil))

(insn 4852 4851 4853 (set (reg:SI 0 r0)
        (reg/f:SI 773 [ D.45287 ])) src/switch_core_media.c:3797 -1
     (nil))

(insn 4853 4852 4854 (set (reg:SI 1 r1)
        (reg:SI 2359)) src/switch_core_media.c:3797 -1
     (nil))

(call_insn 4854 4853 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_default_payload") [flags 0x41]  <function_decl 0x408ce200 switch_rtp_set_default_payload>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3797 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; Generating RTL for gimple basic block 417

;; 

(code_label 4855 4854 4856 1502 "" [0 uses])

(note 4856 4855 0 NOTE_INSN_BASIC_BLOCK)

;; mimp_1049 = MEM[symbol: matches, index: ivtmp.1083_626, offset: 0B];

(insn 4857 4856 4858 (set (reg:SI 2360)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3801 -1
     (nil))

(insn 4858 4857 0 (set (reg/v/f:SI 775 [ mimp ])
        (mem/f:SI (plus:SI (reg:SI 513 [ ivtmp.1083 ])
                (reg:SI 2360)) [3 MEM[symbol: matches, index: ivtmp.1083_626, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3801 -1
     (nil))

;; # DEBUG mimp => mimp_1049

(debug_insn 4859 4858 0 (var_location:SI mimp (const_int 0 [0])) src/switch_core_media.c:3801 -1
     (nil))
;; map_1050 = MEM[base: D.49978_628, offset: 4B];

(insn 4860 4859 0 (set (reg/v/f:SI 776 [ map ])
        (mem/f:SI (plus:SI (reg/f:SI 514 [ D.49978 ])
                (const_int 4 [0x4])) [3 MEM[base: D.49978_628, offset: 4B]+0 S4 A32])) src/switch_core_media.c:3802 -1
     (nil))

;; # DEBUG map => map_1050

(debug_insn 4861 4860 0 (var_location:SI map (const_int 0 [0])) src/switch_core_media.c:3802 -1
     (nil))
;; D.45291_1052 = switch_core_perform_session_strdup (session_161(D), D.45255_1051, "src/switch_core_media.c", &__func__, 3804);

(insn 4862 4861 4863 (set (reg:SI 2361)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 776 [ map ])
                (const_int 8 [0x8])) [2 map_1050->rm_encoding+0 S4 A32])) src/switch_core_media.c:3804 -1
     (nil))

(insn 4863 4862 4864 (set (reg:SI 2363)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1158 [0x486])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1158 [0x486])
            ] 29)) src/switch_core_media.c:3804 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4864 4863 4865 (set (reg:SI 2362)
        (reg:SI 2363)) src/switch_core_media.c:3804 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4865 4864 4866 (set (reg:SI 2365)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1159 [0x487])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1159 [0x487])
            ] 29)) src/switch_core_media.c:3804 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4866 4865 4867 (set (reg/f:SI 2364)
        (reg:SI 2365)) src/switch_core_media.c:3804 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4867 4866 4868 (set (reg:SI 2367)
        (plus:SI (reg/f:SI 2364)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3804 -1
     (nil))

(insn 4868 4867 4869 (set (reg:SI 2366)
        (plus:SI (reg:SI 2367)
            (const_int 8 [0x8]))) src/switch_core_media.c:3804 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2364)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4869 4868 4870 (set (reg:SI 2368)
        (const_int 3804 [0xedc])) src/switch_core_media.c:3804 -1
     (nil))

(insn 4870 4869 4871 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 2368)) src/switch_core_media.c:3804 -1
     (nil))

(insn 4871 4870 4872 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3804 -1
     (nil))

(insn 4872 4871 4873 (set (reg:SI 1 r1)
        (reg:SI 2361)) src/switch_core_media.c:3804 -1
     (nil))

(insn 4873 4872 4874 (set (reg:SI 2 r2)
        (reg:SI 2362)) src/switch_core_media.c:3804 -1
     (nil))

(insn 4874 4873 4875 (set (reg:SI 3 r3)
        (reg:SI 2366)) src/switch_core_media.c:3804 -1
     (nil))

(call_insn 4875 4874 4876 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3804 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4876 4875 0 (set (reg/f:SI 778 [ D.45291 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3804 -1
     (nil))

;; pmap_1044->rm_encoding = D.45291_1052;

(insn 4877 4876 0 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 24 [0x18])) [2 pmap_1044->rm_encoding+0 S4 A32])
        (reg/f:SI 778 [ D.45291 ])) src/switch_core_media.c:3804 -1
     (nil))

;; pmap_1044->recv_pt = D.45292_1054;

(insn 4878 4877 4879 (set (reg:SI 2369)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 776 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3805 -1
     (nil))

(insn 4879 4878 4880 (set (reg:SI 2370)
        (lshiftrt:SI (reg:SI 2369)
            (const_int 1 [0x1]))) src/switch_core_media.c:3805 -1
     (nil))

(insn 4880 4879 4881 (set (reg:QI 2371)
        (subreg:QI (reg:SI 2370) 0)) src/switch_core_media.c:3805 -1
     (nil))

(insn 4881 4880 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 57 [0x39])) [0 pmap_1044->recv_pt+0 S1 A8])
        (reg:QI 2371)) src/switch_core_media.c:3805 -1
     (nil))

;; pmap_1044->rm_rate = D.45262_1055;

(insn 4882 4881 4883 (set (reg:SI 2372)
        (mem/s:SI (plus:SI (reg/v/f:SI 776 [ map ])
                (const_int 12 [0xc])) [26 map_1050->rm_rate+0 S4 A32])) src/switch_core_media.c:3806 -1
     (nil))

(insn 4883 4882 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 36 [0x24])) [26 pmap_1044->rm_rate+0 S4 A32])
        (reg:SI 2372)) src/switch_core_media.c:3806 -1
     (nil))

;; pmap_1044->codec_ms = D.45295_1058;

(insn 4884 4883 4885 (set (reg:SI 2374)
        (mem/s:SI (plus:SI (reg/v/f:SI 775 [ mimp ])
                (const_int 28 [0x1c])) [4 mimp_1049->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3807 -1
     (nil))

(insn 4885 4884 4886 (set (reg:SI 2376)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3807 -1
     (nil))

(insn 4886 4885 4887 (parallel [
            (set (reg:SI 2375)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 2374))
                            (sign_extend:DI (reg:SI 2376)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3807 -1
     (nil))

(insn 4887 4886 4888 (set (reg:SI 2377)
        (ashiftrt:SI (reg:SI 2375)
            (const_int 6 [0x6]))) src/switch_core_media.c:3807 -1
     (nil))

(insn 4888 4887 4889 (set (reg:SI 2378)
        (ashiftrt:SI (reg:SI 2374)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3807 -1
     (nil))

(insn 4889 4888 4890 (set (reg:SI 2373)
        (minus:SI (reg:SI 2377)
            (reg:SI 2378))) src/switch_core_media.c:3807 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 2374)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 4890 4889 0 (set (mem/s:SI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 44 [0x2c])) [4 pmap_1044->codec_ms+0 S4 A32])
        (reg:SI 2373)) src/switch_core_media.c:3807 -1
     (nil))

;; D.45296_1060 = switch_core_perform_session_strdup (session_161(D), D.45085_1059, "src/switch_core_media.c", &__func__, 3810);

(insn 4891 4890 4892 (set (reg:SI 2379)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 207 [ connection ])
                (const_int 16 [0x10])) [2 connection_110->c_address+0 S4 A32])) src/switch_core_media.c:3810 -1
     (nil))

(insn 4892 4891 4893 (set (reg:SI 2381)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1160 [0x488])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1160 [0x488])
            ] 29)) src/switch_core_media.c:3810 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4893 4892 4894 (set (reg:SI 2380)
        (reg:SI 2381)) src/switch_core_media.c:3810 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4894 4893 4895 (set (reg:SI 2383)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1161 [0x489])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1161 [0x489])
            ] 29)) src/switch_core_media.c:3810 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4895 4894 4896 (set (reg/f:SI 2382)
        (reg:SI 2383)) src/switch_core_media.c:3810 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4896 4895 4897 (set (reg:SI 2385)
        (plus:SI (reg/f:SI 2382)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3810 -1
     (nil))

(insn 4897 4896 4898 (set (reg:SI 2384)
        (plus:SI (reg:SI 2385)
            (const_int 8 [0x8]))) src/switch_core_media.c:3810 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2382)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4898 4897 4899 (set (reg:SI 2386)
        (const_int 3810 [0xee2])) src/switch_core_media.c:3810 -1
     (nil))

(insn 4899 4898 4900 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 2386)) src/switch_core_media.c:3810 -1
     (nil))

(insn 4900 4899 4901 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3810 -1
     (nil))

(insn 4901 4900 4902 (set (reg:SI 1 r1)
        (reg:SI 2379)) src/switch_core_media.c:3810 -1
     (nil))

(insn 4902 4901 4903 (set (reg:SI 2 r2)
        (reg:SI 2380)) src/switch_core_media.c:3810 -1
     (nil))

(insn 4903 4902 4904 (set (reg:SI 3 r3)
        (reg:SI 2384)) src/switch_core_media.c:3810 -1
     (nil))

(call_insn 4904 4903 4905 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3810 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4905 4904 0 (set (reg/f:SI 786 [ D.45296 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3810 -1
     (nil))

;; pmap_1044->remote_sdp_ip = D.45296_1060;

(insn 4906 4905 0 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 64 [0x40])) [2 pmap_1044->remote_sdp_ip+0 S4 A32])
        (reg/f:SI 786 [ D.45296 ])) src/switch_core_media.c:3810 -1
     (nil))

;; pmap_1044->remote_sdp_port = D.45087_1062;

(insn 4907 4906 4908 (set (reg:SI 2387)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 20 [0x14])) [26 m_1764->m_port+0 S4 A32])) src/switch_core_media.c:3811 -1
     (nil))

(insn 4908 4907 0 (set (mem/s:HI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 68 [0x44])) [13 pmap_1044->remote_sdp_port+0 S2 A32])
        (subreg:HI (reg:SI 2387) 0)) src/switch_core_media.c:3811 -1
     (nil))

;; D.45298_1064 = switch_core_perform_session_strdup (session_161(D), D.45297_1063, "src/switch_core_media.c", &__func__, 3813);

(insn 4909 4908 4910 (set (reg:SI 2388)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 776 [ map ])
                (const_int 20 [0x14])) [2 map_1050->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3813 -1
     (nil))

(insn 4910 4909 4911 (set (reg:SI 2390)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1162 [0x48a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1162 [0x48a])
            ] 29)) src/switch_core_media.c:3813 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4911 4910 4912 (set (reg:SI 2389)
        (reg:SI 2390)) src/switch_core_media.c:3813 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4912 4911 4913 (set (reg:SI 2392)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1163 [0x48b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1163 [0x48b])
            ] 29)) src/switch_core_media.c:3813 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4913 4912 4914 (set (reg/f:SI 2391)
        (reg:SI 2392)) src/switch_core_media.c:3813 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4914 4913 4915 (set (reg:SI 2394)
        (plus:SI (reg/f:SI 2391)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3813 -1
     (nil))

(insn 4915 4914 4916 (set (reg:SI 2393)
        (plus:SI (reg:SI 2394)
            (const_int 8 [0x8]))) src/switch_core_media.c:3813 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2391)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4916 4915 4917 (set (reg:SI 2395)
        (const_int 3813 [0xee5])) src/switch_core_media.c:3813 -1
     (nil))

(insn 4917 4916 4918 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 2395)) src/switch_core_media.c:3813 -1
     (nil))

(insn 4918 4917 4919 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3813 -1
     (nil))

(insn 4919 4918 4920 (set (reg:SI 1 r1)
        (reg:SI 2388)) src/switch_core_media.c:3813 -1
     (nil))

(insn 4920 4919 4921 (set (reg:SI 2 r2)
        (reg:SI 2389)) src/switch_core_media.c:3813 -1
     (nil))

(insn 4921 4920 4922 (set (reg:SI 3 r3)
        (reg:SI 2393)) src/switch_core_media.c:3813 -1
     (nil))

(call_insn 4922 4921 4923 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3813 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4923 4922 0 (set (reg/f:SI 790 [ D.45298 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3813 -1
     (nil))

;; pmap_1044->rm_fmtp = D.45298_1064;

(insn 4924 4923 0 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 52 [0x34])) [2 pmap_1044->rm_fmtp+0 S4 A32])
        (reg/f:SI 790 [ D.45298 ])) src/switch_core_media.c:3813 -1
     (nil))

;; pmap_1044->agreed_pt = D.45292_1066;

(insn 4925 4924 4926 (set (reg:SI 2396)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 776 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3815 -1
     (nil))

(insn 4926 4925 4927 (set (reg:SI 2397)
        (lshiftrt:SI (reg:SI 2396)
            (const_int 1 [0x1]))) src/switch_core_media.c:3815 -1
     (nil))

(insn 4927 4926 4928 (set (reg:QI 2398)
        (subreg:QI (reg:SI 2397) 0)) src/switch_core_media.c:3815 -1
     (nil))

(insn 4928 4927 0 (set (mem/s:QI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 56 [0x38])) [0 pmap_1044->agreed_pt+0 S1 A32])
        (reg:QI 2398)) src/switch_core_media.c:3815 -1
     (nil))

;; j_1067 = j_1844 + 1;

(insn 4929 4928 0 (set (reg/v:SI 793 [ j ])
        (plus:SI (reg/v:SI 793 [ j ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3783 -1
     (nil))

;; # DEBUG j => j_1067

(debug_insn 4930 4929 0 (var_location:SI j (const_int 0 [0])) src/switch_core_media.c:3783 -1
     (nil))
;; # DEBUG j => j_1067

(debug_insn 4931 4930 0 (var_location:SI j (const_int 0 [0])) -1
     (nil))
;; ivtmp.1083_627 = ivtmp.1083_626 + 16;

(insn 4932 4931 0 (set (reg:SI 513 [ ivtmp.1083 ])
        (plus:SI (reg:SI 513 [ ivtmp.1083 ])
            (const_int 16 [0x10]))) src/switch_core_media.c:3783 -1
     (nil))

;; if (m_idx_906 > j_1067)

(insn 4934 4932 4935 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (reg/v:SI 793 [ j ]))) src/switch_core_media.c:3783 -1
     (nil))

(jump_insn 4935 4934 0 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4933)
            (pc))) src/switch_core_media.c:3783 -1
     (expr_list:REG_BR_PROB (const_int 9666 [0x25c2])
        (nil)))

;; Generating RTL for gimple basic block 418

;; switch_snprintf (&tmp, 50, "%d", D.45300_1070);

(insn 4937 4936 4938 (set (reg:SI 2399)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3827 -1
     (nil))

(insn 4938 4937 4939 (set (reg:SI 2401)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1164 [0x48c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1164 [0x48c])
            ] 29)) src/switch_core_media.c:3827 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4939 4938 4940 (set (reg:SI 2400)
        (reg:SI 2401)) src/switch_core_media.c:3827 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4940 4939 4941 (set (reg:SI 2402)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3827 -1
     (nil))

(insn 4941 4940 4942 (set (reg:SI 2404)
        (const_int 1856 [0x740])) src/switch_core_media.c:3827 -1
     (nil))

(insn 4942 4941 4943 (set (reg:SI 2405)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2402))) src/switch_core_media.c:3827 -1
     (nil))

(insn 4943 4942 4944 (set (reg/f:SI 2406)
        (plus:SI (reg:SI 2405)
            (reg:SI 2404))) src/switch_core_media.c:3827 -1
     (nil))

(insn 4944 4943 4945 (set (reg/f:SI 2403)
        (mem/s/f:SI (reg/f:SI 2406) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3827 -1
     (nil))

(insn 4945 4944 4946 (set (reg:SI 2407)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 2403)
                    (const_int 68 [0x44])) [13 D.45286_1068->remote_sdp_port+0 S2 A32]))) src/switch_core_media.c:3827 -1
     (nil))

(insn 4946 4945 4947 (set (reg:SI 0 r0)
        (reg:SI 2399)) src/switch_core_media.c:3827 -1
     (nil))

(insn 4947 4946 4948 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) src/switch_core_media.c:3827 -1
     (nil))

(insn 4948 4947 4949 (set (reg:SI 2 r2)
        (reg:SI 2400)) src/switch_core_media.c:3827 -1
     (nil))

(insn 4949 4948 4950 (set (reg:SI 3 r3)
        (reg:SI 2407)) src/switch_core_media.c:3827 -1
     (nil))

(call_insn 4950 4949 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3827 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_1071, "remote_video_ip", D.45301_1073, 1);

(insn 4951 4950 4952 (set (reg:SI 2408)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3828 -1
     (nil))

(insn 4952 4951 4953 (set (reg:SI 2410)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC365") [flags 0x82]  <var_decl 0x4041f060 *.LC365>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1165 [0x48d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1165 [0x48d])
            ] 29)) src/switch_core_media.c:3828 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC365") [flags 0x82]  <var_decl 0x4041f060 *.LC365>)
        (nil)))

(insn 4953 4952 4954 (set (reg:SI 2409)
        (reg:SI 2410)) src/switch_core_media.c:3828 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC365") [flags 0x82]  <var_decl 0x4041f060 *.LC365>)
        (nil)))

(insn 4954 4953 4955 (set (reg:SI 2411)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3828 -1
     (nil))

(insn 4955 4954 4956 (set (reg:SI 2413)
        (const_int 1856 [0x740])) src/switch_core_media.c:3828 -1
     (nil))

(insn 4956 4955 4957 (set (reg:SI 2414)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2411))) src/switch_core_media.c:3828 -1
     (nil))

(insn 4957 4956 4958 (set (reg/f:SI 2415)
        (plus:SI (reg:SI 2414)
            (reg:SI 2413))) src/switch_core_media.c:3828 -1
     (nil))

(insn 4958 4957 4959 (set (reg/f:SI 2412)
        (mem/s/f:SI (reg/f:SI 2415) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3828 -1
     (nil))

(insn 4959 4958 4960 (set (reg:SI 2416)
        (mem/s/f:SI (plus:SI (reg/f:SI 2412)
                (const_int 64 [0x40])) [2 D.45286_1072->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3828 -1
     (nil))

(insn 4960 4959 4961 (set (reg:SI 0 r0)
        (reg:SI 2408)) src/switch_core_media.c:3828 -1
     (nil))

(insn 4961 4960 4962 (set (reg:SI 1 r1)
        (reg:SI 2409)) src/switch_core_media.c:3828 -1
     (nil))

(insn 4962 4961 4963 (set (reg:SI 2 r2)
        (reg:SI 2416)) src/switch_core_media.c:3828 -1
     (nil))

(insn 4963 4962 4964 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3828 -1
     (nil))

(call_insn 4964 4963 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3828 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_1074, "remote_video_port", &tmp, 1);

(insn 4965 4964 4966 (set (reg:SI 2417)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3829 -1
     (nil))

(insn 4966 4965 4967 (set (reg:SI 2419)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC366") [flags 0x82]  <var_decl 0x4041f0c0 *.LC366>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1166 [0x48e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1166 [0x48e])
            ] 29)) src/switch_core_media.c:3829 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC366") [flags 0x82]  <var_decl 0x4041f0c0 *.LC366>)
        (nil)))

(insn 4967 4966 4968 (set (reg:SI 2418)
        (reg:SI 2419)) src/switch_core_media.c:3829 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC366") [flags 0x82]  <var_decl 0x4041f0c0 *.LC366>)
        (nil)))

(insn 4968 4967 4969 (set (reg:SI 2420)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3829 -1
     (nil))

(insn 4969 4968 4970 (set (reg:SI 0 r0)
        (reg:SI 2417)) src/switch_core_media.c:3829 -1
     (nil))

(insn 4970 4969 4971 (set (reg:SI 1 r1)
        (reg:SI 2418)) src/switch_core_media.c:3829 -1
     (nil))

(insn 4971 4970 4972 (set (reg:SI 2 r2)
        (reg:SI 2420)) src/switch_core_media.c:3829 -1
     (nil))

(insn 4972 4971 4973 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3829 -1
     (nil))

(call_insn 4973 4972 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3829 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_1075, "rtp_video_fmtp", D.45302_1077, 1);

(insn 4974 4973 4975 (set (reg:SI 2421)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3830 -1
     (nil))

(insn 4975 4974 4976 (set (reg:SI 2423)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC367") [flags 0x82]  <var_decl 0x4041f120 *.LC367>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1167 [0x48f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1167 [0x48f])
            ] 29)) src/switch_core_media.c:3830 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC367") [flags 0x82]  <var_decl 0x4041f120 *.LC367>)
        (nil)))

(insn 4976 4975 4977 (set (reg:SI 2422)
        (reg:SI 2423)) src/switch_core_media.c:3830 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC367") [flags 0x82]  <var_decl 0x4041f120 *.LC367>)
        (nil)))

(insn 4977 4976 4978 (set (reg:SI 2424)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3830 -1
     (nil))

(insn 4978 4977 4979 (set (reg:SI 2426)
        (const_int 1856 [0x740])) src/switch_core_media.c:3830 -1
     (nil))

(insn 4979 4978 4980 (set (reg:SI 2427)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2424))) src/switch_core_media.c:3830 -1
     (nil))

(insn 4980 4979 4981 (set (reg/f:SI 2428)
        (plus:SI (reg:SI 2427)
            (reg:SI 2426))) src/switch_core_media.c:3830 -1
     (nil))

(insn 4981 4980 4982 (set (reg/f:SI 2425)
        (mem/s/f:SI (reg/f:SI 2428) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3830 -1
     (nil))

(insn 4982 4981 4983 (set (reg:SI 2429)
        (mem/s/f:SI (plus:SI (reg/f:SI 2425)
                (const_int 52 [0x34])) [2 D.45286_1076->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3830 -1
     (nil))

(insn 4983 4982 4984 (set (reg:SI 0 r0)
        (reg:SI 2421)) src/switch_core_media.c:3830 -1
     (nil))

(insn 4984 4983 4985 (set (reg:SI 1 r1)
        (reg:SI 2422)) src/switch_core_media.c:3830 -1
     (nil))

(insn 4985 4984 4986 (set (reg:SI 2 r2)
        (reg:SI 2429)) src/switch_core_media.c:3830 -1
     (nil))

(insn 4986 4985 4987 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3830 -1
     (nil))

(call_insn 4987 4986 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3830 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_snprintf (&tmp, 50, "%d", D.45304_1080);

(insn 4988 4987 4989 (set (reg:SI 2430)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3831 -1
     (nil))

(insn 4989 4988 4990 (set (reg:SI 2432)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1168 [0x490])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1168 [0x490])
            ] 29)) src/switch_core_media.c:3831 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4990 4989 4991 (set (reg:SI 2431)
        (reg:SI 2432)) src/switch_core_media.c:3831 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4991 4990 4992 (set (reg:SI 2433)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3831 -1
     (nil))

(insn 4992 4991 4993 (set (reg:SI 2435)
        (const_int 1856 [0x740])) src/switch_core_media.c:3831 -1
     (nil))

(insn 4993 4992 4994 (set (reg:SI 2436)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2433))) src/switch_core_media.c:3831 -1
     (nil))

(insn 4994 4993 4995 (set (reg/f:SI 2437)
        (plus:SI (reg:SI 2436)
            (reg:SI 2435))) src/switch_core_media.c:3831 -1
     (nil))

(insn 4995 4994 4996 (set (reg/f:SI 2434)
        (mem/s/f:SI (reg/f:SI 2437) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3831 -1
     (nil))

(insn 4996 4995 4997 (set (reg:SI 2438)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 2434)
                    (const_int 56 [0x38])) [0 D.45286_1078->agreed_pt+0 S1 A32]))) src/switch_core_media.c:3831 -1
     (nil))

(insn 4997 4996 4998 (set (reg:SI 0 r0)
        (reg:SI 2430)) src/switch_core_media.c:3831 -1
     (nil))

(insn 4998 4997 4999 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) src/switch_core_media.c:3831 -1
     (nil))

(insn 4999 4998 5000 (set (reg:SI 2 r2)
        (reg:SI 2431)) src/switch_core_media.c:3831 -1
     (nil))

(insn 5000 4999 5001 (set (reg:SI 3 r3)
        (reg:SI 2438)) src/switch_core_media.c:3831 -1
     (nil))

(call_insn 5001 5000 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3831 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_1081, "rtp_video_pt", &tmp, 1);

(insn 5002 5001 5003 (set (reg:SI 2439)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3832 -1
     (nil))

(insn 5003 5002 5004 (set (reg:SI 2441)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC368") [flags 0x82]  <var_decl 0x4041f180 *.LC368>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1169 [0x491])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1169 [0x491])
            ] 29)) src/switch_core_media.c:3832 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC368") [flags 0x82]  <var_decl 0x4041f180 *.LC368>)
        (nil)))

(insn 5004 5003 5005 (set (reg:SI 2440)
        (reg:SI 2441)) src/switch_core_media.c:3832 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC368") [flags 0x82]  <var_decl 0x4041f180 *.LC368>)
        (nil)))

(insn 5005 5004 5006 (set (reg:SI 2442)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3832 -1
     (nil))

(insn 5006 5005 5007 (set (reg:SI 0 r0)
        (reg:SI 2439)) src/switch_core_media.c:3832 -1
     (nil))

(insn 5007 5006 5008 (set (reg:SI 1 r1)
        (reg:SI 2440)) src/switch_core_media.c:3832 -1
     (nil))

(insn 5008 5007 5009 (set (reg:SI 2 r2)
        (reg:SI 2442)) src/switch_core_media.c:3832 -1
     (nil))

(insn 5009 5008 5010 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3832 -1
     (nil))

(call_insn 5010 5009 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3832 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_core_media_check_video_codecs (session_161(D));

(insn 5011 5010 5012 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3833 -1
     (nil))

(call_insn 5012 5011 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_media_check_video_codecs") [flags 0x1]  <function_decl 0x40945a80 switch_core_media_check_video_codecs>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3833 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; switch_snprintf (&tmp, 50, "%d", D.45306_1084);

(insn 5013 5012 5014 (set (reg:SI 2443)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3834 -1
     (nil))

(insn 5014 5013 5015 (set (reg:SI 2445)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1170 [0x492])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1170 [0x492])
            ] 29)) src/switch_core_media.c:3834 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 5015 5014 5016 (set (reg:SI 2444)
        (reg:SI 2445)) src/switch_core_media.c:3834 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 5016 5015 5017 (set (reg:SI 2446)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3834 -1
     (nil))

(insn 5017 5016 5018 (set (reg:SI 2448)
        (const_int 1856 [0x740])) src/switch_core_media.c:3834 -1
     (nil))

(insn 5018 5017 5019 (set (reg:SI 2449)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2446))) src/switch_core_media.c:3834 -1
     (nil))

(insn 5019 5018 5020 (set (reg/f:SI 2450)
        (plus:SI (reg:SI 2449)
            (reg:SI 2448))) src/switch_core_media.c:3834 -1
     (nil))

(insn 5020 5019 5021 (set (reg/f:SI 2447)
        (mem/s/f:SI (reg/f:SI 2450) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3834 -1
     (nil))

(insn 5021 5020 5022 (set (reg:SI 2451)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 2447)
                    (const_int 57 [0x39])) [0 D.45286_1082->recv_pt+0 S1 A8]))) src/switch_core_media.c:3834 -1
     (nil))

(insn 5022 5021 5023 (set (reg:SI 0 r0)
        (reg:SI 2443)) src/switch_core_media.c:3834 -1
     (nil))

(insn 5023 5022 5024 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) src/switch_core_media.c:3834 -1
     (nil))

(insn 5024 5023 5025 (set (reg:SI 2 r2)
        (reg:SI 2444)) src/switch_core_media.c:3834 -1
     (nil))

(insn 5025 5024 5026 (set (reg:SI 3 r3)
        (reg:SI 2451)) src/switch_core_media.c:3834 -1
     (nil))

(call_insn 5026 5025 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3834 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_1085, "rtp_video_recv_pt", &tmp, 1);

(insn 5027 5026 5028 (set (reg:SI 2452)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3835 -1
     (nil))

(insn 5028 5027 5029 (set (reg:SI 2454)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC369") [flags 0x82]  <var_decl 0x4041f1e0 *.LC369>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1171 [0x493])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1171 [0x493])
            ] 29)) src/switch_core_media.c:3835 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC369") [flags 0x82]  <var_decl 0x4041f1e0 *.LC369>)
        (nil)))

(insn 5029 5028 5030 (set (reg:SI 2453)
        (reg:SI 2454)) src/switch_core_media.c:3835 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC369") [flags 0x82]  <var_decl 0x4041f1e0 *.LC369>)
        (nil)))

(insn 5030 5029 5031 (set (reg:SI 2455)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3835 -1
     (nil))

(insn 5031 5030 5032 (set (reg:SI 0 r0)
        (reg:SI 2452)) src/switch_core_media.c:3835 -1
     (nil))

(insn 5032 5031 5033 (set (reg:SI 1 r1)
        (reg:SI 2453)) src/switch_core_media.c:3835 -1
     (nil))

(insn 5033 5032 5034 (set (reg:SI 2 r2)
        (reg:SI 2455)) src/switch_core_media.c:3835 -1
     (nil))

(insn 5034 5033 5035 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3835 -1
     (nil))

(call_insn 5035 5034 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3835 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; if (match_1800 == 0)

(insn 5036 5035 5037 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ match ])
            (const_int 0 [0]))) src/switch_core_media.c:3836 -1
     (nil))

(jump_insn 5037 5036 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3836 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 419

;; Generating RTL for gimple basic block 420

;; 

(code_label 5039 5038 5040 1504 "" [0 uses])

(note 5040 5039 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG match => match_14

(debug_insn 5041 5040 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#74 => &MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].read_codec

(debug_insn 5042 5041 0 (var_location:SI D#74 (const_int 0 [0])) src/switch_core_media.c:3838 -1
     (nil))
;; # DEBUG codec => D#74

(debug_insn 5043 5042 0 (var_location:SI codec (const_int 0 [0])) src/switch_core_media.c:3838 -1
     (nil))
;; if (D.47964_1506 != 0)

(insn 5044 5043 5045 (set (reg:SI 2456)
        (const_int 13020 [0x32dc])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5045 5044 5046 (set (reg:SI 2457)
        (const_int 16 [0x10])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5046 5045 5047 (set (reg:SI 2458)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2456))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5047 5046 5048 (set (reg/f:SI 2459)
        (plus:SI (reg:SI 2458)
            (reg:SI 2457))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5048 5047 5049 (set (reg:SI 2461)
        (mem/s:SI (reg/f:SI 2459) [4 MEM[(struct switch_codec_t *)smh_186 + 13020B].flags+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5049 5048 5050 (set (reg:SI 2460)
        (and:SI (reg:SI 2461)
            (const_int 256 [0x100]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5050 5049 5051 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2460)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 5051 5050 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 421

;; if (D.47963_1507 != 0B)

(insn 5053 5052 5054 (set (reg:SI 2462)
        (const_int 13020 [0x32dc])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5054 5053 5055 (set (reg:SI 2463)
        (const_int 32 [0x20])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5055 5054 5056 (set (reg:SI 2464)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2462))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5056 5055 5057 (set (reg/f:SI 2465)
        (plus:SI (reg:SI 2464)
            (reg:SI 2463))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5057 5056 5058 (set (reg:SI 2466)
        (mem/s/f:SI (reg/f:SI 2465) [2 MEM[(struct switch_codec_t *)smh_186 + 13020B].mutex+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5058 5057 5059 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2466)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 5059 5058 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 422

;; if (D.47962_1508 != 0B)

(insn 5061 5060 5062 (set (reg:SI 2467)
        (const_int 13020 [0x32dc])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5062 5061 5063 (set (reg:SI 2468)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2467)) [2 MEM[(struct switch_codec_t *)smh_186 + 13020B].codec_interface+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5063 5062 5064 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2468)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 5064 5063 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 423

;; if (D.47961_1509 != 0B)

(insn 5066 5065 5067 (set (reg:SI 2469)
        (const_int 13020 [0x32dc])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5067 5066 5068 (set (reg:SI 2470)
        (const_int 4 [0x4])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5068 5067 5069 (set (reg:SI 2471)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2469))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5069 5068 5070 (set (reg/f:SI 2472)
        (plus:SI (reg:SI 2471)
            (reg:SI 2470))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5070 5069 5071 (set (reg:SI 2473)
        (mem/s/f:SI (reg/f:SI 2472) [2 MEM[(struct switch_codec_t *)smh_186 + 13020B].implementation+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5071 5070 5072 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2473)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 5072 5071 0 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 424

;; MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].reset_codec = 1;

(insn 5074 5073 5075 (set (reg:SI 2474)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3839 -1
     (nil))

(insn 5075 5074 5076 (set (reg:SI 2475)
        (const_int 11408 [0x2c90])) src/switch_core_media.c:3839 -1
     (nil))

(insn 5076 5075 5077 (set (reg:SI 2476)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2474))) src/switch_core_media.c:3839 -1
     (nil))

(insn 5077 5076 5078 (set (reg/f:SI 2477)
        (plus:SI (reg:SI 2476)
            (reg:SI 2475))) src/switch_core_media.c:3839 -1
     (nil))

(insn 5078 5077 5079 (set (reg:SI 2478)
        (const_int 1 [0x1])) src/switch_core_media.c:3839 -1
     (nil))

(insn 5079 5078 5080 (set (reg:QI 2479)
        (subreg:QI (reg:SI 2478) 0)) src/switch_core_media.c:3839 -1
     (nil))

(insn 5080 5079 0 (set (mem/s:QI (reg/f:SI 2477) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].reset_codec+0 S1 A32])
        (reg:QI 2479)) src/switch_core_media.c:3839 -1
     (nil))

;; Generating RTL for gimple basic block 425

;; 

(code_label 5081 5080 5082 1505 "" [0 uses])

(note 5082 5081 0 NOTE_INSN_BASIC_BLOCK)

;; D.45316_1092 = switch_core_media_set_video_codec (session_161(D), 0);

(insn 5083 5082 5084 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3842 -1
     (nil))

(insn 5084 5083 5085 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3842 -1
     (nil))

(call_insn 5085 5084 5086 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_set_video_codec") [flags 0x1]  <function_decl 0x40945980 switch_core_media_set_video_codec>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3842 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 5086 5085 0 (set (reg:SI 812 [ D.45316 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3842 -1
     (nil))

;; if (D.45316_1092 == 0)

(insn 5087 5086 5088 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 812 [ D.45316 ])
            (const_int 0 [0]))) src/switch_core_media.c:3842 -1
     (nil))

(jump_insn 5088 5087 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) src/switch_core_media.c:3842 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 426

;; check_ice (smh_186, 1, sdp_198, m_1764);

(insn 5090 5089 5091 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3843 -1
     (nil))

(insn 5091 5090 5092 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) src/switch_core_media.c:3843 -1
     (nil))

(insn 5092 5091 5093 (set (reg:SI 2 r2)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3843 -1
     (nil))

(insn 5093 5092 5094 (set (reg:SI 3 r3)
        (reg/v/f:SI 813 [ m ])) src/switch_core_media.c:3843 -1
     (nil))

(call_insn 5094 5093 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("check_ice") [flags 0x3]  <function_decl 0x414f3a00 check_ice>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3843 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 427

;; 

(code_label 5095 5094 5096 1380 "" [0 uses])

(note 5096 5095 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG nm_idx => nm_idx_121

(debug_insn 5097 5096 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_113

(debug_insn 5098 5097 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG codec_ms => codec_ms_94

(debug_insn 5099 5098 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_audio => got_audio_66

(debug_insn 5100 5099 0 (var_location:SI got_audio (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_crypto => got_video_crypto_63

(debug_insn 5101 5100 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_crypto => got_crypto_55

(debug_insn 5102 5101 0 (var_location:SI got_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG cng_pt => cng_pt_26

(debug_insn 5103 5102 0 (var_location:QI cng_pt (const_int 0 [0])) -1
     (nil))
;; # DEBUG best_te => best_te_22

(debug_insn 5104 5103 0 (var_location:QI best_te (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => match_15

(debug_insn 5105 5104 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; m_1093 = m_1764->m_next;

(insn 5106 5105 0 (set (reg/v/f:SI 813 [ m ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 4 [0x4])) [2 m_1764->m_next+0 S4 A32])) src/switch_core_media.c:3091 -1
     (nil))

;; # DEBUG m => m_1093

(debug_insn 5107 5106 0 (var_location:SI m (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))
;; # DEBUG nm_idx => nm_idx_121

(debug_insn 5108 5107 0 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG m_idx => m_idx_113

(debug_insn 5109 5108 0 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))
;; # DEBUG codec_ms => codec_ms_94

(debug_insn 5110 5109 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_webrtc => got_webrtc_78

(debug_insn 5111 5110 0 (var_location:SI got_webrtc (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_udptl => got_udptl_2172

(debug_insn 5112 5111 0 (var_location:SI got_udptl (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_savp => got_savp_2166

(debug_insn 5113 5112 0 (var_location:SI got_savp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_savp => NULL

(debug_insn 5114 5113 0 (var_location:SI got_video_savp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_avp => NULL

(debug_insn 5115 5114 0 (var_location:SI got_video_avp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_avp => got_avp_2186

(debug_insn 5116 5115 0 (var_location:SI got_avp (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_audio => got_audio_66

(debug_insn 5117 5116 0 (var_location:SI got_audio (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_video_crypto => got_video_crypto_63

(debug_insn 5118 5117 0 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG got_crypto => got_crypto_55

(debug_insn 5119 5118 0 (var_location:SI got_crypto (const_int 0 [0])) -1
     (nil))
;; # DEBUG m => m_1093

(debug_insn 5120 5119 0 (var_location:SI m (const_int 0 [0])) -1
     (nil))
;; # DEBUG cng_pt => cng_pt_26

(debug_insn 5121 5120 0 (var_location:QI cng_pt (const_int 0 [0])) -1
     (nil))
;; # DEBUG best_te => best_te_22

(debug_insn 5122 5121 0 (var_location:QI best_te (const_int 0 [0])) -1
     (nil))
;; # DEBUG match => match_15

(debug_insn 5123 5122 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; if (m_1093 != 0B)

(insn 5125 5123 5126 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 813 [ m ])
            (const_int 0 [0]))) src/switch_core_media.c:3091 -1
     (nil))

(jump_insn 5126 5125 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5124)
            (pc))) src/switch_core_media.c:3091 -1
     (expr_list:REG_BR_PROB (const_int 9800 [0x2648])
        (nil)))

;; Generating RTL for gimple basic block 428

;; done:

(code_label 5127 5126 5128 1371 ("done") [0 uses])

(note 5128 5127 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG match => match_17

(debug_insn 5129 5128 0 (var_location:QI match (const_int 0 [0])) -1
     (nil))
;; sdp_parser_free (parser_196);

(insn 5130 5129 5131 (set (reg:SI 0 r0)
        (reg/v/f:SI 237 [ parser ])) src/switch_core_media.c:3854 -1
     (nil))

(call_insn 5131 5130 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("sdp_parser_free") [flags 0x41]  <function_decl 0x4144df80 sdp_parser_free>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3854 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; D.44471_1094 = smh_186->mparams;

(insn 5132 5131 5133 (set (reg:SI 2480)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3857 -1
     (nil))

(insn 5133 5132 0 (set (reg/f:SI 814 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2480)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3857 -1
     (nil))

;; D.44471_1094->cng_pt = cng_pt_1047;

(insn 5134 5133 5135 (set (reg:QI 2481)
        (subreg/s/u:QI (reg/v:SI 149 [ cng_pt ]) 0)) src/switch_core_media.c:3857 -1
     (nil))

(insn 5135 5134 0 (set (mem/s:QI (plus:SI (reg/f:SI 814 [ D.44471 ])
                (const_int 140 [0x8c])) [0 D.44471_1094->cng_pt+0 S1 A32])
        (reg:QI 2481)) src/switch_core_media.c:3857 -1
     (nil))

;; Generating RTL for gimple basic block 429

;; 

(code_label 5136 5135 5137 1331 "" [0 uses])

(note 5137 5136 0 NOTE_INSN_BASIC_BLOCK)

;; return match_142;

(insn 5138 5137 5139 (set (reg:SI 1024 [ <retval> ])
        (reg/v:SI 142 [ match ])) src/switch_core_media.c:3859 -1
     (nil))

(jump_insn 5139 5138 5140 (set (pc)
        (label_ref 0)) src/switch_core_media.c:3859 -1
     (nil))

(barrier 5140 5139 0)

;; Generating RTL for gimple basic block 430

;; 

(code_label 5141 5140 5142 1335 "" [0 uses])

(note 5142 5141 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 431

;; 

(code_label 5145 5144 5146 1346 "" [0 uses])

(note 5146 5145 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 432

;; 

(code_label 5149 5148 5150 1350 "" [0 uses])

(note 5150 5149 0 NOTE_INSN_BASIC_BLOCK)

;; D.44594_307 = strcasecmp (D.44590_304, "sendonly");

(insn 5151 5150 5152 (set (reg:SI 2484)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1172 [0x494])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1172 [0x494])
            ] 29)) src/switch_core_media.c:3010 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
        (nil)))

(insn 5152 5151 5153 (set (reg:SI 2483)
        (reg:SI 2484)) src/switch_core_media.c:3010 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
        (nil)))

(insn 5153 5152 5154 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3010 -1
     (nil))

(insn 5154 5153 5155 (set (reg:SI 1 r1)
        (reg:SI 2483)) src/switch_core_media.c:3010 -1
     (nil))

(call_insn/i 5155 5154 5156 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3010 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 5156 5155 0 (set (reg:SI 288 [ D.44594 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3010 -1
     (nil))

;; if (D.44594_307 == 0)

(insn 5158 5156 5159 432 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 288 [ D.44594 ])
            (const_int 0 [0]))) src/switch_core_media.c:3010 -1
     (nil))

(jump_insn 5159 5158 5163 432 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5157)
            (pc))) src/switch_core_media.c:3010 -1
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))

(note 5163 5159 5161 464 [bb 464] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5161 5163 5162 464 (set (pc)
        (label_ref 5160)) src/switch_core_media.c:3010 -1
     (nil))

(barrier 5162 5161 0)

;; Generating RTL for gimple basic block 433

;; 

(code_label 5164 5162 5165 1361 "" [0 uses])

(note 5165 5164 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 434

;; 

(code_label 5168 5167 5169 1358 "" [0 uses])

(note 5169 5168 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG reneg => 1

(debug_insn 5170 5169 0 (var_location:SI reneg (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 435

;; 

(code_label 5174 5173 5175 1387 "" [0 uses])

(note 5175 5174 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG pass => 0

(debug_insn 5176 5175 0 (var_location:SI pass (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 436

;; 

(code_label 5179 5178 5180 1402 "" [0 uses])

(note 5180 5179 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44822_535 == 0)

(insn 5182 5180 5183 436 (set (reg:SI 2486)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3259 -1
     (nil))

(insn 5183 5182 5184 436 (set (reg/f:SI 2485)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2486)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3259 -1
     (nil))

(insn 5184 5183 5185 436 (set (reg:SI 2488)
        (mem/s:SI (plus:SI (reg/f:SI 2485)
                (const_int 16 [0x10])) [28 D.44471_533->ndlb+0 S4 A32])) src/switch_core_media.c:3259 -1
     (nil))

(insn 5185 5184 5186 436 (set (reg:SI 2487)
        (and:SI (reg:SI 2488)
            (const_int 4 [0x4]))) src/switch_core_media.c:3259 -1
     (nil))

(insn 5186 5185 5187 436 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2487)
            (const_int 0 [0]))) src/switch_core_media.c:3259 -1
     (nil))

(jump_insn 5187 5186 5190 436 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5181)
            (pc))) src/switch_core_media.c:3259 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 5190 5187 5188 465 [bb 465] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5188 5190 5189 465 (set (pc)
        (label_ref 2367)) src/switch_core_media.c:3259 -1
     (nil))

(barrier 5189 5188 0)

;; Generating RTL for gimple basic block 437

;; 

(code_label 5191 5189 5192 1403 "" [0 uses])

(note 5192 5191 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44831_542 != 0)

(insn 5194 5192 5195 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 188 [ got_webrtc ])
            (const_int 0 [0]))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5195 5194 5196 (set (reg:SI 2490)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5196 5195 5197 (set (reg:QI 2489)
        (subreg:QI (reg:SI 2490) 0)) src/switch_core_media.c:3261 -1
     (nil))

(insn 5197 5196 5198 (set (reg:SI 2492)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 28 [0x1c])) [44 m_1764->m_proto+0 S4 A32])) src/switch_core_media.c:3261 -1
     (nil))

(insn 5198 5197 5199 (set (reg:SI 2494)
        (const_int 257 [0x101])) src/switch_core_media.c:3261 -1
     (nil))

(insn 5199 5198 5200 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2492)
            (reg:SI 2494))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5200 5199 5201 (set (reg:SI 2493)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5201 5200 5202 (set (reg:QI 2491)
        (subreg:QI (reg:SI 2493) 0)) src/switch_core_media.c:3261 -1
     (nil))

(insn 5202 5201 5203 (set (reg:SI 2495)
        (and:SI (subreg:SI (reg:QI 2489) 0)
            (subreg:SI (reg:QI 2491) 0))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5203 5202 5204 (set (reg:QI 2496)
        (subreg:QI (reg:SI 2495) 0)) src/switch_core_media.c:3261 -1
     (nil))

(insn 5204 5203 5205 (set (reg:SI 2497)
        (zero_extend:SI (reg:QI 2496))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5205 5204 5206 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2497)
            (const_int 0 [0]))) src/switch_core_media.c:3261 -1
     (nil))

(jump_insn 5206 5205 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5193)
            (pc))) src/switch_core_media.c:3261 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 438

;; prephitmp.1031_1895 = attr_1599->a_value;

(insn 5208 5207 0 (set (reg/f:SI 457 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) src/switch_core_media.c:3261 -1
     (nil))

;; Generating RTL for gimple basic block 439

;; 

(code_label 5211 5210 5212 1416 "" [0 uses])

(note 5212 5211 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG codec_ms => codec_ms_1883

(debug_insn 5213 5212 0 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 440

;; 

(code_label 5216 5215 5217 1421 "" [0 uses])

(note 5217 5216 0 NOTE_INSN_BASIC_BLOCK)

;; D.44905_611 = switch_core_codec_parse_fmtp (D.44889_608, D.44893_598, D.44854_610, &codec_fmtp);

(insn 5218 5217 5219 (set (reg:SI 2498)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 8 [0x8])) [2 map_1728->rm_encoding+0 S4 A32])) src/switch_core_media.c:3361 -1
     (nil))

(insn 5219 5218 5220 (set (reg:SI 2499)
        (mem/s:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 12 [0xc])) [26 map_1728->rm_rate+0 S4 A32])) src/switch_core_media.c:3361 -1
     (nil))

(insn 5220 5219 5221 (set (reg:SI 2500)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3361 -1
     (nil))

(insn 5221 5220 5222 (set (reg:SI 0 r0)
        (reg:SI 2498)) src/switch_core_media.c:3361 -1
     (nil))

(insn 5222 5221 5223 (set (reg:SI 1 r1)
        (reg/f:SI 497 [ D.44893 ])) src/switch_core_media.c:3361 -1
     (nil))

(insn 5223 5222 5224 (set (reg:SI 2 r2)
        (reg:SI 2499)) src/switch_core_media.c:3361 -1
     (nil))

(insn 5224 5223 5225 (set (reg:SI 3 r3)
        (reg:SI 2500)) src/switch_core_media.c:3361 -1
     (nil))

(call_insn 5225 5224 5226 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_codec_parse_fmtp") [flags 0x41]  <function_decl 0x40716700 switch_core_codec_parse_fmtp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3361 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 5226 5225 0 (set (reg:SI 503 [ D.44905 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3361 -1
     (nil))

;; if (D.44905_611 == 0)

(insn 5228 5226 5229 440 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 503 [ D.44905 ])
            (const_int 0 [0]))) src/switch_core_media.c:3361 -1
     (nil))

(jump_insn 5229 5228 5232 440 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5227)
            (pc))) src/switch_core_media.c:3361 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 5232 5229 5230 466 [bb 466] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5230 5232 5231 466 (set (pc)
        (label_ref 2761)) src/switch_core_media.c:3361 -1
     (nil))

(barrier 5231 5230 0)

;; Generating RTL for gimple basic block 441

;; 

(code_label 5233 5231 5234 1428 "" [0 uses])

(note 5234 5233 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44937_647 != 0)

(insn 5235 5234 5236 441 (set (reg:SI 2502)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3386 -1
     (nil))

(insn 5236 5235 5237 441 (set (reg/f:SI 2501)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2502)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3386 -1
     (nil))

(insn 5237 5236 5238 441 (set (reg:SI 2504)
        (mem/s:SI (plus:SI (reg/f:SI 2501)
                (const_int 16 [0x10])) [28 D.44471_644->ndlb+0 S4 A32])) src/switch_core_media.c:3386 -1
     (nil))

(insn 5238 5237 5239 441 (set (reg:SI 2503)
        (and:SI (reg:SI 2504)
            (const_int 1 [0x1]))) src/switch_core_media.c:3386 -1
     (nil))

(insn 5239 5238 5240 441 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2503)
            (const_int 0 [0]))) src/switch_core_media.c:3386 -1
     (nil))

(jump_insn 5240 5239 5243 441 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2850)
            (pc))) src/switch_core_media.c:3386 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 5243 5240 5241 467 [bb 467] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5241 5243 5242 467 (set (pc)
        (label_ref 2872)) src/switch_core_media.c:3386 -1
     (nil))

(barrier 5242 5241 0)

;; Generating RTL for gimple basic block 442

;; 

(code_label 5244 5242 5245 1462 "" [0 uses])

(note 5245 5244 0 NOTE_INSN_BASIC_BLOCK)

;; D.45082_793 = switch_stristr ("stereo=1", D.45079_790);

(insn 5246 5245 5247 (set (reg:SI 2506)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC370") [flags 0x82]  <var_decl 0x4041f240 *.LC370>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1173 [0x495])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1173 [0x495])
            ] 29)) src/switch_core_media.c:3554 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC370") [flags 0x82]  <var_decl 0x4041f240 *.LC370>)
        (nil)))

(insn 5247 5246 5248 (set (reg:SI 2505)
        (reg:SI 2506)) src/switch_core_media.c:3554 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC370") [flags 0x82]  <var_decl 0x4041f240 *.LC370>)
        (nil)))

(insn 5248 5247 5249 (set (reg:SI 0 r0)
        (reg:SI 2505)) src/switch_core_media.c:3554 -1
     (nil))

(insn 5249 5248 5250 (set (reg:SI 1 r1)
        (reg/f:SI 628 [ D.45079 ])) src/switch_core_media.c:3554 -1
     (nil))

(call_insn 5250 5249 5251 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_stristr") [flags 0x41]  <function_decl 0x40815080 switch_stristr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3554 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 5251 5250 0 (set (reg/f:SI 629 [ D.45082 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3554 -1
     (nil))

;; if (D.45082_793 != 0B)

(insn 5253 5251 5254 442 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 629 [ D.45082 ])
            (const_int 0 [0]))) src/switch_core_media.c:3554 -1
     (nil))

(jump_insn 5254 5253 5257 442 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5252)
            (pc))) src/switch_core_media.c:3554 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))

(note 5257 5254 5255 468 [bb 468] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5255 5257 5256 468 (set (pc)
        (label_ref 3646)) src/switch_core_media.c:3554 -1
     (nil))

(barrier 5256 5255 0)

;; Generating RTL for gimple basic block 443

;; 

(code_label 5258 5256 5259 1471 "" [0 uses])

(note 5259 5258 0 NOTE_INSN_BASIC_BLOCK)

;; switch_log_printf (3, "src/switch_core_media.c", &__func__, 3639, session_161(D), 7, "No 2833 in SDP.  Disable 2833 dtmf and switch to INFO\n");

(insn 5260 5259 5261 (set (reg:SI 2508)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1174 [0x496])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1174 [0x496])
            ] 29)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 5261 5260 5262 (set (reg:SI 2507)
        (reg:SI 2508)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 5262 5261 5263 (set (reg:SI 2510)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1175 [0x497])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1175 [0x497])
            ] 29)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 5263 5262 5264 (set (reg/f:SI 2509)
        (reg:SI 2510)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 5264 5263 5265 (set (reg:SI 2512)
        (plus:SI (reg/f:SI 2509)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3639 -1
     (nil))

(insn 5265 5264 5266 (set (reg:SI 2511)
        (plus:SI (reg:SI 2512)
            (const_int 8 [0x8]))) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2509)
            (const_int 1800 [0x708]))
        (nil)))

(insn 5266 5265 5267 (set (reg:SI 2513)
        (const_int 3639 [0xe37])) src/switch_core_media.c:3639 -1
     (nil))

(insn 5267 5266 5268 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3639 -1
     (nil))

(insn 5268 5267 5269 (set (reg:SI 2514)
        (const_int 7 [0x7])) src/switch_core_media.c:3639 -1
     (nil))

(insn 5269 5268 5270 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2514)) src/switch_core_media.c:3639 -1
     (nil))

(insn 5270 5269 5271 (set (reg:SI 2516)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC371") [flags 0x82]  <var_decl 0x4041f2a0 *.LC371>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1176 [0x498])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1176 [0x498])
            ] 29)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC371") [flags 0x82]  <var_decl 0x4041f2a0 *.LC371>)
        (nil)))

(insn 5271 5270 5272 (set (reg/f:SI 2515)
        (reg:SI 2516)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC371") [flags 0x82]  <var_decl 0x4041f2a0 *.LC371>)
        (nil)))

(insn 5272 5271 5273 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2515)) src/switch_core_media.c:3639 -1
     (nil))

(insn 5273 5272 5274 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3639 -1
     (nil))

(insn 5274 5273 5275 (set (reg:SI 1 r1)
        (reg:SI 2507)) src/switch_core_media.c:3639 -1
     (nil))

(insn 5275 5274 5276 (set (reg:SI 2 r2)
        (reg:SI 2511)) src/switch_core_media.c:3639 -1
     (nil))

(insn 5276 5275 5277 (set (reg:SI 3 r3)
        (reg:SI 2513)) src/switch_core_media.c:3639 -1
     (nil))

(call_insn 5277 5276 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3639 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; switch_channel_set_variable_var_check (D.44530_860, "dtmf_type", "info", 1);

(insn 5278 5277 5279 (set (reg:SI 2517)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3640 -1
     (nil))

(insn 5279 5278 5280 (set (reg:SI 2519)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1177 [0x499])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1177 [0x499])
            ] 29)) src/switch_core_media.c:3640 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 5280 5279 5281 (set (reg:SI 2518)
        (reg:SI 2519)) src/switch_core_media.c:3640 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 5281 5280 5282 (set (reg:SI 2521)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC372") [flags 0x82]  <var_decl 0x4041f300 *.LC372>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1178 [0x49a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1178 [0x49a])
            ] 29)) src/switch_core_media.c:3640 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC372") [flags 0x82]  <var_decl 0x4041f300 *.LC372>)
        (nil)))

(insn 5282 5281 5283 (set (reg:SI 2520)
        (reg:SI 2521)) src/switch_core_media.c:3640 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC372") [flags 0x82]  <var_decl 0x4041f300 *.LC372>)
        (nil)))

(insn 5283 5282 5284 (set (reg:SI 0 r0)
        (reg:SI 2517)) src/switch_core_media.c:3640 -1
     (nil))

(insn 5284 5283 5285 (set (reg:SI 1 r1)
        (reg:SI 2518)) src/switch_core_media.c:3640 -1
     (nil))

(insn 5285 5284 5286 (set (reg:SI 2 r2)
        (reg:SI 2520)) src/switch_core_media.c:3640 -1
     (nil))

(insn 5286 5285 5287 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3640 -1
     (nil))

(call_insn 5287 5286 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3640 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; D.44471_861 = smh_186->mparams;

(insn 5288 5287 5289 (set (reg:SI 2522)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3641 -1
     (nil))

(insn 5289 5288 0 (set (reg/f:SI 686 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2522)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3641 -1
     (nil))

;; D.44471_861->dtmf_type = 1;

(insn 5290 5289 5291 (set (reg:SI 2523)
        (const_int 1 [0x1])) src/switch_core_media.c:3641 -1
     (nil))

(insn 5291 5290 0 (set (mem/s:SI (plus:SI (reg/f:SI 686 [ D.44471 ])
                (const_int 136 [0x88])) [30 D.44471_861->dtmf_type+0 S4 A32])
        (reg:SI 2523)) src/switch_core_media.c:3641 -1
     (nil))

;; D.44471_861->te = 0;

(insn 5292 5291 5293 (set (reg:SI 2524)
        (const_int 0 [0])) src/switch_core_media.c:3642 -1
     (nil))

(insn 5293 5292 5294 (set (reg:QI 2525)
        (subreg:QI (reg:SI 2524) 0)) src/switch_core_media.c:3642 -1
     (nil))

(insn 5294 5293 0 (set (mem/s:QI (plus:SI (reg/f:SI 686 [ D.44471 ])
                (const_int 120 [0x78])) [0 D.44471_861->te+0 S1 A32])
        (reg:QI 2525)) src/switch_core_media.c:3642 -1
     (nil))

;; D.44471_861->recv_te = 0;

(insn 5295 5294 5296 (set (reg:SI 2526)
        (const_int 0 [0])) src/switch_core_media.c:3642 -1
     (nil))

(insn 5296 5295 5297 (set (reg:QI 2527)
        (subreg:QI (reg:SI 2526) 0)) src/switch_core_media.c:3642 -1
     (nil))

(insn 5297 5296 0 (set (mem/s:QI (plus:SI (reg/f:SI 686 [ D.44471 ])
                (const_int 121 [0x79])) [0 D.44471_861->recv_te+0 S1 A8])
        (reg:QI 2527)) src/switch_core_media.c:3642 -1
     (nil))

;; # DEBUG D#12 => D.44471_861->recv_te

(debug_insn 5298 5297 0 (var_location:QI D#12 (const_int 0 [0])) src/switch_core_media.c:3642 -1
     (nil))
;; # DEBUG te => D#12

(debug_insn 5299 5298 0 (var_location:QI te (const_int 0 [0])) src/switch_core_media.c:3642 -1
     (nil))
;; Generating RTL for gimple basic block 444

;; 

(code_label 5302 5301 5303 1483 "" [0 uses])

(note 5303 5302 0 NOTE_INSN_BASIC_BLOCK)

;; D.45160_902 = switch_stristr ("fir", D.44619_899);

(insn 5304 5303 5305 (set (reg:SI 2529)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC373") [flags 0x82]  <var_decl 0x4042bf00 *.LC373>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1179 [0x49b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1179 [0x49b])
            ] 29)) src/switch_core_media.c:3689 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC373") [flags 0x82]  <var_decl 0x4042bf00 *.LC373>)
        (nil)))

(insn 5305 5304 5306 (set (reg:SI 2528)
        (reg:SI 2529)) src/switch_core_media.c:3689 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC373") [flags 0x82]  <var_decl 0x4042bf00 *.LC373>)
        (nil)))

(insn 5306 5305 5307 (set (reg:SI 0 r0)
        (reg:SI 2528)) src/switch_core_media.c:3689 -1
     (nil))

(insn 5307 5306 5308 (set (reg:SI 1 r1)
        (reg/f:SI 705 [ D.44619 ])) src/switch_core_media.c:3689 -1
     (nil))

(call_insn 5308 5307 5309 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_stristr") [flags 0x41]  <function_decl 0x40815080 switch_stristr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3689 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 5309 5308 0 (set (reg/f:SI 706 [ D.45160 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3689 -1
     (nil))

;; if (D.45160_902 != 0B)

(insn 5311 5309 5312 444 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 706 [ D.45160 ])
            (const_int 0 [0]))) src/switch_core_media.c:3689 -1
     (nil))

(jump_insn 5312 5311 5316 444 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5310)
            (pc))) src/switch_core_media.c:3689 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))

(note 5316 5312 5314 469 [bb 469] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5314 5316 5315 469 (set (pc)
        (label_ref 5313)) src/switch_core_media.c:3689 -1
     (nil))

(barrier 5315 5314 0)

;; Generating RTL for gimple basic block 445

;; 

(code_label 5317 5315 5318 1485 "" [0 uses])

(note 5318 5317 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44822_966 == 0)

(insn 5320 5318 5321 445 (set (reg:SI 2531)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3708 -1
     (nil))

(insn 5321 5320 5322 445 (set (reg/f:SI 2530)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2531)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3708 -1
     (nil))

(insn 5322 5321 5323 445 (set (reg:SI 2533)
        (mem/s:SI (plus:SI (reg/f:SI 2530)
                (const_int 16 [0x10])) [28 D.44471_964->ndlb+0 S4 A32])) src/switch_core_media.c:3708 -1
     (nil))

(insn 5323 5322 5324 445 (set (reg:SI 2532)
        (and:SI (reg:SI 2533)
            (const_int 4 [0x4]))) src/switch_core_media.c:3708 -1
     (nil))

(insn 5324 5323 5325 445 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2532)
            (const_int 0 [0]))) src/switch_core_media.c:3708 -1
     (nil))

(jump_insn 5325 5324 5328 445 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5319)
            (pc))) src/switch_core_media.c:3708 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 5328 5325 5326 470 [bb 470] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5326 5328 5327 470 (set (pc)
        (label_ref 4535)) src/switch_core_media.c:3708 -1
     (nil))

(barrier 5327 5326 0)

;; Generating RTL for gimple basic block 446

;; 

(code_label 5329 5327 5330 1486 "" [0 uses])

(note 5330 5329 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44831_973 != 0)

(insn 5332 5330 5333 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 188 [ got_webrtc ])
            (const_int 0 [0]))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5333 5332 5334 (set (reg:SI 2535)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5334 5333 5335 (set (reg:QI 2534)
        (subreg:QI (reg:SI 2535) 0)) src/switch_core_media.c:3710 -1
     (nil))

(insn 5335 5334 5336 (set (reg:SI 2537)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 28 [0x1c])) [44 m_1764->m_proto+0 S4 A32])) src/switch_core_media.c:3710 -1
     (nil))

(insn 5336 5335 5337 (set (reg:SI 2539)
        (const_int 257 [0x101])) src/switch_core_media.c:3710 -1
     (nil))

(insn 5337 5336 5338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2537)
            (reg:SI 2539))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5338 5337 5339 (set (reg:SI 2538)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5339 5338 5340 (set (reg:QI 2536)
        (subreg:QI (reg:SI 2538) 0)) src/switch_core_media.c:3710 -1
     (nil))

(insn 5340 5339 5341 (set (reg:SI 2540)
        (and:SI (subreg:SI (reg:QI 2534) 0)
            (subreg:SI (reg:QI 2536) 0))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5341 5340 5342 (set (reg:QI 2541)
        (subreg:QI (reg:SI 2540) 0)) src/switch_core_media.c:3710 -1
     (nil))

(insn 5342 5341 5343 (set (reg:SI 2542)
        (zero_extend:SI (reg:QI 2541))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5343 5342 5344 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2542)
            (const_int 0 [0]))) src/switch_core_media.c:3710 -1
     (nil))

(jump_insn 5344 5343 0 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5331)
            (pc))) src/switch_core_media.c:3710 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))

;; Generating RTL for gimple basic block 447

;; prephitmp.1031_1890 = attr_619->a_value;

(insn 5346 5345 0 (set (reg/f:SI 720 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) src/switch_core_media.c:3710 -1
     (nil))

;; Generating RTL for gimple basic block 448

;; 

(code_label 5349 5348 5350 1495 "" [0 uses])

(note 5350 5349 0 NOTE_INSN_BASIC_BLOCK)

;; if (D.44937_1001 != 0)

(insn 5351 5350 5352 448 (set (reg:SI 2544)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3745 -1
     (nil))

(insn 5352 5351 5353 448 (set (reg/f:SI 2543)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2544)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3745 -1
     (nil))

(insn 5353 5352 5354 448 (set (reg:SI 2546)
        (mem/s:SI (plus:SI (reg/f:SI 2543)
                (const_int 16 [0x10])) [28 D.44471_998->ndlb+0 S4 A32])) src/switch_core_media.c:3745 -1
     (nil))

(insn 5354 5353 5355 448 (set (reg:SI 2545)
        (and:SI (reg:SI 2546)
            (const_int 1 [0x1]))) src/switch_core_media.c:3745 -1
     (nil))

(insn 5355 5354 5356 448 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2545)
            (const_int 0 [0]))) src/switch_core_media.c:3745 -1
     (nil))

(jump_insn 5356 5355 5359 448 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4642)
            (pc))) src/switch_core_media.c:3745 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

(note 5359 5356 5357 471 [bb 471] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5357 5359 5358 471 (set (pc)
        (label_ref 4657)) src/switch_core_media.c:3745 -1
     (nil))

(barrier 5358 5357 0)

;; Generating RTL for gimple basic block 449

;; 

(code_label 5360 5358 5361 1397 "" [0 uses])

(note 5361 5360 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 450

;; 

(code_label 5364 5363 5365 1479 "" [0 uses])

(note 5365 5364 0 NOTE_INSN_BASIC_BLOCK)
Edge 4->429 redirected to 473
Edge 5->429 redirected to 474
Edge 33->37 redirected to 475
Edge 34->37 redirected to 476
Edge 35->37 redirected to 477
Edge 55->61 redirected to 478
Edge 56->61 redirected to 479
Edge 57->61 redirected to 480
Edge 58->61 redirected to 481
Edge 59->61 redirected to 482
Edge 61->79 redirected to 484
Edge 72->77 redirected to 485
Edge 99->109 redirected to 486
Edge 100->109 redirected to 487
Edge 101->109 redirected to 488
Edge 102->109 redirected to 489
Edge 103->109 redirected to 490
Edge 104->109 redirected to 491
Edge 105->109 redirected to 492
Edge 106->109 redirected to 493
Edge 107->109 redirected to 494
Edge 120->428 redirected to 497
Edge 138->428 redirected to 498
Edge 154->428 redirected to 500
Edge 155->428 redirected to 501
Edge 172->208 redirected to 503
Edge 176->178 redirected to 504
Edge 212->214 redirected to 505
Edge 216->218 redirected to 506
Edge 229->439 redirected to 507
Edge 231->233 redirected to 508
Edge 233->235 redirected to 509
Edge 236->238 redirected to 510
Edge 240->248 redirected to 511
Edge 241->248 redirected to 512
Edge 255->259 redirected to 513
Edge 259->261 redirected to 514
Edge 262->265 redirected to 516
Edge 263->265 redirected to 517
Edge 278->282 redirected to 519
Edge 288->290 redirected to 520
Edge 304->306 redirected to 521
Edge 316->324 redirected to 523
Edge 322->324 redirected to 524
Edge 347->349 redirected to 526
Edge 349->408 redirected to 529
Edge 356->358 redirected to 530
Edge 391->393 redirected to 531
Edge 410->427 redirected to 532
Edge 418->420 redirected to 533
Edge 425->427 redirected to 534


;;
;; Full RTL generated for this function:
;;
(note 1 0 145 NOTE_INSN_DELETED)

(note 145 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 145 3 2 (set (reg/v/f:SI 1025 [ session ])
        (reg:SI 0 r0 [ session ])) src/switch_core_media.c:2891 -1
     (nil))

(insn 3 2 4 2 (set (reg/v/f:SI 1026 [ r_sdp ])
        (reg:SI 1 r1 [ r_sdp ])) src/switch_core_media.c:2891 -1
     (nil))

(insn 4 3 5 2 (set (reg/v/f:SI 1027 [ proceed ])
        (reg:SI 2 r2 [ proceed ])) src/switch_core_media.c:2891 -1
     (nil))

(insn 5 4 6 2 (set (reg/v:SI 1028 [ sdp_type ])
        (reg:SI 3 r3 [ sdp_type ])) src/switch_core_media.c:2891 -1
     (nil))

(note 6 5 146 2 NOTE_INSN_FUNCTION_BEG)

(note 146 6 147 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(debug_insn 147 146 148 3 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:2892 -1
     (nil))

(debug_insn 148 147 149 3 (var_location:QI best_te (const_int 0 [0])) src/switch_core_media.c:2893 -1
     (nil))

(debug_insn 149 148 150 3 (var_location:QI te (const_int 0 [0])) src/switch_core_media.c:2893 -1
     (nil))

(debug_insn 150 149 151 3 (var_location:QI cng_pt (const_int 0 [0])) src/switch_core_media.c:2893 -1
     (nil))

(debug_insn 151 150 152 3 (var_location:SI ptime (const_int 0 [0])) src/switch_core_media.c:2896 -1
     (nil))

(debug_insn 152 151 153 3 (var_location:SI dptime (const_int 0 [0])) src/switch_core_media.c:2896 -1
     (nil))

(debug_insn 153 152 154 3 (var_location:SI maxptime (const_int 0 [0])) src/switch_core_media.c:2896 -1
     (nil))

(debug_insn 154 153 155 3 (var_location:SI dmaxptime (const_int 0 [0])) src/switch_core_media.c:2896 -1
     (nil))

(debug_insn 155 154 156 3 (var_location:SI sendonly (const_int 0 [0])) src/switch_core_media.c:2897 -1
     (nil))

(debug_insn 156 155 157 3 (var_location:SI recvonly (const_int 0 [0])) src/switch_core_media.c:2897 -1
     (nil))

(debug_insn 157 156 158 3 (var_location:SI greedy (const_int 0 [0])) src/switch_core_media.c:2898 -1
     (nil))

(debug_insn 158 157 159 3 (var_location:SI x (const_int 0 [0])) src/switch_core_media.c:2898 -1
     (nil))

(debug_insn 159 158 160 3 (var_location:SI skip (const_int 0 [0])) src/switch_core_media.c:2898 -1
     (nil))

(insn 160 159 161 3 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2899 -1
     (nil))

(call_insn 161 160 162 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_get_channel") [flags 0x41]  <function_decl 0x406f3f80 switch_core_session_get_channel>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2899 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 162 161 163 3 (set (reg/v/f:SI 232 [ channel ])
        (reg:SI 0 r0)) src/switch_core_media.c:2899 -1
     (nil))

(debug_insn 163 162 164 3 (var_location:SI channel (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:2899 -1
     (nil))

(debug_insn 164 163 165 3 (var_location:SI crypto (const_int 0 [0])) src/switch_core_media.c:2901 -1
     (nil))

(debug_insn 165 164 166 3 (var_location:SI got_crypto (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))

(debug_insn 166 165 167 3 (var_location:SI got_video_crypto (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))

(debug_insn 167 166 168 3 (var_location:SI got_audio (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))

(debug_insn 168 167 169 3 (var_location:SI got_avp (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))

(debug_insn 169 168 170 3 (var_location:SI got_video_avp (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))

(debug_insn 170 169 171 3 (var_location:SI got_video_savp (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))

(debug_insn 171 170 172 3 (var_location:SI got_savp (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))

(debug_insn 172 171 173 3 (var_location:SI got_udptl (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))

(debug_insn 173 172 174 3 (var_location:SI got_webrtc (const_int 0 [0])) src/switch_core_media.c:2902 -1
     (nil))

(debug_insn 174 173 175 3 (var_location:SI scrooge (const_int 0 [0])) src/switch_core_media.c:2903 -1
     (nil))

(debug_insn 175 174 176 3 (var_location:SI parser (const_int 0 [0])) src/switch_core_media.c:2904 -1
     (nil))

(debug_insn 176 175 177 3 (var_location:SI reneg (const_int 1 [0x1])) src/switch_core_media.c:2906 -1
     (nil))

(debug_insn 177 176 178 3 (var_location:SI near_rate (const_int 0 [0])) src/switch_core_media.c:2911 -1
     (nil))

(debug_insn 178 177 179 3 (var_location:SI mimp (const_int 0 [0])) src/switch_core_media.c:2912 -1
     (nil))

(debug_insn 179 178 180 3 (var_location:SI near_match (const_int 0 [0])) src/switch_core_media.c:2912 -1
     (nil))

(debug_insn 180 179 181 3 (var_location:SI mmap (const_int 0 [0])) src/switch_core_media.c:2913 -1
     (nil))

(debug_insn 181 180 182 3 (var_location:SI near_map (const_int 0 [0])) src/switch_core_media.c:2913 -1
     (nil))

(insn 182 181 183 3 (set (reg:SI 1031)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:2914 -1
     (nil))

(insn 183 182 184 3 (set (reg:SI 1032)
        (const_int 480 [0x1e0])) src/switch_core_media.c:2914 -1
     (nil))

(insn 184 183 185 3 (set (reg:SI 0 r0)
        (reg:SI 1031)) src/switch_core_media.c:2914 -1
     (nil))

(insn 185 184 186 3 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:2914 -1
     (nil))

(insn 186 185 187 3 (set (reg:SI 2 r2)
        (reg:SI 1032)) src/switch_core_media.c:2914 -1
     (nil))

(call_insn 187 186 188 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x41afec00 memset>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2914 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 188 187 189 3 (set (reg:SI 1033)
        (reg:SI 0 r0)) src/switch_core_media.c:2914 -1
     (nil))

(insn 189 188 190 3 (set (reg:SI 1034)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -576 [0xfffffffffffffdc0]))) src/switch_core_media.c:2915 -1
     (nil))

(insn 190 189 191 3 (set (reg:SI 1035)
        (const_int 480 [0x1e0])) src/switch_core_media.c:2915 -1
     (nil))

(insn 191 190 192 3 (set (reg:SI 0 r0)
        (reg:SI 1034)) src/switch_core_media.c:2915 -1
     (nil))

(insn 192 191 193 3 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:2915 -1
     (nil))

(insn 193 192 194 3 (set (reg:SI 2 r2)
        (reg:SI 1035)) src/switch_core_media.c:2915 -1
     (nil))

(call_insn 194 193 195 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x41afec00 memset>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2915 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 195 194 196 3 (set (reg:SI 1036)
        (reg:SI 0 r0)) src/switch_core_media.c:2915 -1
     (nil))

(debug_insn 196 195 197 3 (var_location:SI codec_ms (const_int 0 [0])) src/switch_core_media.c:2916 -1
     (nil))

(debug_insn 197 196 198 3 (var_location:SI remote_codec_rate (const_int 0 [0])) src/switch_core_media.c:2917 -1
     (nil))

(debug_insn 198 197 199 3 (var_location:SI fmtp_remote_codec_rate (const_int 0 [0])) src/switch_core_media.c:2917 -1
     (nil))

(debug_insn 199 198 200 3 (var_location:SI m_idx (const_int 0 [0])) src/switch_core_media.c:2919 -1
     (nil))

(debug_insn 200 199 201 3 (var_location:SI nm_idx (const_int 0 [0])) src/switch_core_media.c:2920 -1
     (nil))

(insn 201 200 202 3 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 1025 [ session ])
            (const_int 0 [0]))) src/switch_core_media.c:2922 -1
     (nil))

(jump_insn 202 201 203 3 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) src/switch_core_media.c:2922 -1
     (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil))
 -> 219)

(note 203 202 204 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 204 203 205 4 (set (reg:SI 1038)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC37") [flags 0x82]  <var_decl 0x41de8420 *.LC37>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 896 [0x380])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 896 [0x380])
            ] 29)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC37") [flags 0x82]  <var_decl 0x41de8420 *.LC37>)
        (nil)))

(insn 205 204 206 4 (set (reg:SI 1037)
        (reg:SI 1038)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC37") [flags 0x82]  <var_decl 0x41de8420 *.LC37>)
        (nil)))

(insn 206 205 207 4 (set (reg:SI 1040)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 897 [0x381])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 897 [0x381])
            ] 29)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 207 206 208 4 (set (reg:SI 1039)
        (reg:SI 1040)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 208 207 209 4 (set (reg:SI 1041)
        (const_int 2922 [0xb6a])) src/switch_core_media.c:2922 -1
     (nil))

(insn 209 208 210 4 (set (reg:SI 1043)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 898 [0x382])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 898 [0x382])
            ] 29)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 210 209 211 4 (set (reg/f:SI 1042)
        (reg:SI 1043)) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 211 210 212 4 (set (reg:SI 1045)
        (plus:SI (reg/f:SI 1042)
            (const_int 1760 [0x6e0]))) src/switch_core_media.c:2922 -1
     (nil))

(insn 212 211 213 4 (set (reg:SI 1044)
        (plus:SI (reg:SI 1045)
            (const_int 8 [0x8]))) src/switch_core_media.c:2922 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1042)
            (const_int 1768 [0x6e8]))
        (nil)))

(insn 213 212 214 4 (set (reg:SI 0 r0)
        (reg:SI 1037)) src/switch_core_media.c:2922 -1
     (nil))

(insn 214 213 215 4 (set (reg:SI 1 r1)
        (reg:SI 1039)) src/switch_core_media.c:2922 -1
     (nil))

(insn 215 214 216 4 (set (reg:SI 2 r2)
        (reg:SI 1041)) src/switch_core_media.c:2922 -1
     (nil))

(insn 216 215 217 4 (set (reg:SI 3 r3)
        (reg:SI 1044)) src/switch_core_media.c:2922 -1
     (nil))

(call_insn 217 216 218 4 (parallel [
            (call (mem:SI (symbol_ref:SI ("__assert_fail") [flags 0x41]  <function_decl 0x4040d180 __assert_fail>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2922 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(barrier 218 217 219)

(code_label 219 218 220 5 1330 "" [1 uses])

(note 220 219 221 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 221 220 222 5 (set (reg:SI 1046)
        (const_int 22220 [0x56cc])) src/switch_core_media.c:2924 -1
     (nil))

(insn 222 221 223 5 (set (reg/v/f:SI 233 [ smh ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (reg:SI 1046)) [2 session_161(D)->media_handle+0 S4 A32])) src/switch_core_media.c:2924 -1
     (nil))

(debug_insn 223 222 224 5 (var_location:SI smh (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:2924 -1
     (nil))

(insn 224 223 225 5 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 233 [ smh ])
            (const_int 0 [0]))) src/switch_core_media.c:2924 -1
     (nil))

(jump_insn 225 224 226 5 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5377)
            (pc))) src/switch_core_media.c:2924 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 2164 [0x874])
        (nil))
 -> 5377)

(note 226 225 227 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(debug_insn 227 226 228 6 (var_location:SI D#15 (plus:SI (reg/v/f:SI 233 [ smh ])
        (const_int 80 [0x50]))) src/switch_core_media.c:2928 -1
     (nil))

(debug_insn 228 227 229 6 (var_location:SI a_engine (debug_expr:SI D#15)) src/switch_core_media.c:2928 -1
     (nil))

(debug_insn 229 228 230 6 (var_location:SI D#14 (plus:SI (reg/v/f:SI 233 [ smh ])
        (const_int 11496 [0x2ce8]))) src/switch_core_media.c:2929 -1
     (nil))

(debug_insn 230 229 231 6 (var_location:SI v_engine (debug_expr:SI D#14)) src/switch_core_media.c:2929 -1
     (nil))

(insn 231 230 232 6 (set (reg:SI 1047)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (const_int 23040 [0x5a00]))) src/switch_core_media.c:2931 -1
     (nil))

(insn 232 231 233 6 (set (reg/v/f:SI 193 [ codec_array ])
        (plus:SI (reg:SI 1047)
            (const_int 76 [0x4c]))) src/switch_core_media.c:2931 -1
     (expr_list:REG_EQUAL (plus:SI (reg/v/f:SI 233 [ smh ])
            (const_int 23116 [0x5a4c]))
        (nil)))

(debug_insn 233 232 234 6 (var_location:SI codec_array (reg/v/f:SI 193 [ codec_array ])) src/switch_core_media.c:2931 -1
     (nil))

(insn 234 233 235 6 (set (reg:SI 1049)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:2932 -1
     (nil))

(insn 235 234 236 6 (set (reg/f:SI 1048)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1049)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:2932 -1
     (nil))

(insn 236 235 237 6 (set (reg/v:SI 194 [ total_codecs ])
        (mem/s:SI (plus:SI (reg/f:SI 1048)
                (const_int 128 [0x80])) [4 D.44471_191->num_codecs+0 S4 A32])) src/switch_core_media.c:2932 -1
     (nil))

(debug_insn 237 236 238 6 (var_location:SI total_codecs (reg/v:SI 194 [ total_codecs ])) src/switch_core_media.c:2932 -1
     (nil))

(insn 238 237 239 6 (set (reg:SI 0 r0)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:2934 -1
     (nil))

(call_insn/i 239 238 240 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 0x402f3a80 strlen>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2934 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 240 239 241 6 (set (reg:SI 1050)
        (reg:SI 0 r0)) src/switch_core_media.c:2934 -1
     (nil))

(insn 241 240 242 6 (set (reg:SI 235 [ D.44472 ])
        (reg:SI 1050)) src/switch_core_media.c:2934 -1
     (nil))

(insn 242 241 243 6 (set (reg:SI 0 r0)
        (const_int 0 [0])) src/switch_core_media.c:2934 -1
     (nil))

(insn 243 242 244 6 (set (reg:SI 1 r1)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:2934 -1
     (nil))

(insn 244 243 245 6 (set (reg:SI 2 r2)
        (reg:SI 235 [ D.44472 ])) src/switch_core_media.c:2934 -1
     (nil))

(insn 245 244 246 6 (set (reg:SI 3 r3)
        (const_int 0 [0])) src/switch_core_media.c:2934 -1
     (nil))

(call_insn 246 245 247 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sdp_parse") [flags 0x41]  <function_decl 0x4144de00 sdp_parse>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2934 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 247 246 248 6 (set (reg/v/f:SI 237 [ parser ])
        (reg:SI 0 r0)) src/switch_core_media.c:2934 -1
     (nil))

(debug_insn 248 247 249 6 (var_location:SI parser (reg/v/f:SI 237 [ parser ])) src/switch_core_media.c:2934 -1
     (nil))

(insn 249 248 250 6 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 237 [ parser ])
            (const_int 0 [0]))) src/switch_core_media.c:2934 -1
     (nil))

(jump_insn 250 249 251 6 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5381)
            (pc))) src/switch_core_media.c:2934 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 2164 [0x874])
        (nil))
 -> 5381)

(note 251 250 252 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 252 251 253 7 (set (reg:SI 0 r0)
        (reg/v/f:SI 237 [ parser ])) src/switch_core_media.c:2938 -1
     (nil))

(call_insn 253 252 254 7 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sdp_session") [flags 0x41]  <function_decl 0x4144df00 sdp_session>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2938 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 254 253 255 7 (set (reg/v/f:SI 238 [ sdp ])
        (reg:SI 0 r0)) src/switch_core_media.c:2938 -1
     (nil))

(debug_insn 255 254 256 7 (var_location:SI sdp (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:2938 -1
     (nil))

(insn 256 255 257 7 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 238 [ sdp ])
            (const_int 0 [0]))) src/switch_core_media.c:2938 -1
     (nil))

(jump_insn 257 256 258 7 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) src/switch_core_media.c:2938 -1
     (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
        (nil))
 -> 263)

(note 258 257 259 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 259 258 260 8 (set (reg:SI 0 r0)
        (reg/v/f:SI 237 [ parser ])) src/switch_core_media.c:2939 -1
     (nil))

(call_insn 260 259 142 8 (parallel [
            (call (mem:SI (symbol_ref:SI ("sdp_parser_free") [flags 0x41]  <function_decl 0x4144df80 sdp_parser_free>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2939 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 142 260 261 8 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:2940 -1
     (nil))

(jump_insn 261 142 262 8 (set (pc)
        (label_ref 5136)) src/switch_core_media.c:2940 -1
     (nil)
 -> 5136)

(barrier 262 261 263)

(code_label 263 262 264 9 1332 "" [1 uses])

(note 264 263 265 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 265 264 266 9 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2943 -1
     (nil))

(call_insn 266 265 267 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dtls_ok") [flags 0x3]  <function_decl 0x414f3900 dtls_ok>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2943 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 267 266 268 9 (set (reg:SI 239 [ D.44478 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2943 -1
     (nil))

(insn 268 267 269 9 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 239 [ D.44478 ])
            (const_int 0 [0]))) src/switch_core_media.c:2943 -1
     (nil))

(jump_insn 269 268 270 9 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) src/switch_core_media.c:2943 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 375)

(note 270 269 271 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 271 270 272 10 (set (reg/f:SI 1051)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:2943 -1
     (nil))

(insn 272 271 273 10 (set (reg:SI 1052)
        (mem/s/f:SI (plus:SI (reg/f:SI 1051)
                (const_int 24 [0x18])) [2 D.44481_201->channel+0 S4 A32])) src/switch_core_media.c:2943 -1
     (nil))

(insn 273 272 274 10 (set (reg:SI 1054)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC295") [flags 0x82]  <var_decl 0x40406600 *.LC295>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 899 [0x383])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 899 [0x383])
            ] 29)) src/switch_core_media.c:2943 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC295") [flags 0x82]  <var_decl 0x40406600 *.LC295>)
        (nil)))

(insn 274 273 275 10 (set (reg:SI 1053)
        (reg:SI 1054)) src/switch_core_media.c:2943 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC295") [flags 0x82]  <var_decl 0x40406600 *.LC295>)
        (nil)))

(insn 275 274 276 10 (set (reg:SI 0 r0)
        (reg:SI 1052)) src/switch_core_media.c:2943 -1
     (nil))

(insn 276 275 277 10 (set (reg:SI 1 r1)
        (reg:SI 1053)) src/switch_core_media.c:2943 -1
     (nil))

(insn 277 276 278 10 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:2943 -1
     (nil))

(insn 278 277 279 10 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:2943 -1
     (nil))

(call_insn 279 278 280 10 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2943 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 280 279 281 10 (set (reg/v/f:SI 242 [ tmp ])
        (reg:SI 0 r0)) src/switch_core_media.c:2943 -1
     (nil))

(debug_insn 281 280 282 10 (var_location:SI tmp (reg/v/f:SI 242 [ tmp ])) src/switch_core_media.c:2943 -1
     (nil))

(insn 282 281 283 10 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 242 [ tmp ])
            (const_int 0 [0]))) src/switch_core_media.c:2943 -1
     (nil))

(jump_insn 283 282 284 10 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) src/switch_core_media.c:2943 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 375)

(note 284 283 285 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(debug_insn 285 284 286 11 (var_location:SI expr (reg/v/f:SI 242 [ tmp ])) -1
     (nil))

(insn 286 285 287 11 (set (reg:SI 1056)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 900 [0x384])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 900 [0x384])
            ] 29)) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
        (nil)))

(insn 287 286 288 11 (set (reg:SI 1055)
        (reg:SI 1056)) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
        (nil)))

(insn 288 287 289 11 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:461 -1
     (nil))

(insn 289 288 290 11 (set (reg:SI 1 r1)
        (reg:SI 1055)) ./src/include/switch_utils.h:461 -1
     (nil))

(call_insn/i 290 289 291 11 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 291 290 292 11 (set (reg:SI 871 [ D.49675 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:461 -1
     (nil))

(insn 292 291 293 11 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 871 [ D.49675 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:468 -1
     (nil))

(jump_insn 293 292 294 11 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) ./src/include/switch_utils.h:468 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 363)

(note 294 293 295 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 295 294 296 12 (set (reg:SI 1058)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 901 [0x385])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 901 [0x385])
            ] 29)) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
        (nil)))

(insn 296 295 297 12 (set (reg:SI 1057)
        (reg:SI 1058)) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
        (nil)))

(insn 297 296 298 12 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:462 -1
     (nil))

(insn 298 297 299 12 (set (reg:SI 1 r1)
        (reg:SI 1057)) ./src/include/switch_utils.h:462 -1
     (nil))

(call_insn/i 299 298 300 12 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 300 299 301 12 (set (reg:SI 872 [ D.49676 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:462 -1
     (nil))

(insn 301 300 302 12 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 872 [ D.49676 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:461 -1
     (nil))

(jump_insn 302 301 303 12 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 363)

(note 303 302 304 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 304 303 305 13 (set (reg:SI 1060)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 902 [0x386])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 902 [0x386])
            ] 29)) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
        (nil)))

(insn 305 304 306 13 (set (reg:SI 1059)
        (reg:SI 1060)) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
        (nil)))

(insn 306 305 307 13 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:463 -1
     (nil))

(insn 307 306 308 13 (set (reg:SI 1 r1)
        (reg:SI 1059)) ./src/include/switch_utils.h:463 -1
     (nil))

(call_insn/i 308 307 309 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 309 308 310 13 (set (reg:SI 873 [ D.49677 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:463 -1
     (nil))

(insn 310 309 311 13 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 873 [ D.49677 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:462 -1
     (nil))

(jump_insn 311 310 312 13 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 363)

(note 312 311 313 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 313 312 314 14 (set (reg:SI 1062)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 903 [0x387])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 903 [0x387])
            ] 29)) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
        (nil)))

(insn 314 313 315 14 (set (reg:SI 1061)
        (reg:SI 1062)) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
        (nil)))

(insn 315 314 316 14 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:464 -1
     (nil))

(insn 316 315 317 14 (set (reg:SI 1 r1)
        (reg:SI 1061)) ./src/include/switch_utils.h:464 -1
     (nil))

(call_insn/i 317 316 318 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 318 317 319 14 (set (reg:SI 874 [ D.49678 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:464 -1
     (nil))

(insn 319 318 320 14 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 874 [ D.49678 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:463 -1
     (nil))

(jump_insn 320 319 321 14 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 363)

(note 321 320 322 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 322 321 323 15 (set (reg:SI 1064)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 904 [0x388])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 904 [0x388])
            ] 29)) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
        (nil)))

(insn 323 322 324 15 (set (reg:SI 1063)
        (reg:SI 1064)) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
        (nil)))

(insn 324 323 325 15 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:465 -1
     (nil))

(insn 325 324 326 15 (set (reg:SI 1 r1)
        (reg:SI 1063)) ./src/include/switch_utils.h:465 -1
     (nil))

(call_insn/i 326 325 327 15 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 327 326 328 15 (set (reg:SI 875 [ D.49679 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:465 -1
     (nil))

(insn 328 327 329 15 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 875 [ D.49679 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:464 -1
     (nil))

(jump_insn 329 328 330 15 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 363)

(note 330 329 331 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 331 330 332 16 (set (reg:SI 1066)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 905 [0x389])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 905 [0x389])
            ] 29)) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 332 331 333 16 (set (reg:SI 1065)
        (reg:SI 1066)) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 333 332 334 16 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:466 -1
     (nil))

(insn 334 333 335 16 (set (reg:SI 1 r1)
        (reg:SI 1065)) ./src/include/switch_utils.h:466 -1
     (nil))

(call_insn/i 335 334 336 16 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 336 335 337 16 (set (reg:SI 876 [ D.49680 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:466 -1
     (nil))

(insn 337 336 338 16 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 876 [ D.49680 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:465 -1
     (nil))

(jump_insn 338 337 339 16 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 363)

(note 339 338 340 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 340 339 341 17 (set (reg:SI 1068)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 906 [0x38a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 906 [0x38a])
            ] 29)) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
        (nil)))

(insn 341 340 342 17 (set (reg:SI 1067)
        (reg:SI 1068)) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
        (nil)))

(insn 342 341 343 17 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:467 -1
     (nil))

(insn 343 342 344 17 (set (reg:SI 1 r1)
        (reg:SI 1067)) ./src/include/switch_utils.h:467 -1
     (nil))

(call_insn/i 344 343 345 17 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 345 344 346 17 (set (reg:SI 877 [ D.49681 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:467 -1
     (nil))

(insn 346 345 347 17 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 877 [ D.49681 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:466 -1
     (nil))

(jump_insn 347 346 348 17 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil))
 -> 363)

(note 348 347 349 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 349 348 350 18 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) ./src/include/switch_utils.h:468 -1
     (nil))

(call_insn 350 349 351 18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:468 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 351 350 352 18 (set (reg:SI 878 [ D.49682 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:468 -1
     (nil))

(insn 352 351 353 18 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 878 [ D.49682 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:467 -1
     (nil))

(jump_insn 353 352 354 18 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5141)
            (pc))) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5141)

(note 354 353 355 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(debug_insn 355 354 356 19 (var_location:SI __nptr (reg/v/f:SI 242 [ tmp ])) -1
     (nil))

(insn 356 355 357 19 (set (reg:SI 0 r0)
        (reg/v/f:SI 242 [ tmp ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 357 356 358 19 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 358 357 359 19 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 359 358 360 19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 360 359 361 19 (set (reg:SI 879 [ D.49683 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 361 360 362 19 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 879 [ D.49683 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:468 -1
     (nil))

(jump_insn 362 361 363 19 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5141)
            (pc))) ./src/include/switch_utils.h:468 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 5141)

(code_label 363 362 364 20 1334 "" [7 uses])

(note 364 363 365 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 365 364 366 20 (set (reg/f:SI 1069)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:2944 -1
     (nil))

(insn 366 365 367 20 (set (reg:SI 1070)
        (mem/s/f:SI (plus:SI (reg/f:SI 1069)
                (const_int 24 [0x18])) [2 D.44481_205->channel+0 S4 A32])) src/switch_core_media.c:2944 -1
     (nil))

(insn 367 366 368 20 (set (reg:SI 0 r0)
        (reg:SI 1070)) src/switch_core_media.c:2944 -1
     (nil))

(insn 368 367 369 20 (set (reg:SI 1 r1)
        (const_int 111 [0x6f])) src/switch_core_media.c:2944 -1
     (nil))

(call_insn 369 368 370 20 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_clear_flag") [flags 0x41]  <function_decl 0x40846f80 switch_channel_clear_flag>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2944 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 370 369 371 20 (set (reg/f:SI 1071)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:2945 -1
     (nil))

(insn 371 370 372 20 (set (reg:SI 1072)
        (mem/s/f:SI (plus:SI (reg/f:SI 1071)
                (const_int 24 [0x18])) [2 D.44481_207->channel+0 S4 A32])) src/switch_core_media.c:2945 -1
     (nil))

(insn 372 371 373 20 (set (reg:SI 0 r0)
        (reg:SI 1072)) src/switch_core_media.c:2945 -1
     (nil))

(insn 373 372 374 20 (set (reg:SI 1 r1)
        (const_int 109 [0x6d])) src/switch_core_media.c:2945 -1
     (nil))

(call_insn 374 373 375 20 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_clear_flag") [flags 0x41]  <function_decl 0x40846f80 switch_channel_clear_flag>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2945 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(code_label 375 374 376 21 1333 "" [3 uses])

(note 376 375 377 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 377 376 378 21 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2948 -1
     (nil))

(call_insn 378 377 379 21 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_session_parse_crypto_prefs") [flags 0x3]  <function_decl 0x41463c80 switch_core_session_parse_crypto_prefs>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2948 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(debug_insn 379 378 380 21 (var_location:SI engine (debug_expr:SI D#15)) src/switch_core_media.c:2948 -1
     (nil))

(insn 380 379 381 21 (set (reg/v/f:SI 832 [ pmap ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1940 [0x794])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].payload_map+0 S4 A32])) src/switch_core_media.c:2883 -1
     (nil))

(debug_insn 381 380 382 21 (var_location:SI pmap (reg/v/f:SI 832 [ pmap ])) src/switch_core_media.c:2883 -1
     (nil))

(debug_insn 382 381 383 21 (var_location:SI pmap (reg/v/f:SI 832 [ pmap ])) -1
     (nil))

(insn 383 382 384 21 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 832 [ pmap ])
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 384 383 385 21 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 407)

(note 385 384 386 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 386 385 387 22 (set (reg:SI 1073)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 832 [ pmap ])
                    (const_int 16 [0x10])) [0 pmap_1457->allocated+0 S1 A32]))) src/switch_core_media.c:2883 -1
     (nil))

(insn 387 386 388 22 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1073)
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 388 387 389 22 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 407)

(note 389 388 403 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(code_label 403 389 390 24 1337 "" [1 uses])

(note 390 403 391 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 391 390 392 24 (set (reg:SI 1074)
        (const_int 0 [0])) src/switch_core_media.c:2884 -1
     (nil))

(insn 392 391 393 24 (set (reg:QI 1075)
        (subreg:QI (reg:SI 1074) 0)) src/switch_core_media.c:2884 -1
     (nil))

(insn 393 392 394 24 (set (mem/s:QI (plus:SI (reg/v/f:SI 832 [ pmap ])
                (const_int 17 [0x11])) [0 pmap_1747->negotiated+0 S1 A8])
        (reg:QI 1075)) src/switch_core_media.c:2884 -1
     (nil))

(insn 394 393 395 24 (set (reg:SI 1076)
        (const_int 0 [0])) src/switch_core_media.c:2885 -1
     (nil))

(insn 395 394 396 24 (set (reg:QI 1077)
        (subreg:QI (reg:SI 1076) 0)) src/switch_core_media.c:2885 -1
     (nil))

(insn 396 395 397 24 (set (mem/s:QI (plus:SI (reg/v/f:SI 832 [ pmap ])
                (const_int 18 [0x12])) [0 pmap_1747->current+0 S1 A16])
        (reg:QI 1077)) src/switch_core_media.c:2885 -1
     (nil))

(insn 397 396 398 24 (set (reg/v/f:SI 832 [ pmap ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 832 [ pmap ])
                (const_int 80 [0x50])) [2 pmap_1747->next+0 S4 A32])) src/switch_core_media.c:2883 -1
     (nil))

(debug_insn 398 397 399 24 (var_location:SI pmap (reg/v/f:SI 832 [ pmap ])) src/switch_core_media.c:2883 -1
     (nil))

(debug_insn 399 398 400 24 (var_location:SI pmap (reg/v/f:SI 832 [ pmap ])) -1
     (nil))

(insn 400 399 401 24 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 832 [ pmap ])
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 401 400 402 24 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 407)

(note 402 401 404 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 404 402 405 25 (set (reg:SI 1078)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 832 [ pmap ])
                    (const_int 16 [0x10])) [0 pmap_1459->allocated+0 S1 A32]))) src/switch_core_media.c:2883 -1
     (nil))

(insn 405 404 406 25 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1078)
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 406 405 407 25 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 403)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil))
 -> 403)

(code_label 407 406 408 26 1336 "" [3 uses])

(note 408 407 409 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(debug_insn 409 408 410 26 (var_location:SI engine (debug_expr:SI D#14)) -1
     (nil))

(insn 410 409 411 26 (set (reg:SI 1079)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:2883 -1
     (nil))

(insn 411 410 412 26 (set (reg:SI 1080)
        (const_int 1860 [0x744])) src/switch_core_media.c:2883 -1
     (nil))

(insn 412 411 413 26 (set (reg:SI 1081)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 1079))) src/switch_core_media.c:2883 -1
     (nil))

(insn 413 412 414 26 (set (reg/f:SI 1082)
        (plus:SI (reg:SI 1081)
            (reg:SI 1080))) src/switch_core_media.c:2883 -1
     (nil))

(insn 414 413 415 26 (set (reg/v/f:SI 835 [ pmap ])
        (mem/s/f:SI (reg/f:SI 1082) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].payload_map+0 S4 A32])) src/switch_core_media.c:2883 -1
     (nil))

(debug_insn 415 414 416 26 (var_location:SI pmap (reg/v/f:SI 835 [ pmap ])) src/switch_core_media.c:2883 -1
     (nil))

(debug_insn 416 415 417 26 (var_location:SI pmap (reg/v/f:SI 835 [ pmap ])) -1
     (nil))

(insn 417 416 418 26 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 835 [ pmap ])
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 418 417 419 26 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 441)

(note 419 418 420 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 420 419 421 27 (set (reg:SI 1083)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 835 [ pmap ])
                    (const_int 16 [0x10])) [0 pmap_1461->allocated+0 S1 A32]))) src/switch_core_media.c:2883 -1
     (nil))

(insn 421 420 422 27 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1083)
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 422 421 423 27 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 441)

(note 423 422 437 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(code_label 437 423 424 29 1339 "" [1 uses])

(note 424 437 425 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 425 424 426 29 (set (reg:SI 1084)
        (const_int 0 [0])) src/switch_core_media.c:2884 -1
     (nil))

(insn 426 425 427 29 (set (reg:QI 1085)
        (subreg:QI (reg:SI 1084) 0)) src/switch_core_media.c:2884 -1
     (nil))

(insn 427 426 428 29 (set (mem/s:QI (plus:SI (reg/v/f:SI 835 [ pmap ])
                (const_int 17 [0x11])) [0 pmap_1672->negotiated+0 S1 A8])
        (reg:QI 1085)) src/switch_core_media.c:2884 -1
     (nil))

(insn 428 427 429 29 (set (reg:SI 1086)
        (const_int 0 [0])) src/switch_core_media.c:2885 -1
     (nil))

(insn 429 428 430 29 (set (reg:QI 1087)
        (subreg:QI (reg:SI 1086) 0)) src/switch_core_media.c:2885 -1
     (nil))

(insn 430 429 431 29 (set (mem/s:QI (plus:SI (reg/v/f:SI 835 [ pmap ])
                (const_int 18 [0x12])) [0 pmap_1672->current+0 S1 A16])
        (reg:QI 1087)) src/switch_core_media.c:2885 -1
     (nil))

(insn 431 430 432 29 (set (reg/v/f:SI 835 [ pmap ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 835 [ pmap ])
                (const_int 80 [0x50])) [2 pmap_1672->next+0 S4 A32])) src/switch_core_media.c:2883 -1
     (nil))

(debug_insn 432 431 433 29 (var_location:SI pmap (reg/v/f:SI 835 [ pmap ])) src/switch_core_media.c:2883 -1
     (nil))

(debug_insn 433 432 434 29 (var_location:SI pmap (reg/v/f:SI 835 [ pmap ])) -1
     (nil))

(insn 434 433 435 29 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 835 [ pmap ])
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 435 434 436 29 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 441)

(note 436 435 438 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 438 436 439 30 (set (reg:SI 1088)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 835 [ pmap ])
                    (const_int 16 [0x10])) [0 pmap_1463->allocated+0 S1 A32]))) src/switch_core_media.c:2883 -1
     (nil))

(insn 439 438 440 30 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1088)
            (const_int 0 [0]))) src/switch_core_media.c:2883 -1
     (nil))

(jump_insn 440 439 441 30 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 437)
            (pc))) src/switch_core_media.c:2883 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil))
 -> 437)

(code_label 441 440 442 31 1338 "" [3 uses])

(note 442 441 443 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 443 442 444 31 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 1027 [ proceed ])
            (const_int 0 [0]))) src/switch_core_media.c:2953 -1
     (nil))

(jump_insn 444 443 445 31 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 449)
            (pc))) src/switch_core_media.c:2953 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 449)

(note 445 444 446 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 446 445 447 32 (set (reg:SI 1089)
        (const_int 1 [0x1])) src/switch_core_media.c:2953 -1
     (nil))

(insn 447 446 448 32 (set (reg:QI 1090)
        (subreg:QI (reg:SI 1089) 0)) src/switch_core_media.c:2953 -1
     (nil))

(insn 448 447 449 32 (set (mem:QI (reg/v/f:SI 1027 [ proceed ]) [0 *proceed_209(D)+0 S1 A8])
        (reg:QI 1090)) src/switch_core_media.c:2953 -1
     (nil))

(code_label 449 448 450 33 1340 "" [1 uses])

(note 450 449 451 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 451 450 452 33 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:2955 -1
     (nil))

(insn 452 451 453 33 (set (reg:SI 1 r1)
        (const_int 3 [0x3])) src/switch_core_media.c:2955 -1
     (nil))

(call_insn 453 452 454 33 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2955 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 454 453 455 33 (set (reg:SI 248 [ D.44490 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2955 -1
     (nil))

(insn 455 454 456 33 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 248 [ D.44490 ])
            (const_int 0 [0]))) src/switch_core_media.c:2955 -1
     (nil))

(insn 456 455 457 33 (set (reg:SI 1091)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:2955 -1
     (nil))

(insn 457 456 458 33 (set (reg/v:SI 170 [ greedy ])
        (reg:SI 1091)) src/switch_core_media.c:2955 -1
     (nil))

(debug_insn 458 457 459 33 (var_location:SI greedy (reg/v:SI 170 [ greedy ])) src/switch_core_media.c:2955 -1
     (nil))

(insn 459 458 460 33 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:2956 -1
     (nil))

(insn 460 459 461 33 (set (reg:SI 1 r1)
        (const_int 4 [0x4])) src/switch_core_media.c:2956 -1
     (nil))

(call_insn 461 460 462 33 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2956 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 462 461 463 33 (set (reg:SI 249 [ D.44491 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2956 -1
     (nil))

(insn 463 462 464 33 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 249 [ D.44491 ])
            (const_int 0 [0]))) src/switch_core_media.c:2956 -1
     (nil))

(insn 464 463 465 33 (set (reg:SI 1092)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:2956 -1
     (nil))

(insn 465 464 466 33 (set (reg/v:SI 190 [ scrooge ])
        (reg:SI 1092)) src/switch_core_media.c:2956 -1
     (nil))

(debug_insn 466 465 467 33 (var_location:SI scrooge (reg/v:SI 190 [ scrooge ])) src/switch_core_media.c:2956 -1
     (nil))

(insn 467 466 468 33 (set (reg:SI 1094)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC296") [flags 0x82]  <var_decl 0x40406660 *.LC296>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 907 [0x38b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 907 [0x38b])
            ] 29)) src/switch_core_media.c:2958 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC296") [flags 0x82]  <var_decl 0x40406660 *.LC296>)
        (nil)))

(insn 468 467 469 33 (set (reg:SI 1093)
        (reg:SI 1094)) src/switch_core_media.c:2958 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC296") [flags 0x82]  <var_decl 0x40406660 *.LC296>)
        (nil)))

(insn 469 468 470 33 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:2958 -1
     (nil))

(insn 470 469 471 33 (set (reg:SI 1 r1)
        (reg:SI 1093)) src/switch_core_media.c:2958 -1
     (nil))

(insn 471 470 472 33 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:2958 -1
     (nil))

(insn 472 471 473 33 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:2958 -1
     (nil))

(call_insn 473 472 474 33 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2958 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 474 473 475 33 (set (reg/v/f:SI 250 [ val ])
        (reg:SI 0 r0)) src/switch_core_media.c:2958 -1
     (nil))

(debug_insn 475 474 476 33 (var_location:SI val (reg/v/f:SI 250 [ val ])) src/switch_core_media.c:2958 -1
     (nil))

(insn 476 475 477 33 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 250 [ val ])
            (const_int 0 [0]))) src/switch_core_media.c:2958 -1
     (nil))

(jump_insn 477 476 478 33 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 525)
            (pc))) src/switch_core_media.c:2958 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 525)

(note 478 477 479 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 479 478 480 34 (set (reg:SI 1096)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC297") [flags 0x82]  <var_decl 0x404066c0 *.LC297>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 908 [0x38c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 908 [0x38c])
            ] 29)) src/switch_core_media.c:2959 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC297") [flags 0x82]  <var_decl 0x404066c0 *.LC297>)
        (nil)))

(insn 480 479 481 34 (set (reg:SI 1095)
        (reg:SI 1096)) src/switch_core_media.c:2959 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC297") [flags 0x82]  <var_decl 0x404066c0 *.LC297>)
        (nil)))

(insn 481 480 482 34 (set (reg:SI 0 r0)
        (reg/v/f:SI 250 [ val ])) src/switch_core_media.c:2959 -1
     (nil))

(insn 482 481 483 34 (set (reg:SI 1 r1)
        (reg:SI 1095)) src/switch_core_media.c:2959 -1
     (nil))

(call_insn/i 483 482 484 34 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2959 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 484 483 485 34 (set (reg:SI 251 [ D.44494 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2959 -1
     (nil))

(insn 485 484 486 34 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 251 [ D.44494 ])
            (const_int 0 [0]))) src/switch_core_media.c:2959 -1
     (nil))

(jump_insn 486 485 487 34 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5385)
            (pc))) src/switch_core_media.c:2959 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5385)

(note 487 486 488 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 488 487 489 35 (set (reg:SI 1098)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC298") [flags 0x82]  <var_decl 0x40406720 *.LC298>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 909 [0x38d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 909 [0x38d])
            ] 29)) src/switch_core_media.c:2962 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC298") [flags 0x82]  <var_decl 0x40406720 *.LC298>)
        (nil)))

(insn 489 488 490 35 (set (reg:SI 1097)
        (reg:SI 1098)) src/switch_core_media.c:2962 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC298") [flags 0x82]  <var_decl 0x40406720 *.LC298>)
        (nil)))

(insn 490 489 491 35 (set (reg:SI 0 r0)
        (reg/v/f:SI 250 [ val ])) src/switch_core_media.c:2962 -1
     (nil))

(insn 491 490 492 35 (set (reg:SI 1 r1)
        (reg:SI 1097)) src/switch_core_media.c:2962 -1
     (nil))

(call_insn/i 492 491 493 35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2962 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 493 492 494 35 (set (reg:SI 252 [ D.44498 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2962 -1
     (nil))

(insn 494 493 495 35 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 252 [ D.44498 ])
            (const_int 0 [0]))) src/switch_core_media.c:2962 -1
     (nil))

(jump_insn 495 494 496 35 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5389)
            (pc))) src/switch_core_media.c:2962 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5389)

(note 496 495 497 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 497 496 498 36 (set (reg:SI 1100)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC299") [flags 0x82]  <var_decl 0x40406780 *.LC299>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 910 [0x38e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 910 [0x38e])
            ] 29)) src/switch_core_media.c:2965 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC299") [flags 0x82]  <var_decl 0x40406780 *.LC299>)
        (nil)))

(insn 498 497 499 36 (set (reg:SI 1099)
        (reg:SI 1100)) src/switch_core_media.c:2965 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC299") [flags 0x82]  <var_decl 0x40406780 *.LC299>)
        (nil)))

(insn 499 498 500 36 (set (reg:SI 0 r0)
        (reg/v/f:SI 250 [ val ])) src/switch_core_media.c:2965 -1
     (nil))

(insn 500 499 501 36 (set (reg:SI 1 r1)
        (reg:SI 1099)) src/switch_core_media.c:2965 -1
     (nil))

(call_insn/i 501 500 502 36 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2965 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 502 501 503 36 (set (reg:SI 253 [ D.44502 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2965 -1
     (nil))

(insn 503 502 504 36 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 253 [ D.44502 ])
            (const_int 0 [0]))) src/switch_core_media.c:2965 -1
     (nil))

(jump_insn 504 503 505 36 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5393)
            (pc))) src/switch_core_media.c:2965 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5393)

(note 505 504 506 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 506 505 507 37 (set (reg:SI 1102)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 911 [0x38f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 911 [0x38f])
            ] 29)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 507 506 508 37 (set (reg:SI 1101)
        (reg:SI 1102)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 508 507 509 37 (set (reg:SI 1104)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 912 [0x390])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 912 [0x390])
            ] 29)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 509 508 510 37 (set (reg/f:SI 1103)
        (reg:SI 1104)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 510 509 511 37 (set (reg:SI 1106)
        (plus:SI (reg/f:SI 1103)
            (const_int 1792 [0x700]))) src/switch_core_media.c:2969 -1
     (nil))

(insn 511 510 512 37 (set (reg:SI 1105)
        (plus:SI (reg:SI 1106)
            (const_int 8 [0x8]))) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1103)
            (const_int 1800 [0x708]))
        (nil)))

(insn 512 511 513 37 (set (reg:SI 1107)
        (const_int 2969 [0xb99])) src/switch_core_media.c:2969 -1
     (nil))

(insn 513 512 514 37 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2969 -1
     (nil))

(insn 514 513 515 37 (set (reg:SI 1108)
        (const_int 7 [0x7])) src/switch_core_media.c:2969 -1
     (nil))

(insn 515 514 516 37 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1108)) src/switch_core_media.c:2969 -1
     (nil))

(insn 516 515 517 37 (set (reg:SI 1110)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC300") [flags 0x82]  <var_decl 0x404067e0 *.LC300>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 913 [0x391])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 913 [0x391])
            ] 29)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC300") [flags 0x82]  <var_decl 0x404067e0 *.LC300>)
        (nil)))

(insn 517 516 518 37 (set (reg/f:SI 1109)
        (reg:SI 1110)) src/switch_core_media.c:2969 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC300") [flags 0x82]  <var_decl 0x404067e0 *.LC300>)
        (nil)))

(insn 518 517 519 37 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1109)) src/switch_core_media.c:2969 -1
     (nil))

(insn 519 518 520 37 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v/f:SI 250 [ val ])) src/switch_core_media.c:2969 -1
     (nil))

(insn 520 519 521 37 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:2969 -1
     (nil))

(insn 521 520 522 37 (set (reg:SI 1 r1)
        (reg:SI 1101)) src/switch_core_media.c:2969 -1
     (nil))

(insn 522 521 523 37 (set (reg:SI 2 r2)
        (reg:SI 1105)) src/switch_core_media.c:2969 -1
     (nil))

(insn 523 522 524 37 (set (reg:SI 3 r3)
        (reg:SI 1107)) src/switch_core_media.c:2969 -1
     (nil))

(call_insn 524 523 5382 37 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2969 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 5382 524 5383 37 (set (pc)
        (label_ref 525)) -1
     (nil)
 -> 525)

(barrier 5383 5382 5385)

(code_label 5385 5383 5384 38 1520 "" [1 uses])

(note 5384 5385 7 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 7 5384 8 38 (set (reg/v:SI 190 [ scrooge ])
        (const_int 0 [0])) src/switch_core_media.c:2961 -1
     (nil))

(insn 8 7 5386 38 (set (reg/v:SI 170 [ greedy ])
        (const_int 0 [0])) src/switch_core_media.c:2960 -1
     (nil))

(jump_insn 5386 8 5387 38 (set (pc)
        (label_ref 525)) -1
     (nil)
 -> 525)

(barrier 5387 5386 5389)

(code_label 5389 5387 5388 39 1521 "" [1 uses])

(note 5388 5389 9 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 9 5388 10 39 (set (reg/v:SI 190 [ scrooge ])
        (const_int 0 [0])) src/switch_core_media.c:2964 -1
     (nil))

(insn 10 9 5390 39 (set (reg/v:SI 170 [ greedy ])
        (const_int 1 [0x1])) src/switch_core_media.c:2963 -1
     (nil))

(jump_insn 5390 10 5391 39 (set (pc)
        (label_ref 525)) -1
     (nil)
 -> 525)

(barrier 5391 5390 5393)

(code_label 5393 5391 5392 40 1522 "" [1 uses])

(note 5392 5393 11 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 11 5392 12 40 (set (reg/v:SI 190 [ scrooge ])
        (const_int 1 [0x1])) src/switch_core_media.c:2966 -1
     (nil))

(insn 12 11 525 40 (set (reg/v:SI 170 [ greedy ])
        (const_int 1 [0x1])) src/switch_core_media.c:2967 -1
     (nil))

(code_label 525 12 526 41 1341 "" [4 uses])

(note 526 525 527 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(debug_insn 527 526 528 41 (var_location:SI scrooge (reg/v:SI 190 [ scrooge ])) -1
     (nil))

(debug_insn 528 527 529 41 (var_location:SI greedy (reg/v:SI 170 [ greedy ])) -1
     (nil))

(insn 529 528 530 41 (set (reg/f:SI 1111)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 12 [0xc])) [2 sdp_198->sdp_origin+0 S4 A32])) src/switch_core_media.c:2973 -1
     (nil))

(insn 530 529 531 41 (set (reg:SI 1112)
        (mem/s/f:SI (plus:SI (reg/f:SI 1111)
                (const_int 4 [0x4])) [2 D.44506_224->o_username+0 S4 A32])) src/switch_core_media.c:2973 -1
     (nil))

(insn 531 530 532 41 (set (reg:SI 1114)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 914 [0x392])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 914 [0x392])
            ] 29)) src/switch_core_media.c:2973 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 532 531 533 41 (set (reg:SI 1113)
        (reg:SI 1114)) src/switch_core_media.c:2973 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 533 532 534 41 (set (reg:SI 1116)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 915 [0x393])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 915 [0x393])
            ] 29)) src/switch_core_media.c:2973 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 534 533 535 41 (set (reg/f:SI 1115)
        (reg:SI 1116)) src/switch_core_media.c:2973 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 535 534 536 41 (set (reg:SI 1118)
        (plus:SI (reg/f:SI 1115)
            (const_int 1792 [0x700]))) src/switch_core_media.c:2973 -1
     (nil))

(insn 536 535 537 41 (set (reg:SI 1117)
        (plus:SI (reg:SI 1118)
            (const_int 8 [0x8]))) src/switch_core_media.c:2973 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1115)
            (const_int 1800 [0x708]))
        (nil)))

(insn 537 536 538 41 (set (reg:SI 1119)
        (const_int 2973 [0xb9d])) src/switch_core_media.c:2973 -1
     (nil))

(insn 538 537 539 41 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1119)) src/switch_core_media.c:2973 -1
     (nil))

(insn 539 538 540 41 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2973 -1
     (nil))

(insn 540 539 541 41 (set (reg:SI 1 r1)
        (reg:SI 1112)) src/switch_core_media.c:2973 -1
     (nil))

(insn 541 540 542 41 (set (reg:SI 2 r2)
        (reg:SI 1113)) src/switch_core_media.c:2973 -1
     (nil))

(insn 542 541 543 41 (set (reg:SI 3 r3)
        (reg:SI 1117)) src/switch_core_media.c:2973 -1
     (nil))

(call_insn 543 542 544 41 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2973 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 544 543 545 41 (set (reg/f:SI 256 [ D.44508 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2973 -1
     (nil))

(insn 545 544 546 41 (set (reg:SI 1120)
        (const_int 23320 [0x5b18])) src/switch_core_media.c:2973 -1
     (nil))

(insn 546 545 547 41 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1120)) [2 smh_186->origin+0 S4 A32])
        (reg/f:SI 256 [ D.44508 ])) src/switch_core_media.c:2973 -1
     (nil))

(insn 547 546 548 41 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 256 [ D.44508 ])
            (const_int 0 [0]))) src/switch_core_media.c:2973 -1
     (nil))

(jump_insn 548 547 549 41 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 628)
            (pc))) src/switch_core_media.c:2973 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 628)

(note 549 548 550 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 550 549 551 42 (set (reg:SI 1122)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:2975 -1
     (nil))

(insn 551 550 552 42 (set (reg/f:SI 1121)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1122)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:2975 -1
     (nil))

(insn 552 551 553 42 (set (reg:SI 259 [ prephitmp.1053 ])
        (mem/s:SI (plus:SI (reg/f:SI 1121)
                (const_int 20 [0x14])) [18 D.44471_228->auto_rtp_bugs+0 S4 A32])) src/switch_core_media.c:2975 -1
     (nil))

(insn 553 552 554 42 (set (reg:SI 1123)
        (and:SI (reg:SI 259 [ prephitmp.1053 ])
            (const_int 1 [0x1]))) src/switch_core_media.c:2975 -1
     (nil))

(insn 554 553 555 42 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1123)
            (const_int 0 [0]))) src/switch_core_media.c:2975 -1
     (nil))

(jump_insn 555 554 556 42 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 590)
            (pc))) src/switch_core_media.c:2975 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 590)

(note 556 555 557 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 557 556 558 43 (set (reg:SI 1125)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC301") [flags 0x82]  <var_decl 0x40406840 *.LC301>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 916 [0x394])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 916 [0x394])
            ] 29)) src/switch_core_media.c:2977 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC301") [flags 0x82]  <var_decl 0x40406840 *.LC301>)
        (nil)))

(insn 558 557 559 43 (set (reg:SI 1124)
        (reg:SI 1125)) src/switch_core_media.c:2977 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC301") [flags 0x82]  <var_decl 0x40406840 *.LC301>)
        (nil)))

(insn 559 558 560 43 (set (reg:SI 0 r0)
        (reg/f:SI 256 [ D.44508 ])) src/switch_core_media.c:2977 -1
     (nil))

(insn 560 559 561 43 (set (reg:SI 1 r1)
        (reg:SI 1124)) src/switch_core_media.c:2977 -1
     (nil))

(call_insn/i 561 560 562 43 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strstr") [flags 0x41]  <function_decl 0x402f5200 strstr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2977 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 562 561 563 43 (set (reg/f:SI 263 [ D.44518 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2977 -1
     (nil))

(insn 563 562 564 43 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 263 [ D.44518 ])
            (const_int 0 [0]))) src/switch_core_media.c:2977 -1
     (nil))

(jump_insn 564 563 565 43 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 590)
            (pc))) src/switch_core_media.c:2977 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 590)

(note 565 564 566 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 566 565 567 44 (set (reg:SI 1126)
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1900 [0x76c])) [18 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs+0 S4 A32])) src/switch_core_media.c:2978 -1
     (nil))

(insn 567 566 568 44 (set (reg:SI 1127)
        (ior:SI (reg:SI 1126)
            (const_int 1 [0x1]))) src/switch_core_media.c:2978 -1
     (nil))

(insn 568 567 569 44 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1900 [0x76c])) [18 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs+0 S4 A32])
        (reg:SI 1127)) src/switch_core_media.c:2978 -1
     (nil))

(insn 569 568 570 44 (set (reg:SI 1129)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 917 [0x395])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 917 [0x395])
            ] 29)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 570 569 571 44 (set (reg:SI 1128)
        (reg:SI 1129)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 571 570 572 44 (set (reg:SI 1131)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 918 [0x396])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 918 [0x396])
            ] 29)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 572 571 573 44 (set (reg/f:SI 1130)
        (reg:SI 1131)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 573 572 574 44 (set (reg:SI 1133)
        (plus:SI (reg/f:SI 1130)
            (const_int 1792 [0x700]))) src/switch_core_media.c:2979 -1
     (nil))

(insn 574 573 575 44 (set (reg:SI 1132)
        (plus:SI (reg:SI 1133)
            (const_int 8 [0x8]))) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1130)
            (const_int 1800 [0x708]))
        (nil)))

(insn 575 574 576 44 (set (reg:SI 1134)
        (const_int 2979 [0xba3])) src/switch_core_media.c:2979 -1
     (nil))

(insn 576 575 577 44 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2979 -1
     (nil))

(insn 577 576 578 44 (set (reg:SI 1135)
        (const_int 7 [0x7])) src/switch_core_media.c:2979 -1
     (nil))

(insn 578 577 579 44 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1135)) src/switch_core_media.c:2979 -1
     (nil))

(insn 579 578 580 44 (set (reg:SI 1137)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC302") [flags 0x82]  <var_decl 0x40406960 *.LC302>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 919 [0x397])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 919 [0x397])
            ] 29)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC302") [flags 0x82]  <var_decl 0x40406960 *.LC302>)
        (nil)))

(insn 580 579 581 44 (set (reg/f:SI 1136)
        (reg:SI 1137)) src/switch_core_media.c:2979 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC302") [flags 0x82]  <var_decl 0x40406960 *.LC302>)
        (nil)))

(insn 581 580 582 44 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1136)) src/switch_core_media.c:2979 -1
     (nil))

(insn 582 581 583 44 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:2979 -1
     (nil))

(insn 583 582 584 44 (set (reg:SI 1 r1)
        (reg:SI 1128)) src/switch_core_media.c:2979 -1
     (nil))

(insn 584 583 585 44 (set (reg:SI 2 r2)
        (reg:SI 1132)) src/switch_core_media.c:2979 -1
     (nil))

(insn 585 584 586 44 (set (reg:SI 3 r3)
        (reg:SI 1134)) src/switch_core_media.c:2979 -1
     (nil))

(call_insn 586 585 587 44 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2979 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 587 586 588 44 (set (reg:SI 1139)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:2979 -1
     (nil))

(insn 588 587 589 44 (set (reg/f:SI 1138)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1139)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:2979 -1
     (nil))

(insn 589 588 590 44 (set (reg:SI 259 [ prephitmp.1053 ])
        (mem/s:SI (plus:SI (reg/f:SI 1138)
                (const_int 20 [0x14])) [18 pretmp.1050_1809->auto_rtp_bugs+0 S4 A32])) src/switch_core_media.c:2979 -1
     (nil))

(code_label 590 589 591 45 1343 "" [2 uses])

(note 591 590 592 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 592 591 593 45 (set (reg:SI 1140)
        (and:SI (reg:SI 259 [ prephitmp.1053 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:2983 -1
     (nil))

(insn 593 592 594 45 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1140)
            (const_int 0 [0]))) src/switch_core_media.c:2983 -1
     (nil))

(jump_insn 594 593 595 45 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 628)
            (pc))) src/switch_core_media.c:2983 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 628)

(note 595 594 596 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 596 595 597 46 (set (reg:SI 1141)
        (const_int 23320 [0x5b18])) src/switch_core_media.c:2984 -1
     (nil))

(insn 597 596 598 46 (set (reg:SI 1142)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1141)) [2 smh_186->origin+0 S4 A32])) src/switch_core_media.c:2984 -1
     (nil))

(insn 598 597 599 46 (set (reg:SI 1144)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC303") [flags 0x82]  <var_decl 0x404069c0 *.LC303>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 920 [0x398])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 920 [0x398])
            ] 29)) src/switch_core_media.c:2984 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC303") [flags 0x82]  <var_decl 0x404069c0 *.LC303>)
        (nil)))

(insn 599 598 600 46 (set (reg:SI 1143)
        (reg:SI 1144)) src/switch_core_media.c:2984 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC303") [flags 0x82]  <var_decl 0x404069c0 *.LC303>)
        (nil)))

(insn 600 599 601 46 (set (reg:SI 0 r0)
        (reg:SI 1142)) src/switch_core_media.c:2984 -1
     (nil))

(insn 601 600 602 46 (set (reg:SI 1 r1)
        (reg:SI 1143)) src/switch_core_media.c:2984 -1
     (nil))

(call_insn/i 602 601 603 46 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strstr") [flags 0x41]  <function_decl 0x402f5200 strstr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2984 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 603 602 604 46 (set (reg/f:SI 269 [ D.44526 ])
        (reg:SI 0 r0)) src/switch_core_media.c:2984 -1
     (nil))

(insn 604 603 605 46 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 269 [ D.44526 ])
            (const_int 0 [0]))) src/switch_core_media.c:2984 -1
     (nil))

(jump_insn 605 604 606 46 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 628)
            (pc))) src/switch_core_media.c:2984 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 628)

(note 606 605 607 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 607 606 608 47 (set (reg:SI 1145)
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1900 [0x76c])) [18 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs+0 S4 A32])) src/switch_core_media.c:2985 -1
     (nil))

(insn 608 607 609 47 (set (reg:SI 1146)
        (ior:SI (reg:SI 1145)
            (const_int 2 [0x2]))) src/switch_core_media.c:2985 -1
     (nil))

(insn 609 608 610 47 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1900 [0x76c])) [18 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs+0 S4 A32])
        (reg:SI 1146)) src/switch_core_media.c:2985 -1
     (nil))

(insn 610 609 611 47 (set (reg:SI 1148)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 921 [0x399])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 921 [0x399])
            ] 29)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 611 610 612 47 (set (reg:SI 1147)
        (reg:SI 1148)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 612 611 613 47 (set (reg:SI 1150)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 922 [0x39a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 922 [0x39a])
            ] 29)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 613 612 614 47 (set (reg/f:SI 1149)
        (reg:SI 1150)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 614 613 615 47 (set (reg:SI 1152)
        (plus:SI (reg/f:SI 1149)
            (const_int 1792 [0x700]))) src/switch_core_media.c:2986 -1
     (nil))

(insn 615 614 616 47 (set (reg:SI 1151)
        (plus:SI (reg:SI 1152)
            (const_int 8 [0x8]))) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1149)
            (const_int 1800 [0x708]))
        (nil)))

(insn 616 615 617 47 (set (reg:SI 1153)
        (const_int 2986 [0xbaa])) src/switch_core_media.c:2986 -1
     (nil))

(insn 617 616 618 47 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:2986 -1
     (nil))

(insn 618 617 619 47 (set (reg:SI 1154)
        (const_int 4 [0x4])) src/switch_core_media.c:2986 -1
     (nil))

(insn 619 618 620 47 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1154)) src/switch_core_media.c:2986 -1
     (nil))

(insn 620 619 621 47 (set (reg:SI 1156)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC304") [flags 0x82]  <var_decl 0x40406a20 *.LC304>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 923 [0x39b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 923 [0x39b])
            ] 29)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC304") [flags 0x82]  <var_decl 0x40406a20 *.LC304>)
        (nil)))

(insn 621 620 622 47 (set (reg/f:SI 1155)
        (reg:SI 1156)) src/switch_core_media.c:2986 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC304") [flags 0x82]  <var_decl 0x40406a20 *.LC304>)
        (nil)))

(insn 622 621 623 47 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1155)) src/switch_core_media.c:2986 -1
     (nil))

(insn 623 622 624 47 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:2986 -1
     (nil))

(insn 624 623 625 47 (set (reg:SI 1 r1)
        (reg:SI 1147)) src/switch_core_media.c:2986 -1
     (nil))

(insn 625 624 626 47 (set (reg:SI 2 r2)
        (reg:SI 1151)) src/switch_core_media.c:2986 -1
     (nil))

(insn 626 625 627 47 (set (reg:SI 3 r3)
        (reg:SI 1153)) src/switch_core_media.c:2986 -1
     (nil))

(call_insn 627 626 628 47 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2986 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(code_label 628 627 629 48 1342 "" [3 uses])

(note 629 628 630 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 630 629 631 48 (set (reg:SI 1157)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:2995 -1
     (nil))

(insn 631 630 632 48 (set (reg:SI 1159)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC305") [flags 0x82]  <var_decl 0x40406a80 *.LC305>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 924 [0x39c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 924 [0x39c])
            ] 29)) src/switch_core_media.c:2995 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC305") [flags 0x82]  <var_decl 0x40406a80 *.LC305>)
        (nil)))

(insn 632 631 633 48 (set (reg:SI 1158)
        (reg:SI 1159)) src/switch_core_media.c:2995 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC305") [flags 0x82]  <var_decl 0x40406a80 *.LC305>)
        (nil)))

(insn 633 632 634 48 (set (reg:SI 0 r0)
        (reg:SI 1157)) src/switch_core_media.c:2995 -1
     (nil))

(insn 634 633 635 48 (set (reg:SI 1 r1)
        (reg:SI 1158)) src/switch_core_media.c:2995 -1
     (nil))

(insn 635 634 636 48 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:2995 -1
     (nil))

(insn 636 635 637 48 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:2995 -1
     (nil))

(call_insn 637 636 638 48 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2995 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 638 637 639 48 (set (reg/v/f:SI 273 [ val ])
        (reg:SI 0 r0)) src/switch_core_media.c:2995 -1
     (nil))

(debug_insn 639 638 640 48 (var_location:SI val (reg/v/f:SI 273 [ val ])) src/switch_core_media.c:2995 -1
     (nil))

(insn 640 639 641 48 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 273 [ val ])
            (const_int 0 [0]))) src/switch_core_media.c:2995 -1
     (nil))

(jump_insn 641 640 642 48 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 728)
            (pc))) src/switch_core_media.c:2995 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 728)

(note 642 641 643 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(debug_insn 643 642 644 49 (var_location:SI expr (reg/v/f:SI 273 [ val ])) -1
     (nil))

(insn 644 643 645 49 (set (reg:SI 1161)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 925 [0x39d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 925 [0x39d])
            ] 29)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 645 644 646 49 (set (reg:SI 1160)
        (reg:SI 1161)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 646 645 647 49 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 647 646 648 49 (set (reg:SI 1 r1)
        (reg:SI 1160)) ./src/include/switch_utils.h:429 -1
     (nil))

(call_insn/i 648 647 649 49 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 649 648 650 49 (set (reg:SI 880 [ D.49687 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 650 649 651 49 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 880 [ D.49687 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 651 650 652 49 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 721)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 721)

(note 652 651 653 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 653 652 654 50 (set (reg:SI 1163)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 926 [0x39e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 926 [0x39e])
            ] 29)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 654 653 655 50 (set (reg:SI 1162)
        (reg:SI 1163)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 655 654 656 50 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 656 655 657 50 (set (reg:SI 1 r1)
        (reg:SI 1162)) ./src/include/switch_utils.h:430 -1
     (nil))

(call_insn/i 657 656 658 50 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 658 657 659 50 (set (reg:SI 881 [ D.49688 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 659 658 660 50 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 881 [ D.49688 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 660 659 661 50 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 721)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 721)

(note 661 660 662 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 662 661 663 51 (set (reg:SI 1165)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 927 [0x39f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 927 [0x39f])
            ] 29)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 663 662 664 51 (set (reg:SI 1164)
        (reg:SI 1165)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 664 663 665 51 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 665 664 666 51 (set (reg:SI 1 r1)
        (reg:SI 1164)) ./src/include/switch_utils.h:431 -1
     (nil))

(call_insn/i 666 665 667 51 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 667 666 668 51 (set (reg:SI 882 [ D.49689 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 668 667 669 51 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 882 [ D.49689 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:430 -1
     (nil))

(jump_insn 669 668 670 51 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 721)
            (pc))) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 721)

(note 670 669 671 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 671 670 672 52 (set (reg:SI 1167)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 928 [0x3a0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 928 [0x3a0])
            ] 29)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 672 671 673 52 (set (reg:SI 1166)
        (reg:SI 1167)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 673 672 674 52 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 674 673 675 52 (set (reg:SI 1 r1)
        (reg:SI 1166)) ./src/include/switch_utils.h:432 -1
     (nil))

(call_insn/i 675 674 676 52 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 676 675 677 52 (set (reg:SI 883 [ D.49690 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 677 676 678 52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 883 [ D.49690 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:431 -1
     (nil))

(jump_insn 678 677 679 52 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 721)
            (pc))) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 721)

(note 679 678 680 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 680 679 681 53 (set (reg:SI 1169)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 929 [0x3a1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 929 [0x3a1])
            ] 29)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 681 680 682 53 (set (reg:SI 1168)
        (reg:SI 1169)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 682 681 683 53 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 683 682 684 53 (set (reg:SI 1 r1)
        (reg:SI 1168)) ./src/include/switch_utils.h:433 -1
     (nil))

(call_insn/i 684 683 685 53 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 685 684 686 53 (set (reg:SI 884 [ D.49691 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 686 685 687 53 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 884 [ D.49691 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:432 -1
     (nil))

(jump_insn 687 686 688 53 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 721)
            (pc))) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 721)

(note 688 687 689 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 689 688 690 54 (set (reg:SI 1171)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 930 [0x3a2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 930 [0x3a2])
            ] 29)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 690 689 691 54 (set (reg:SI 1170)
        (reg:SI 1171)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 691 690 692 54 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 692 691 693 54 (set (reg:SI 1 r1)
        (reg:SI 1170)) ./src/include/switch_utils.h:434 -1
     (nil))

(call_insn/i 693 692 694 54 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 694 693 695 54 (set (reg:SI 885 [ D.49692 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 695 694 696 54 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 885 [ D.49692 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:433 -1
     (nil))

(jump_insn 696 695 697 54 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 721)
            (pc))) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 721)

(note 697 696 698 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 698 697 699 55 (set (reg:SI 1173)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 931 [0x3a3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 931 [0x3a3])
            ] 29)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 699 698 700 55 (set (reg:SI 1172)
        (reg:SI 1173)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 700 699 701 55 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 701 700 702 55 (set (reg:SI 1 r1)
        (reg:SI 1172)) ./src/include/switch_utils.h:435 -1
     (nil))

(call_insn/i 702 701 703 55 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 703 702 704 55 (set (reg:SI 886 [ D.49693 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 704 703 705 55 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 886 [ D.49693 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:434 -1
     (nil))

(jump_insn 705 704 706 55 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 721)
            (pc))) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil))
 -> 721)

(note 706 705 707 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 707 706 708 56 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) ./src/include/switch_utils.h:436 -1
     (nil))

(call_insn 708 707 709 56 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:436 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 709 708 710 56 (set (reg:SI 887 [ D.49694 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:436 -1
     (nil))

(insn 710 709 711 56 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 887 [ D.49694 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:435 -1
     (nil))

(jump_insn 711 710 712 56 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5145)
            (pc))) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5145)

(note 712 711 713 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(debug_insn 713 712 714 57 (var_location:SI __nptr (reg/v/f:SI 273 [ val ])) -1
     (nil))

(insn 714 713 715 57 (set (reg:SI 0 r0)
        (reg/v/f:SI 273 [ val ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 715 714 716 57 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 716 715 717 57 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 717 716 718 57 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 718 717 719 57 (set (reg:SI 888 [ D.49695 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 719 718 720 57 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 888 [ D.49695 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 720 719 721 57 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5145)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 5145)

(code_label 721 720 722 58 1345 "" [7 uses])

(note 722 721 723 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 723 722 724 58 (set (reg:SI 1174)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:2996 -1
     (nil))

(insn 724 723 725 58 (set (reg:SI 0 r0)
        (reg:SI 1174)) src/switch_core_media.c:2996 -1
     (nil))

(insn 725 724 726 58 (set (reg:SI 1 r1)
        (const_int 93 [0x5d])) src/switch_core_media.c:2996 -1
     (nil))

(insn 726 725 727 58 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:2996 -1
     (nil))

(call_insn 727 726 728 58 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_set_flag_value") [flags 0x41]  <function_decl 0x40846900 switch_channel_set_flag_value>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:2996 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(code_label 728 727 729 59 1344 "" [2 uses])

(note 729 728 730 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 730 729 731 59 (set (reg/v/f:SI 276 [ m ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 60 [0x3c])) [2 sdp_198->sdp_media+0 S4 A32])) src/switch_core_media.c:2999 -1
     (nil))

(debug_insn 731 730 732 59 (var_location:SI m (reg/v/f:SI 276 [ m ])) src/switch_core_media.c:2999 -1
     (nil))

(insn 732 731 733 59 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 276 [ m ])
            (const_int 0 [0]))) src/switch_core_media.c:2999 -1
     (nil))

(jump_insn 733 732 734 59 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5397)
            (pc))) src/switch_core_media.c:2999 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 5397)

(note 734 733 735 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 735 734 736 60 (set (reg:SI 1176)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 276 [ m ])
                    (const_int 68 [0x44])) [0+68 S1 A32]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 736 735 737 60 (set (reg:QI 1175)
        (subreg:QI (reg:SI 1176) 0)) src/switch_core_media.c:3000 -1
     (nil))

(insn 737 736 738 60 (set (reg:SI 1177)
        (and:SI (subreg:SI (reg:QI 1175) 0)
            (const_int 6 [0x6]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 738 737 739 60 (set (reg:SI 278 [ D.44541 ])
        (zero_extend:SI (subreg:QI (reg:SI 1177) 0))) src/switch_core_media.c:3000 -1
     (nil))

(insn 739 738 740 60 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 278 [ D.44541 ])
            (const_int 0 [0]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 740 739 741 60 (set (reg:SI 1179)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 741 740 742 60 (set (reg:QI 1178)
        (subreg:QI (reg:SI 1179) 0)) src/switch_core_media.c:3000 -1
     (nil))

(insn 742 741 743 60 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 278 [ D.44541 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 743 742 744 60 (set (reg:SI 1181)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3000 -1
     (nil))

(insn 744 743 745 60 (set (reg:QI 1180)
        (subreg:QI (reg:SI 1181) 0)) src/switch_core_media.c:3000 -1
     (nil))

(insn 745 744 746 60 (set (reg:SI 1182)
        (ior:SI (subreg:SI (reg:QI 1178) 0)
            (subreg:SI (reg:QI 1180) 0))) src/switch_core_media.c:3000 -1
     (nil))

(insn 746 745 747 60 (set (reg:QI 1183)
        (subreg:QI (reg:SI 1182) 0)) src/switch_core_media.c:2999 -1
     (nil))

(insn 747 746 748 60 (set (reg:SI 1184)
        (zero_extend:SI (reg:QI 1183))) src/switch_core_media.c:2999 -1
     (nil))

(insn 748 747 749 60 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1184)
            (const_int 0 [0]))) src/switch_core_media.c:2999 -1
     (nil))

(jump_insn 749 748 750 60 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5401)
            (pc))) src/switch_core_media.c:2999 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5401)

(note 750 749 751 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 751 750 752 61 (set (reg/f:SI 282 [ D.44546 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 276 [ m ])
                (const_int 48 [0x30])) [2 m_248->m_connections+0 S4 A32])) src/switch_core_media.c:3001 -1
     (nil))

(insn 752 751 753 61 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 282 [ D.44546 ])
            (const_int 0 [0]))) src/switch_core_media.c:3000 -1
     (nil))

(jump_insn 753 752 754 61 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5405)
            (pc))) src/switch_core_media.c:3000 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 5405)

(note 754 753 755 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 755 754 756 62 (set (reg/f:SI 284 [ D.44548 ])
        (mem/s/f:SI (plus:SI (reg/f:SI 282 [ D.44546 ])
                (const_int 16 [0x10])) [2 D.44546_254->c_address+0 S4 A32])) src/switch_core_media.c:3001 -1
     (nil))

(insn 756 755 757 62 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 284 [ D.44548 ])
            (const_int 0 [0]))) src/switch_core_media.c:3001 -1
     (nil))

(jump_insn 757 756 758 62 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5409)
            (pc))) src/switch_core_media.c:3001 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 5409)

(note 758 757 759 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(debug_insn 759 758 760 63 (var_location:SI __s2_len (const_int 7 [0x7])) src/switch_core_media.c:3001 -1
     (nil))

(insn 760 759 761 63 (set (reg:SI 1186)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC306") [flags 0x82]  <var_decl 0x40406ae0 *.LC306>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 932 [0x3a4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 932 [0x3a4])
            ] 29)) src/switch_core_media.c:3001 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC306") [flags 0x82]  <var_decl 0x40406ae0 *.LC306>)
        (nil)))

(insn 761 760 762 63 (set (reg:SI 1185)
        (reg:SI 1186)) src/switch_core_media.c:3001 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC306") [flags 0x82]  <var_decl 0x40406ae0 *.LC306>)
        (nil)))

(insn 762 761 763 63 (set (reg:SI 0 r0)
        (reg/f:SI 284 [ D.44548 ])) src/switch_core_media.c:3001 -1
     (nil))

(insn 763 762 764 63 (set (reg:SI 1 r1)
        (reg:SI 1185)) src/switch_core_media.c:3001 -1
     (nil))

(call_insn/i 764 763 765 63 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41]  <function_decl 0x402f3600 __builtin_strcmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3001 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 765 764 766 63 (set (reg:SI 1187)
        (reg:SI 0 r0)) src/switch_core_media.c:3001 -1
     (nil))

(insn 766 765 767 63 (set (reg/v:SI 286 [ __result ])
        (reg:SI 1187)) src/switch_core_media.c:3001 -1
     (nil))

(insn 767 766 768 63 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 286 [ __result ])
            (const_int 0 [0]))) src/switch_core_media.c:3001 -1
     (nil))

(jump_insn 768 767 769 63 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5413)
            (pc))) src/switch_core_media.c:3001 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5413)

(note 769 768 16 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 16 769 5394 64 (set (reg/v:SI 166 [ sendonly ])
        (const_int 0 [0])) src/switch_core_media.c:2897 -1
     (nil))

(jump_insn 5394 16 5395 64 (set (pc)
        (label_ref 770)) -1
     (nil)
 -> 770)

(barrier 5395 5394 5397)

(code_label 5397 5395 5396 65 1523 "" [1 uses])

(note 5396 5397 13 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 13 5396 5398 65 (set (reg/v:SI 166 [ sendonly ])
        (const_int 0 [0])) src/switch_core_media.c:2897 -1
     (nil))

(jump_insn 5398 13 5399 65 (set (pc)
        (label_ref 770)) -1
     (nil)
 -> 770)

(barrier 5399 5398 5401)

(code_label 5401 5399 5400 66 1524 "" [1 uses])

(note 5400 5401 18 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 18 5400 5402 66 (set (reg/v:SI 166 [ sendonly ])
        (const_int 2 [0x2])) src/switch_core_media.c:3002 -1
     (nil))

(jump_insn 5402 18 5403 66 (set (pc)
        (label_ref 770)) -1
     (nil)
 -> 770)

(barrier 5403 5402 5405)

(code_label 5405 5403 5404 67 1525 "" [1 uses])

(note 5404 5405 14 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 14 5404 5406 67 (set (reg/v:SI 166 [ sendonly ])
        (const_int 0 [0])) src/switch_core_media.c:2897 -1
     (nil))

(jump_insn 5406 14 5407 67 (set (pc)
        (label_ref 770)) -1
     (nil)
 -> 770)

(barrier 5407 5406 5409)

(code_label 5409 5407 5408 68 1526 "" [1 uses])

(note 5408 5409 15 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 15 5408 5410 68 (set (reg/v:SI 166 [ sendonly ])
        (const_int 0 [0])) src/switch_core_media.c:2897 -1
     (nil))

(jump_insn 5410 15 5411 68 (set (pc)
        (label_ref 770)) -1
     (nil)
 -> 770)

(barrier 5411 5410 5413)

(code_label 5413 5411 5412 69 1527 "" [1 uses])

(note 5412 5413 17 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(insn 17 5412 770 69 (set (reg/v:SI 166 [ sendonly ])
        (const_int 2 [0x2])) src/switch_core_media.c:3002 -1
     (nil))

(code_label 770 17 771 70 1347 "" [5 uses])

(note 771 770 772 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(debug_insn 772 771 773 70 (var_location:SI sendonly (reg/v:SI 166 [ sendonly ])) -1
     (nil))

(insn 773 772 774 70 (set (reg/v/f:SI 305 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 52 [0x34])) [2 sdp_198->sdp_attributes+0 S4 A32])) src/switch_core_media.c:3005 -1
     (nil))

(debug_insn 774 773 775 70 (var_location:SI attr (reg/v/f:SI 305 [ attr ])) src/switch_core_media.c:3005 -1
     (nil))

(debug_insn 775 774 776 70 (var_location:SI recvonly (const_int 0 [0])) -1
     (nil))

(debug_insn 776 775 777 70 (var_location:SI sendonly (reg/v:SI 166 [ sendonly ])) -1
     (nil))

(debug_insn 777 776 778 70 (var_location:SI dmaxptime (const_int 0 [0])) -1
     (nil))

(debug_insn 778 777 779 70 (var_location:SI dptime (const_int 0 [0])) -1
     (nil))

(debug_insn 779 778 780 70 (var_location:SI attr (reg/v/f:SI 305 [ attr ])) -1
     (nil))

(insn 780 779 781 70 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 305 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3005 -1
     (nil))

(jump_insn 781 780 5414 70 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5418)
            (pc))) src/switch_core_media.c:3005 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 5418)

(note 5414 781 19 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(insn 19 5414 20 71 (set (reg/v:SI 168 [ recvonly ])
        (const_int 0 [0])) src/switch_core_media.c:3005 -1
     (nil))

(insn 20 19 21 71 (set (reg/v:SI 164 [ dmaxptime ])
        (const_int 0 [0])) src/switch_core_media.c:3005 -1
     (nil))

(insn 21 20 961 71 (set (reg/v:SI 160 [ dptime ])
        (const_int 0 [0])) src/switch_core_media.c:3005 -1
     (nil))

(code_label 961 21 782 72 1356 "" [1 uses])

(note 782 961 783 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(insn 783 782 784 72 (set (reg/f:SI 287 [ D.44590 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 305 [ attr ])
                (const_int 8 [0x8])) [2 attr_1666->a_name+0 S4 A32])) src/switch_core_media.c:3006 -1
     (nil))

(debug_insn 784 783 785 72 (var_location:SI s (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3006 -1
     (nil))

(insn 785 784 786 72 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 287 [ D.44590 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 786 785 787 72 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 948)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 948)

(note 787 786 788 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(insn 788 787 789 73 (set (reg:SI 1188)
        (zero_extend:SI (mem:QI (reg/f:SI 287 [ D.44590 ]) [0 *D.44590_304+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 789 788 790 73 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1188)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 790 789 793 73 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 948)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 948)

(note 793 790 791 74 [bb 74] NOTE_INSN_BASIC_BLOCK)

(jump_insn 791 793 792 74 (set (pc)
        (label_ref 5149)) ./src/include/switch_utils.h:254 -1
     (nil)
 -> 5149)

(barrier 792 791 5157)

(code_label 5157 792 794 75 1507 "" [1 uses])

(note 794 5157 795 75 [bb 75] NOTE_INSN_BASIC_BLOCK)

(debug_insn 795 794 796 75 (var_location:SI sendonly (const_int 1 [0x1])) src/switch_core_media.c:3011 -1
     (nil))

(insn 796 795 797 75 (set (reg:SI 1189)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3012 -1
     (nil))

(insn 797 796 798 75 (set (reg:SI 1191)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 933 [0x3a5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 933 [0x3a5])
            ] 29)) src/switch_core_media.c:3012 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 798 797 799 75 (set (reg:SI 1190)
        (reg:SI 1191)) src/switch_core_media.c:3012 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 799 798 800 75 (set (reg:SI 1193)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 934 [0x3a6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 934 [0x3a6])
            ] 29)) src/switch_core_media.c:3012 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
        (nil)))

(insn 800 799 801 75 (set (reg:SI 1192)
        (reg:SI 1193)) src/switch_core_media.c:3012 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
        (nil)))

(insn 801 800 802 75 (set (reg:SI 0 r0)
        (reg:SI 1189)) src/switch_core_media.c:3012 -1
     (nil))

(insn 802 801 803 75 (set (reg:SI 1 r1)
        (reg:SI 1190)) src/switch_core_media.c:3012 -1
     (nil))

(insn 803 802 804 75 (set (reg:SI 2 r2)
        (reg:SI 1192)) src/switch_core_media.c:3012 -1
     (nil))

(insn 804 803 805 75 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3012 -1
     (nil))

(call_insn 805 804 22 75 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3012 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 22 805 806 75 (set (reg/v:SI 166 [ sendonly ])
        (const_int 1 [0x1])) src/switch_core_media.c:3011 -1
     (nil))

(jump_insn 806 22 807 75 (set (pc)
        (label_ref 948)) src/switch_core_media.c:3012 -1
     (nil)
 -> 948)

(barrier 807 806 5160)

(code_label 5160 807 808 76 1508 "" [1 uses])

(note 808 5160 809 76 [bb 76] NOTE_INSN_BASIC_BLOCK)

(insn 809 808 810 76 (set (reg:SI 1195)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 935 [0x3a7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 935 [0x3a7])
            ] 29)) src/switch_core_media.c:3013 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 810 809 811 76 (set (reg:SI 1194)
        (reg:SI 1195)) src/switch_core_media.c:3013 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 811 810 812 76 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3013 -1
     (nil))

(insn 812 811 813 76 (set (reg:SI 1 r1)
        (reg:SI 1194)) src/switch_core_media.c:3013 -1
     (nil))

(call_insn/i 813 812 814 76 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3013 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 814 813 815 76 (set (reg:SI 290 [ D.44598 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3013 -1
     (nil))

(insn 815 814 816 76 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 290 [ D.44598 ])
            (const_int 0 [0]))) src/switch_core_media.c:3013 -1
     (nil))

(jump_insn 816 815 817 76 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 831)
            (pc))) src/switch_core_media.c:3013 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 831)

(note 817 816 818 77 [bb 77] NOTE_INSN_BASIC_BLOCK)

(debug_insn 818 817 819 77 (var_location:SI sendonly (const_int 1 [0x1])) src/switch_core_media.c:3014 -1
     (nil))

(insn 819 818 820 77 (set (reg:SI 1196)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3015 -1
     (nil))

(insn 820 819 821 77 (set (reg:SI 1198)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 936 [0x3a8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 936 [0x3a8])
            ] 29)) src/switch_core_media.c:3015 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 821 820 822 77 (set (reg:SI 1197)
        (reg:SI 1198)) src/switch_core_media.c:3015 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 822 821 823 77 (set (reg:SI 1200)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 937 [0x3a9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 937 [0x3a9])
            ] 29)) src/switch_core_media.c:3015 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 823 822 824 77 (set (reg:SI 1199)
        (reg:SI 1200)) src/switch_core_media.c:3015 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 824 823 825 77 (set (reg:SI 0 r0)
        (reg:SI 1196)) src/switch_core_media.c:3015 -1
     (nil))

(insn 825 824 826 77 (set (reg:SI 1 r1)
        (reg:SI 1197)) src/switch_core_media.c:3015 -1
     (nil))

(insn 826 825 827 77 (set (reg:SI 2 r2)
        (reg:SI 1199)) src/switch_core_media.c:3015 -1
     (nil))

(insn 827 826 828 77 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3015 -1
     (nil))

(call_insn 828 827 23 77 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3015 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 23 828 829 77 (set (reg/v:SI 166 [ sendonly ])
        (const_int 1 [0x1])) src/switch_core_media.c:3014 -1
     (nil))

(jump_insn 829 23 830 77 (set (pc)
        (label_ref 948)) src/switch_core_media.c:3015 -1
     (nil)
 -> 948)

(barrier 830 829 831)

(code_label 831 830 832 78 1351 "" [1 uses])

(note 832 831 833 78 [bb 78] NOTE_INSN_BASIC_BLOCK)

(insn 833 832 834 78 (set (reg:SI 1202)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 938 [0x3aa])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 938 [0x3aa])
            ] 29)) src/switch_core_media.c:3016 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
        (nil)))

(insn 834 833 835 78 (set (reg:SI 1201)
        (reg:SI 1202)) src/switch_core_media.c:3016 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC308") [flags 0x82]  <var_decl 0x40406ba0 *.LC308>)
        (nil)))

(insn 835 834 836 78 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3016 -1
     (nil))

(insn 836 835 837 78 (set (reg:SI 1 r1)
        (reg:SI 1201)) src/switch_core_media.c:3016 -1
     (nil))

(call_insn/i 837 836 838 78 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3016 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 838 837 839 78 (set (reg:SI 292 [ D.44602 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3016 -1
     (nil))

(insn 839 838 840 78 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 292 [ D.44602 ])
            (const_int 0 [0]))) src/switch_core_media.c:3016 -1
     (nil))

(jump_insn 840 839 841 78 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 895)
            (pc))) src/switch_core_media.c:3016 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 895)

(note 841 840 842 79 [bb 79] NOTE_INSN_BASIC_BLOCK)

(insn 842 841 843 79 (set (reg:SI 1203)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3017 -1
     (nil))

(insn 843 842 844 79 (set (reg:SI 1205)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 939 [0x3ab])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 939 [0x3ab])
            ] 29)) src/switch_core_media.c:3017 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 844 843 845 79 (set (reg:SI 1204)
        (reg:SI 1205)) src/switch_core_media.c:3017 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 845 844 846 79 (set (reg:SI 1207)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 940 [0x3ac])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 940 [0x3ac])
            ] 29)) src/switch_core_media.c:3017 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
        (nil)))

(insn 846 845 847 79 (set (reg:SI 1206)
        (reg:SI 1207)) src/switch_core_media.c:3017 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
        (nil)))

(insn 847 846 848 79 (set (reg:SI 0 r0)
        (reg:SI 1203)) src/switch_core_media.c:3017 -1
     (nil))

(insn 848 847 849 79 (set (reg:SI 1 r1)
        (reg:SI 1204)) src/switch_core_media.c:3017 -1
     (nil))

(insn 849 848 850 79 (set (reg:SI 2 r2)
        (reg:SI 1206)) src/switch_core_media.c:3017 -1
     (nil))

(insn 850 849 851 79 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3017 -1
     (nil))

(call_insn 851 850 852 79 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3017 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 852 851 853 79 (var_location:SI recvonly (const_int 1 [0x1])) src/switch_core_media.c:3018 -1
     (nil))

(insn 853 852 854 79 (set (reg:SI 1208)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3020 -1
     (nil))

(insn 854 853 855 79 (set (reg:SI 0 r0)
        (reg:SI 1208)) src/switch_core_media.c:3020 -1
     (nil))

(call_insn 855 854 856 79 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_ready") [flags 0x41]  <function_decl 0x408c6980 switch_rtp_ready>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3020 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 856 855 857 79 (set (reg:SI 1209)
        (reg:SI 0 r0)) src/switch_core_media.c:3020 -1
     (nil))

(insn 857 856 858 79 (set (reg:SI 295 [ D.44606 ])
        (reg:SI 1209)) src/switch_core_media.c:3020 -1
     (nil))

(insn 858 857 859 79 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 295 [ D.44606 ])
            (const_int 0 [0]))) src/switch_core_media.c:3020 -1
     (nil))

(jump_insn 859 858 860 79 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 871)
            (pc))) src/switch_core_media.c:3020 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 871)

(note 860 859 861 80 [bb 80] NOTE_INSN_BASIC_BLOCK)

(insn 861 860 862 80 (set (reg:SI 1210)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3021 -1
     (nil))

(insn 862 861 863 80 (set (reg:SI 0 r0)
        (reg:SI 1210)) src/switch_core_media.c:3021 -1
     (nil))

(insn 863 862 864 80 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3021 -1
     (nil))

(call_insn 864 863 865 80 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_max_missed_packets") [flags 0x41]  <function_decl 0x408c6680 switch_rtp_set_max_missed_packets>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3021 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 865 864 866 80 (set (reg:SI 1211)
        (const_int 0 [0])) src/switch_core_media.c:3022 -1
     (nil))

(insn 866 865 867 80 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1884 [0x75c])) [4 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_hold_packets+0 S4 A32])
        (reg:SI 1211)) src/switch_core_media.c:3022 -1
     (nil))

(insn 867 866 868 80 (set (reg:SI 1212)
        (const_int 0 [0])) src/switch_core_media.c:3023 -1
     (nil))

(insn 868 867 26 80 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1880 [0x758])) [4 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_packets+0 S4 A32])
        (reg:SI 1212)) src/switch_core_media.c:3023 -1
     (nil))

(insn 26 868 869 80 (set (reg/v:SI 168 [ recvonly ])
        (const_int 1 [0x1])) src/switch_core_media.c:3018 -1
     (nil))

(jump_insn 869 26 870 80 (set (pc)
        (label_ref 948)) src/switch_core_media.c:3023 -1
     (nil)
 -> 948)

(barrier 870 869 871)

(code_label 871 870 872 81 1353 "" [1 uses])

(note 872 871 873 81 [bb 81] NOTE_INSN_BASIC_BLOCK)

(insn 873 872 874 81 (set (reg:SI 1213)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3025 -1
     (nil))

(insn 874 873 875 81 (set (reg:SI 1215)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC214") [flags 0x82]  <var_decl 0x423a2ba0 *.LC214>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 941 [0x3ad])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 941 [0x3ad])
            ] 29)) src/switch_core_media.c:3025 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC214") [flags 0x82]  <var_decl 0x423a2ba0 *.LC214>)
        (nil)))

(insn 875 874 876 81 (set (reg:SI 1214)
        (reg:SI 1215)) src/switch_core_media.c:3025 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC214") [flags 0x82]  <var_decl 0x423a2ba0 *.LC214>)
        (nil)))

(insn 876 875 877 81 (set (reg:SI 1217)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 942 [0x3ae])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 942 [0x3ae])
            ] 29)) src/switch_core_media.c:3025 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
        (nil)))

(insn 877 876 878 81 (set (reg:SI 1216)
        (reg:SI 1217)) src/switch_core_media.c:3025 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
        (nil)))

(insn 878 877 879 81 (set (reg:SI 0 r0)
        (reg:SI 1213)) src/switch_core_media.c:3025 -1
     (nil))

(insn 879 878 880 81 (set (reg:SI 1 r1)
        (reg:SI 1214)) src/switch_core_media.c:3025 -1
     (nil))

(insn 880 879 881 81 (set (reg:SI 2 r2)
        (reg:SI 1216)) src/switch_core_media.c:3025 -1
     (nil))

(insn 881 880 882 81 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3025 -1
     (nil))

(call_insn 882 881 883 81 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3025 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 883 882 884 81 (set (reg:SI 1218)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3026 -1
     (nil))

(insn 884 883 885 81 (set (reg:SI 1220)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC215") [flags 0x82]  <var_decl 0x423a2c00 *.LC215>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 943 [0x3af])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 943 [0x3af])
            ] 29)) src/switch_core_media.c:3026 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC215") [flags 0x82]  <var_decl 0x423a2c00 *.LC215>)
        (nil)))

(insn 885 884 886 81 (set (reg:SI 1219)
        (reg:SI 1220)) src/switch_core_media.c:3026 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC215") [flags 0x82]  <var_decl 0x423a2c00 *.LC215>)
        (nil)))

(insn 886 885 887 81 (set (reg:SI 1222)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 944 [0x3b0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 944 [0x3b0])
            ] 29)) src/switch_core_media.c:3026 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
        (nil)))

(insn 887 886 888 81 (set (reg:SI 1221)
        (reg:SI 1222)) src/switch_core_media.c:3026 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC40") [flags 0x82]  <var_decl 0x41de8540 *.LC40>)
        (nil)))

(insn 888 887 889 81 (set (reg:SI 0 r0)
        (reg:SI 1218)) src/switch_core_media.c:3026 -1
     (nil))

(insn 889 888 890 81 (set (reg:SI 1 r1)
        (reg:SI 1219)) src/switch_core_media.c:3026 -1
     (nil))

(insn 890 889 891 81 (set (reg:SI 2 r2)
        (reg:SI 1221)) src/switch_core_media.c:3026 -1
     (nil))

(insn 891 890 892 81 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3026 -1
     (nil))

(call_insn 892 891 24 81 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3026 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 24 892 893 81 (set (reg/v:SI 168 [ recvonly ])
        (const_int 1 [0x1])) src/switch_core_media.c:3018 -1
     (nil))

(jump_insn 893 24 894 81 (set (pc)
        (label_ref 948)) src/switch_core_media.c:3026 -1
     (nil)
 -> 948)

(barrier 894 893 895)

(code_label 895 894 896 82 1352 "" [1 uses])

(note 896 895 897 82 [bb 82] NOTE_INSN_BASIC_BLOCK)

(insn 897 896 898 82 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 166 [ sendonly ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3028 -1
     (nil))

(jump_insn 898 897 899 82 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 908)
            (pc))) src/switch_core_media.c:3028 -1
     (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
        (nil))
 -> 908)

(note 899 898 900 83 [bb 83] NOTE_INSN_BASIC_BLOCK)

(insn 900 899 901 83 (set (reg:SI 1224)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC310") [flags 0x82]  <var_decl 0x40406cc0 *.LC310>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 945 [0x3b1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 945 [0x3b1])
            ] 29)) src/switch_core_media.c:3028 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC310") [flags 0x82]  <var_decl 0x40406cc0 *.LC310>)
        (nil)))

(insn 901 900 902 83 (set (reg:SI 1223)
        (reg:SI 1224)) src/switch_core_media.c:3028 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC310") [flags 0x82]  <var_decl 0x40406cc0 *.LC310>)
        (nil)))

(insn 902 901 903 83 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3028 -1
     (nil))

(insn 903 902 904 83 (set (reg:SI 1 r1)
        (reg:SI 1223)) src/switch_core_media.c:3028 -1
     (nil))

(call_insn/i 904 903 905 83 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3028 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 905 904 906 83 (set (reg:SI 299 [ D.44614 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3028 -1
     (nil))

(insn 906 905 907 83 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 299 [ D.44614 ])
            (const_int 0 [0]))) src/switch_core_media.c:3028 -1
     (nil))

(jump_insn 907 906 908 83 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5422)
            (pc))) src/switch_core_media.c:3028 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5422)

(code_label 908 907 909 84 1354 "" [1 uses])

(note 909 908 910 84 [bb 84] NOTE_INSN_BASIC_BLOCK)

(insn 910 909 911 84 (set (reg:SI 1226)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 946 [0x3b2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 946 [0x3b2])
            ] 29)) src/switch_core_media.c:3030 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
        (nil)))

(insn 911 910 912 84 (set (reg:SI 1225)
        (reg:SI 1226)) src/switch_core_media.c:3030 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
        (nil)))

(insn 912 911 913 84 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3030 -1
     (nil))

(insn 913 912 914 84 (set (reg:SI 1 r1)
        (reg:SI 1225)) src/switch_core_media.c:3030 -1
     (nil))

(call_insn/i 914 913 915 84 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3030 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 915 914 916 84 (set (reg:SI 300 [ D.44616 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3030 -1
     (nil))

(insn 916 915 917 84 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 300 [ D.44616 ])
            (const_int 0 [0]))) src/switch_core_media.c:3030 -1
     (nil))

(jump_insn 917 916 918 84 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 929)
            (pc))) src/switch_core_media.c:3030 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 929)

(note 918 917 919 85 [bb 85] NOTE_INSN_BASIC_BLOCK)

(debug_insn 919 918 920 85 (var_location:SI __nptr (mem/s/f/j:SI (plus:SI (reg/v/f:SI 305 [ attr ])
            (const_int 12 [0xc])) [0 attr_1666->a_value+0 S4 A32])) src/switch_core_media.c:3031 -1
     (nil))

(insn 920 919 921 85 (set (reg:SI 1227)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 305 [ attr ])
                (const_int 12 [0xc])) [2 attr_1666->a_value+0 S4 A32])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 921 920 922 85 (set (reg:SI 0 r0)
        (reg:SI 1227)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 922 921 923 85 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 923 922 924 85 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 924 923 925 85 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 925 924 926 85 (set (reg/v:SI 160 [ dptime ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(debug_insn 926 925 927 85 (var_location:SI dptime (clobber (const_int 0 [0]))) src/switch_core_media.c:3031 -1
     (nil))

(jump_insn 927 926 928 85 (set (pc)
        (label_ref 948)) /usr/include/stdlib.h:286 -1
     (nil)
 -> 948)

(barrier 928 927 929)

(code_label 929 928 930 86 1355 "" [1 uses])

(note 930 929 931 86 [bb 86] NOTE_INSN_BASIC_BLOCK)

(insn 931 930 932 86 (set (reg:SI 1229)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 947 [0x3b3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 947 [0x3b3])
            ] 29)) src/switch_core_media.c:3032 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
        (nil)))

(insn 932 931 933 86 (set (reg:SI 1228)
        (reg:SI 1229)) src/switch_core_media.c:3032 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
        (nil)))

(insn 933 932 934 86 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3032 -1
     (nil))

(insn 934 933 935 86 (set (reg:SI 1 r1)
        (reg:SI 1228)) src/switch_core_media.c:3032 -1
     (nil))

(call_insn/i 935 934 936 86 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3032 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 936 935 937 86 (set (reg:SI 303 [ D.44621 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3032 -1
     (nil))

(insn 937 936 938 86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 303 [ D.44621 ])
            (const_int 0 [0]))) src/switch_core_media.c:3032 -1
     (nil))

(jump_insn 938 937 939 86 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 948)
            (pc))) src/switch_core_media.c:3032 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 948)

(note 939 938 940 87 [bb 87] NOTE_INSN_BASIC_BLOCK)

(debug_insn 940 939 941 87 (var_location:SI __nptr (mem/s/f/j:SI (plus:SI (reg/v/f:SI 305 [ attr ])
            (const_int 12 [0xc])) [0 attr_1666->a_value+0 S4 A32])) src/switch_core_media.c:3033 -1
     (nil))

(insn 941 940 942 87 (set (reg:SI 1230)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 305 [ attr ])
                (const_int 12 [0xc])) [2 attr_1666->a_value+0 S4 A32])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 942 941 943 87 (set (reg:SI 0 r0)
        (reg:SI 1230)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 943 942 944 87 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 944 943 945 87 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 945 944 946 87 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 946 945 947 87 (set (reg/v:SI 164 [ dmaxptime ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(debug_insn 947 946 5419 87 (var_location:SI dmaxptime (clobber (const_int 0 [0]))) src/switch_core_media.c:3033 -1
     (nil))

(jump_insn 5419 947 5420 87 (set (pc)
        (label_ref 948)) -1
     (nil)
 -> 948)

(barrier 5420 5419 5422)

(code_label 5422 5420 5421 88 1529 "" [1 uses])

(note 5421 5422 25 88 [bb 88] NOTE_INSN_BASIC_BLOCK)

(insn 25 5421 948 88 (set (reg/v:SI 166 [ sendonly ])
        (const_int 0 [0])) src/switch_core_media.c:3029 -1
     (nil))

(code_label 948 25 949 89 1349 "" [9 uses])

(note 949 948 950 89 [bb 89] NOTE_INSN_BASIC_BLOCK)

(debug_insn 950 949 951 89 (var_location:SI recvonly (reg/v:SI 168 [ recvonly ])) -1
     (nil))

(debug_insn 951 950 952 89 (var_location:SI sendonly (reg/v:SI 166 [ sendonly ])) -1
     (nil))

(debug_insn 952 951 953 89 (var_location:SI dmaxptime (reg/v:SI 164 [ dmaxptime ])) -1
     (nil))

(debug_insn 953 952 954 89 (var_location:SI dptime (reg/v:SI 160 [ dptime ])) -1
     (nil))

(insn 954 953 955 89 (set (reg/v/f:SI 305 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 305 [ attr ])
                (const_int 4 [0x4])) [2 attr_1666->a_next+0 S4 A32])) src/switch_core_media.c:3005 -1
     (nil))

(debug_insn 955 954 956 89 (var_location:SI attr (reg/v/f:SI 305 [ attr ])) src/switch_core_media.c:3005 -1
     (nil))

(debug_insn 956 955 957 89 (var_location:SI recvonly (reg/v:SI 168 [ recvonly ])) -1
     (nil))

(debug_insn 957 956 958 89 (var_location:SI sendonly (reg/v:SI 166 [ sendonly ])) -1
     (nil))

(debug_insn 958 957 959 89 (var_location:SI dmaxptime (reg/v:SI 164 [ dmaxptime ])) -1
     (nil))

(debug_insn 959 958 960 89 (var_location:SI dptime (reg/v:SI 160 [ dptime ])) -1
     (nil))

(debug_insn 960 959 962 89 (var_location:SI attr (reg/v/f:SI 305 [ attr ])) -1
     (nil))

(insn 962 960 963 89 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 305 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3005 -1
     (nil))

(jump_insn 963 962 964 89 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 961)
            (pc))) src/switch_core_media.c:3005 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 961)

(note 964 963 965 90 [bb 90] NOTE_INSN_BASIC_BLOCK)

(insn 965 964 966 90 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 168 [ recvonly ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3005 -1
     (nil))

(insn 966 965 967 90 (set (reg:SI 1232)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3005 -1
     (nil))

(insn 967 966 968 90 (set (reg:QI 1231)
        (subreg:QI (reg:SI 1232) 0)) src/switch_core_media.c:3005 -1
     (nil))

(insn 968 967 5415 90 (set (reg:SI 955 [ prephitmp.1026 ])
        (zero_extend:SI (reg:QI 1231))) src/switch_core_media.c:3005 -1
     (nil))

(jump_insn 5415 968 5416 90 (set (pc)
        (label_ref 969)) -1
     (nil)
 -> 969)

(barrier 5416 5415 5418)

(code_label 5418 5416 5417 91 1528 "" [1 uses])

(note 5417 5418 27 91 [bb 91] NOTE_INSN_BASIC_BLOCK)

(insn 27 5417 28 91 (set (reg:SI 955 [ prephitmp.1026 ])
        (const_int 1 [0x1])) src/switch_core_media.c:3005 -1
     (nil))

(insn 28 27 29 91 (set (reg/v:SI 164 [ dmaxptime ])
        (const_int 0 [0])) src/switch_core_media.c:2896 -1
     (nil))

(insn 29 28 969 91 (set (reg/v:SI 160 [ dptime ])
        (const_int 0 [0])) src/switch_core_media.c:2896 -1
     (nil))

(code_label 969 29 970 92 1348 "" [1 uses])

(note 970 969 971 92 [bb 92] NOTE_INSN_BASIC_BLOCK)

(insn 971 970 972 92 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 166 [ sendonly ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3037 -1
     (nil))

(insn 972 971 973 92 (set (reg:SI 1234)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3037 -1
     (nil))

(insn 973 972 974 92 (set (reg:QI 1233)
        (subreg:QI (reg:SI 1234) 0)) src/switch_core_media.c:3037 -1
     (nil))

(insn 974 973 975 92 (set (reg:SI 1235)
        (and:SI (reg:SI 955 [ prephitmp.1026 ])
            (subreg:SI (reg:QI 1233) 0))) src/switch_core_media.c:3037 -1
     (nil))

(insn 975 974 976 92 (set (reg:QI 1236)
        (subreg:QI (reg:SI 1235) 0)) src/switch_core_media.c:3037 -1
     (nil))

(insn 976 975 977 92 (set (reg:SI 1237)
        (zero_extend:SI (reg:QI 1236))) src/switch_core_media.c:3037 -1
     (nil))

(insn 977 976 978 92 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1237)
            (const_int 0 [0]))) src/switch_core_media.c:3037 -1
     (nil))

(jump_insn 978 977 979 92 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 988)
            (pc))) src/switch_core_media.c:3037 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 988)

(note 979 978 980 93 [bb 93] NOTE_INSN_BASIC_BLOCK)

(insn 980 979 981 93 (set (reg:SI 1238)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3038 -1
     (nil))

(insn 981 980 982 93 (set (reg:SI 1240)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 948 [0x3b4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 948 [0x3b4])
            ] 29)) src/switch_core_media.c:3038 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 982 981 983 93 (set (reg:SI 1239)
        (reg:SI 1240)) src/switch_core_media.c:3038 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC307") [flags 0x82]  <var_decl 0x40406b40 *.LC307>)
        (nil)))

(insn 983 982 984 93 (set (reg:SI 0 r0)
        (reg:SI 1238)) src/switch_core_media.c:3038 -1
     (nil))

(insn 984 983 985 93 (set (reg:SI 1 r1)
        (reg:SI 1239)) src/switch_core_media.c:3038 -1
     (nil))

(insn 985 984 986 93 (set (reg:SI 2 r2)
        (const_int 0 [0])) src/switch_core_media.c:3038 -1
     (nil))

(insn 986 985 987 93 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3038 -1
     (nil))

(call_insn 987 986 988 93 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3038 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(code_label 988 987 989 94 1357 "" [1 uses])

(note 989 988 990 94 [bb 94] NOTE_INSN_BASIC_BLOCK)

(insn 990 989 991 94 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3041 -1
     (nil))

(insn 991 990 992 94 (set (reg:SI 1 r1)
        (const_int 5 [0x5])) src/switch_core_media.c:3041 -1
     (nil))

(call_insn 992 991 993 94 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3041 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 993 992 994 94 (set (reg:SI 309 [ D.44631 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3041 -1
     (nil))

(insn 994 993 995 94 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 309 [ D.44631 ])
            (const_int 0 [0]))) src/switch_core_media.c:3041 -1
     (nil))

(jump_insn 995 994 996 94 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5168)
            (pc))) src/switch_core_media.c:3041 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5168)

(note 996 995 997 95 [bb 95] NOTE_INSN_BASIC_BLOCK)

(insn 997 996 998 95 (set (reg:SI 1241)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3041 -1
     (nil))

(insn 998 997 999 95 (set (reg:SI 1243)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC312") [flags 0x82]  <var_decl 0x40410300 *.LC312>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 949 [0x3b5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 949 [0x3b5])
            ] 29)) src/switch_core_media.c:3041 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC312") [flags 0x82]  <var_decl 0x40410300 *.LC312>)
        (nil)))

(insn 999 998 1000 95 (set (reg:SI 1242)
        (reg:SI 1243)) src/switch_core_media.c:3041 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC312") [flags 0x82]  <var_decl 0x40410300 *.LC312>)
        (nil)))

(insn 1000 999 1001 95 (set (reg:SI 0 r0)
        (reg:SI 1241)) src/switch_core_media.c:3041 -1
     (nil))

(insn 1001 1000 1002 95 (set (reg:SI 1 r1)
        (reg:SI 1242)) src/switch_core_media.c:3041 -1
     (nil))

(insn 1002 1001 1003 95 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3041 -1
     (nil))

(insn 1003 1002 1004 95 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3041 -1
     (nil))

(call_insn 1004 1003 1005 95 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3041 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1005 1004 1006 95 (set (reg/v/f:SI 311 [ val ])
        (reg:SI 0 r0)) src/switch_core_media.c:3041 -1
     (nil))

(debug_insn 1006 1005 1007 95 (var_location:SI val (reg/v/f:SI 311 [ val ])) src/switch_core_media.c:3041 -1
     (nil))

(insn 1007 1006 1008 95 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 311 [ val ])
            (const_int 0 [0]))) src/switch_core_media.c:3041 -1
     (nil))

(jump_insn 1008 1007 1009 95 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1092)
            (pc))) src/switch_core_media.c:3041 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 1092)

(note 1009 1008 1010 96 [bb 96] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1010 1009 1011 96 (var_location:SI expr (reg/v/f:SI 311 [ val ])) -1
     (nil))

(insn 1011 1010 1012 96 (set (reg:SI 1245)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 950 [0x3b6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 950 [0x3b6])
            ] 29)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 1012 1011 1013 96 (set (reg:SI 1244)
        (reg:SI 1245)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 1013 1012 1014 96 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 1014 1013 1015 96 (set (reg:SI 1 r1)
        (reg:SI 1244)) ./src/include/switch_utils.h:429 -1
     (nil))

(call_insn/i 1015 1014 1016 96 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1016 1015 1017 96 (set (reg:SI 890 [ D.49699 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 1017 1016 1018 96 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 890 [ D.49699 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 1018 1017 1019 96 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 1088)

(note 1019 1018 1020 97 [bb 97] NOTE_INSN_BASIC_BLOCK)

(insn 1020 1019 1021 97 (set (reg:SI 1247)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 951 [0x3b7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 951 [0x3b7])
            ] 29)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 1021 1020 1022 97 (set (reg:SI 1246)
        (reg:SI 1247)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 1022 1021 1023 97 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 1023 1022 1024 97 (set (reg:SI 1 r1)
        (reg:SI 1246)) ./src/include/switch_utils.h:430 -1
     (nil))

(call_insn/i 1024 1023 1025 97 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1025 1024 1026 97 (set (reg:SI 891 [ D.49700 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 1026 1025 1027 97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 891 [ D.49700 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 1027 1026 1028 97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 1088)

(note 1028 1027 1029 98 [bb 98] NOTE_INSN_BASIC_BLOCK)

(insn 1029 1028 1030 98 (set (reg:SI 1249)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 952 [0x3b8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 952 [0x3b8])
            ] 29)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1030 1029 1031 98 (set (reg:SI 1248)
        (reg:SI 1249)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1031 1030 1032 98 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 1032 1031 1033 98 (set (reg:SI 1 r1)
        (reg:SI 1248)) ./src/include/switch_utils.h:431 -1
     (nil))

(call_insn/i 1033 1032 1034 98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1034 1033 1035 98 (set (reg:SI 892 [ D.49701 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 1035 1034 1036 98 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 892 [ D.49701 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:430 -1
     (nil))

(jump_insn 1036 1035 1037 98 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 1088)

(note 1037 1036 1038 99 [bb 99] NOTE_INSN_BASIC_BLOCK)

(insn 1038 1037 1039 99 (set (reg:SI 1251)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 953 [0x3b9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 953 [0x3b9])
            ] 29)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 1039 1038 1040 99 (set (reg:SI 1250)
        (reg:SI 1251)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 1040 1039 1041 99 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 1041 1040 1042 99 (set (reg:SI 1 r1)
        (reg:SI 1250)) ./src/include/switch_utils.h:432 -1
     (nil))

(call_insn/i 1042 1041 1043 99 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1043 1042 1044 99 (set (reg:SI 893 [ D.49702 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 1044 1043 1045 99 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 893 [ D.49702 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:431 -1
     (nil))

(jump_insn 1045 1044 1046 99 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 1088)

(note 1046 1045 1047 100 [bb 100] NOTE_INSN_BASIC_BLOCK)

(insn 1047 1046 1048 100 (set (reg:SI 1253)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 954 [0x3ba])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 954 [0x3ba])
            ] 29)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 1048 1047 1049 100 (set (reg:SI 1252)
        (reg:SI 1253)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 1049 1048 1050 100 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 1050 1049 1051 100 (set (reg:SI 1 r1)
        (reg:SI 1252)) ./src/include/switch_utils.h:433 -1
     (nil))

(call_insn/i 1051 1050 1052 100 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1052 1051 1053 100 (set (reg:SI 894 [ D.49703 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 1053 1052 1054 100 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 894 [ D.49703 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:432 -1
     (nil))

(jump_insn 1054 1053 1055 100 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 1088)

(note 1055 1054 1056 101 [bb 101] NOTE_INSN_BASIC_BLOCK)

(insn 1056 1055 1057 101 (set (reg:SI 1255)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 955 [0x3bb])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 955 [0x3bb])
            ] 29)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 1057 1056 1058 101 (set (reg:SI 1254)
        (reg:SI 1255)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 1058 1057 1059 101 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 1059 1058 1060 101 (set (reg:SI 1 r1)
        (reg:SI 1254)) ./src/include/switch_utils.h:434 -1
     (nil))

(call_insn/i 1060 1059 1061 101 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1061 1060 1062 101 (set (reg:SI 895 [ D.49704 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 1062 1061 1063 101 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 895 [ D.49704 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:433 -1
     (nil))

(jump_insn 1063 1062 1064 101 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 1088)

(note 1064 1063 1065 102 [bb 102] NOTE_INSN_BASIC_BLOCK)

(insn 1065 1064 1066 102 (set (reg:SI 1257)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 956 [0x3bc])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 956 [0x3bc])
            ] 29)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 1066 1065 1067 102 (set (reg:SI 1256)
        (reg:SI 1257)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 1067 1066 1068 102 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 1068 1067 1069 102 (set (reg:SI 1 r1)
        (reg:SI 1256)) ./src/include/switch_utils.h:435 -1
     (nil))

(call_insn/i 1069 1068 1070 102 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1070 1069 1071 102 (set (reg:SI 896 [ D.49705 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 1071 1070 1072 102 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 896 [ D.49705 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:434 -1
     (nil))

(jump_insn 1072 1071 1073 102 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil))
 -> 1088)

(note 1073 1072 1074 103 [bb 103] NOTE_INSN_BASIC_BLOCK)

(insn 1074 1073 1075 103 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) ./src/include/switch_utils.h:436 -1
     (nil))

(call_insn 1075 1074 1076 103 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:436 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1076 1075 1077 103 (set (reg:SI 897 [ D.49706 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:436 -1
     (nil))

(insn 1077 1076 1078 103 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 897 [ D.49706 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:435 -1
     (nil))

(jump_insn 1078 1077 1079 103 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5164)
            (pc))) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5164)

(note 1079 1078 1080 104 [bb 104] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1080 1079 1081 104 (var_location:SI __nptr (reg/v/f:SI 311 [ val ])) -1
     (nil))

(insn 1081 1080 1082 104 (set (reg:SI 0 r0)
        (reg/v/f:SI 311 [ val ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 1082 1081 1083 104 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 1083 1082 1084 104 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 1084 1083 1085 104 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1085 1084 1086 104 (set (reg:SI 898 [ D.49707 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 1086 1085 1087 104 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 898 [ D.49707 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 1087 1086 1088 104 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5164)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 5164)

(code_label 1088 1087 1089 105 1360 "" [7 uses])

(note 1089 1088 1090 105 [bb 105] NOTE_INSN_BASIC_BLOCK)

(jump_insn 1090 1089 1091 105 (set (pc)
        (label_ref 5168)) ./src/include/switch_utils.h:436 -1
     (nil)
 -> 5168)

(barrier 1091 1090 1092)

(code_label 1092 1091 1093 106 1359 "" [2 uses])

(note 1093 1092 1094 106 [bb 106] NOTE_INSN_BASIC_BLOCK)

(insn 1094 1093 1095 106 (set (reg:SI 1258)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3044 -1
     (nil))

(insn 1095 1094 1096 106 (set (reg/f:SI 313 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1258)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3044 -1
     (nil))

(insn 1096 1095 1097 106 (set (reg:SI 1259)
        (mem/s:SI (plus:SI (reg/f:SI 313 [ D.44471 ])
                (const_int 132 [0x84])) [4 D.44471_343->hold_laps+0 S4 A32])) src/switch_core_media.c:3044 -1
     (nil))

(insn 1097 1096 1098 106 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1259)
            (const_int 0 [0]))) src/switch_core_media.c:3044 -1
     (nil))

(jump_insn 1098 1097 1099 106 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5168)
            (pc))) src/switch_core_media.c:3044 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5168)

(note 1099 1098 1100 107 [bb 107] NOTE_INSN_BASIC_BLOCK)

(insn 1100 1099 1101 107 (set (reg:SI 1260)
        (const_int 1 [0x1])) src/switch_core_media.c:3045 -1
     (nil))

(insn 1101 1100 1102 107 (set (mem/s:SI (plus:SI (reg/f:SI 313 [ D.44471 ])
                (const_int 132 [0x84])) [4 D.44471_343->hold_laps+0 S4 A32])
        (reg:SI 1260)) src/switch_core_media.c:3045 -1
     (nil))

(insn 1102 1101 1103 107 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3046 -1
     (nil))

(insn 1103 1102 1104 107 (set (reg:SI 1 r1)
        (reg/v:SI 166 [ sendonly ])) src/switch_core_media.c:3046 -1
     (nil))

(call_insn 1104 1103 1105 107 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_toggle_hold") [flags 0x1]  <function_decl 0x40945800 switch_core_media_toggle_hold>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3046 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1105 1104 1106 107 (set (reg:SI 317 [ D.44640 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3046 -1
     (nil))

(insn 1106 1105 1107 107 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 317 [ D.44640 ])
            (const_int 0 [0]))) src/switch_core_media.c:3046 -1
     (nil))

(jump_insn 1107 1106 1108 107 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5168)
            (pc))) src/switch_core_media.c:3046 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5168)

(note 1108 1107 1109 108 [bb 108] NOTE_INSN_BASIC_BLOCK)

(insn 1109 1108 1110 108 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3047 -1
     (nil))

(insn 1110 1109 1111 108 (set (reg:SI 1 r1)
        (const_int 6 [0x6])) src/switch_core_media.c:3047 -1
     (nil))

(call_insn 1111 1110 1112 108 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3047 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1112 1111 1113 108 (set (reg/v:SI 191 [ reneg ])
        (reg:SI 0 r0)) src/switch_core_media.c:3047 -1
     (nil))

(debug_insn 1113 1112 1114 108 (var_location:SI reneg (reg/v:SI 191 [ reneg ])) src/switch_core_media.c:3047 -1
     (nil))

(insn 1114 1113 1115 108 (set (reg:SI 1261)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3048 -1
     (nil))

(insn 1115 1114 1116 108 (set (reg:SI 1263)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC313") [flags 0x82]  <var_decl 0x40410360 *.LC313>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 957 [0x3bd])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 957 [0x3bd])
            ] 29)) src/switch_core_media.c:3048 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC313") [flags 0x82]  <var_decl 0x40410360 *.LC313>)
        (nil)))

(insn 1116 1115 1117 108 (set (reg:SI 1262)
        (reg:SI 1263)) src/switch_core_media.c:3048 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC313") [flags 0x82]  <var_decl 0x40410360 *.LC313>)
        (nil)))

(insn 1117 1116 1118 108 (set (reg:SI 0 r0)
        (reg:SI 1261)) src/switch_core_media.c:3048 -1
     (nil))

(insn 1118 1117 1119 108 (set (reg:SI 1 r1)
        (reg:SI 1262)) src/switch_core_media.c:3048 -1
     (nil))

(insn 1119 1118 1120 108 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3048 -1
     (nil))

(insn 1120 1119 1121 108 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3048 -1
     (nil))

(call_insn 1121 1120 1122 108 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3048 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1122 1121 1123 108 (set (reg/v/f:SI 319 [ val ])
        (reg:SI 0 r0)) src/switch_core_media.c:3048 -1
     (nil))

(debug_insn 1123 1122 1124 108 (var_location:SI val (reg/v/f:SI 319 [ val ])) src/switch_core_media.c:3048 -1
     (nil))

(insn 1124 1123 1125 108 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 319 [ val ])
            (const_int 0 [0]))) src/switch_core_media.c:3048 -1
     (nil))

(jump_insn 1125 1124 1126 108 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1131)
            (pc))) src/switch_core_media.c:3048 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 1131)

(note 1126 1125 1127 109 [bb 109] NOTE_INSN_BASIC_BLOCK)

(insn 1127 1126 1128 109 (set (reg:SI 0 r0)
        (reg/v/f:SI 319 [ val ])) src/switch_core_media.c:3049 -1
     (nil))

(call_insn 1128 1127 1129 109 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_true") [flags 0x3]  <function_decl 0x407e7f80 switch_true>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3049 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1129 1128 1130 109 (set (reg/v:SI 191 [ reneg ])
        (reg:SI 0 r0)) src/switch_core_media.c:3049 -1
     (nil))

(debug_insn 1130 1129 1131 109 (var_location:SI reneg (reg/v:SI 191 [ reneg ])) src/switch_core_media.c:3049 -1
     (nil))

(code_label 1131 1130 1132 110 1362 "" [1 uses])

(note 1132 1131 1133 110 [bb 110] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1133 1132 1134 110 (var_location:SI reneg (reg/v:SI 191 [ reneg ])) -1
     (nil))

(insn 1134 1133 1135 110 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 191 [ reneg ])
            (const_int 0 [0]))) src/switch_core_media.c:3054 -1
     (nil))

(jump_insn 1135 1134 5171 110 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1237)
            (pc))) src/switch_core_media.c:3054 -1
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil))
 -> 1237)

(code_label 5171 1135 1136 111 1509 "" [1 uses])

(note 1136 5171 1137 111 [bb 111] NOTE_INSN_BASIC_BLOCK)

(insn 1137 1136 1138 111 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3055 -1
     (nil))

(insn 1138 1137 1139 111 (set (reg:SI 1 r1)
        (const_int 7 [0x7])) src/switch_core_media.c:3055 -1
     (nil))

(call_insn 1139 1138 1140 111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3055 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1140 1139 1141 111 (set (reg/v:SI 191 [ reneg ])
        (reg:SI 0 r0)) src/switch_core_media.c:3055 -1
     (nil))

(debug_insn 1141 1140 1142 111 (var_location:SI reneg (reg/v:SI 191 [ reneg ])) src/switch_core_media.c:3055 -1
     (nil))

(insn 1142 1141 1143 111 (set (reg:SI 1264)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3057 -1
     (nil))

(insn 1143 1142 1144 111 (set (reg:SI 1266)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC314") [flags 0x82]  <var_decl 0x40410420 *.LC314>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 958 [0x3be])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 958 [0x3be])
            ] 29)) src/switch_core_media.c:3057 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC314") [flags 0x82]  <var_decl 0x40410420 *.LC314>)
        (nil)))

(insn 1144 1143 1145 111 (set (reg:SI 1265)
        (reg:SI 1266)) src/switch_core_media.c:3057 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC314") [flags 0x82]  <var_decl 0x40410420 *.LC314>)
        (nil)))

(insn 1145 1144 1146 111 (set (reg:SI 0 r0)
        (reg:SI 1264)) src/switch_core_media.c:3057 -1
     (nil))

(insn 1146 1145 1147 111 (set (reg:SI 1 r1)
        (reg:SI 1265)) src/switch_core_media.c:3057 -1
     (nil))

(insn 1147 1146 1148 111 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3057 -1
     (nil))

(insn 1148 1147 1149 111 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3057 -1
     (nil))

(call_insn 1149 1148 1150 111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3057 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1150 1149 1151 111 (set (reg/v/f:SI 321 [ val ])
        (reg:SI 0 r0)) src/switch_core_media.c:3057 -1
     (nil))

(debug_insn 1151 1150 1152 111 (var_location:SI val (reg/v/f:SI 321 [ val ])) src/switch_core_media.c:3057 -1
     (nil))

(insn 1152 1151 1153 111 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 321 [ val ])
            (const_int 0 [0]))) src/switch_core_media.c:3057 -1
     (nil))

(jump_insn 1153 1152 1154 111 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1237)
            (pc))) src/switch_core_media.c:3057 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 1237)

(note 1154 1153 1155 112 [bb 112] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1155 1154 1156 112 (var_location:SI expr (reg/v/f:SI 321 [ val ])) -1
     (nil))

(insn 1156 1155 1157 112 (set (reg:SI 1268)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 959 [0x3bf])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 959 [0x3bf])
            ] 29)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 1157 1156 1158 112 (set (reg:SI 1267)
        (reg:SI 1268)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 1158 1157 1159 112 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 1159 1158 1160 112 (set (reg:SI 1 r1)
        (reg:SI 1267)) ./src/include/switch_utils.h:429 -1
     (nil))

(call_insn/i 1160 1159 1161 112 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1161 1160 1162 112 (set (reg:SI 899 [ D.49711 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 1162 1161 1163 112 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 899 [ D.49711 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 1163 1162 1164 112 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5426)
            (pc))) ./src/include/switch_utils.h:436 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 5426)

(note 1164 1163 1165 113 [bb 113] NOTE_INSN_BASIC_BLOCK)

(insn 1165 1164 1166 113 (set (reg:SI 1270)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 960 [0x3c0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 960 [0x3c0])
            ] 29)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 1166 1165 1167 113 (set (reg:SI 1269)
        (reg:SI 1270)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 1167 1166 1168 113 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 1168 1167 1169 113 (set (reg:SI 1 r1)
        (reg:SI 1269)) ./src/include/switch_utils.h:430 -1
     (nil))

(call_insn/i 1169 1168 1170 113 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1170 1169 1171 113 (set (reg:SI 900 [ D.49712 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 1171 1170 1172 113 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 900 [ D.49712 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 1172 1171 1173 113 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5430)
            (pc))) ./src/include/switch_utils.h:429 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 5430)

(note 1173 1172 1174 114 [bb 114] NOTE_INSN_BASIC_BLOCK)

(insn 1174 1173 1175 114 (set (reg:SI 1272)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 961 [0x3c1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 961 [0x3c1])
            ] 29)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1175 1174 1176 114 (set (reg:SI 1271)
        (reg:SI 1272)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1176 1175 1177 114 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 1177 1176 1178 114 (set (reg:SI 1 r1)
        (reg:SI 1271)) ./src/include/switch_utils.h:431 -1
     (nil))

(call_insn/i 1178 1177 1179 114 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1179 1178 1180 114 (set (reg:SI 901 [ D.49713 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 1180 1179 1181 114 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 901 [ D.49713 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:430 -1
     (nil))

(jump_insn 1181 1180 1182 114 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5434)
            (pc))) ./src/include/switch_utils.h:430 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 5434)

(note 1182 1181 1183 115 [bb 115] NOTE_INSN_BASIC_BLOCK)

(insn 1183 1182 1184 115 (set (reg:SI 1274)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 962 [0x3c2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 962 [0x3c2])
            ] 29)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 1184 1183 1185 115 (set (reg:SI 1273)
        (reg:SI 1274)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 1185 1184 1186 115 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 1186 1185 1187 115 (set (reg:SI 1 r1)
        (reg:SI 1273)) ./src/include/switch_utils.h:432 -1
     (nil))

(call_insn/i 1187 1186 1188 115 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1188 1187 1189 115 (set (reg:SI 902 [ D.49714 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 1189 1188 1190 115 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 902 [ D.49714 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:431 -1
     (nil))

(jump_insn 1190 1189 1191 115 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5438)
            (pc))) ./src/include/switch_utils.h:431 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 5438)

(note 1191 1190 1192 116 [bb 116] NOTE_INSN_BASIC_BLOCK)

(insn 1192 1191 1193 116 (set (reg:SI 1276)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 963 [0x3c3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 963 [0x3c3])
            ] 29)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 1193 1192 1194 116 (set (reg:SI 1275)
        (reg:SI 1276)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 1194 1193 1195 116 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 1195 1194 1196 116 (set (reg:SI 1 r1)
        (reg:SI 1275)) ./src/include/switch_utils.h:433 -1
     (nil))

(call_insn/i 1196 1195 1197 116 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1197 1196 1198 116 (set (reg:SI 903 [ D.49715 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 1198 1197 1199 116 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 903 [ D.49715 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:432 -1
     (nil))

(jump_insn 1199 1198 1200 116 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5442)
            (pc))) ./src/include/switch_utils.h:432 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 5442)

(note 1200 1199 1201 117 [bb 117] NOTE_INSN_BASIC_BLOCK)

(insn 1201 1200 1202 117 (set (reg:SI 1278)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 964 [0x3c4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 964 [0x3c4])
            ] 29)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 1202 1201 1203 117 (set (reg:SI 1277)
        (reg:SI 1278)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 1203 1202 1204 117 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 1204 1203 1205 117 (set (reg:SI 1 r1)
        (reg:SI 1277)) ./src/include/switch_utils.h:434 -1
     (nil))

(call_insn/i 1205 1204 1206 117 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1206 1205 1207 117 (set (reg:SI 904 [ D.49716 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 1207 1206 1208 117 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 904 [ D.49716 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:433 -1
     (nil))

(jump_insn 1208 1207 1209 117 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5446)
            (pc))) ./src/include/switch_utils.h:433 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 5446)

(note 1209 1208 1210 118 [bb 118] NOTE_INSN_BASIC_BLOCK)

(insn 1210 1209 1211 118 (set (reg:SI 1280)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 965 [0x3c5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 965 [0x3c5])
            ] 29)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 1211 1210 1212 118 (set (reg:SI 1279)
        (reg:SI 1280)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 1212 1211 1213 118 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 1213 1212 1214 118 (set (reg:SI 1 r1)
        (reg:SI 1279)) ./src/include/switch_utils.h:435 -1
     (nil))

(call_insn/i 1214 1213 1215 118 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1215 1214 1216 118 (set (reg:SI 905 [ D.49717 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 1216 1215 1217 118 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 905 [ D.49717 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:434 -1
     (nil))

(jump_insn 1217 1216 1218 118 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5450)
            (pc))) ./src/include/switch_utils.h:434 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil))
 -> 5450)

(note 1218 1217 1219 119 [bb 119] NOTE_INSN_BASIC_BLOCK)

(insn 1219 1218 1220 119 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) ./src/include/switch_utils.h:436 -1
     (nil))

(call_insn 1220 1219 1221 119 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:436 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1221 1220 1222 119 (set (reg:SI 906 [ D.49718 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:436 -1
     (nil))

(insn 1222 1221 1223 119 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 906 [ D.49718 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:435 -1
     (nil))

(jump_insn 1223 1222 1224 119 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5454)
            (pc))) ./src/include/switch_utils.h:435 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5454)

(note 1224 1223 1225 120 [bb 120] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1225 1224 1226 120 (var_location:SI __nptr (reg/v/f:SI 321 [ val ])) -1
     (nil))

(insn 1226 1225 1227 120 (set (reg:SI 0 r0)
        (reg/v/f:SI 321 [ val ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 1227 1226 1228 120 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 1228 1227 1229 120 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 1229 1228 1230 120 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1230 1229 1231 120 (set (reg:SI 907 [ D.49719 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 1231 1230 1232 120 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 907 [ D.49719 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 1232 1231 1233 120 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5458)
            (pc))) ./src/include/switch_utils.h:436 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 5458)

(note 1233 1232 37 121 [bb 121] NOTE_INSN_BASIC_BLOCK)

(insn 37 1233 5423 121 (set (reg/v:SI 191 [ reneg ])
        (const_int 1 [0x1])) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 5423 37 5424 121 (set (pc)
        (label_ref 1234)) -1
     (nil)
 -> 1234)

(barrier 5424 5423 5426)

(code_label 5426 5424 5425 122 1530 "" [1 uses])

(note 5425 5426 30 122 [bb 122] NOTE_INSN_BASIC_BLOCK)

(insn 30 5425 5427 122 (set (reg/v:SI 191 [ reneg ])
        (const_int 1 [0x1])) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 5427 30 5428 122 (set (pc)
        (label_ref 1234)) -1
     (nil)
 -> 1234)

(barrier 5428 5427 5430)

(code_label 5430 5428 5429 123 1531 "" [1 uses])

(note 5429 5430 31 123 [bb 123] NOTE_INSN_BASIC_BLOCK)

(insn 31 5429 5431 123 (set (reg/v:SI 191 [ reneg ])
        (const_int 1 [0x1])) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 5431 31 5432 123 (set (pc)
        (label_ref 1234)) -1
     (nil)
 -> 1234)

(barrier 5432 5431 5434)

(code_label 5434 5432 5433 124 1532 "" [1 uses])

(note 5433 5434 32 124 [bb 124] NOTE_INSN_BASIC_BLOCK)

(insn 32 5433 5435 124 (set (reg/v:SI 191 [ reneg ])
        (const_int 1 [0x1])) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 5435 32 5436 124 (set (pc)
        (label_ref 1234)) -1
     (nil)
 -> 1234)

(barrier 5436 5435 5438)

(code_label 5438 5436 5437 125 1533 "" [1 uses])

(note 5437 5438 33 125 [bb 125] NOTE_INSN_BASIC_BLOCK)

(insn 33 5437 5439 125 (set (reg/v:SI 191 [ reneg ])
        (const_int 1 [0x1])) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 5439 33 5440 125 (set (pc)
        (label_ref 1234)) -1
     (nil)
 -> 1234)

(barrier 5440 5439 5442)

(code_label 5442 5440 5441 126 1534 "" [1 uses])

(note 5441 5442 34 126 [bb 126] NOTE_INSN_BASIC_BLOCK)

(insn 34 5441 5443 126 (set (reg/v:SI 191 [ reneg ])
        (const_int 1 [0x1])) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 5443 34 5444 126 (set (pc)
        (label_ref 1234)) -1
     (nil)
 -> 1234)

(barrier 5444 5443 5446)

(code_label 5446 5444 5445 127 1535 "" [1 uses])

(note 5445 5446 35 127 [bb 127] NOTE_INSN_BASIC_BLOCK)

(insn 35 5445 5447 127 (set (reg/v:SI 191 [ reneg ])
        (const_int 1 [0x1])) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 5447 35 5448 127 (set (pc)
        (label_ref 1234)) -1
     (nil)
 -> 1234)

(barrier 5448 5447 5450)

(code_label 5450 5448 5449 128 1536 "" [1 uses])

(note 5449 5450 36 128 [bb 128] NOTE_INSN_BASIC_BLOCK)

(insn 36 5449 5451 128 (set (reg/v:SI 191 [ reneg ])
        (const_int 1 [0x1])) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 5451 36 5452 128 (set (pc)
        (label_ref 1234)) -1
     (nil)
 -> 1234)

(barrier 5452 5451 5454)

(code_label 5454 5452 5453 129 1537 "" [1 uses])

(note 5453 5454 38 129 [bb 129] NOTE_INSN_BASIC_BLOCK)

(insn 38 5453 5455 129 (set (reg/v:SI 191 [ reneg ])
        (const_int 0 [0])) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 5455 38 5456 129 (set (pc)
        (label_ref 1234)) -1
     (nil)
 -> 1234)

(barrier 5456 5455 5458)

(code_label 5458 5456 5457 130 1538 "" [1 uses])

(note 5457 5458 39 130 [bb 130] NOTE_INSN_BASIC_BLOCK)

(insn 39 5457 1234 130 (set (reg/v:SI 191 [ reneg ])
        (const_int 0 [0])) ./src/include/switch_utils.h:429 -1
     (nil))

(code_label 1234 39 1235 131 1364 "" [9 uses])

(note 1235 1234 1236 131 [bb 131] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1236 1235 1237 131 (var_location:SI reneg (clobber (const_int 0 [0]))) src/switch_core_media.c:3058 -1
     (nil))

(code_label 1237 1236 1238 132 1363 "" [2 uses])

(note 1238 1237 1239 132 [bb 132] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1239 1238 1240 132 (var_location:SI reneg (reg/v:SI 191 [ reneg ])) -1
     (nil))

(insn 1240 1239 1241 132 (set (reg:SI 1281)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 1348 [0x544])) [2 session_161(D)->bugs+0 S4 A32])) src/switch_core_media.c:3062 -1
     (nil))

(insn 1241 1240 1242 132 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1281)
            (const_int 0 [0]))) src/switch_core_media.c:3062 -1
     (nil))

(jump_insn 1242 1241 1243 132 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1266)
            (pc))) src/switch_core_media.c:3062 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 1266)

(note 1243 1242 1244 133 [bb 133] NOTE_INSN_BASIC_BLOCK)

(insn 1244 1243 1245 133 (set (reg:SI 1283)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 966 [0x3c6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 966 [0x3c6])
            ] 29)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1245 1244 1246 133 (set (reg:SI 1282)
        (reg:SI 1283)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1246 1245 1247 133 (set (reg:SI 1285)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 967 [0x3c7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 967 [0x3c7])
            ] 29)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1247 1246 1248 133 (set (reg/f:SI 1284)
        (reg:SI 1285)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1248 1247 1249 133 (set (reg:SI 1287)
        (plus:SI (reg/f:SI 1284)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3063 -1
     (nil))

(insn 1249 1248 1250 133 (set (reg:SI 1286)
        (plus:SI (reg:SI 1287)
            (const_int 8 [0x8]))) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1284)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1250 1249 1251 133 (set (reg:SI 1288)
        (const_int 3063 [0xbf7])) src/switch_core_media.c:3063 -1
     (nil))

(insn 1251 1250 1252 133 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3063 -1
     (nil))

(insn 1252 1251 1253 133 (set (reg:SI 1289)
        (const_int 7 [0x7])) src/switch_core_media.c:3063 -1
     (nil))

(insn 1253 1252 1254 133 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1289)) src/switch_core_media.c:3063 -1
     (nil))

(insn 1254 1253 1255 133 (set (reg:SI 1291)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC315") [flags 0x82]  <var_decl 0x404104e0 *.LC315>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 968 [0x3c8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 968 [0x3c8])
            ] 29)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC315") [flags 0x82]  <var_decl 0x404104e0 *.LC315>)
        (nil)))

(insn 1255 1254 1256 133 (set (reg/f:SI 1290)
        (reg:SI 1291)) src/switch_core_media.c:3063 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC315") [flags 0x82]  <var_decl 0x404104e0 *.LC315>)
        (nil)))

(insn 1256 1255 1257 133 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1290)) src/switch_core_media.c:3063 -1
     (nil))

(insn 1257 1256 1258 133 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3063 -1
     (nil))

(insn 1258 1257 1259 133 (set (reg:SI 1 r1)
        (reg:SI 1282)) src/switch_core_media.c:3063 -1
     (nil))

(insn 1259 1258 1260 133 (set (reg:SI 2 r2)
        (reg:SI 1286)) src/switch_core_media.c:3063 -1
     (nil))

(insn 1260 1259 1261 133 (set (reg:SI 3 r3)
        (reg:SI 1288)) src/switch_core_media.c:3063 -1
     (nil))

(call_insn 1261 1260 1262 133 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3063 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 1262 1261 1263 133 (var_location:SI reneg (const_int 0 [0])) src/switch_core_media.c:3066 -1
     (nil))

(debug_insn 1263 1262 1264 133 (var_location:SI reneg (const_int 0 [0])) -1
     (nil))

(jump_insn 1264 1263 1265 133 (set (pc)
        (label_ref 1271)) src/switch_core_media.c:3063 -1
     (nil)
 -> 1271)

(barrier 1265 1264 1266)

(code_label 1266 1265 1267 134 1365 "" [1 uses])

(note 1267 1266 1268 134 [bb 134] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1268 1267 1269 134 (var_location:SI reneg (reg/v:SI 191 [ reneg ])) -1
     (nil))

(insn 1269 1268 1270 134 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 191 [ reneg ])
            (const_int 0 [0]))) src/switch_core_media.c:3069 -1
     (nil))

(jump_insn 1270 1269 1271 134 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1284)
            (pc))) src/switch_core_media.c:3069 -1
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil))
 -> 1284)

(code_label 1271 1270 1272 135 1366 "" [1 uses])

(note 1272 1271 1273 135 [bb 135] NOTE_INSN_BASIC_BLOCK)

(insn 1273 1272 1274 135 (set (reg:SI 1292)
        (const_int 23532 [0x5bec])) src/switch_core_media.c:3069 -1
     (nil))

(insn 1274 1273 1275 135 (set (reg/v:SI 324 [ total_codecs ])
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1292)) [4 smh_186->num_negotiated_codecs+0 S4 A32])) src/switch_core_media.c:3069 -1
     (nil))

(insn 1275 1274 1276 135 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 324 [ total_codecs ])
            (const_int 0 [0]))) src/switch_core_media.c:3069 -1
     (nil))

(jump_insn 1276 1275 1277 135 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1298)
            (pc))) src/switch_core_media.c:3069 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 1298)

(note 1277 1276 1278 136 [bb 136] NOTE_INSN_BASIC_BLOCK)

(insn 1278 1277 1279 136 (set (reg:SI 1293)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (const_int 23296 [0x5b00]))) src/switch_core_media.c:3070 -1
     (nil))

(insn 1279 1278 1280 136 (set (reg/v/f:SI 193 [ codec_array ])
        (plus:SI (reg:SI 1293)
            (const_int 36 [0x24]))) src/switch_core_media.c:3070 -1
     (expr_list:REG_EQUAL (plus:SI (reg/v/f:SI 233 [ smh ])
            (const_int 23332 [0x5b24]))
        (nil)))

(debug_insn 1280 1279 1281 136 (var_location:SI codec_array (reg/v/f:SI 193 [ codec_array ])) src/switch_core_media.c:3070 -1
     (nil))

(debug_insn 1281 1280 40 136 (var_location:SI total_codecs (reg/v:SI 324 [ total_codecs ])) src/switch_core_media.c:3071 -1
     (nil))

(insn 40 1281 1282 136 (set (reg/v:SI 194 [ total_codecs ])
        (reg/v:SI 324 [ total_codecs ])) src/switch_core_media.c:3071 -1
     (nil))

(jump_insn 1282 40 1283 136 (set (pc)
        (label_ref 1298)) src/switch_core_media.c:3071 -1
     (nil)
 -> 1298)

(barrier 1283 1282 1284)

(code_label 1284 1283 1285 137 1367 "" [1 uses])

(note 1285 1284 1286 137 [bb 137] NOTE_INSN_BASIC_BLOCK)

(insn 1286 1285 1287 137 (set (reg:SI 1295)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3073 -1
     (nil))

(insn 1287 1286 1288 137 (set (reg/f:SI 1294)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1295)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3073 -1
     (nil))

(insn 1288 1287 1289 137 (set (reg:SI 1296)
        (const_int 0 [0])) src/switch_core_media.c:3073 -1
     (nil))

(insn 1289 1288 1290 137 (set (mem/s:SI (plus:SI (reg/f:SI 1294)
                (const_int 128 [0x80])) [4 D.44471_362->num_codecs+0 S4 A32])
        (reg:SI 1296)) src/switch_core_media.c:3073 -1
     (nil))

(insn 1290 1289 1291 137 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3074 -1
     (nil))

(insn 1291 1290 1292 137 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3074 -1
     (nil))

(call_insn 1292 1291 1293 137 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_media_prepare_codecs") [flags 0x1]  <function_decl 0x40951380 switch_core_media_prepare_codecs>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3074 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(debug_insn 1293 1292 1294 137 (var_location:SI codec_array (reg/v/f:SI 193 [ codec_array ])) src/switch_core_media.c:3075 -1
     (nil))

(insn 1294 1293 1295 137 (set (reg:SI 1298)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3076 -1
     (nil))

(insn 1295 1294 1296 137 (set (reg/f:SI 1297)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1298)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3076 -1
     (nil))

(insn 1296 1295 1297 137 (set (reg/v:SI 194 [ total_codecs ])
        (mem/s:SI (plus:SI (reg/f:SI 1297)
                (const_int 128 [0x80])) [4 D.44471_364->num_codecs+0 S4 A32])) src/switch_core_media.c:3076 -1
     (nil))

(debug_insn 1297 1296 1298 137 (var_location:SI total_codecs (reg/v:SI 194 [ total_codecs ])) src/switch_core_media.c:3076 -1
     (nil))

(code_label 1298 1297 1299 138 1368 "" [2 uses])

(note 1299 1298 1300 138 [bb 138] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1300 1299 1301 138 (var_location:SI total_codecs (reg/v:SI 194 [ total_codecs ])) -1
     (nil))

(debug_insn 1301 1300 1302 138 (var_location:SI codec_array (reg/v/f:SI 193 [ codec_array ])) -1
     (nil))

(insn 1302 1301 1303 138 (set (reg:SI 1300)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC316") [flags 0x82]  <var_decl 0x40410540 *.LC316>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 969 [0x3c9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 969 [0x3c9])
            ] 29)) src/switch_core_media.c:3079 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC316") [flags 0x82]  <var_decl 0x40410540 *.LC316>)
        (nil)))

(insn 1303 1302 1304 138 (set (reg:SI 1299)
        (reg:SI 1300)) src/switch_core_media.c:3079 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC316") [flags 0x82]  <var_decl 0x40410540 *.LC316>)
        (nil)))

(insn 1304 1303 1305 138 (set (reg:SI 0 r0)
        (reg:SI 1299)) src/switch_core_media.c:3079 -1
     (nil))

(insn 1305 1304 1306 138 (set (reg:SI 1 r1)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:3079 -1
     (nil))

(call_insn 1306 1305 1307 138 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_stristr") [flags 0x41]  <function_decl 0x40815080 switch_stristr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3079 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1307 1306 1308 138 (set (reg/f:SI 328 [ D.44661 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3079 -1
     (nil))

(insn 1308 1307 1309 138 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 328 [ D.44661 ])
            (const_int 0 [0]))) src/switch_core_media.c:3079 -1
     (nil))

(jump_insn 1309 1308 1310 138 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1328)
            (pc))) src/switch_core_media.c:3079 -1
     (expr_list:REG_BR_PROB (const_int 8501 [0x2135])
        (nil))
 -> 1328)

(note 1310 1309 1311 139 [bb 139] NOTE_INSN_BASIC_BLOCK)

(insn 1311 1310 1312 139 (set (reg:SI 1302)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC317") [flags 0x82]  <var_decl 0x404105a0 *.LC317>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 970 [0x3ca])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 970 [0x3ca])
            ] 29)) src/switch_core_media.c:3079 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC317") [flags 0x82]  <var_decl 0x404105a0 *.LC317>)
        (nil)))

(insn 1312 1311 1313 139 (set (reg:SI 1301)
        (reg:SI 1302)) src/switch_core_media.c:3079 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC317") [flags 0x82]  <var_decl 0x404105a0 *.LC317>)
        (nil)))

(insn 1313 1312 1314 139 (set (reg:SI 0 r0)
        (reg:SI 1301)) src/switch_core_media.c:3079 -1
     (nil))

(insn 1314 1313 1315 139 (set (reg:SI 1 r1)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:3079 -1
     (nil))

(call_insn 1315 1314 1316 139 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_stristr") [flags 0x41]  <function_decl 0x40815080 switch_stristr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3079 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1316 1315 1317 139 (set (reg/f:SI 329 [ D.44663 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3079 -1
     (nil))

(insn 1317 1316 1318 139 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 329 [ D.44663 ])
            (const_int 0 [0]))) src/switch_core_media.c:3079 -1
     (nil))

(jump_insn 1318 1317 1319 139 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1328)
            (pc))) src/switch_core_media.c:3079 -1
     (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil))
 -> 1328)

(note 1319 1318 1320 140 [bb 140] NOTE_INSN_BASIC_BLOCK)

(insn 1320 1319 1321 140 (set (reg:SI 1304)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC318") [flags 0x82]  <var_decl 0x40410660 *.LC318>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 971 [0x3cb])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 971 [0x3cb])
            ] 29)) src/switch_core_media.c:3080 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC318") [flags 0x82]  <var_decl 0x40410660 *.LC318>)
        (nil)))

(insn 1321 1320 1322 140 (set (reg:SI 1303)
        (reg:SI 1304)) src/switch_core_media.c:3080 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC318") [flags 0x82]  <var_decl 0x40410660 *.LC318>)
        (nil)))

(insn 1322 1321 1323 140 (set (reg:SI 0 r0)
        (reg:SI 1303)) src/switch_core_media.c:3080 -1
     (nil))

(insn 1323 1322 1324 140 (set (reg:SI 1 r1)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:3080 -1
     (nil))

(call_insn 1324 1323 1325 140 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_stristr") [flags 0x41]  <function_decl 0x40815080 switch_stristr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3080 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1325 1324 1326 140 (set (reg/f:SI 330 [ D.44665 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3080 -1
     (nil))

(insn 1326 1325 1327 140 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 330 [ D.44665 ])
            (const_int 0 [0]))) src/switch_core_media.c:3079 -1
     (nil))

(jump_insn 1327 1326 1328 140 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1340)
            (pc))) src/switch_core_media.c:3079 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 1340)

(code_label 1328 1327 1329 141 1369 "" [2 uses])

(note 1329 1328 1330 141 [bb 141] NOTE_INSN_BASIC_BLOCK)

(insn 1330 1329 1331 141 (set (reg:SI 1305)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3081 -1
     (nil))

(insn 1331 1330 1332 141 (set (reg:SI 1307)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 972 [0x3cc])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 972 [0x3cc])
            ] 29)) src/switch_core_media.c:3081 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1332 1331 1333 141 (set (reg:SI 1306)
        (reg:SI 1307)) src/switch_core_media.c:3081 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1333 1332 1334 141 (set (reg:SI 1309)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 973 [0x3cd])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 973 [0x3cd])
            ] 29)) src/switch_core_media.c:3081 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1334 1333 1335 141 (set (reg:SI 1308)
        (reg:SI 1309)) src/switch_core_media.c:3081 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1335 1334 1336 141 (set (reg:SI 0 r0)
        (reg:SI 1305)) src/switch_core_media.c:3081 -1
     (nil))

(insn 1336 1335 1337 141 (set (reg:SI 1 r1)
        (reg:SI 1306)) src/switch_core_media.c:3081 -1
     (nil))

(insn 1337 1336 1338 141 (set (reg:SI 2 r2)
        (reg:SI 1308)) src/switch_core_media.c:3081 -1
     (nil))

(insn 1338 1337 1339 141 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3081 -1
     (nil))

(call_insn 1339 1338 1340 141 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3081 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(code_label 1340 1339 1341 142 1370 "" [1 uses])

(note 1341 1340 1342 142 [bb 142] NOTE_INSN_BASIC_BLOCK)

(insn 1342 1341 1343 142 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3084 -1
     (nil))

(insn 1343 1342 1344 142 (set (reg:SI 1 r1)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3084 -1
     (nil))

(call_insn 1344 1343 1345 142 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_media_find_zrtp_hash") [flags 0x3]  <function_decl 0x41463000 switch_core_media_find_zrtp_hash>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3084 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1345 1344 1346 142 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3085 -1
     (nil))

(call_insn 1346 1345 1347 142 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_media_pass_zrtp_hash") [flags 0x1]  <function_decl 0x40945680 switch_core_media_pass_zrtp_hash>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3085 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1347 1346 1348 142 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3087 -1
     (nil))

(insn 1348 1347 1349 142 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3087 -1
     (nil))

(insn 1349 1348 1350 142 (set (reg:SI 2 r2)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3087 -1
     (nil))

(insn 1350 1349 1351 142 (set (reg:SI 3 r3)
        (const_int 0 [0])) src/switch_core_media.c:3087 -1
     (nil))

(call_insn 1351 1350 1352 142 (parallel [
            (call (mem:SI (symbol_ref:SI ("check_ice") [flags 0x3]  <function_decl 0x414f3a00 check_ice>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3087 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1352 1351 1353 142 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3088 -1
     (nil))

(insn 1353 1352 1354 142 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) src/switch_core_media.c:3088 -1
     (nil))

(insn 1354 1353 1355 142 (set (reg:SI 2 r2)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3088 -1
     (nil))

(insn 1355 1354 1356 142 (set (reg:SI 3 r3)
        (const_int 0 [0])) src/switch_core_media.c:3088 -1
     (nil))

(call_insn 1356 1355 1357 142 (parallel [
            (call (mem:SI (symbol_ref:SI ("check_ice") [flags 0x3]  <function_decl 0x414f3a00 check_ice>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3088 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1357 1356 1358 142 (set (reg/v/f:SI 813 [ m ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 60 [0x3c])) [2 sdp_198->sdp_media+0 S4 A32])) src/switch_core_media.c:3091 -1
     (nil))

(debug_insn 1358 1357 1359 142 (var_location:SI m (reg/v/f:SI 813 [ m ])) src/switch_core_media.c:3091 -1
     (nil))

(debug_insn 1359 1358 1360 142 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))

(debug_insn 1360 1359 1361 142 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))

(debug_insn 1361 1360 1362 142 (var_location:SI codec_ms (const_int 0 [0])) -1
     (nil))

(debug_insn 1362 1361 1363 142 (var_location:SI got_webrtc (const_int 0 [0])) -1
     (nil))

(debug_insn 1363 1362 1364 142 (var_location:SI got_udptl (const_int 0 [0])) -1
     (nil))

(debug_insn 1364 1363 1365 142 (var_location:SI got_savp (const_int 0 [0])) -1
     (nil))

(debug_insn 1365 1364 1366 142 (var_location:SI got_video_savp (clobber (const_int 0 [0]))) -1
     (nil))

(debug_insn 1366 1365 1367 142 (var_location:SI got_video_avp (clobber (const_int 0 [0]))) -1
     (nil))

(debug_insn 1367 1366 1368 142 (var_location:SI got_avp (const_int 0 [0])) -1
     (nil))

(debug_insn 1368 1367 1369 142 (var_location:SI got_audio (const_int 0 [0])) -1
     (nil))

(debug_insn 1369 1368 1370 142 (var_location:SI got_video_crypto (const_int 0 [0])) -1
     (nil))

(debug_insn 1370 1369 1371 142 (var_location:SI got_crypto (const_int 0 [0])) -1
     (nil))

(debug_insn 1371 1370 1372 142 (var_location:SI m (reg/v/f:SI 813 [ m ])) -1
     (nil))

(debug_insn 1372 1371 1373 142 (var_location:QI cng_pt (const_int 0 [0])) -1
     (nil))

(debug_insn 1373 1372 1374 142 (var_location:QI best_te (const_int 0 [0])) -1
     (nil))

(debug_insn 1374 1373 1375 142 (var_location:QI match (const_int 0 [0])) -1
     (nil))

(insn 1375 1374 1376 142 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 813 [ m ])
            (const_int 0 [0]))) src/switch_core_media.c:3091 -1
     (nil))

(jump_insn 1376 1375 5459 142 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5464)
            (pc))) src/switch_core_media.c:3091 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 200 [0xc8])
        (nil))
 -> 5464)

(note 5459 1376 41 143 [bb 143] NOTE_INSN_BASIC_BLOCK)

(insn 41 5459 42 143 (set (reg/v:SI 211 [ nm_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 42 41 43 143 (set (reg/v:SI 202 [ m_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 43 42 44 143 (set (reg/v:SI 196 [ codec_ms ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 44 43 45 143 (set (reg/v:SI 188 [ got_webrtc ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 45 44 46 143 (set (reg/v:SI 1011 [ got_udptl ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 46 45 47 143 (set (reg/v:SI 445 [ got_savp ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 47 46 48 143 (set (reg/v:SI 544 [ got_avp ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 48 47 49 143 (set (reg/v:SI 183 [ got_audio ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 49 48 50 143 (set (reg/v:SI 179 [ got_video_crypto ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 50 49 51 143 (set (reg/v:SI 175 [ got_crypto ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 51 50 52 143 (set (reg/v:SI 149 [ cng_pt ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 52 51 53 143 (set (reg/v:SI 145 [ best_te ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(insn 53 52 5124 143 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:3091 -1
     (nil))

(code_label 5124 53 1377 144 1506 "" [1 uses])

(note 1377 5124 1378 144 [bb 144] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1378 1377 1379 144 (var_location:SI ptime (reg/v:SI 160 [ dptime ])) src/switch_core_media.c:3095 -1
     (nil))

(debug_insn 1379 1378 1380 144 (var_location:SI maxptime (reg/v:SI 164 [ dmaxptime ])) src/switch_core_media.c:3096 -1
     (nil))

(insn 1380 1379 1381 144 (set (reg:SI 1310)
        (const_int 261 [0x105])) src/switch_core_media.c:3098 -1
     (nil))

(insn 1381 1380 1382 144 (set (reg:SI 1311)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 28 [0x1c])) [44 m_1764->m_proto+0 S4 A32])) src/switch_core_media.c:3098 -1
     (nil))

(insn 1382 1381 1383 144 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1311)
            (reg:SI 1310))) src/switch_core_media.c:3098 -1
     (nil))

(jump_insn 1383 1382 1384 144 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1389)
            (pc))) src/switch_core_media.c:3098 -1
     (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil))
 -> 1389)

(note 1384 1383 1385 145 [bb 145] NOTE_INSN_BASIC_BLOCK)

(insn 1385 1384 1386 145 (set (reg/v:SI 188 [ got_webrtc ])
        (plus:SI (reg/v:SI 188 [ got_webrtc ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3099 -1
     (nil))

(debug_insn 1386 1385 1387 145 (var_location:SI got_webrtc (reg/v:SI 188 [ got_webrtc ])) src/switch_core_media.c:3099 -1
     (nil))

(insn 1387 1386 1388 145 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3100 -1
     (nil))

(call_insn 1388 1387 1389 145 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_session_set_ice") [flags 0x1]  <function_decl 0x40951e80 switch_core_session_set_ice>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3100 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(code_label 1389 1388 1390 146 1372 "" [1 uses])

(note 1390 1389 1391 146 [bb 146] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1391 1390 1392 146 (var_location:SI got_webrtc (reg/v:SI 188 [ got_webrtc ])) -1
     (nil))

(insn 1392 1391 1393 146 (set (reg/f:SI 333 [ D.44669 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 32 [0x20])) [2 m_1764->m_proto_name+0 S4 A32])) src/switch_core_media.c:3103 -1
     (nil))

(insn 1393 1392 1394 146 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 333 [ D.44669 ])
            (const_int 0 [0]))) src/switch_core_media.c:3103 -1
     (nil))

(jump_insn 1394 1393 1395 146 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1410)
            (pc))) src/switch_core_media.c:3103 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 1410)

(note 1395 1394 1396 147 [bb 147] NOTE_INSN_BASIC_BLOCK)

(insn 1396 1395 1397 147 (set (reg:SI 1313)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC66") [flags 0x82]  <var_decl 0x41e61c00 *.LC66>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 974 [0x3ce])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 974 [0x3ce])
            ] 29)) src/switch_core_media.c:3103 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC66") [flags 0x82]  <var_decl 0x41e61c00 *.LC66>)
        (nil)))

(insn 1397 1396 1398 147 (set (reg:SI 1312)
        (reg:SI 1313)) src/switch_core_media.c:3103 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC66") [flags 0x82]  <var_decl 0x41e61c00 *.LC66>)
        (nil)))

(insn 1398 1397 1399 147 (set (reg:SI 0 r0)
        (reg/f:SI 333 [ D.44669 ])) src/switch_core_media.c:3103 -1
     (nil))

(insn 1399 1398 1400 147 (set (reg:SI 1 r1)
        (reg:SI 1312)) src/switch_core_media.c:3103 -1
     (nil))

(call_insn/i 1400 1399 1401 147 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3103 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1401 1400 1402 147 (set (reg:SI 334 [ D.44672 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3103 -1
     (nil))

(insn 1402 1401 1403 147 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 334 [ D.44672 ])
            (const_int 0 [0]))) src/switch_core_media.c:3103 -1
     (nil))

(jump_insn 1403 1402 1404 147 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1410)
            (pc))) src/switch_core_media.c:3103 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 1410)

(note 1404 1403 1405 148 [bb 148] NOTE_INSN_BASIC_BLOCK)

(insn 1405 1404 1406 148 (set (reg:SI 1314)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3104 -1
     (nil))

(insn 1406 1405 1407 148 (set (reg:SI 0 r0)
        (reg:SI 1314)) src/switch_core_media.c:3104 -1
     (nil))

(insn 1407 1406 1408 148 (set (reg:SI 1 r1)
        (const_int 107 [0x6b])) src/switch_core_media.c:3104 -1
     (nil))

(insn 1408 1407 1409 148 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3104 -1
     (nil))

(call_insn 1409 1408 1410 148 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_set_flag_value") [flags 0x41]  <function_decl 0x40846900 switch_channel_set_flag_value>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3104 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(code_label 1410 1409 1411 149 1373 "" [2 uses])

(note 1411 1410 1412 149 [bb 149] NOTE_INSN_BASIC_BLOCK)

(insn 1412 1411 1413 149 (set (reg:SI 336 [ D.44675 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 28 [0x1c])) [44 m_1764->m_proto+0 S4 A32])) src/switch_core_media.c:3107 -1
     (nil))

(insn 1413 1412 1414 149 (set (reg:SI 1317)
        (const_int 261 [0x105])) src/switch_core_media.c:3107 -1
     (nil))

(insn 1414 1413 1415 149 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 336 [ D.44675 ])
            (reg:SI 1317))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1415 1414 1416 149 (set (reg:SI 1316)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1416 1415 1417 149 (set (reg:QI 1315)
        (subreg:QI (reg:SI 1316) 0)) src/switch_core_media.c:3107 -1
     (nil))

(insn 1417 1416 1418 149 (set (reg:SI 1320)
        (const_int 257 [0x101])) src/switch_core_media.c:3107 -1
     (nil))

(insn 1418 1417 1419 149 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 336 [ D.44675 ])
            (reg:SI 1320))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1419 1418 1420 149 (set (reg:SI 1319)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1420 1419 1421 149 (set (reg:QI 1318)
        (subreg:QI (reg:SI 1319) 0)) src/switch_core_media.c:3107 -1
     (nil))

(insn 1421 1420 1422 149 (set (reg:SI 1321)
        (ior:SI (subreg:SI (reg:QI 1315) 0)
            (subreg:SI (reg:QI 1318) 0))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1422 1421 1423 149 (set (reg:QI 1322)
        (subreg:QI (reg:SI 1321) 0)) src/switch_core_media.c:3107 -1
     (nil))

(insn 1423 1422 1424 149 (set (reg:SI 1323)
        (zero_extend:SI (reg:QI 1322))) src/switch_core_media.c:3107 -1
     (nil))

(insn 1424 1423 1425 149 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1323)
            (const_int 0 [0]))) src/switch_core_media.c:3107 -1
     (nil))

(jump_insn 1425 1424 1426 149 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1435)
            (pc))) src/switch_core_media.c:3107 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 1435)

(note 1426 1425 1427 150 [bb 150] NOTE_INSN_BASIC_BLOCK)

(insn 1427 1426 1428 150 (set (reg:SI 979 [ prephitmp.1049 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 12 [0xc])) [43 m_1764->m_type+0 S4 A32])) src/switch_core_media.c:3108 -1
     (nil))

(insn 1428 1427 1429 150 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 979 [ prephitmp.1049 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3108 -1
     (nil))

(jump_insn 1429 1428 1430 150 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1469)
            (pc))) src/switch_core_media.c:3108 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 1469)

(note 1430 1429 1431 151 [bb 151] NOTE_INSN_BASIC_BLOCK)

(insn 1431 1430 1432 151 (set (reg/v:SI 445 [ got_savp ])
        (plus:SI (reg/v:SI 445 [ got_savp ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3109 -1
     (nil))

(debug_insn 1432 1431 1433 151 (var_location:SI got_savp (reg/v:SI 445 [ got_savp ])) src/switch_core_media.c:3109 -1
     (nil))

(jump_insn 1433 1432 1434 151 (set (pc)
        (label_ref 1469)) src/switch_core_media.c:3109 -1
     (nil)
 -> 1469)

(barrier 1434 1433 1435)

(code_label 1435 1434 1436 152 1374 "" [1 uses])

(note 1436 1435 1437 152 [bb 152] NOTE_INSN_BASIC_BLOCK)

(insn 1437 1436 1438 152 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 336 [ D.44675 ])
            (const_int 256 [0x100]))) src/switch_core_media.c:3113 -1
     (nil))

(jump_insn 1438 1437 1439 152 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1448)
            (pc))) src/switch_core_media.c:3113 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 1448)

(note 1439 1438 1440 153 [bb 153] NOTE_INSN_BASIC_BLOCK)

(insn 1440 1439 1441 153 (set (reg:SI 979 [ prephitmp.1049 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 12 [0xc])) [43 m_1764->m_type+0 S4 A32])) src/switch_core_media.c:3114 -1
     (nil))

(insn 1441 1440 1442 153 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 979 [ prephitmp.1049 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3114 -1
     (nil))

(jump_insn 1442 1441 1443 153 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1469)
            (pc))) src/switch_core_media.c:3114 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 1469)

(note 1443 1442 1444 154 [bb 154] NOTE_INSN_BASIC_BLOCK)

(insn 1444 1443 1445 154 (set (reg/v:SI 544 [ got_avp ])
        (plus:SI (reg/v:SI 544 [ got_avp ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3115 -1
     (nil))

(debug_insn 1445 1444 1446 154 (var_location:SI got_avp (reg/v:SI 544 [ got_avp ])) src/switch_core_media.c:3115 -1
     (nil))

(jump_insn 1446 1445 1447 154 (set (pc)
        (label_ref 1469)) src/switch_core_media.c:3115 -1
     (nil)
 -> 1469)

(barrier 1447 1446 1448)

(code_label 1448 1447 1449 155 1376 "" [1 uses])

(note 1449 1448 1450 155 [bb 155] NOTE_INSN_BASIC_BLOCK)

(insn 1450 1449 1451 155 (set (reg:SI 1324)
        (const_int 258 [0x102])) src/switch_core_media.c:3119 -1
     (nil))

(insn 1451 1450 1452 155 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 336 [ D.44675 ])
            (reg:SI 1324))) src/switch_core_media.c:3119 -1
     (nil))

(jump_insn 1452 1451 1453 155 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1457)
            (pc))) src/switch_core_media.c:3119 -1
     (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil))
 -> 1457)

(note 1453 1452 1454 156 [bb 156] NOTE_INSN_BASIC_BLOCK)

(insn 1454 1453 1455 156 (set (reg:SI 979 [ prephitmp.1049 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 12 [0xc])) [43 m_1764->m_type+0 S4 A32])) src/switch_core_media.c:3119 -1
     (nil))

(jump_insn 1455 1454 1456 156 (set (pc)
        (label_ref 1469)) src/switch_core_media.c:3119 -1
     (nil)
 -> 1469)

(barrier 1456 1455 1457)

(code_label 1457 1456 1458 157 1377 "" [1 uses])

(note 1458 1457 1459 157 [bb 157] NOTE_INSN_BASIC_BLOCK)

(insn 1459 1458 1460 157 (set (reg/v:SI 1011 [ got_udptl ])
        (plus:SI (reg/v:SI 1011 [ got_udptl ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3120 -1
     (nil))

(debug_insn 1460 1459 1461 157 (var_location:SI got_udptl (reg/v:SI 1011 [ got_udptl ])) src/switch_core_media.c:3120 -1
     (nil))

(debug_insn 1461 1460 1462 157 (var_location:SI got_udptl (reg/v:SI 1011 [ got_udptl ])) -1
     (nil))

(debug_insn 1462 1461 1463 157 (var_location:SI got_savp (reg/v:SI 445 [ got_savp ])) -1
     (nil))

(debug_insn 1463 1462 1464 157 (var_location:SI got_video_savp (clobber (const_int 0 [0]))) -1
     (nil))

(debug_insn 1464 1463 1465 157 (var_location:SI got_video_avp (clobber (const_int 0 [0]))) -1
     (nil))

(debug_insn 1465 1464 1466 157 (var_location:SI got_avp (reg/v:SI 544 [ got_avp ])) -1
     (nil))

(insn 1466 1465 1467 157 (set (reg:SI 979 [ prephitmp.1049 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 12 [0xc])) [43 m_1764->m_type+0 S4 A32])) src/switch_core_media.c:3120 -1
     (nil))

(jump_insn 1467 1466 1468 157 (set (pc)
        (label_ref 1478)) src/switch_core_media.c:3120 -1
     (nil)
 -> 1478)

(barrier 1468 1467 1469)

(code_label 1469 1468 1470 158 1375 "" [5 uses])

(note 1470 1469 1471 158 [bb 158] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1471 1470 1472 158 (var_location:SI got_udptl (reg/v:SI 1011 [ got_udptl ])) -1
     (nil))

(debug_insn 1472 1471 1473 158 (var_location:SI got_savp (reg/v:SI 445 [ got_savp ])) -1
     (nil))

(debug_insn 1473 1472 1474 158 (var_location:SI got_video_savp (clobber (const_int 0 [0]))) -1
     (nil))

(debug_insn 1474 1473 1475 158 (var_location:SI got_video_avp (clobber (const_int 0 [0]))) -1
     (nil))

(debug_insn 1475 1474 1476 158 (var_location:SI got_avp (reg/v:SI 544 [ got_avp ])) -1
     (nil))

(insn 1476 1475 1477 158 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 1011 [ got_udptl ])
            (const_int 0 [0]))) src/switch_core_media.c:3123 -1
     (nil))

(jump_insn 1477 1476 1478 158 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2050)
            (pc))) src/switch_core_media.c:3123 -1
     (expr_list:REG_BR_PROB (const_int 5557 [0x15b5])
        (nil))
 -> 2050)

(code_label 1478 1477 1479 159 1378 "" [1 uses])

(note 1479 1478 1480 159 [bb 159] NOTE_INSN_BASIC_BLOCK)

(insn 1480 1479 1481 159 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 979 [ prephitmp.1049 ])
            (const_int 8 [0x8]))) src/switch_core_media.c:3123 -1
     (nil))

(jump_insn 1481 1480 1482 159 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2050)
            (pc))) src/switch_core_media.c:3123 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 2050)

(note 1482 1481 1483 160 [bb 160] NOTE_INSN_BASIC_BLOCK)

(insn 1483 1482 1484 160 (set (reg:SI 1325)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 20 [0x14])) [26 m_1764->m_port+0 S4 A32])) src/switch_core_media.c:3123 -1
     (nil))

(insn 1484 1483 1485 160 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1325)
            (const_int 0 [0]))) src/switch_core_media.c:3123 -1
     (nil))

(jump_insn 1485 1484 1486 160 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5095)
            (pc))) src/switch_core_media.c:3123 -1
     (expr_list:REG_BR_PROB (const_int 9800 [0x2648])
        (nil))
 -> 5095)

(note 1486 1485 1487 161 [bb 161] NOTE_INSN_BASIC_BLOCK)

(insn 1487 1486 1488 161 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3124 -1
     (nil))

(insn 1488 1487 1489 161 (set (reg:SI 1 r1)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3124 -1
     (nil))

(insn 1489 1488 1490 161 (set (reg:SI 2 r2)
        (reg/v/f:SI 813 [ m ])) src/switch_core_media.c:3124 -1
     (nil))

(call_insn 1490 1489 1491 161 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_process_udptl") [flags 0x3]  <function_decl 0x41455f80 switch_core_media_process_udptl>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3124 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1491 1490 1492 161 (set (reg/v/f:SI 342 [ t38_options ])
        (reg:SI 0 r0)) src/switch_core_media.c:3124 -1
     (nil))

(debug_insn 1492 1491 1493 161 (var_location:SI t38_options (reg/v/f:SI 342 [ t38_options ])) src/switch_core_media.c:3124 -1
     (nil))

(insn 1493 1492 1494 161 (set (reg:SI 1327)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 975 [0x3cf])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 975 [0x3cf])
            ] 29)) src/switch_core_media.c:3126 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1494 1493 1495 161 (set (reg:SI 1326)
        (reg:SI 1327)) src/switch_core_media.c:3126 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1495 1494 1496 161 (set (reg:SI 1328)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3126 -1
     (nil))

(insn 1496 1495 1497 161 (set (reg:SI 0 r0)
        (reg:SI 1326)) src/switch_core_media.c:3126 -1
     (nil))

(insn 1497 1496 1498 161 (set (reg:SI 1 r1)
        (reg:SI 1328)) src/switch_core_media.c:3126 -1
     (nil))

(insn 1498 1497 1499 161 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) src/switch_core_media.c:3126 -1
     (nil))

(call_insn 1499 1498 1500 161 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_app_flag_key") [flags 0x41]  <function_decl 0x4085b400 switch_channel_test_app_flag_key>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3126 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1500 1499 1501 161 (set (reg:SI 344 [ D.44699 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3126 -1
     (nil))

(insn 1501 1500 1502 161 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 344 [ D.44699 ])
            (const_int 0 [0]))) src/switch_core_media.c:3126 -1
     (nil))

(jump_insn 1502 1501 1503 161 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5468)
            (pc))) src/switch_core_media.c:3126 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5468)

(note 1503 1502 1504 162 [bb 162] NOTE_INSN_BASIC_BLOCK)

(insn 1504 1503 1505 162 (set (reg:SI 1330)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC320") [flags 0x82]  <var_decl 0x40410720 *.LC320>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 976 [0x3d0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 976 [0x3d0])
            ] 29)) src/switch_core_media.c:3131 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC320") [flags 0x82]  <var_decl 0x40410720 *.LC320>)
        (nil)))

(insn 1505 1504 1506 162 (set (reg:SI 1329)
        (reg:SI 1330)) src/switch_core_media.c:3131 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC320") [flags 0x82]  <var_decl 0x40410720 *.LC320>)
        (nil)))

(insn 1506 1505 1507 162 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:3131 -1
     (nil))

(insn 1507 1506 1508 162 (set (reg:SI 1 r1)
        (reg:SI 1329)) src/switch_core_media.c:3131 -1
     (nil))

(insn 1508 1507 1509 162 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3131 -1
     (nil))

(insn 1509 1508 1510 162 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3131 -1
     (nil))

(call_insn 1510 1509 1511 162 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3131 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1511 1510 1512 162 (set (reg/f:SI 345 [ D.44702 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3131 -1
     (nil))

(insn 1512 1511 1513 162 (set (reg:SI 0 r0)
        (reg/f:SI 345 [ D.44702 ])) src/switch_core_media.c:3131 -1
     (nil))

(call_insn 1513 1512 1514 162 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_true") [flags 0x3]  <function_decl 0x407e7f80 switch_true>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3131 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1514 1513 1515 162 (set (reg:SI 346 [ D.44703 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3131 -1
     (nil))

(insn 1515 1514 1516 162 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 346 [ D.44703 ])
            (const_int 0 [0]))) src/switch_core_media.c:3131 -1
     (nil))

(jump_insn 1516 1515 1517 162 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1528)
            (pc))) src/switch_core_media.c:3131 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 1528)

(note 1517 1516 1518 163 [bb 163] NOTE_INSN_BASIC_BLOCK)

(insn 1518 1517 1519 163 (set (reg:SI 1332)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 977 [0x3d1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 977 [0x3d1])
            ] 29)) src/switch_core_media.c:3132 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1519 1518 1520 163 (set (reg:SI 1331)
        (reg:SI 1332)) src/switch_core_media.c:3132 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1520 1519 1521 163 (set (reg:SI 1333)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3132 -1
     (nil))

(insn 1521 1520 1522 163 (set (reg:SI 0 r0)
        (reg:SI 1331)) src/switch_core_media.c:3132 -1
     (nil))

(insn 1522 1521 1523 163 (set (reg:SI 1 r1)
        (reg:SI 1333)) src/switch_core_media.c:3132 -1
     (nil))

(insn 1523 1522 1524 163 (set (reg:SI 2 r2)
        (const_int 2 [0x2])) src/switch_core_media.c:3132 -1
     (nil))

(call_insn 1524 1523 1525 163 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_clear_app_flag_key") [flags 0x41]  <function_decl 0x4085b380 switch_channel_clear_app_flag_key>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3132 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(debug_insn 1525 1524 127 163 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3133 -1
     (nil))

(insn 127 1525 1526 163 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:3133 -1
     (nil))

(jump_insn 1526 127 1527 163 (set (pc)
        (label_ref 5127)) src/switch_core_media.c:3134 -1
     (nil)
 -> 5127)

(barrier 1527 1526 1528)

(code_label 1528 1527 1529 164 1381 "" [1 uses])

(note 1529 1528 1530 164 [bb 164] NOTE_INSN_BASIC_BLOCK)

(insn 1530 1529 1531 164 (set (reg:SI 1335)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC321") [flags 0x82]  <var_decl 0x40410780 *.LC321>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 978 [0x3d2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 978 [0x3d2])
            ] 29)) src/switch_core_media.c:3136 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC321") [flags 0x82]  <var_decl 0x40410780 *.LC321>)
        (nil)))

(insn 1531 1530 1532 164 (set (reg:SI 1334)
        (reg:SI 1335)) src/switch_core_media.c:3136 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC321") [flags 0x82]  <var_decl 0x40410780 *.LC321>)
        (nil)))

(insn 1532 1531 1533 164 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:3136 -1
     (nil))

(insn 1533 1532 1534 164 (set (reg:SI 1 r1)
        (reg:SI 1334)) src/switch_core_media.c:3136 -1
     (nil))

(insn 1534 1533 1535 164 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3136 -1
     (nil))

(insn 1535 1534 1536 164 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3136 -1
     (nil))

(call_insn 1536 1535 1537 164 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3136 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1537 1536 1538 164 (set (reg/v/f:SI 348 [ var ])
        (reg:SI 0 r0)) src/switch_core_media.c:3136 -1
     (nil))

(debug_insn 1538 1537 1539 164 (var_location:SI var (reg/v/f:SI 348 [ var ])) src/switch_core_media.c:3136 -1
     (nil))

(insn 1539 1538 1540 164 (set (reg/f:SI 1336)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:3137 -1
     (nil))

(insn 1540 1539 1541 164 (set (reg:SI 1337)
        (mem/s/f:SI (plus:SI (reg/f:SI 1336)
                (const_int 24 [0x18])) [2 D.44481_403->channel+0 S4 A32])) src/switch_core_media.c:3137 -1
     (nil))

(insn 1541 1540 1542 164 (set (reg:SI 0 r0)
        (reg:SI 1337)) src/switch_core_media.c:3137 -1
     (nil))

(insn 1542 1541 1543 164 (set (reg:SI 1 r1)
        (const_int 101 [0x65])) src/switch_core_media.c:3137 -1
     (nil))

(call_insn 1543 1542 1544 164 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3137 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1544 1543 1545 164 (set (reg:SI 351 [ D.44706 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3137 -1
     (nil))

(debug_insn 1545 1544 1546 164 (var_location:SI pass (reg:SI 351 [ D.44706 ])) src/switch_core_media.c:3137 -1
     (nil))

(insn 1546 1545 1547 164 (set (reg:SI 1339)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 979 [0x3d3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 979 [0x3d3])
            ] 29)) src/switch_core_media.c:3140 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1547 1546 1548 164 (set (reg:SI 1338)
        (reg:SI 1339)) src/switch_core_media.c:3140 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC63") [flags 0x82]  <var_decl 0x41e616c0 *.LC63>)
        (nil)))

(insn 1548 1547 1549 164 (set (reg:SI 1340)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3140 -1
     (nil))

(insn 1549 1548 1550 164 (set (reg:SI 0 r0)
        (reg:SI 1338)) src/switch_core_media.c:3140 -1
     (nil))

(insn 1550 1549 1551 164 (set (reg:SI 1 r1)
        (reg:SI 1340)) src/switch_core_media.c:3140 -1
     (nil))

(insn 1551 1550 1552 164 (set (reg:SI 2 r2)
        (const_int 2 [0x2])) src/switch_core_media.c:3140 -1
     (nil))

(call_insn 1552 1551 1553 164 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_app_flag_key") [flags 0x41]  <function_decl 0x4085b400 switch_channel_test_app_flag_key>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3140 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1553 1552 1554 164 (set (reg:SI 353 [ D.44707 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3140 -1
     (nil))

(insn 1554 1553 1555 164 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 353 [ D.44707 ])
            (const_int 0 [0]))) src/switch_core_media.c:3140 -1
     (nil))

(jump_insn 1555 1554 1556 164 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1563)
            (pc))) src/switch_core_media.c:3140 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 1563)

(note 1556 1555 1557 165 [bb 165] NOTE_INSN_BASIC_BLOCK)

(insn 1557 1556 1558 165 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 1027 [ proceed ])
            (const_int 0 [0]))) src/switch_core_media.c:3141 -1
     (nil))

(jump_insn 1558 1557 1559 165 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1563)
            (pc))) src/switch_core_media.c:3141 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 1563)

(note 1559 1558 1560 166 [bb 166] NOTE_INSN_BASIC_BLOCK)

(insn 1560 1559 1561 166 (set (reg:SI 1341)
        (const_int 0 [0])) src/switch_core_media.c:3141 -1
     (nil))

(insn 1561 1560 1562 166 (set (reg:QI 1342)
        (subreg:QI (reg:SI 1341) 0)) src/switch_core_media.c:3141 -1
     (nil))

(insn 1562 1561 1563 166 (set (mem:QI (reg/v/f:SI 1027 [ proceed ]) [0 *proceed_209(D)+0 S1 A8])
        (reg:QI 1342)) src/switch_core_media.c:3141 -1
     (nil))

(code_label 1563 1562 1564 167 1382 "" [2 uses])

(note 1564 1563 1565 167 [bb 167] NOTE_INSN_BASIC_BLOCK)

(insn 1565 1564 1566 167 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 348 [ var ])
            (const_int 0 [0]))) src/switch_core_media.c:3144 -1
     (nil))

(jump_insn 1566 1565 1567 167 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1586)
            (pc))) src/switch_core_media.c:3144 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 1586)

(note 1567 1566 1568 168 [bb 168] NOTE_INSN_BASIC_BLOCK)

(insn 1568 1567 1569 168 (set (reg:SI 0 r0)
        (reg/v/f:SI 348 [ var ])) src/switch_core_media.c:3145 -1
     (nil))

(call_insn 1569 1568 1570 168 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_true") [flags 0x3]  <function_decl 0x407e7f80 switch_true>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3145 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1570 1569 1571 168 (set (reg/v:SI 217 [ pass ])
        (reg:SI 0 r0)) src/switch_core_media.c:3145 -1
     (nil))

(debug_insn 1571 1570 1572 168 (var_location:SI pass (reg/v:SI 217 [ pass ])) src/switch_core_media.c:3145 -1
     (nil))

(insn 1572 1571 1573 168 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 217 [ pass ])
            (const_int 0 [0]))) src/switch_core_media.c:3145 -1
     (nil))

(jump_insn 1573 1572 1574 168 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1589)
            (pc))) src/switch_core_media.c:3145 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 1589)

(note 1574 1573 1575 169 [bb 169] NOTE_INSN_BASIC_BLOCK)

(insn 1575 1574 1576 169 (set (reg:SI 1344)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC322") [flags 0x82]  <var_decl 0x404107e0 *.LC322>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 980 [0x3d4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 980 [0x3d4])
            ] 29)) src/switch_core_media.c:3146 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC322") [flags 0x82]  <var_decl 0x404107e0 *.LC322>)
        (nil)))

(insn 1576 1575 1577 169 (set (reg:SI 1343)
        (reg:SI 1344)) src/switch_core_media.c:3146 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC322") [flags 0x82]  <var_decl 0x404107e0 *.LC322>)
        (nil)))

(insn 1577 1576 1578 169 (set (reg:SI 0 r0)
        (reg/v/f:SI 348 [ var ])) src/switch_core_media.c:3146 -1
     (nil))

(insn 1578 1577 1579 169 (set (reg:SI 1 r1)
        (reg:SI 1343)) src/switch_core_media.c:3146 -1
     (nil))

(call_insn/i 1579 1578 1580 169 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3146 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1580 1579 1581 169 (set (reg:SI 354 [ D.44716 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3146 -1
     (nil))

(insn 1581 1580 1582 169 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 354 [ D.44716 ])
            (const_int 0 [0]))) src/switch_core_media.c:3146 -1
     (nil))

(jump_insn 1582 1581 1585 169 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1594)
            (pc))) src/switch_core_media.c:3146 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 1594)

(note 1585 1582 1583 170 [bb 170] NOTE_INSN_BASIC_BLOCK)

(jump_insn 1583 1585 1584 170 (set (pc)
        (label_ref 1604)) src/switch_core_media.c:3146 -1
     (nil)
 -> 1604)

(barrier 1584 1583 1586)

(code_label 1586 1584 1587 171 1383 "" [1 uses])

(note 1587 1586 1588 171 [bb 171] NOTE_INSN_BASIC_BLOCK)

(insn 1588 1587 1589 171 (set (reg/v:SI 217 [ pass ])
        (reg:SI 351 [ D.44706 ])) src/switch_core_media.c:3137 -1
     (nil))

(code_label 1589 1588 1590 172 1384 "" [1 uses])

(note 1590 1589 1591 172 [bb 172] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1591 1590 1592 172 (var_location:SI pass (reg/v:SI 217 [ pass ])) -1
     (nil))

(insn 1592 1591 1593 172 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 217 [ pass ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3152 -1
     (nil))

(jump_insn 1593 1592 1594 172 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1604)
            (pc))) src/switch_core_media.c:3152 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 1604)

(code_label 1594 1593 1595 173 1385 "" [1 uses])

(note 1595 1594 1596 173 [bb 173] NOTE_INSN_BASIC_BLOCK)

(insn 1596 1595 1597 173 (set (reg/f:SI 1345)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:3152 -1
     (nil))

(insn 1597 1596 1598 173 (set (reg:SI 1346)
        (mem/s/f:SI (plus:SI (reg/f:SI 1345)
                (const_int 24 [0x18])) [2 D.44481_412->channel+0 S4 A32])) src/switch_core_media.c:3152 -1
     (nil))

(insn 1598 1597 1599 173 (set (reg:SI 0 r0)
        (reg:SI 1346)) src/switch_core_media.c:3152 -1
     (nil))

(insn 1599 1598 1600 173 (set (reg:SI 1 r1)
        (const_int 101 [0x65])) src/switch_core_media.c:3152 -1
     (nil))

(call_insn 1600 1599 1601 173 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3152 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1601 1600 1602 173 (set (reg:SI 357 [ D.44723 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3152 -1
     (nil))

(insn 1602 1601 1603 173 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 357 [ D.44723 ])
            (const_int 0 [0]))) src/switch_core_media.c:3152 -1
     (nil))

(jump_insn 1603 1602 5469 173 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5174)
            (pc))) src/switch_core_media.c:3152 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5174)

(note 5469 1603 54 174 [bb 174] NOTE_INSN_BASIC_BLOCK)

(insn 54 5469 1604 174 (set (reg/v:SI 217 [ pass ])
        (const_int 2 [0x2])) src/switch_core_media.c:3152 -1
     (nil))

(code_label 1604 54 1605 175 1386 "" [2 uses])

(note 1605 1604 1606 175 [bb 175] NOTE_INSN_BASIC_BLOCK)

(insn 1606 1605 1607 175 (set (reg:SI 1347)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3153 -1
     (nil))

(insn 1607 1606 1608 175 (set (reg:SI 0 r0)
        (reg:SI 1347)) src/switch_core_media.c:3153 -1
     (nil))

(insn 1608 1607 1609 175 (set (reg:SI 1 r1)
        (const_int 103 [0x67])) src/switch_core_media.c:3153 -1
     (nil))

(call_insn 1609 1608 1610 175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3153 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1610 1609 1611 175 (set (reg:SI 359 [ D.44724 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3153 -1
     (nil))

(insn 1611 1610 1612 175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 359 [ D.44724 ])
            (const_int 0 [0]))) src/switch_core_media.c:3153 -1
     (nil))

(jump_insn 1612 1611 1613 175 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5174)
            (pc))) src/switch_core_media.c:3153 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5174)

(note 1613 1612 1614 176 [bb 176] NOTE_INSN_BASIC_BLOCK)

(insn 1614 1613 1615 176 (set (reg:SI 1348)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3155 -1
     (nil))

(insn 1615 1614 1616 176 (set (reg:SI 0 r0)
        (reg:SI 1348)) src/switch_core_media.c:3155 -1
     (nil))

(insn 1616 1615 1617 176 (set (reg:SI 1 r1)
        (const_int 15 [0xf])) src/switch_core_media.c:3155 -1
     (nil))

(call_insn 1617 1616 1618 176 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3155 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1618 1617 1619 176 (set (reg:SI 361 [ D.44726 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3155 -1
     (nil))

(insn 1619 1618 1620 176 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 361 [ D.44726 ])
            (const_int 0 [0]))) src/switch_core_media.c:3153 -1
     (nil))

(jump_insn 1620 1619 1621 176 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5174)
            (pc))) src/switch_core_media.c:3153 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5174)

(note 1621 1620 1622 177 [bb 177] NOTE_INSN_BASIC_BLOCK)

(insn 1622 1621 1623 177 (set (reg:SI 1349)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3156 -1
     (nil))

(insn 1623 1622 1624 177 (set (reg:SI 0 r0)
        (reg:SI 1349)) src/switch_core_media.c:3156 -1
     (nil))

(insn 1624 1623 1625 177 (set (reg:SI 1 r1)
        (const_int 29 [0x1d])) src/switch_core_media.c:3156 -1
     (nil))

(call_insn 1625 1624 1626 177 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3156 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1626 1625 1627 177 (set (reg:SI 363 [ D.44728 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3156 -1
     (nil))

(insn 1627 1626 1628 177 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 363 [ D.44728 ])
            (const_int 0 [0]))) src/switch_core_media.c:3155 -1
     (nil))

(jump_insn 1628 1627 1629 177 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5174)
            (pc))) src/switch_core_media.c:3155 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5174)

(note 1629 1628 1630 178 [bb 178] NOTE_INSN_BASIC_BLOCK)

(insn 1630 1629 1631 178 (set (reg:SI 1350)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3157 -1
     (nil))

(insn 1631 1630 1632 178 (set (reg:SI 0 r0)
        (reg:SI 1350)) src/switch_core_media.c:3157 -1
     (nil))

(call_insn 1632 1631 1633 178 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_ready") [flags 0x41]  <function_decl 0x408c6980 switch_rtp_ready>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3157 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1633 1632 1634 178 (set (reg:SI 1351)
        (reg:SI 0 r0)) src/switch_core_media.c:3157 -1
     (nil))

(insn 1634 1633 1635 178 (set (reg:SI 365 [ D.44730 ])
        (reg:SI 1351)) src/switch_core_media.c:3157 -1
     (nil))

(insn 1635 1634 1636 178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 365 [ D.44730 ])
            (const_int 0 [0]))) src/switch_core_media.c:3156 -1
     (nil))

(jump_insn 1636 1635 1637 178 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5174)
            (pc))) src/switch_core_media.c:3156 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5174)

(note 1637 1636 1638 179 [bb 179] NOTE_INSN_BASIC_BLOCK)

(debug_insn 1638 1637 1639 179 (var_location:SI pass (reg/v:SI 217 [ pass ])) -1
     (nil))

(insn 1639 1638 1640 179 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 217 [ pass ])
            (const_int 0 [0]))) src/switch_core_media.c:3161 -1
     (nil))

(jump_insn 1640 1639 1641 179 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5473)
            (pc))) src/switch_core_media.c:3161 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5473)

(note 1641 1640 1642 180 [bb 180] NOTE_INSN_BASIC_BLOCK)

(insn 1642 1641 1643 180 (set (reg:SI 1352)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -16 [0xfffffffffffffff0]))) src/switch_core_media.c:3161 -1
     (nil))

(insn 1643 1642 1644 180 (set (reg:SI 1354)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 981 [0x3d5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 981 [0x3d5])
            ] 29)) src/switch_core_media.c:3161 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1644 1643 1645 180 (set (reg:SI 1353)
        (reg:SI 1354)) src/switch_core_media.c:3161 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1645 1644 1646 180 (set (reg:SI 1356)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 982 [0x3d6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 982 [0x3d6])
            ] 29)) src/switch_core_media.c:3161 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1646 1645 1647 180 (set (reg/f:SI 1355)
        (reg:SI 1356)) src/switch_core_media.c:3161 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1647 1646 1648 180 (set (reg:SI 1358)
        (plus:SI (reg/f:SI 1355)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3161 -1
     (nil))

(insn 1648 1647 1649 180 (set (reg:SI 1357)
        (plus:SI (reg:SI 1358)
            (const_int 8 [0x8]))) src/switch_core_media.c:3161 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1355)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1649 1648 1650 180 (set (reg:SI 1359)
        (const_int 3161 [0xc59])) src/switch_core_media.c:3161 -1
     (nil))

(insn 1650 1649 1651 180 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1359)) src/switch_core_media.c:3161 -1
     (nil))

(insn 1651 1650 1652 180 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3161 -1
     (nil))

(insn 1652 1651 1653 180 (set (reg:SI 1 r1)
        (reg:SI 1352)) src/switch_core_media.c:3161 -1
     (nil))

(insn 1653 1652 1654 180 (set (reg:SI 2 r2)
        (reg:SI 1353)) src/switch_core_media.c:3161 -1
     (nil))

(insn 1654 1653 1655 180 (set (reg:SI 3 r3)
        (reg:SI 1357)) src/switch_core_media.c:3161 -1
     (nil))

(call_insn 1655 1654 1656 180 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_perform_get_partner") [flags 0x41]  <function_decl 0x40704080 switch_core_session_perform_get_partner>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3161 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1656 1655 1657 180 (set (reg:SI 366 [ D.44733 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3161 -1
     (nil))

(insn 1657 1656 1658 180 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 366 [ D.44733 ])
            (const_int 0 [0]))) src/switch_core_media.c:3161 -1
     (nil))

(jump_insn 1658 1657 1659 180 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5477)
            (pc))) src/switch_core_media.c:3161 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5477)

(note 1659 1658 1660 181 [bb 181] NOTE_INSN_BASIC_BLOCK)

(insn 1660 1659 1661 181 (set (reg:SI 1360)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3162 -1
     (nil))

(insn 1661 1660 1662 181 (set (reg:SI 0 r0)
        (reg:SI 1360)) src/switch_core_media.c:3162 -1
     (nil))

(call_insn 1662 1661 1663 181 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_get_channel") [flags 0x41]  <function_decl 0x406f3f80 switch_core_session_get_channel>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3162 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1663 1662 1664 181 (set (reg/v/f:SI 368 [ other_channel ])
        (reg:SI 0 r0)) src/switch_core_media.c:3162 -1
     (nil))

(debug_insn 1664 1663 1665 181 (var_location:SI other_channel (reg/v/f:SI 368 [ other_channel ])) src/switch_core_media.c:3162 -1
     (nil))

(insn 1665 1664 1666 181 (set (reg:SI 1361)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3164 -1
     (nil))

(insn 1666 1665 1667 181 (set (reg:SI 0 r0)
        (reg:SI 1361)) src/switch_core_media.c:3164 -1
     (nil))

(call_insn 1667 1666 1668 181 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_get_remote_host") [flags 0x41]  <function_decl 0x408c6500 switch_rtp_get_remote_host>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3164 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1668 1667 1669 181 (set (reg/v/f:SI 370 [ remote_host ])
        (reg:SI 0 r0)) src/switch_core_media.c:3164 -1
     (nil))

(debug_insn 1669 1668 1670 181 (var_location:SI remote_host (reg/v/f:SI 370 [ remote_host ])) src/switch_core_media.c:3164 -1
     (nil))

(insn 1670 1669 1671 181 (set (reg:SI 1362)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3165 -1
     (nil))

(insn 1671 1670 1672 181 (set (reg:SI 0 r0)
        (reg:SI 1362)) src/switch_core_media.c:3165 -1
     (nil))

(call_insn 1672 1671 1673 181 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_get_remote_port") [flags 0x41]  <function_decl 0x408c6580 switch_rtp_get_remote_port>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3165 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1673 1672 1674 181 (set (reg:SI 1363)
        (reg:SI 0 r0)) src/switch_core_media.c:3165 -1
     (nil))

(insn 1674 1673 1675 181 (set (reg/v:SI 372 [ remote_port ])
        (reg:SI 1363)) src/switch_core_media.c:3165 -1
     (nil))

(debug_insn 1675 1674 1676 181 (var_location:HI remote_port (subreg:HI (reg/v:SI 372 [ remote_port ]) 0)) src/switch_core_media.c:3165 -1
     (nil))

(insn 1676 1675 1677 181 (set (reg:SI 1364)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1677 1676 1678 181 (set (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [0 tmp+0 S4 A64])
        (reg:SI 1364)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1678 1677 1679 181 (set (reg:SI 1365)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -92 [0xffffffffffffffa4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1679 1678 1680 181 (set (reg:SI 1366)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1680 1679 1681 181 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+4 S4 A32])
        (reg:SI 1366)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1681 1680 1682 181 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1682 1681 1683 181 (set (reg:SI 1367)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1683 1682 1684 181 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+8 S4 A32])
        (reg:SI 1367)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1684 1683 1685 181 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1685 1684 1686 181 (set (reg:SI 1368)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1686 1685 1687 181 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+12 S4 A32])
        (reg:SI 1368)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1687 1686 1688 181 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1688 1687 1689 181 (set (reg:SI 1369)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1689 1688 1690 181 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+16 S4 A32])
        (reg:SI 1369)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1690 1689 1691 181 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1691 1690 1692 181 (set (reg:SI 1370)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1692 1691 1693 181 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+20 S4 A32])
        (reg:SI 1370)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1693 1692 1694 181 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1694 1693 1695 181 (set (reg:SI 1371)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1695 1694 1696 181 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+24 S4 A32])
        (reg:SI 1371)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1696 1695 1697 181 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1697 1696 1698 181 (set (reg:SI 1372)
        (const_int 0 [0])) src/switch_core_media.c:3166 -1
     (nil))

(insn 1698 1697 1699 181 (set (mem/s/c:SI (reg:SI 1365) [0 tmp+28 S4 A32])
        (reg:SI 1372)) src/switch_core_media.c:3166 -1
     (nil))

(insn 1699 1698 1700 181 (set (reg:SI 1365)
        (plus:SI (reg:SI 1365)
            (const_int 4 [0x4]))) src/switch_core_media.c:3166 -1
     (nil))

(insn 1700 1699 1701 181 (set (reg:SI 0 r0)
        (reg/v/f:SI 368 [ other_channel ])) src/switch_core_media.c:3169 -1
     (nil))

(insn 1701 1700 1702 181 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) src/switch_core_media.c:3169 -1
     (nil))

(call_insn 1702 1701 1703 181 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3169 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1703 1702 1704 181 (set (reg:SI 373 [ D.44737 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3169 -1
     (nil))

(insn 1704 1703 1705 181 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 373 [ D.44737 ])
            (const_int 0 [0]))) src/switch_core_media.c:3169 -1
     (nil))

(jump_insn 1705 1704 1706 181 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1741)
            (pc))) src/switch_core_media.c:3169 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 1741)

(note 1706 1705 1707 182 [bb 182] NOTE_INSN_BASIC_BLOCK)

(insn 1707 1706 1708 182 (set (reg:SI 1373)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1708 1707 1709 182 (set (reg:SI 0 r0)
        (reg:SI 1373)) src/switch_core_media.c:3170 -1
     (nil))

(call_insn 1709 1708 1710 182 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_name") [flags 0x41]  <function_decl 0x4084f780 switch_channel_get_name>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3170 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1710 1709 1711 182 (set (reg/f:SI 375 [ D.44740 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3170 -1
     (nil))

(insn 1711 1710 1712 182 (set (reg:SI 0 r0)
        (reg/v/f:SI 368 [ other_channel ])) src/switch_core_media.c:3170 -1
     (nil))

(call_insn 1712 1711 1713 182 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_name") [flags 0x41]  <function_decl 0x4084f780 switch_channel_get_name>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3170 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1713 1712 1714 182 (set (reg/f:SI 376 [ D.44741 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3170 -1
     (nil))

(insn 1714 1713 1715 182 (set (reg:SI 1375)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 983 [0x3d7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 983 [0x3d7])
            ] 29)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1715 1714 1716 182 (set (reg:SI 1374)
        (reg:SI 1375)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1716 1715 1717 182 (set (reg:SI 1377)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 984 [0x3d8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 984 [0x3d8])
            ] 29)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1717 1716 1718 182 (set (reg/f:SI 1376)
        (reg:SI 1377)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1718 1717 1719 182 (set (reg:SI 1379)
        (plus:SI (reg/f:SI 1376)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3170 -1
     (nil))

(insn 1719 1718 1720 182 (set (reg:SI 1378)
        (plus:SI (reg:SI 1379)
            (const_int 8 [0x8]))) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1376)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1720 1719 1721 182 (set (reg:SI 1380)
        (const_int 3170 [0xc62])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1721 1720 1722 182 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1722 1721 1723 182 (set (reg:SI 1381)
        (const_int 4 [0x4])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1723 1722 1724 182 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1381)) src/switch_core_media.c:3170 -1
     (nil))

(insn 1724 1723 1725 182 (set (reg:SI 1383)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC323") [flags 0x82]  <var_decl 0x404108a0 *.LC323>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 985 [0x3d9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 985 [0x3d9])
            ] 29)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC323") [flags 0x82]  <var_decl 0x404108a0 *.LC323>)
        (nil)))

(insn 1725 1724 1726 182 (set (reg/f:SI 1382)
        (reg:SI 1383)) src/switch_core_media.c:3170 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC323") [flags 0x82]  <var_decl 0x404108a0 *.LC323>)
        (nil)))

(insn 1726 1725 1727 182 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1382)) src/switch_core_media.c:3170 -1
     (nil))

(insn 1727 1726 1728 182 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 375 [ D.44740 ])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1728 1727 1729 182 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg/f:SI 376 [ D.44741 ])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1729 1728 1730 182 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3170 -1
     (nil))

(insn 1730 1729 1731 182 (set (reg:SI 1 r1)
        (reg:SI 1374)) src/switch_core_media.c:3170 -1
     (nil))

(insn 1731 1730 1732 182 (set (reg:SI 2 r2)
        (reg:SI 1378)) src/switch_core_media.c:3170 -1
     (nil))

(insn 1732 1731 1733 182 (set (reg:SI 3 r3)
        (reg:SI 1380)) src/switch_core_media.c:3170 -1
     (nil))

(call_insn 1733 1732 1734 182 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 24 [0x18]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3170 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1734 1733 1735 182 (set (reg:SI 1384)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3173 -1
     (nil))

(insn 1735 1734 1736 182 (set (reg:SI 0 r0)
        (reg:SI 1384)) src/switch_core_media.c:3173 -1
     (nil))

(call_insn 1736 1735 1737 182 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_session_rwunlock") [flags 0x41]  <function_decl 0x406e6c00 switch_core_session_rwunlock>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3173 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(debug_insn 1737 1736 1738 182 (var_location:SI pass (const_int 0 [0])) src/switch_core_media.c:3175 -1
     (nil))

(debug_insn 1738 1737 128 182 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3176 -1
     (nil))

(insn 128 1738 1739 182 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:3176 -1
     (nil))

(jump_insn 1739 128 1740 182 (set (pc)
        (label_ref 5127)) src/switch_core_media.c:3177 -1
     (nil)
 -> 5127)

(barrier 1740 1739 1741)

(code_label 1741 1740 1742 183 1388 "" [1 uses])

(note 1742 1741 1743 183 [bb 183] NOTE_INSN_BASIC_BLOCK)

(insn 1743 1742 1744 183 (set (reg:SI 1385)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3181 -1
     (nil))

(insn 1744 1743 1745 183 (set (reg:SI 1387)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 986 [0x3da])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 986 [0x3da])
            ] 29)) src/switch_core_media.c:3181 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1745 1744 1746 183 (set (reg:SI 1386)
        (reg:SI 1387)) src/switch_core_media.c:3181 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1746 1745 1747 183 (set (reg:SI 0 r0)
        (reg:SI 1385)) src/switch_core_media.c:3181 -1
     (nil))

(insn 1747 1746 1748 183 (set (reg:SI 1 r1)
        (reg:SI 1386)) src/switch_core_media.c:3181 -1
     (nil))

(insn 1748 1747 1749 183 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3181 -1
     (nil))

(insn 1749 1748 1750 183 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3181 -1
     (nil))

(call_insn 1750 1749 1751 183 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3181 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1751 1750 1752 183 (set (reg/f:SI 379 [ D.44742 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3181 -1
     (nil))

(insn 1752 1751 1753 183 (set (reg:SI 0 r0)
        (reg/f:SI 379 [ D.44742 ])) src/switch_core_media.c:3181 -1
     (nil))

(call_insn 1753 1752 1754 183 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_true") [flags 0x3]  <function_decl 0x407e7f80 switch_true>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3181 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1754 1753 1755 183 (set (reg:SI 380 [ D.44743 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3181 -1
     (nil))

(insn 1755 1754 1756 183 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 380 [ D.44743 ])
            (const_int 0 [0]))) src/switch_core_media.c:3181 -1
     (nil))

(jump_insn 1756 1755 1757 183 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1782)
            (pc))) src/switch_core_media.c:3181 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 1782)

(note 1757 1756 1758 184 [bb 184] NOTE_INSN_BASIC_BLOCK)

(insn 1758 1757 1759 184 (set (reg:SI 1388)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3182 -1
     (nil))

(insn 1759 1758 1760 184 (set (reg:SI 1390)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC324") [flags 0x82]  <var_decl 0x40410900 *.LC324>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 987 [0x3db])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 987 [0x3db])
            ] 29)) src/switch_core_media.c:3182 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC324") [flags 0x82]  <var_decl 0x40410900 *.LC324>)
        (nil)))

(insn 1760 1759 1761 184 (set (reg:SI 1389)
        (reg:SI 1390)) src/switch_core_media.c:3182 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC324") [flags 0x82]  <var_decl 0x40410900 *.LC324>)
        (nil)))

(insn 1761 1760 1762 184 (set (reg:SI 0 r0)
        (reg:SI 1388)) src/switch_core_media.c:3182 -1
     (nil))

(insn 1762 1761 1763 184 (set (reg:SI 1 r1)
        (reg:SI 1389)) src/switch_core_media.c:3182 -1
     (nil))

(insn 1763 1762 1764 184 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3182 -1
     (nil))

(insn 1764 1763 1765 184 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3182 -1
     (nil))

(call_insn 1765 1764 1766 184 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3182 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1766 1765 1767 184 (set (reg/f:SI 382 [ D.44746 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3182 -1
     (nil))

(insn 1767 1766 1768 184 (set (reg:SI 0 r0)
        (reg/f:SI 382 [ D.44746 ])) src/switch_core_media.c:3182 -1
     (nil))

(call_insn 1768 1767 1769 184 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_true") [flags 0x3]  <function_decl 0x407e7f80 switch_true>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3182 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1769 1768 1770 184 (set (reg:SI 383 [ D.44747 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3182 -1
     (nil))

(insn 1770 1769 1771 184 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 383 [ D.44747 ])
            (const_int 0 [0]))) src/switch_core_media.c:3181 -1
     (nil))

(jump_insn 1771 1770 1772 184 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1782)
            (pc))) src/switch_core_media.c:3181 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 1782)

(note 1772 1771 1773 185 [bb 185] NOTE_INSN_BASIC_BLOCK)

(insn 1773 1772 1774 185 (set (reg:SI 1392)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 988 [0x3dc])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 988 [0x3dc])
            ] 29)) src/switch_core_media.c:3183 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1774 1773 1775 185 (set (reg:SI 1391)
        (reg:SI 1392)) src/switch_core_media.c:3183 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC319") [flags 0x82]  <var_decl 0x404106c0 *.LC319>)
        (nil)))

(insn 1775 1774 1776 185 (set (reg:SI 1394)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 989 [0x3dd])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 989 [0x3dd])
            ] 29)) src/switch_core_media.c:3183 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1776 1775 1777 185 (set (reg:SI 1393)
        (reg:SI 1394)) src/switch_core_media.c:3183 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 1777 1776 1778 185 (set (reg:SI 0 r0)
        (reg/v/f:SI 368 [ other_channel ])) src/switch_core_media.c:3183 -1
     (nil))

(insn 1778 1777 1779 185 (set (reg:SI 1 r1)
        (reg:SI 1391)) src/switch_core_media.c:3183 -1
     (nil))

(insn 1779 1778 1780 185 (set (reg:SI 2 r2)
        (reg:SI 1393)) src/switch_core_media.c:3183 -1
     (nil))

(insn 1780 1779 1781 185 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3183 -1
     (nil))

(call_insn 1781 1780 1782 185 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3183 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(code_label 1782 1781 1783 186 1389 "" [2 uses])

(note 1783 1782 1784 186 [bb 186] NOTE_INSN_BASIC_BLOCK)

(insn 1784 1783 1785 186 (set (reg/f:SI 384 [ D.44750 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3186 -1
     (nil))

(insn 1785 1784 1786 186 (set (reg:SI 1395)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 342 [ t38_options ])
                (const_int 40 [0x28])) [2 t38_options_394->remote_ip+0 S4 A32])) src/switch_core_media.c:3186 -1
     (nil))

(insn 1786 1785 1787 186 (set (reg:SI 1397)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 990 [0x3de])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 990 [0x3de])
            ] 29)) src/switch_core_media.c:3186 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1787 1786 1788 186 (set (reg:SI 1396)
        (reg:SI 1397)) src/switch_core_media.c:3186 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1788 1787 1789 186 (set (reg:SI 1399)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 991 [0x3df])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 991 [0x3df])
            ] 29)) src/switch_core_media.c:3186 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1789 1788 1790 186 (set (reg/f:SI 1398)
        (reg:SI 1399)) src/switch_core_media.c:3186 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1790 1789 1791 186 (set (reg:SI 1401)
        (plus:SI (reg/f:SI 1398)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3186 -1
     (nil))

(insn 1791 1790 1792 186 (set (reg:SI 1400)
        (plus:SI (reg:SI 1401)
            (const_int 8 [0x8]))) src/switch_core_media.c:3186 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1398)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1792 1791 1793 186 (set (reg:SI 1402)
        (const_int 3186 [0xc72])) src/switch_core_media.c:3186 -1
     (nil))

(insn 1793 1792 1794 186 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1402)) src/switch_core_media.c:3186 -1
     (nil))

(insn 1794 1793 1795 186 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3186 -1
     (nil))

(insn 1795 1794 1796 186 (set (reg:SI 1 r1)
        (reg:SI 1395)) src/switch_core_media.c:3186 -1
     (nil))

(insn 1796 1795 1797 186 (set (reg:SI 2 r2)
        (reg:SI 1396)) src/switch_core_media.c:3186 -1
     (nil))

(insn 1797 1796 1798 186 (set (reg:SI 3 r3)
        (reg:SI 1400)) src/switch_core_media.c:3186 -1
     (nil))

(call_insn 1798 1797 1799 186 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3186 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1799 1798 1800 186 (set (reg/f:SI 386 [ D.44752 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3186 -1
     (nil))

(insn 1800 1799 1801 186 (set (mem/s/f:SI (plus:SI (reg/f:SI 384 [ D.44750 ])
                (const_int 64 [0x40])) [2 D.44750_444->remote_sdp_ip+0 S4 A32])
        (reg/f:SI 386 [ D.44752 ])) src/switch_core_media.c:3186 -1
     (nil))

(insn 1801 1800 1802 186 (set (reg/f:SI 387 [ D.44750 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3187 -1
     (nil))

(insn 1802 1801 1803 186 (set (reg:SI 388 [ D.44753 ])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 342 [ t38_options ])
                    (const_int 44 [0x2c])) [13 t38_options_394->remote_port+0 S2 A32]))) src/switch_core_media.c:3187 -1
     (nil))

(insn 1803 1802 1804 186 (set (mem/s:HI (plus:SI (reg/f:SI 387 [ D.44750 ])
                (const_int 68 [0x44])) [13 D.44750_447->remote_sdp_port+0 S2 A32])
        (subreg/s/u:HI (reg:SI 388 [ D.44753 ]) 0)) src/switch_core_media.c:3187 -1
     (nil))

(insn 1804 1803 1805 186 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 372 [ remote_port ])
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1805 1804 1806 186 (set (reg:SI 1404)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1806 1805 1807 186 (set (reg:QI 1403)
        (subreg:QI (reg:SI 1404) 0)) src/switch_core_media.c:3189 -1
     (nil))

(insn 1807 1806 1808 186 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 370 [ remote_host ])
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1808 1807 1809 186 (set (reg:SI 1406)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1809 1808 1810 186 (set (reg:QI 1405)
        (subreg:QI (reg:SI 1406) 0)) src/switch_core_media.c:3189 -1
     (nil))

(insn 1810 1809 1811 186 (set (reg:SI 1407)
        (and:SI (subreg:SI (reg:QI 1403) 0)
            (subreg:SI (reg:QI 1405) 0))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1811 1810 1812 186 (set (reg:QI 1408)
        (subreg:QI (reg:SI 1407) 0)) src/switch_core_media.c:3189 -1
     (nil))

(insn 1812 1811 1813 186 (set (reg:SI 1409)
        (zero_extend:SI (reg:QI 1408))) src/switch_core_media.c:3189 -1
     (nil))

(insn 1813 1812 1814 186 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1409)
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(jump_insn 1814 1813 1815 186 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1853)
            (pc))) src/switch_core_media.c:3189 -1
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil))
 -> 1853)

(note 1815 1814 1816 187 [bb 187] NOTE_INSN_BASIC_BLOCK)

(insn 1816 1815 1817 187 (set (reg:SI 1410)
        (mem/s/f:SI (plus:SI (reg/f:SI 387 [ D.44750 ])
                (const_int 64 [0x40])) [2 D.44750_447->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3189 -1
     (nil))

(insn 1817 1816 1818 187 (set (reg:SI 0 r0)
        (reg/v/f:SI 370 [ remote_host ])) src/switch_core_media.c:3189 -1
     (nil))

(insn 1818 1817 1819 187 (set (reg:SI 1 r1)
        (reg:SI 1410)) src/switch_core_media.c:3189 -1
     (nil))

(call_insn/i 1819 1818 1820 187 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41]  <function_decl 0x402f3600 __builtin_strcmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3189 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1820 1819 1821 187 (set (reg:SI 1411)
        (reg:SI 0 r0)) src/switch_core_media.c:3189 -1
     (nil))

(insn 1821 1820 1822 187 (set (reg:SI 393 [ D.39032 ])
        (reg:SI 1411)) src/switch_core_media.c:3189 -1
     (nil))

(insn 1822 1821 1823 187 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 393 [ D.39032 ])
            (const_int 0 [0]))) src/switch_core_media.c:3189 -1
     (nil))

(jump_insn 1823 1822 1824 187 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1853)
            (pc))) src/switch_core_media.c:3189 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 1853)

(note 1824 1823 1825 188 [bb 188] NOTE_INSN_BASIC_BLOCK)

(insn 1825 1824 1826 188 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 372 [ remote_port ])
            (reg:SI 388 [ D.44753 ]))) src/switch_core_media.c:3189 -1
     (nil))

(jump_insn 1826 1825 1827 188 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1853)
            (pc))) src/switch_core_media.c:3189 -1
     (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil))
 -> 1853)

(note 1827 1826 1828 189 [bb 189] NOTE_INSN_BASIC_BLOCK)

(insn 1828 1827 1829 189 (set (reg:SI 1412)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1829 1828 1830 189 (set (reg:SI 0 r0)
        (reg:SI 1412)) src/switch_core_media.c:3190 -1
     (nil))

(call_insn 1830 1829 1831 189 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_name") [flags 0x41]  <function_decl 0x4084f780 switch_channel_get_name>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3190 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1831 1830 1832 189 (set (reg/f:SI 397 [ D.44764 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3190 -1
     (nil))

(insn 1832 1831 1833 189 (set (reg:SI 1414)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 992 [0x3e0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 992 [0x3e0])
            ] 29)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1833 1832 1834 189 (set (reg:SI 1413)
        (reg:SI 1414)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1834 1833 1835 189 (set (reg:SI 1416)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 993 [0x3e1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 993 [0x3e1])
            ] 29)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1835 1834 1836 189 (set (reg/f:SI 1415)
        (reg:SI 1416)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1836 1835 1837 189 (set (reg:SI 1418)
        (plus:SI (reg/f:SI 1415)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3190 -1
     (nil))

(insn 1837 1836 1838 189 (set (reg:SI 1417)
        (plus:SI (reg:SI 1418)
            (const_int 8 [0x8]))) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1415)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1838 1837 1839 189 (set (reg:SI 1419)
        (const_int 3190 [0xc76])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1839 1838 1840 189 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1840 1839 1841 189 (set (reg:SI 1420)
        (const_int 7 [0x7])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1841 1840 1842 189 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1420)) src/switch_core_media.c:3190 -1
     (nil))

(insn 1842 1841 1843 189 (set (reg:SI 1422)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC183") [flags 0x82]  <var_decl 0x4229e360 *.LC183>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 994 [0x3e2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 994 [0x3e2])
            ] 29)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC183") [flags 0x82]  <var_decl 0x4229e360 *.LC183>)
        (nil)))

(insn 1843 1842 1844 189 (set (reg/f:SI 1421)
        (reg:SI 1422)) src/switch_core_media.c:3190 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC183") [flags 0x82]  <var_decl 0x4229e360 *.LC183>)
        (nil)))

(insn 1844 1843 1845 189 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1421)) src/switch_core_media.c:3190 -1
     (nil))

(insn 1845 1844 1846 189 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 397 [ D.44764 ])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1846 1845 1847 189 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3190 -1
     (nil))

(insn 1847 1846 1848 189 (set (reg:SI 1 r1)
        (reg:SI 1413)) src/switch_core_media.c:3190 -1
     (nil))

(insn 1848 1847 1849 189 (set (reg:SI 2 r2)
        (reg:SI 1417)) src/switch_core_media.c:3190 -1
     (nil))

(insn 1849 1848 1850 189 (set (reg:SI 3 r3)
        (reg:SI 1419)) src/switch_core_media.c:3190 -1
     (nil))

(call_insn 1850 1849 1851 189 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3190 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 1851 1850 1852 189 (set (pc)
        (label_ref 1967)) src/switch_core_media.c:3190 -1
     (nil)
 -> 1967)

(barrier 1852 1851 1853)

(code_label 1853 1852 1854 190 1390 "" [3 uses])

(note 1854 1853 1855 190 [bb 190] NOTE_INSN_BASIC_BLOCK)

(insn 1855 1854 1856 190 (set (reg:SI 1423)
        (const_int 0 [0])) src/switch_core_media.c:3193 -1
     (nil))

(insn 1856 1855 1857 190 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 err+0 S4 A32])
        (reg:SI 1423)) src/switch_core_media.c:3193 -1
     (nil))

(insn 1857 1856 1858 190 (set (reg:SI 1424)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1858 1857 1859 190 (set (reg:SI 0 r0)
        (reg:SI 1424)) src/switch_core_media.c:3195 -1
     (nil))

(call_insn 1859 1858 1860 190 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_name") [flags 0x41]  <function_decl 0x4084f780 switch_channel_get_name>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3195 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 1860 1859 1861 190 (set (reg/f:SI 399 [ D.44765 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1861 1860 1862 190 (set (reg/f:SI 401 [ D.44750 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3197 -1
     (nil))

(insn 1862 1861 1863 190 (set (reg:SI 1426)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 995 [0x3e3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 995 [0x3e3])
            ] 29)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1863 1862 1864 190 (set (reg:SI 1425)
        (reg:SI 1426)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1864 1863 1865 190 (set (reg:SI 1428)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 996 [0x3e4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 996 [0x3e4])
            ] 29)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1865 1864 1866 190 (set (reg/f:SI 1427)
        (reg:SI 1428)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1866 1865 1867 190 (set (reg:SI 1430)
        (plus:SI (reg/f:SI 1427)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3195 -1
     (nil))

(insn 1867 1866 1868 190 (set (reg:SI 1429)
        (plus:SI (reg:SI 1430)
            (const_int 8 [0x8]))) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1427)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1868 1867 1869 190 (set (reg:SI 1431)
        (const_int 3195 [0xc7b])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1869 1868 1870 190 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1870 1869 1871 190 (set (reg:SI 1432)
        (const_int 7 [0x7])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1871 1870 1872 190 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1432)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1872 1871 1873 190 (set (reg:SI 1434)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC184") [flags 0x82]  <var_decl 0x4229e3c0 *.LC184>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 997 [0x3e5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 997 [0x3e5])
            ] 29)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC184") [flags 0x82]  <var_decl 0x4229e3c0 *.LC184>)
        (nil)))

(insn 1873 1872 1874 190 (set (reg/f:SI 1433)
        (reg:SI 1434)) src/switch_core_media.c:3195 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC184") [flags 0x82]  <var_decl 0x4229e3c0 *.LC184>)
        (nil)))

(insn 1874 1873 1875 190 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1433)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1875 1874 1876 190 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 399 [ D.44765 ])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1876 1875 1877 190 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg/v/f:SI 370 [ remote_host ])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1877 1876 1878 190 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg/v:SI 372 [ remote_port ])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1878 1877 1879 190 (set (reg/f:SI 1435)
        (mem/s/f:SI (plus:SI (reg/f:SI 401 [ D.44750 ])
                (const_int 64 [0x40])) [2 D.44750_462->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1879 1878 1880 190 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg/f:SI 1435)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1880 1879 1881 190 (set (reg:SI 1436)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 401 [ D.44750 ])
                    (const_int 68 [0x44])) [13 D.44750_462->remote_sdp_port+0 S2 A32]))) src/switch_core_media.c:3195 -1
     (nil))

(insn 1881 1880 1882 190 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 28 [0x1c])) [0 S4 A32])
        (reg:SI 1436)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1882 1881 1883 190 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3195 -1
     (nil))

(insn 1883 1882 1884 190 (set (reg:SI 1 r1)
        (reg:SI 1425)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1884 1883 1885 190 (set (reg:SI 2 r2)
        (reg:SI 1429)) src/switch_core_media.c:3195 -1
     (nil))

(insn 1885 1884 1886 190 (set (reg:SI 3 r3)
        (reg:SI 1431)) src/switch_core_media.c:3195 -1
     (nil))

(call_insn 1886 1885 1887 190 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 32 [0x20]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3195 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1887 1886 1888 190 (set (reg:SI 1437)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3199 -1
     (nil))

(insn 1888 1887 1889 190 (set (reg:SI 1439)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 998 [0x3e6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 998 [0x3e6])
            ] 29)) src/switch_core_media.c:3199 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 1889 1888 1890 190 (set (reg:SI 1438)
        (reg:SI 1439)) src/switch_core_media.c:3199 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 1890 1889 1891 190 (set (reg/f:SI 1440)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3199 -1
     (nil))

(insn 1891 1890 1892 190 (set (reg:SI 1441)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 1440)
                    (const_int 68 [0x44])) [13 D.44750_467->remote_sdp_port+0 S2 A32]))) src/switch_core_media.c:3199 -1
     (nil))

(insn 1892 1891 1893 190 (set (reg:SI 0 r0)
        (reg:SI 1437)) src/switch_core_media.c:3199 -1
     (nil))

(insn 1893 1892 1894 190 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) src/switch_core_media.c:3199 -1
     (nil))

(insn 1894 1893 1895 190 (set (reg:SI 2 r2)
        (reg:SI 1438)) src/switch_core_media.c:3199 -1
     (nil))

(insn 1895 1894 1896 190 (set (reg:SI 3 r3)
        (reg:SI 1441)) src/switch_core_media.c:3199 -1
     (nil))

(call_insn 1896 1895 1897 190 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3199 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1897 1896 1898 190 (set (reg:SI 1442)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3200 -1
     (nil))

(insn 1898 1897 1899 190 (set (reg:SI 1444)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 999 [0x3e7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 999 [0x3e7])
            ] 29)) src/switch_core_media.c:3200 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
        (nil)))

(insn 1899 1898 1900 190 (set (reg:SI 1443)
        (reg:SI 1444)) src/switch_core_media.c:3200 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
        (nil)))

(insn 1900 1899 1901 190 (set (reg/f:SI 1445)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3200 -1
     (nil))

(insn 1901 1900 1902 190 (set (reg:SI 1446)
        (mem/s/f:SI (plus:SI (reg/f:SI 1445)
                (const_int 64 [0x40])) [2 D.44750_471->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3200 -1
     (nil))

(insn 1902 1901 1903 190 (set (reg:SI 0 r0)
        (reg:SI 1442)) src/switch_core_media.c:3200 -1
     (nil))

(insn 1903 1902 1904 190 (set (reg:SI 1 r1)
        (reg:SI 1443)) src/switch_core_media.c:3200 -1
     (nil))

(insn 1904 1903 1905 190 (set (reg:SI 2 r2)
        (reg:SI 1446)) src/switch_core_media.c:3200 -1
     (nil))

(insn 1905 1904 1906 190 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3200 -1
     (nil))

(call_insn 1906 1905 1907 190 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3200 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1907 1906 1908 190 (set (reg:SI 1447)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3201 -1
     (nil))

(insn 1908 1907 1909 190 (set (reg:SI 1449)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1000 [0x3e8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1000 [0x3e8])
            ] 29)) src/switch_core_media.c:3201 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
        (nil)))

(insn 1909 1908 1910 190 (set (reg:SI 1448)
        (reg:SI 1449)) src/switch_core_media.c:3201 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
        (nil)))

(insn 1910 1909 1911 190 (set (reg:SI 1450)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3201 -1
     (nil))

(insn 1911 1910 1912 190 (set (reg:SI 0 r0)
        (reg:SI 1447)) src/switch_core_media.c:3201 -1
     (nil))

(insn 1912 1911 1913 190 (set (reg:SI 1 r1)
        (reg:SI 1448)) src/switch_core_media.c:3201 -1
     (nil))

(insn 1913 1912 1914 190 (set (reg:SI 2 r2)
        (reg:SI 1450)) src/switch_core_media.c:3201 -1
     (nil))

(insn 1914 1913 1915 190 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3201 -1
     (nil))

(call_insn 1915 1914 1916 190 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3201 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1916 1915 1917 190 (set (reg/f:SI 414 [ D.44750 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3203 -1
     (nil))

(insn 1917 1916 1918 190 (set (reg:SI 1451)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3203 -1
     (nil))

(insn 1918 1917 1919 190 (set (reg:SI 1452)
        (mem/s/f:SI (plus:SI (reg/f:SI 414 [ D.44750 ])
                (const_int 64 [0x40])) [2 D.44750_475->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3203 -1
     (nil))

(insn 1919 1918 1920 190 (set (reg:SI 1453)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 414 [ D.44750 ])
                    (const_int 68 [0x44])) [13 D.44750_475->remote_sdp_port+0 S2 A32]))) src/switch_core_media.c:3203 -1
     (nil))

(insn 1920 1919 1921 190 (set (reg:SI 1454)
        (const_int 1 [0x1])) src/switch_core_media.c:3203 -1
     (nil))

(insn 1921 1920 1922 190 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1454)) src/switch_core_media.c:3203 -1
     (nil))

(insn 1922 1921 1923 190 (set (reg:SI 1455)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -12 [0xfffffffffffffff4]))) src/switch_core_media.c:3203 -1
     (nil))

(insn 1923 1922 1924 190 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1455)) src/switch_core_media.c:3203 -1
     (nil))

(insn 1924 1923 1925 190 (set (reg:SI 0 r0)
        (reg:SI 1451)) src/switch_core_media.c:3203 -1
     (nil))

(insn 1925 1924 1926 190 (set (reg:SI 1 r1)
        (reg:SI 1452)) src/switch_core_media.c:3203 -1
     (nil))

(insn 1926 1925 1927 190 (set (reg:SI 2 r2)
        (reg:SI 1453)) src/switch_core_media.c:3203 -1
     (nil))

(insn 1927 1926 1928 190 (set (reg:SI 3 r3)
        (const_int 0 [0])) src/switch_core_media.c:3203 -1
     (nil))

(call_insn 1928 1927 1929 190 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_set_remote_address") [flags 0x41]  <function_decl 0x408c6480 switch_rtp_set_remote_address>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3203 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1929 1928 1930 190 (set (reg:SI 417 [ D.44768 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3203 -1
     (nil))

(insn 1930 1929 1931 190 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 417 [ D.44768 ])
            (const_int 0 [0]))) src/switch_core_media.c:3203 -1
     (nil))

(jump_insn 1931 1930 1932 190 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 1967)
            (pc))) src/switch_core_media.c:3203 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 1967)

(note 1932 1931 1933 191 [bb 191] NOTE_INSN_BASIC_BLOCK)

(insn 1933 1932 1934 191 (set (reg:SI 1457)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1001 [0x3e9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1001 [0x3e9])
            ] 29)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1934 1933 1935 191 (set (reg:SI 1456)
        (reg:SI 1457)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1935 1934 1936 191 (set (reg:SI 1459)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1002 [0x3ea])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1002 [0x3ea])
            ] 29)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1936 1935 1937 191 (set (reg/f:SI 1458)
        (reg:SI 1459)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1937 1936 1938 191 (set (reg:SI 1461)
        (plus:SI (reg/f:SI 1458)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3205 -1
     (nil))

(insn 1938 1937 1939 191 (set (reg:SI 1460)
        (plus:SI (reg:SI 1461)
            (const_int 8 [0x8]))) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1458)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1939 1938 1940 191 (set (reg:SI 1462)
        (const_int 3205 [0xc85])) src/switch_core_media.c:3205 -1
     (nil))

(insn 1940 1939 1941 191 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3205 -1
     (nil))

(insn 1941 1940 1942 191 (set (reg:SI 1463)
        (const_int 3 [0x3])) src/switch_core_media.c:3205 -1
     (nil))

(insn 1942 1941 1943 191 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1463)) src/switch_core_media.c:3205 -1
     (nil))

(insn 1943 1942 1944 191 (set (reg:SI 1465)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC187") [flags 0x82]  <var_decl 0x4229e4e0 *.LC187>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1003 [0x3eb])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1003 [0x3eb])
            ] 29)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC187") [flags 0x82]  <var_decl 0x4229e4e0 *.LC187>)
        (nil)))

(insn 1944 1943 1945 191 (set (reg/f:SI 1464)
        (reg:SI 1465)) src/switch_core_media.c:3205 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC187") [flags 0x82]  <var_decl 0x4229e4e0 *.LC187>)
        (nil)))

(insn 1945 1944 1946 191 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1464)) src/switch_core_media.c:3205 -1
     (nil))

(insn 1946 1945 1947 191 (set (reg/f:SI 1466)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 err+0 S4 A32])) src/switch_core_media.c:3205 -1
     (nil))

(insn 1947 1946 1948 191 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 1466)) src/switch_core_media.c:3205 -1
     (nil))

(insn 1948 1947 1949 191 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3205 -1
     (nil))

(insn 1949 1948 1950 191 (set (reg:SI 1 r1)
        (reg:SI 1456)) src/switch_core_media.c:3205 -1
     (nil))

(insn 1950 1949 1951 191 (set (reg:SI 2 r2)
        (reg:SI 1460)) src/switch_core_media.c:3205 -1
     (nil))

(insn 1951 1950 1952 191 (set (reg:SI 3 r3)
        (reg:SI 1462)) src/switch_core_media.c:3205 -1
     (nil))

(call_insn 1952 1951 1953 191 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3205 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1953 1952 1954 191 (set (reg:SI 1468)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1004 [0x3ec])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1004 [0x3ec])
            ] 29)) src/switch_core_media.c:3206 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1954 1953 1955 191 (set (reg:SI 1467)
        (reg:SI 1468)) src/switch_core_media.c:3206 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1955 1954 1956 191 (set (reg:SI 1470)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1005 [0x3ed])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1005 [0x3ed])
            ] 29)) src/switch_core_media.c:3206 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1956 1955 1957 191 (set (reg/f:SI 1469)
        (reg:SI 1470)) src/switch_core_media.c:3206 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1957 1956 1958 191 (set (reg:SI 1472)
        (plus:SI (reg/f:SI 1469)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3206 -1
     (nil))

(insn 1958 1957 1959 191 (set (reg:SI 1471)
        (plus:SI (reg:SI 1472)
            (const_int 8 [0x8]))) src/switch_core_media.c:3206 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1469)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1959 1958 1960 191 (set (reg:SI 1473)
        (const_int 3206 [0xc86])) src/switch_core_media.c:3206 -1
     (nil))

(insn 1960 1959 1961 191 (set (reg:SI 1474)
        (const_int 88 [0x58])) src/switch_core_media.c:3206 -1
     (nil))

(insn 1961 1960 1962 191 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1474)) src/switch_core_media.c:3206 -1
     (nil))

(insn 1962 1961 1963 191 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:3206 -1
     (nil))

(insn 1963 1962 1964 191 (set (reg:SI 1 r1)
        (reg:SI 1467)) src/switch_core_media.c:3206 -1
     (nil))

(insn 1964 1963 1965 191 (set (reg:SI 2 r2)
        (reg:SI 1471)) src/switch_core_media.c:3206 -1
     (nil))

(insn 1965 1964 1966 191 (set (reg:SI 3 r3)
        (reg:SI 1473)) src/switch_core_media.c:3206 -1
     (nil))

(call_insn 1966 1965 1967 191 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_perform_hangup") [flags 0x41]  <function_decl 0x4084f800 switch_channel_perform_hangup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3206 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(code_label 1967 1966 1968 192 1391 "" [2 uses])

(note 1968 1967 1969 192 [bb 192] NOTE_INSN_BASIC_BLOCK)

(insn 1969 1968 1970 192 (set (reg:SI 1475)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3213 -1
     (nil))

(insn 1970 1969 1971 192 (set (reg:SI 0 r0)
        (reg/v/f:SI 342 [ t38_options ])) src/switch_core_media.c:3213 -1
     (nil))

(insn 1971 1970 1972 192 (set (reg:SI 1 r1)
        (reg:SI 1475)) src/switch_core_media.c:3213 -1
     (nil))

(call_insn 1972 1971 1973 192 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_media_copy_t38_options") [flags 0x1]  <function_decl 0x40945880 switch_core_media_copy_t38_options>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3213 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 1973 1972 1974 192 (set (reg/f:SI 1476)
        (mem/s/f:SI (reg/v/f:SI 233 [ smh ]) [2 smh_186->session+0 S4 A32])) src/switch_core_media.c:3215 -1
     (nil))

(insn 1974 1973 1975 192 (set (reg:SI 1477)
        (mem/s/f:SI (plus:SI (reg/f:SI 1476)
                (const_int 24 [0x18])) [2 D.44481_482->channel+0 S4 A32])) src/switch_core_media.c:3215 -1
     (nil))

(insn 1975 1974 1976 192 (set (reg:SI 0 r0)
        (reg:SI 1477)) src/switch_core_media.c:3215 -1
     (nil))

(insn 1976 1975 1977 192 (set (reg:SI 1 r1)
        (const_int 101 [0x65])) src/switch_core_media.c:3215 -1
     (nil))

(insn 1977 1976 1978 192 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3215 -1
     (nil))

(call_insn 1978 1977 1979 192 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_set_flag_value") [flags 0x41]  <function_decl 0x40846900 switch_channel_set_flag_value>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3215 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1979 1978 1980 192 (set (reg/f:SI 1478)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3216 -1
     (nil))

(insn 1980 1979 1981 192 (set (reg:SI 1479)
        (mem/s/f:SI (plus:SI (reg/f:SI 1478)
                (const_int 24 [0x18])) [2 other_session.89_484->channel+0 S4 A32])) src/switch_core_media.c:3216 -1
     (nil))

(insn 1981 1980 1982 192 (set (reg:SI 0 r0)
        (reg:SI 1479)) src/switch_core_media.c:3216 -1
     (nil))

(insn 1982 1981 1983 192 (set (reg:SI 1 r1)
        (const_int 101 [0x65])) src/switch_core_media.c:3216 -1
     (nil))

(insn 1983 1982 1984 192 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3216 -1
     (nil))

(call_insn 1984 1983 1985 192 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_channel_set_flag_value") [flags 0x41]  <function_decl 0x40846900 switch_channel_set_flag_value>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3216 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 1985 1984 1986 192 (set (reg:SI 1480)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3218 -1
     (nil))

(insn 1986 1985 1987 192 (set (reg:SI 1482)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1006 [0x3ee])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1006 [0x3ee])
            ] 29)) src/switch_core_media.c:3218 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1987 1986 1988 192 (set (reg:SI 1481)
        (reg:SI 1482)) src/switch_core_media.c:3218 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 1988 1987 1989 192 (set (reg:SI 1484)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1007 [0x3ef])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1007 [0x3ef])
            ] 29)) src/switch_core_media.c:3218 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1989 1988 1990 192 (set (reg/f:SI 1483)
        (reg:SI 1484)) src/switch_core_media.c:3218 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1990 1989 1991 192 (set (reg:SI 1486)
        (plus:SI (reg/f:SI 1483)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3218 -1
     (nil))

(insn 1991 1990 1992 192 (set (reg:SI 1485)
        (plus:SI (reg:SI 1486)
            (const_int 8 [0x8]))) src/switch_core_media.c:3218 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1483)
            (const_int 1800 [0x708]))
        (nil)))

(insn 1992 1991 1993 192 (set (reg:SI 1487)
        (const_int 3218 [0xc92])) src/switch_core_media.c:3218 -1
     (nil))

(insn 1993 1992 1994 192 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1487)) src/switch_core_media.c:3218 -1
     (nil))

(insn 1994 1993 1995 192 (set (reg:SI 0 r0)
        (reg:SI 1480)) src/switch_core_media.c:3218 -1
     (nil))

(insn 1995 1994 1996 192 (set (reg:SI 1 r1)
        (const_int 108 [0x6c])) src/switch_core_media.c:3218 -1
     (nil))

(insn 1996 1995 1997 192 (set (reg:SI 2 r2)
        (reg:SI 1481)) src/switch_core_media.c:3218 -1
     (nil))

(insn 1997 1996 1998 192 (set (reg:SI 3 r3)
        (reg:SI 1485)) src/switch_core_media.c:3218 -1
     (nil))

(call_insn 1998 1997 1999 192 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_alloc") [flags 0x41]  <function_decl 0x406f3380 switch_core_perform_session_alloc>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3218 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 1999 1998 2000 192 (set (reg/v/f:SI 425 [ msg ])
        (reg:SI 0 r0)) src/switch_core_media.c:3218 -1
     (nil))

(debug_insn 2000 1999 2001 192 (var_location:SI msg (reg/v/f:SI 425 [ msg ])) src/switch_core_media.c:3218 -1
     (nil))

(insn 2001 2000 2002 192 (set (reg:SI 1488)
        (const_int 21 [0x15])) src/switch_core_media.c:3219 -1
     (nil))

(insn 2002 2001 2003 192 (set (mem/s:SI (plus:SI (reg/v/f:SI 425 [ msg ])
                (const_int 4 [0x4])) [56 msg_487->message_id+0 S4 A32])
        (reg:SI 1488)) src/switch_core_media.c:3219 -1
     (nil))

(insn 2003 2002 2004 192 (set (reg:SI 1490)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1008 [0x3f0])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1008 [0x3f0])
            ] 29)) src/switch_core_media.c:3220 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2004 2003 2005 192 (set (reg/f:SI 1489)
        (reg:SI 1490)) src/switch_core_media.c:3220 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2005 2004 2006 192 (set (mem/s/f:SI (reg/v/f:SI 425 [ msg ]) [2 msg_487->from+0 S4 A32])
        (reg/f:SI 1489)) src/switch_core_media.c:3220 -1
     (nil))

(insn 2006 2005 2007 192 (set (reg:SI 1491)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3221 -1
     (nil))

(insn 2007 2006 2008 192 (set (reg:SI 1493)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1009 [0x3f1])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1009 [0x3f1])
            ] 29)) src/switch_core_media.c:3221 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2008 2007 2009 192 (set (reg:SI 1492)
        (reg:SI 1493)) src/switch_core_media.c:3221 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2009 2008 2010 192 (set (reg:SI 1495)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1010 [0x3f2])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1010 [0x3f2])
            ] 29)) src/switch_core_media.c:3221 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2010 2009 2011 192 (set (reg/f:SI 1494)
        (reg:SI 1495)) src/switch_core_media.c:3221 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2011 2010 2012 192 (set (reg:SI 1497)
        (plus:SI (reg/f:SI 1494)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3221 -1
     (nil))

(insn 2012 2011 2013 192 (set (reg:SI 1496)
        (plus:SI (reg:SI 1497)
            (const_int 8 [0x8]))) src/switch_core_media.c:3221 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1494)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2013 2012 2014 192 (set (reg:SI 1498)
        (const_int 3221 [0xc95])) src/switch_core_media.c:3221 -1
     (nil))

(insn 2014 2013 2015 192 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1498)) src/switch_core_media.c:3221 -1
     (nil))

(insn 2015 2014 2016 192 (set (reg:SI 0 r0)
        (reg:SI 1491)) src/switch_core_media.c:3221 -1
     (nil))

(insn 2016 2015 2017 192 (set (reg:SI 1 r1)
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:3221 -1
     (nil))

(insn 2017 2016 2018 192 (set (reg:SI 2 r2)
        (reg:SI 1492)) src/switch_core_media.c:3221 -1
     (nil))

(insn 2018 2017 2019 192 (set (reg:SI 3 r3)
        (reg:SI 1496)) src/switch_core_media.c:3221 -1
     (nil))

(call_insn 2019 2018 2020 192 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3221 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 2020 2019 2021 192 (set (reg/f:SI 427 [ D.44773 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3221 -1
     (nil))

(insn 2021 2020 2022 192 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 425 [ msg ])
                (const_int 12 [0xc])) [2 msg_487->string_arg+0 S4 A32])
        (reg/f:SI 427 [ D.44773 ])) src/switch_core_media.c:3221 -1
     (nil))

(insn 2022 2021 2023 192 (set (reg:SI 1500)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1011 [0x3f3])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1011 [0x3f3])
            ] 29)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2023 2022 2024 192 (set (reg:SI 1499)
        (reg:SI 1500)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2024 2023 2025 192 (set (reg:SI 1502)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1012 [0x3f4])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1012 [0x3f4])
            ] 29)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2025 2024 2026 192 (set (reg/f:SI 1501)
        (reg:SI 1502)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2026 2025 2027 192 (set (reg:SI 1504)
        (plus:SI (reg/f:SI 1501)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3222 -1
     (nil))

(insn 2027 2026 2028 192 (set (reg:SI 1503)
        (plus:SI (reg:SI 1504)
            (const_int 8 [0x8]))) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1501)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2028 2027 2029 192 (set (reg:SI 1505)
        (const_int 3222 [0xc96])) src/switch_core_media.c:3222 -1
     (nil))

(insn 2029 2028 2030 192 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3222 -1
     (nil))

(insn 2030 2029 2031 192 (set (reg:SI 1506)
        (const_int 7 [0x7])) src/switch_core_media.c:3222 -1
     (nil))

(insn 2031 2030 2032 192 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1506)) src/switch_core_media.c:3222 -1
     (nil))

(insn 2032 2031 2033 192 (set (reg:SI 1508)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC325") [flags 0x82]  <var_decl 0x40410cc0 *.LC325>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1013 [0x3f5])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1013 [0x3f5])
            ] 29)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC325") [flags 0x82]  <var_decl 0x40410cc0 *.LC325>)
        (nil)))

(insn 2033 2032 2034 192 (set (reg/f:SI 1507)
        (reg:SI 1508)) src/switch_core_media.c:3222 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC325") [flags 0x82]  <var_decl 0x40410cc0 *.LC325>)
        (nil)))

(insn 2034 2033 2035 192 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1507)) src/switch_core_media.c:3222 -1
     (nil))

(insn 2035 2034 2036 192 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v/f:SI 1026 [ r_sdp ])) src/switch_core_media.c:3222 -1
     (nil))

(insn 2036 2035 2037 192 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3222 -1
     (nil))

(insn 2037 2036 2038 192 (set (reg:SI 1 r1)
        (reg:SI 1499)) src/switch_core_media.c:3222 -1
     (nil))

(insn 2038 2037 2039 192 (set (reg:SI 2 r2)
        (reg:SI 1503)) src/switch_core_media.c:3222 -1
     (nil))

(insn 2039 2038 2040 192 (set (reg:SI 3 r3)
        (reg:SI 1505)) src/switch_core_media.c:3222 -1
     (nil))

(call_insn 2040 2039 2041 192 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3222 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 2041 2040 2042 192 (set (reg:SI 1509)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3223 -1
     (nil))

(insn 2042 2041 2043 192 (set (reg:SI 0 r0)
        (reg:SI 1509)) src/switch_core_media.c:3223 -1
     (nil))

(insn 2043 2042 2044 192 (set (reg:SI 1 r1)
        (reg/v/f:SI 425 [ msg ])) src/switch_core_media.c:3223 -1
     (nil))

(call_insn 2044 2043 2045 192 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_queue_message") [flags 0x41]  <function_decl 0x40704180 switch_core_session_queue_message>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3223 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2045 2044 2046 192 (set (reg:SI 1510)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 other_session+0 S4 A64])) src/switch_core_media.c:3224 -1
     (nil))

(insn 2046 2045 2047 192 (set (reg:SI 0 r0)
        (reg:SI 1510)) src/switch_core_media.c:3224 -1
     (nil))

(call_insn 2047 2046 136 192 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_session_rwunlock") [flags 0x41]  <function_decl 0x406e6c00 switch_core_session_rwunlock>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3224 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 136 2047 2048 192 (set (reg/v:SI 142 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3230 -1
     (nil))

(jump_insn 2048 136 2049 192 (set (pc)
        (label_ref 5127)) src/switch_core_media.c:3224 -1
     (nil)
 -> 5127)

(barrier 2049 2048 2050)

(code_label 2050 2049 2051 193 1379 "" [2 uses])

(note 2051 2050 2052 193 [bb 193] NOTE_INSN_BASIC_BLOCK)

(insn 2052 2051 2053 193 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 979 [ prephitmp.1049 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3232 -1
     (nil))

(jump_insn 2053 2052 2054 193 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4130)
            (pc))) src/switch_core_media.c:3232 -1
     (expr_list:REG_BR_PROB (const_int 6748 [0x1a5c])
        (nil))
 -> 4130)

(note 2054 2053 2055 194 [bb 194] NOTE_INSN_BASIC_BLOCK)

(insn 2055 2054 2056 194 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 183 [ got_audio ])
            (const_int 0 [0]))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2056 2055 2057 194 (set (reg:SI 1512)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2057 2056 2058 194 (set (reg:QI 1511)
        (subreg:QI (reg:SI 1512) 0)) src/switch_core_media.c:3232 -1
     (nil))

(insn 2058 2057 2059 194 (set (reg:SI 1514)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 20 [0x14])) [26 m_1764->m_port+0 S4 A32])) src/switch_core_media.c:3232 -1
     (nil))

(insn 2059 2058 2060 194 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1514)
            (const_int 0 [0]))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2060 2059 2061 194 (set (reg:SI 1515)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2061 2060 2062 194 (set (reg:QI 1513)
        (subreg:QI (reg:SI 1515) 0)) src/switch_core_media.c:3232 -1
     (nil))

(insn 2062 2061 2063 194 (set (reg:SI 1516)
        (and:SI (subreg:SI (reg:QI 1511) 0)
            (subreg:SI (reg:QI 1513) 0))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2063 2062 2064 194 (set (reg:QI 1517)
        (subreg:QI (reg:SI 1516) 0)) src/switch_core_media.c:3232 -1
     (nil))

(insn 2064 2063 2065 194 (set (reg:SI 1518)
        (zero_extend:SI (reg:QI 1517))) src/switch_core_media.c:3232 -1
     (nil))

(insn 2065 2064 2066 194 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1518)
            (const_int 0 [0]))) src/switch_core_media.c:3232 -1
     (nil))

(jump_insn 2066 2065 2067 194 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5095)
            (pc))) src/switch_core_media.c:3232 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5095)

(note 2067 2066 2068 195 [bb 195] NOTE_INSN_BASIC_BLOCK)

(call_insn 2068 2067 2069 195 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_has_dtls") [flags 0x41]  <function_decl 0x408d7080 switch_rtp_has_dtls>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3235 -1
     (nil)
    (nil))

(insn 2069 2068 2070 195 (set (reg:SI 434 [ D.44781 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3235 -1
     (nil))

(insn 2070 2069 2071 195 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 434 [ D.44781 ])
            (const_int 0 [0]))) src/switch_core_media.c:3235 -1
     (nil))

(jump_insn 2071 2070 2072 195 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2119)
            (pc))) src/switch_core_media.c:3235 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 2119)

(note 2072 2071 2073 196 [bb 196] NOTE_INSN_BASIC_BLOCK)

(insn 2073 2072 2074 196 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3235 -1
     (nil))

(call_insn 2074 2073 2075 196 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dtls_ok") [flags 0x3]  <function_decl 0x414f3900 dtls_ok>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3235 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 2075 2074 2076 196 (set (reg:SI 435 [ D.44784 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3235 -1
     (nil))

(insn 2076 2075 2077 196 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 435 [ D.44784 ])
            (const_int 0 [0]))) src/switch_core_media.c:3235 -1
     (nil))

(jump_insn 2077 2076 2078 196 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2119)
            (pc))) src/switch_core_media.c:3235 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2119)

(note 2078 2077 2079 197 [bb 197] NOTE_INSN_BASIC_BLOCK)

(insn 2079 2078 2080 197 (set (reg/v/f:SI 440 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 60 [0x3c])) [2 m_1764->m_attributes+0 S4 A32])) src/switch_core_media.c:3236 -1
     (nil))

(debug_insn 2080 2079 2081 197 (var_location:SI attr (reg/v/f:SI 440 [ attr ])) src/switch_core_media.c:3236 -1
     (nil))

(debug_insn 2081 2080 2082 197 (var_location:SI got_crypto (reg/v:SI 175 [ got_crypto ])) -1
     (nil))

(debug_insn 2082 2081 2083 197 (var_location:SI attr (reg/v/f:SI 440 [ attr ])) -1
     (nil))

(insn 2083 2082 2084 197 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 440 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3236 -1
     (nil))

(jump_insn 2084 2083 2085 197 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5482)
            (pc))) src/switch_core_media.c:3236 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 5482)

(note 2085 2084 55 198 [bb 198] NOTE_INSN_BASIC_BLOCK)

(insn 55 2085 2113 198 (set (reg/v/f:SI 439 [ attr ])
        (reg/v/f:SI 440 [ attr ])) src/switch_core_media.c:3236 -1
     (nil))

(code_label 2113 55 2086 199 1396 "" [1 uses])

(note 2086 2113 2087 199 [bb 199] NOTE_INSN_BASIC_BLOCK)

(insn 2087 2086 2088 199 (set (reg:SI 1519)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 439 [ attr ])
                (const_int 8 [0x8])) [2 attr_1559->a_name+0 S4 A32])) src/switch_core_media.c:3238 -1
     (nil))

(insn 2088 2087 2089 199 (set (reg:SI 1521)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1014 [0x3f6])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1014 [0x3f6])
            ] 29)) src/switch_core_media.c:3238 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
        (nil)))

(insn 2089 2088 2090 199 (set (reg:SI 1520)
        (reg:SI 1521)) src/switch_core_media.c:3238 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
        (nil)))

(insn 2090 2089 2091 199 (set (reg:SI 0 r0)
        (reg:SI 1519)) src/switch_core_media.c:3238 -1
     (nil))

(insn 2091 2090 2092 199 (set (reg:SI 1 r1)
        (reg:SI 1520)) src/switch_core_media.c:3238 -1
     (nil))

(call_insn/i 2092 2091 2093 199 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3238 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2093 2092 2094 199 (set (reg:SI 437 [ D.44787 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3238 -1
     (nil))

(insn 2094 2093 2095 199 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 437 [ D.44787 ])
            (const_int 0 [0]))) src/switch_core_media.c:3238 -1
     (nil))

(jump_insn 2095 2094 2096 199 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2106)
            (pc))) src/switch_core_media.c:3238 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2106)

(note 2096 2095 2097 200 [bb 200] NOTE_INSN_BASIC_BLOCK)

(insn 2097 2096 2098 200 (set (reg/f:SI 438 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 439 [ attr ])
                (const_int 12 [0xc])) [2 attr_1559->a_value+0 S4 A32])) src/switch_core_media.c:3238 -1
     (nil))

(debug_insn 2098 2097 2099 200 (var_location:SI s (reg/f:SI 438 [ D.44619 ])) src/switch_core_media.c:3238 -1
     (nil))

(insn 2099 2098 2100 200 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 438 [ D.44619 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2100 2099 2101 200 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2106)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 2106)

(note 2101 2100 2102 201 [bb 201] NOTE_INSN_BASIC_BLOCK)

(insn 2102 2101 2103 201 (set (reg:SI 1522)
        (zero_extend:SI (mem:QI (reg/f:SI 438 [ D.44619 ]) [0 *D.44619_503+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 2103 2102 2104 201 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1522)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2104 2103 2105 201 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5486)
            (pc))) ./src/include/switch_utils.h:254 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5486)

(note 2105 2104 5483 202 [bb 202] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5483 2105 5484 202 (set (pc)
        (label_ref 2106)) -1
     (nil)
 -> 2106)

(barrier 5484 5483 5486)

(code_label 5486 5484 5485 203 1544 "" [1 uses])

(note 5485 5486 56 203 [bb 203] NOTE_INSN_BASIC_BLOCK)

(insn 56 5485 2106 203 (set (reg/v:SI 175 [ got_crypto ])
        (const_int 1 [0x1])) src/switch_core_media.c:3239 -1
     (nil))

(code_label 2106 56 2107 204 1395 "" [3 uses])

(note 2107 2106 2108 204 [bb 204] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2108 2107 2109 204 (var_location:SI got_crypto (reg/v:SI 175 [ got_crypto ])) -1
     (nil))

(insn 2109 2108 2110 204 (set (reg/v/f:SI 439 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 439 [ attr ])
                (const_int 4 [0x4])) [2 attr_1559->a_next+0 S4 A32])) src/switch_core_media.c:3236 -1
     (nil))

(debug_insn 2110 2109 2111 204 (var_location:SI attr (reg/v/f:SI 439 [ attr ])) src/switch_core_media.c:3236 -1
     (nil))

(debug_insn 2111 2110 2112 204 (var_location:SI got_crypto (reg/v:SI 175 [ got_crypto ])) -1
     (nil))

(debug_insn 2112 2111 2114 204 (var_location:SI attr (reg/v/f:SI 439 [ attr ])) -1
     (nil))

(insn 2114 2112 2115 204 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 439 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3236 -1
     (nil))

(jump_insn 2115 2114 2118 204 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2113)
            (pc))) src/switch_core_media.c:3236 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 2113)

(note 2118 2115 2116 205 [bb 205] NOTE_INSN_BASIC_BLOCK)

(jump_insn 2116 2118 2117 205 (set (pc)
        (label_ref 5360)) src/switch_core_media.c:3236 -1
     (nil)
 -> 5360)

(barrier 2117 2116 2119)

(code_label 2119 2117 2120 206 1393 "" [2 uses])

(note 2120 2119 2121 206 [bb 206] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2121 2120 2122 206 (var_location:SI got_crypto (reg/v:SI 175 [ got_crypto ])) -1
     (nil))

(insn 2122 2121 2123 206 (set (reg/v/f:SI 440 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 60 [0x3c])) [2 m_1764->m_attributes+0 S4 A32])) src/switch_core_media.c:3244 -1
     (nil))

(debug_insn 2123 2122 2124 206 (var_location:SI attr (reg/v/f:SI 440 [ attr ])) src/switch_core_media.c:3244 -1
     (nil))

(debug_insn 2124 2123 2125 206 (var_location:SI got_crypto (reg/v:SI 175 [ got_crypto ])) -1
     (nil))

(debug_insn 2125 2124 2126 206 (var_location:SI maxptime (reg/v:SI 164 [ dmaxptime ])) -1
     (nil))

(debug_insn 2126 2125 2127 206 (var_location:SI ptime (reg/v:SI 160 [ dptime ])) -1
     (nil))

(debug_insn 2127 2126 2128 206 (var_location:SI attr (reg/v/f:SI 440 [ attr ])) -1
     (nil))

(insn 2128 2127 2129 206 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 440 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3244 -1
     (nil))

(jump_insn 2129 2128 2132 206 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5360)
            (pc))) src/switch_core_media.c:3244 -1
     (expr_list:REG_BR_PROB (const_int 9472 [0x2500])
        (nil))
 -> 5360)

(note 2132 2129 59 207 [bb 207] NOTE_INSN_BASIC_BLOCK)

(insn 59 2132 60 207 (set (reg/v:SI 162 [ maxptime ])
        (reg/v:SI 164 [ dmaxptime ])) src/switch_core_media.c:3244 -1
     (nil))

(insn 60 59 2130 207 (set (reg/v:SI 158 [ ptime ])
        (reg/v:SI 160 [ dptime ])) src/switch_core_media.c:3244 -1
     (nil))

(jump_insn 2130 60 2131 207 (set (pc)
        (label_ref 2402)) src/switch_core_media.c:3244 -1
     (nil)
 -> 2402)

(barrier 2131 2130 2399)

(code_label 2399 2131 2133 208 1406 "" [2 uses])

(note 2133 2399 2134 208 [bb 208] NOTE_INSN_BASIC_BLOCK)

(insn 2134 2133 2135 208 (set (reg/f:SI 441 [ D.44590 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 8 [0x8])) [2 attr_1599->a_name+0 S4 A32])) src/switch_core_media.c:3246 -1
     (nil))

(insn 2135 2134 2136 208 (set (reg:SI 1524)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1015 [0x3f7])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1015 [0x3f7])
            ] 29)) src/switch_core_media.c:3246 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
        (nil)))

(insn 2136 2135 2137 208 (set (reg:SI 1523)
        (reg:SI 1524)) src/switch_core_media.c:3246 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
        (nil)))

(insn 2137 2136 2138 208 (set (reg:SI 0 r0)
        (reg/f:SI 441 [ D.44590 ])) src/switch_core_media.c:3246 -1
     (nil))

(insn 2138 2137 2139 208 (set (reg:SI 1 r1)
        (reg:SI 1523)) src/switch_core_media.c:3246 -1
     (nil))

(call_insn/i 2139 2138 2140 208 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3246 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2140 2139 2141 208 (set (reg:SI 442 [ D.44795 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3246 -1
     (nil))

(insn 2141 2140 2142 208 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 442 [ D.44795 ])
            (const_int 0 [0]))) src/switch_core_media.c:3246 -1
     (nil))

(jump_insn 2142 2141 2143 208 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2176)
            (pc))) src/switch_core_media.c:3246 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2176)

(note 2143 2142 2144 209 [bb 209] NOTE_INSN_BASIC_BLOCK)

(insn 2144 2143 2145 209 (set (reg/f:SI 443 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) src/switch_core_media.c:3246 -1
     (nil))

(insn 2145 2144 2146 209 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 443 [ D.44619 ])
            (const_int 0 [0]))) src/switch_core_media.c:3246 -1
     (nil))

(jump_insn 2146 2145 2147 209 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2176)
            (pc))) src/switch_core_media.c:3246 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 2176)

(note 2147 2146 2148 210 [bb 210] NOTE_INSN_BASIC_BLOCK)

(insn 2148 2147 2149 210 (set (reg:SI 1525)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3247 -1
     (nil))

(insn 2149 2148 2150 210 (set (reg:SI 1527)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC248") [flags 0x82]  <var_decl 0x40344540 *.LC248>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1016 [0x3f8])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1016 [0x3f8])
            ] 29)) src/switch_core_media.c:3247 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC248") [flags 0x82]  <var_decl 0x40344540 *.LC248>)
        (nil)))

(insn 2150 2149 2151 210 (set (reg:SI 1526)
        (reg:SI 1527)) src/switch_core_media.c:3247 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC248") [flags 0x82]  <var_decl 0x40344540 *.LC248>)
        (nil)))

(insn 2151 2150 2152 210 (set (reg:SI 0 r0)
        (reg:SI 1525)) src/switch_core_media.c:3247 -1
     (nil))

(insn 2152 2151 2153 210 (set (reg:SI 1 r1)
        (reg:SI 1526)) src/switch_core_media.c:3247 -1
     (nil))

(insn 2153 2152 2154 210 (set (reg:SI 2 r2)
        (reg/f:SI 443 [ D.44619 ])) src/switch_core_media.c:3247 -1
     (nil))

(insn 2154 2153 2155 210 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3247 -1
     (nil))

(call_insn 2155 2154 2156 210 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3247 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 2156 2155 2157 210 (var_location:SI __nptr (mem/s/f/j:SI (plus:SI (reg/v/f:SI 440 [ attr ])
            (const_int 12 [0xc])) [0 attr_1599->a_value+0 S4 A32])) src/switch_core_media.c:3248 -1
     (nil))

(insn 2157 2156 2158 210 (set (reg:SI 1528)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2158 2157 2159 210 (set (reg:SI 0 r0)
        (reg:SI 1528)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2159 2158 2160 210 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2160 2159 2161 210 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 2161 2160 2162 210 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 2162 2161 2163 210 (set (reg:SI 840 [ D.47890 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2163 2162 2164 210 (set (reg:SI 1529)
        (const_int 1896 [0x768])) src/switch_core_media.c:3248 -1
     (nil))

(insn 2164 2163 2165 210 (set (mem/s:HI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1529)) [13 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].remote_rtcp_port+0 S2 A32])
        (subreg:HI (reg:SI 840 [ D.47890 ]) 0)) src/switch_core_media.c:3248 -1
     (nil))

(insn 2165 2164 2166 210 (set (reg:SI 1530)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3249 -1
     (nil))

(insn 2166 2165 2167 210 (set (reg/f:SI 448 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1530)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3249 -1
     (nil))

(insn 2167 2166 2168 210 (set (reg:SI 1531)
        (mem/s/f:SI (plus:SI (reg/f:SI 448 [ D.44471 ])
                (const_int 80 [0x50])) [2 D.44471_516->rtcp_audio_interval_msec+0 S4 A32])) src/switch_core_media.c:3249 -1
     (nil))

(insn 2168 2167 2169 210 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1531)
            (const_int 0 [0]))) src/switch_core_media.c:3249 -1
     (nil))

(jump_insn 2169 2168 2170 210 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2388)
            (pc))) src/switch_core_media.c:3249 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil))
 -> 2388)

(note 2170 2169 2171 211 [bb 211] NOTE_INSN_BASIC_BLOCK)

(insn 2171 2170 2172 211 (set (reg:SI 1533)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1017 [0x3f9])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1017 [0x3f9])
            ] 29)) src/switch_core_media.c:3250 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
        (nil)))

(insn 2172 2171 2173 211 (set (reg/f:SI 1532)
        (reg:SI 1533)) src/switch_core_media.c:3250 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
        (nil)))

(insn 2173 2172 2174 211 (set (mem/s/f:SI (plus:SI (reg/f:SI 448 [ D.44471 ])
                (const_int 80 [0x50])) [2 D.44471_516->rtcp_audio_interval_msec+0 S4 A32])
        (reg/f:SI 1532)) src/switch_core_media.c:3250 -1
     (nil))

(jump_insn 2174 2173 2175 211 (set (pc)
        (label_ref 2388)) src/switch_core_media.c:3250 -1
     (nil)
 -> 2388)

(barrier 2175 2174 2176)

(code_label 2176 2175 2177 212 1398 "" [2 uses])

(note 2177 2176 2178 212 [bb 212] NOTE_INSN_BASIC_BLOCK)

(insn 2178 2177 2179 212 (set (reg:SI 1535)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1018 [0x3fa])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1018 [0x3fa])
            ] 29)) src/switch_core_media.c:3252 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
        (nil)))

(insn 2179 2178 2180 212 (set (reg:SI 1534)
        (reg:SI 1535)) src/switch_core_media.c:3252 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC103") [flags 0x82]  <var_decl 0x41ff2f00 *.LC103>)
        (nil)))

(insn 2180 2179 2181 212 (set (reg:SI 0 r0)
        (reg/f:SI 441 [ D.44590 ])) src/switch_core_media.c:3252 -1
     (nil))

(insn 2181 2180 2182 212 (set (reg:SI 1 r1)
        (reg:SI 1534)) src/switch_core_media.c:3252 -1
     (nil))

(call_insn/i 2182 2181 2183 212 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3252 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2183 2182 2184 212 (set (reg:SI 451 [ D.44805 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3252 -1
     (nil))

(insn 2184 2183 2185 212 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 451 [ D.44805 ])
            (const_int 0 [0]))) src/switch_core_media.c:3252 -1
     (nil))

(jump_insn 2185 2184 2186 212 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2200)
            (pc))) src/switch_core_media.c:3252 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2200)

(note 2186 2185 2187 213 [bb 213] NOTE_INSN_BASIC_BLOCK)

(insn 2187 2186 2188 213 (set (reg/f:SI 452 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) src/switch_core_media.c:3252 -1
     (nil))

(insn 2188 2187 2189 213 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 452 [ D.44619 ])
            (const_int 0 [0]))) src/switch_core_media.c:3252 -1
     (nil))

(jump_insn 2189 2188 2190 213 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2200)
            (pc))) src/switch_core_media.c:3252 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 2200)

(note 2190 2189 2191 214 [bb 214] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2191 2190 2192 214 (var_location:SI __nptr (reg/f:SI 452 [ D.44619 ])) src/switch_core_media.c:3253 -1
     (nil))

(insn 2192 2191 2193 214 (set (reg:SI 0 r0)
        (reg/f:SI 452 [ D.44619 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2193 2192 2194 214 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2194 2193 2195 214 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 2195 2194 2196 214 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 2196 2195 2197 214 (set (reg/v:SI 158 [ ptime ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(debug_insn 2197 2196 2198 214 (var_location:SI ptime (clobber (const_int 0 [0]))) src/switch_core_media.c:3253 -1
     (nil))

(jump_insn 2198 2197 2199 214 (set (pc)
        (label_ref 2388)) src/switch_core_media.c:3253 -1
     (nil)
 -> 2388)

(barrier 2199 2198 2200)

(code_label 2200 2199 2201 215 1400 "" [2 uses])

(note 2201 2200 2202 215 [bb 215] NOTE_INSN_BASIC_BLOCK)

(insn 2202 2201 2203 215 (set (reg:SI 1537)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1019 [0x3fb])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1019 [0x3fb])
            ] 29)) src/switch_core_media.c:3254 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
        (nil)))

(insn 2203 2202 2204 215 (set (reg:SI 1536)
        (reg:SI 1537)) src/switch_core_media.c:3254 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC311") [flags 0x82]  <var_decl 0x40410120 *.LC311>)
        (nil)))

(insn 2204 2203 2205 215 (set (reg:SI 0 r0)
        (reg/f:SI 441 [ D.44590 ])) src/switch_core_media.c:3254 -1
     (nil))

(insn 2205 2204 2206 215 (set (reg:SI 1 r1)
        (reg:SI 1536)) src/switch_core_media.c:3254 -1
     (nil))

(call_insn/i 2206 2205 2207 215 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3254 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2207 2206 2208 215 (set (reg:SI 454 [ D.44810 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3254 -1
     (nil))

(insn 2208 2207 2209 215 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 454 [ D.44810 ])
            (const_int 0 [0]))) src/switch_core_media.c:3254 -1
     (nil))

(jump_insn 2209 2208 2210 215 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2224)
            (pc))) src/switch_core_media.c:3254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2224)

(note 2210 2209 2211 216 [bb 216] NOTE_INSN_BASIC_BLOCK)

(insn 2211 2210 2212 216 (set (reg/f:SI 455 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) src/switch_core_media.c:3254 -1
     (nil))

(insn 2212 2211 2213 216 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 455 [ D.44619 ])
            (const_int 0 [0]))) src/switch_core_media.c:3254 -1
     (nil))

(jump_insn 2213 2212 2214 216 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2224)
            (pc))) src/switch_core_media.c:3254 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 2224)

(note 2214 2213 2215 217 [bb 217] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2215 2214 2216 217 (var_location:SI __nptr (reg/f:SI 455 [ D.44619 ])) src/switch_core_media.c:3255 -1
     (nil))

(insn 2216 2215 2217 217 (set (reg:SI 0 r0)
        (reg/f:SI 455 [ D.44619 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2217 2216 2218 217 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2218 2217 2219 217 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 2219 2218 2220 217 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 2220 2219 2221 217 (set (reg/v:SI 162 [ maxptime ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(debug_insn 2221 2220 2222 217 (var_location:SI maxptime (clobber (const_int 0 [0]))) src/switch_core_media.c:3255 -1
     (nil))

(jump_insn 2222 2221 2223 217 (set (pc)
        (label_ref 2388)) src/switch_core_media.c:3255 -1
     (nil)
 -> 2388)

(barrier 2223 2222 2224)

(code_label 2224 2223 2225 218 1401 "" [2 uses])

(note 2225 2224 2226 218 [bb 218] NOTE_INSN_BASIC_BLOCK)

(insn 2226 2225 2227 218 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 175 [ got_crypto ])
            (const_int 0 [0]))) src/switch_core_media.c:3256 -1
     (nil))

(jump_insn 2227 2226 2228 218 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2388)
            (pc))) src/switch_core_media.c:3256 -1
     (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
        (nil))
 -> 2388)

(note 2228 2227 2229 219 [bb 219] NOTE_INSN_BASIC_BLOCK)

(insn 2229 2228 2230 219 (set (reg:SI 1539)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1020 [0x3fc])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1020 [0x3fc])
            ] 29)) src/switch_core_media.c:3256 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
        (nil)))

(insn 2230 2229 2231 219 (set (reg:SI 1538)
        (reg:SI 1539)) src/switch_core_media.c:3256 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
        (nil)))

(insn 2231 2230 2232 219 (set (reg:SI 0 r0)
        (reg/f:SI 441 [ D.44590 ])) src/switch_core_media.c:3256 -1
     (nil))

(insn 2232 2231 2233 219 (set (reg:SI 1 r1)
        (reg:SI 1538)) src/switch_core_media.c:3256 -1
     (nil))

(call_insn/i 2233 2232 2234 219 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2234 2233 2235 219 (set (reg:SI 456 [ D.44815 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3256 -1
     (nil))

(insn 2235 2234 2236 219 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 456 [ D.44815 ])
            (const_int 0 [0]))) src/switch_core_media.c:3256 -1
     (nil))

(jump_insn 2236 2235 2237 219 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2388)
            (pc))) src/switch_core_media.c:3256 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2388)

(note 2237 2236 2238 220 [bb 220] NOTE_INSN_BASIC_BLOCK)

(insn 2238 2237 2239 220 (set (reg/f:SI 457 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) src/switch_core_media.c:3256 -1
     (nil))

(debug_insn 2239 2238 2240 220 (var_location:SI s (reg/f:SI 457 [ prephitmp.1031 ])) src/switch_core_media.c:3256 -1
     (nil))

(insn 2240 2239 2241 220 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 457 [ prephitmp.1031 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2241 2240 2242 220 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2388)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 2388)

(note 2242 2241 2243 221 [bb 221] NOTE_INSN_BASIC_BLOCK)

(insn 2243 2242 2244 221 (set (reg:SI 1540)
        (zero_extend:SI (mem:QI (reg/f:SI 457 [ prephitmp.1031 ]) [0 *prephitmp.1031_531+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 2244 2243 2245 221 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1540)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2245 2244 2248 221 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2388)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2388)

(note 2248 2245 2246 222 [bb 222] NOTE_INSN_BASIC_BLOCK)

(jump_insn 2246 2248 2247 222 (set (pc)
        (label_ref 5179)) ./src/include/switch_utils.h:254 -1
     (nil)
 -> 5179)

(barrier 2247 2246 5181)

(code_label 5181 2247 2249 223 1510 "" [1 uses])

(note 2249 5181 2250 223 [bb 223] NOTE_INSN_BASIC_BLOCK)

(insn 2250 2249 2251 223 (set (reg:SI 1541)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3260 -1
     (nil))

(insn 2251 2250 2252 223 (set (reg:SI 1543)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1021 [0x3fd])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1021 [0x3fd])
            ] 29)) src/switch_core_media.c:3260 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
        (nil)))

(insn 2252 2251 2253 223 (set (reg:SI 1542)
        (reg:SI 1543)) src/switch_core_media.c:3260 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
        (nil)))

(insn 2253 2252 2254 223 (set (reg:SI 0 r0)
        (reg:SI 1541)) src/switch_core_media.c:3260 -1
     (nil))

(insn 2254 2253 2255 223 (set (reg:SI 1 r1)
        (reg:SI 1542)) src/switch_core_media.c:3260 -1
     (nil))

(insn 2255 2254 2256 223 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3260 -1
     (nil))

(insn 2256 2255 2257 223 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3260 -1
     (nil))

(call_insn 2257 2256 2258 223 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3260 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 2258 2257 2259 223 (set (reg/f:SI 462 [ D.44825 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3260 -1
     (nil))

(debug_insn 2259 2258 2260 223 (var_location:SI expr (reg/f:SI 462 [ D.44825 ])) src/switch_core_media.c:3260 -1
     (nil))

(insn 2260 2259 2261 223 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 462 [ D.44825 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 2261 2260 2262 223 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5191)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 5191)

(note 2262 2261 2263 224 [bb 224] NOTE_INSN_BASIC_BLOCK)

(insn 2263 2262 2264 224 (set (reg:SI 1545)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1022 [0x3fe])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1022 [0x3fe])
            ] 29)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 2264 2263 2265 224 (set (reg:SI 1544)
        (reg:SI 1545)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 2265 2264 2266 224 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 2266 2265 2267 224 (set (reg:SI 1 r1)
        (reg:SI 1544)) ./src/include/switch_utils.h:429 -1
     (nil))

(call_insn/i 2267 2266 2268 224 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2268 2267 2269 224 (set (reg:SI 908 [ D.49723 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 2269 2268 2270 224 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 908 [ D.49723 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 2270 2269 2271 224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2340)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 2340)

(note 2271 2270 2272 225 [bb 225] NOTE_INSN_BASIC_BLOCK)

(insn 2272 2271 2273 225 (set (reg:SI 1547)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1023 [0x3ff])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1023 [0x3ff])
            ] 29)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 2273 2272 2274 225 (set (reg:SI 1546)
        (reg:SI 1547)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 2274 2273 2275 225 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 2275 2274 2276 225 (set (reg:SI 1 r1)
        (reg:SI 1546)) ./src/include/switch_utils.h:430 -1
     (nil))

(call_insn/i 2276 2275 2277 225 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2277 2276 2278 225 (set (reg:SI 909 [ D.49724 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 2278 2277 2279 225 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 909 [ D.49724 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 2279 2278 2280 225 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2340)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 2340)

(note 2280 2279 2281 226 [bb 226] NOTE_INSN_BASIC_BLOCK)

(insn 2281 2280 2282 226 (set (reg:SI 1549)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1024 [0x400])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1024 [0x400])
            ] 29)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 2282 2281 2283 226 (set (reg:SI 1548)
        (reg:SI 1549)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 2283 2282 2284 226 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 2284 2283 2285 226 (set (reg:SI 1 r1)
        (reg:SI 1548)) ./src/include/switch_utils.h:431 -1
     (nil))

(call_insn/i 2285 2284 2286 226 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2286 2285 2287 226 (set (reg:SI 910 [ D.49725 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 2287 2286 2288 226 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 910 [ D.49725 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:430 -1
     (nil))

(jump_insn 2288 2287 2289 226 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2340)
            (pc))) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 2340)

(note 2289 2288 2290 227 [bb 227] NOTE_INSN_BASIC_BLOCK)

(insn 2290 2289 2291 227 (set (reg:SI 1551)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1025 [0x401])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1025 [0x401])
            ] 29)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 2291 2290 2292 227 (set (reg:SI 1550)
        (reg:SI 1551)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 2292 2291 2293 227 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 2293 2292 2294 227 (set (reg:SI 1 r1)
        (reg:SI 1550)) ./src/include/switch_utils.h:432 -1
     (nil))

(call_insn/i 2294 2293 2295 227 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2295 2294 2296 227 (set (reg:SI 911 [ D.49726 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 2296 2295 2297 227 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 911 [ D.49726 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:431 -1
     (nil))

(jump_insn 2297 2296 2298 227 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2340)
            (pc))) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 2340)

(note 2298 2297 2299 228 [bb 228] NOTE_INSN_BASIC_BLOCK)

(insn 2299 2298 2300 228 (set (reg:SI 1553)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1026 [0x402])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1026 [0x402])
            ] 29)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 2300 2299 2301 228 (set (reg:SI 1552)
        (reg:SI 1553)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 2301 2300 2302 228 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 2302 2301 2303 228 (set (reg:SI 1 r1)
        (reg:SI 1552)) ./src/include/switch_utils.h:433 -1
     (nil))

(call_insn/i 2303 2302 2304 228 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2304 2303 2305 228 (set (reg:SI 912 [ D.49727 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 2305 2304 2306 228 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 912 [ D.49727 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:432 -1
     (nil))

(jump_insn 2306 2305 2307 228 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2340)
            (pc))) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 2340)

(note 2307 2306 2308 229 [bb 229] NOTE_INSN_BASIC_BLOCK)

(insn 2308 2307 2309 229 (set (reg:SI 1555)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1027 [0x403])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1027 [0x403])
            ] 29)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 2309 2308 2310 229 (set (reg:SI 1554)
        (reg:SI 1555)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 2310 2309 2311 229 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 2311 2310 2312 229 (set (reg:SI 1 r1)
        (reg:SI 1554)) ./src/include/switch_utils.h:434 -1
     (nil))

(call_insn/i 2312 2311 2313 229 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2313 2312 2314 229 (set (reg:SI 913 [ D.49728 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 2314 2313 2315 229 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 913 [ D.49728 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:433 -1
     (nil))

(jump_insn 2315 2314 2316 229 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2340)
            (pc))) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 2340)

(note 2316 2315 2317 230 [bb 230] NOTE_INSN_BASIC_BLOCK)

(insn 2317 2316 2318 230 (set (reg:SI 1557)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1028 [0x404])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1028 [0x404])
            ] 29)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 2318 2317 2319 230 (set (reg:SI 1556)
        (reg:SI 1557)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 2319 2318 2320 230 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 2320 2319 2321 230 (set (reg:SI 1 r1)
        (reg:SI 1556)) ./src/include/switch_utils.h:435 -1
     (nil))

(call_insn/i 2321 2320 2322 230 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2322 2321 2323 230 (set (reg:SI 914 [ D.49729 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 2323 2322 2324 230 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 914 [ D.49729 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:434 -1
     (nil))

(jump_insn 2324 2323 2325 230 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2340)
            (pc))) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil))
 -> 2340)

(note 2325 2324 2326 231 [bb 231] NOTE_INSN_BASIC_BLOCK)

(insn 2326 2325 2327 231 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) ./src/include/switch_utils.h:436 -1
     (nil))

(call_insn 2327 2326 2328 231 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:436 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 2328 2327 2329 231 (set (reg:SI 915 [ D.49730 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:436 -1
     (nil))

(insn 2329 2328 2330 231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 915 [ D.49730 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:435 -1
     (nil))

(jump_insn 2330 2329 2331 231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5191)
            (pc))) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5191)

(note 2331 2330 2332 232 [bb 232] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2332 2331 2333 232 (var_location:SI __nptr (reg/f:SI 462 [ D.44825 ])) -1
     (nil))

(insn 2333 2332 2334 232 (set (reg:SI 0 r0)
        (reg/f:SI 462 [ D.44825 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2334 2333 2335 232 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2335 2334 2336 232 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 2336 2335 2337 232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 2337 2336 2338 232 (set (reg:SI 916 [ D.49731 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2338 2337 2339 232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 916 [ D.49731 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 2339 2338 2340 232 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5191)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 5191)

(code_label 2340 2339 2341 233 1404 "" [7 uses])

(note 2341 2340 2342 233 [bb 233] NOTE_INSN_BASIC_BLOCK)

(insn 2342 2341 2343 233 (set (reg/f:SI 457 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 2343 2342 2344 233 (set (pc)
        (label_ref 2367)) ./src/include/switch_utils.h:436 -1
     (nil)
 -> 2367)

(barrier 2344 2343 5193)

(code_label 5193 2344 2345 234 1511 "" [1 uses])

(note 2345 5193 2346 234 [bb 234] NOTE_INSN_BASIC_BLOCK)

(insn 2346 2345 2347 234 (set (reg:SI 1559)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1029 [0x405])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1029 [0x405])
            ] 29)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2347 2346 2348 234 (set (reg:SI 1558)
        (reg:SI 1559)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2348 2347 2349 234 (set (reg:SI 1561)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1030 [0x406])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1030 [0x406])
            ] 29)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2349 2348 2350 234 (set (reg/f:SI 1560)
        (reg:SI 1561)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2350 2349 2351 234 (set (reg:SI 1563)
        (plus:SI (reg/f:SI 1560)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3262 -1
     (nil))

(insn 2351 2350 2352 234 (set (reg:SI 1562)
        (plus:SI (reg:SI 1563)
            (const_int 8 [0x8]))) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1560)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2352 2351 2353 234 (set (reg:SI 1564)
        (const_int 3262 [0xcbe])) src/switch_core_media.c:3262 -1
     (nil))

(insn 2353 2352 2354 234 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3262 -1
     (nil))

(insn 2354 2353 2355 234 (set (reg:SI 1565)
        (const_int 3 [0x3])) src/switch_core_media.c:3262 -1
     (nil))

(insn 2355 2354 2356 234 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1565)) src/switch_core_media.c:3262 -1
     (nil))

(insn 2356 2355 2357 234 (set (reg:SI 1567)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1031 [0x407])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1031 [0x407])
            ] 29)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
        (nil)))

(insn 2357 2356 2358 234 (set (reg/f:SI 1566)
        (reg:SI 1567)) src/switch_core_media.c:3262 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
        (nil)))

(insn 2358 2357 2359 234 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1566)) src/switch_core_media.c:3262 -1
     (nil))

(insn 2359 2358 2360 234 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3262 -1
     (nil))

(insn 2360 2359 2361 234 (set (reg:SI 1 r1)
        (reg:SI 1558)) src/switch_core_media.c:3262 -1
     (nil))

(insn 2361 2360 2362 234 (set (reg:SI 2 r2)
        (reg:SI 1562)) src/switch_core_media.c:3262 -1
     (nil))

(insn 2362 2361 2363 234 (set (reg:SI 3 r3)
        (reg:SI 1564)) src/switch_core_media.c:3262 -1
     (nil))

(call_insn 2363 2362 2364 234 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3262 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 2364 2363 130 234 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3263 -1
     (nil))

(insn 130 2364 2365 234 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:3263 -1
     (nil))

(jump_insn 2365 130 2366 234 (set (pc)
        (label_ref 5127)) src/switch_core_media.c:3264 -1
     (nil)
 -> 5127)

(barrier 2366 2365 2367)

(code_label 2367 2366 2368 235 1405 "" [3 uses])

(note 2368 2367 2369 235 [bb 235] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2369 2368 2370 235 (var_location:SI crypto (reg/f:SI 457 [ prephitmp.1031 ])) src/switch_core_media.c:3268 -1
     (nil))

(debug_insn 2370 2369 2371 235 (var_location:SI __nptr (reg/f:SI 457 [ prephitmp.1031 ])) src/switch_core_media.c:3268 -1
     (nil))

(insn 2371 2370 2372 235 (set (reg:SI 0 r0)
        (reg/f:SI 457 [ prephitmp.1031 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2372 2371 2373 235 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 2373 2372 2374 235 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 2374 2373 2375 235 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 2375 2374 2376 235 (set (reg/v:SI 842 [ crypto_tag ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(debug_insn 2376 2375 2377 235 (var_location:SI crypto_tag (clobber (const_int 0 [0]))) src/switch_core_media.c:3269 -1
     (nil))

(insn 2377 2376 2378 235 (set (reg:SI 1569)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC331") [flags 0x82]  <var_decl 0x40410f00 *.LC331>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1032 [0x408])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1032 [0x408])
            ] 29)) src/switch_core_media.c:3270 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC331") [flags 0x82]  <var_decl 0x40410f00 *.LC331>)
        (nil)))

(insn 2378 2377 2379 235 (set (reg:SI 1568)
        (reg:SI 1569)) src/switch_core_media.c:3270 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC331") [flags 0x82]  <var_decl 0x40410f00 *.LC331>)
        (nil)))

(insn 2379 2378 2380 235 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 842 [ crypto_tag ])) src/switch_core_media.c:3270 -1
     (nil))

(insn 2380 2379 2381 235 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 1028 [ sdp_type ])) src/switch_core_media.c:3270 -1
     (nil))

(insn 2381 2380 2382 235 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3270 -1
     (nil))

(insn 2382 2381 2383 235 (set (reg:SI 1 r1)
        (reg:SI 1568)) src/switch_core_media.c:3270 -1
     (nil))

(insn 2383 2382 2384 235 (set (reg:SI 2 r2)
        (const_int 0 [0])) src/switch_core_media.c:3270 -1
     (nil))

(insn 2384 2383 2385 235 (set (reg:SI 3 r3)
        (reg/f:SI 457 [ prephitmp.1031 ])) src/switch_core_media.c:3270 -1
     (nil))

(call_insn 2385 2384 2386 235 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_check_incoming_crypto") [flags 0x1]  <function_decl 0x40945400 switch_core_session_check_incoming_crypto>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3270 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 2386 2385 2387 235 (set (reg/v:SI 175 [ got_crypto ])
        (reg:SI 0 r0)) src/switch_core_media.c:3270 -1
     (nil))

(debug_insn 2387 2386 2388 235 (var_location:SI got_crypto (reg/v:SI 175 [ got_crypto ])) src/switch_core_media.c:3270 -1
     (nil))

(code_label 2388 2387 2389 236 1399 "" [8 uses])

(note 2389 2388 2390 236 [bb 236] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2390 2389 2391 236 (var_location:SI got_crypto (reg/v:SI 175 [ got_crypto ])) -1
     (nil))

(debug_insn 2391 2390 2392 236 (var_location:SI maxptime (reg/v:SI 162 [ maxptime ])) -1
     (nil))

(debug_insn 2392 2391 2393 236 (var_location:SI ptime (reg/v:SI 158 [ ptime ])) -1
     (nil))

(insn 2393 2392 2394 236 (set (reg/v/f:SI 440 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 4 [0x4])) [2 attr_1599->a_next+0 S4 A32])) src/switch_core_media.c:3244 -1
     (nil))

(debug_insn 2394 2393 2395 236 (var_location:SI attr (reg/v/f:SI 440 [ attr ])) src/switch_core_media.c:3244 -1
     (nil))

(debug_insn 2395 2394 2396 236 (var_location:SI got_crypto (reg/v:SI 175 [ got_crypto ])) -1
     (nil))

(debug_insn 2396 2395 2397 236 (var_location:SI maxptime (reg/v:SI 162 [ maxptime ])) -1
     (nil))

(debug_insn 2397 2396 2398 236 (var_location:SI ptime (reg/v:SI 158 [ ptime ])) -1
     (nil))

(debug_insn 2398 2397 2400 236 (var_location:SI attr (reg/v/f:SI 440 [ attr ])) -1
     (nil))

(insn 2400 2398 2401 236 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 440 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3244 -1
     (nil))

(jump_insn 2401 2400 5478 236 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2399)
            (pc))) src/switch_core_media.c:3244 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil))
 -> 2399)

(note 5478 2401 5479 237 [bb 237] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5479 5478 5480 237 (set (pc)
        (label_ref 2402)) -1
     (nil)
 -> 2402)

(barrier 5480 5479 5482)

(code_label 5482 5480 5481 238 1543 "" [1 uses])

(note 5481 5482 61 238 [bb 238] NOTE_INSN_BASIC_BLOCK)

(insn 61 5481 62 238 (set (reg/v:SI 162 [ maxptime ])
        (reg/v:SI 164 [ dmaxptime ])) src/switch_core_media.c:3236 -1
     (nil))

(insn 62 61 2402 238 (set (reg/v:SI 158 [ ptime ])
        (reg/v:SI 160 [ dptime ])) src/switch_core_media.c:3236 -1
     (nil))

(code_label 2402 62 2403 239 1394 "" [2 uses])

(note 2403 2402 2404 239 [bb 239] NOTE_INSN_BASIC_BLOCK)

(insn 2404 2403 2405 239 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 175 [ got_crypto ])
            (const_int -1 [0xffffffffffffffff]))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2405 2404 2406 239 (set (reg:SI 1571)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2406 2405 2407 239 (set (reg:QI 1570)
        (subreg:QI (reg:SI 1571) 0)) src/switch_core_media.c:3276 -1
     (nil))

(insn 2407 2406 2408 239 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 445 [ got_savp ])
            (const_int 0 [0]))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2408 2407 2409 239 (set (reg:SI 1573)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2409 2408 2410 239 (set (reg:QI 1572)
        (subreg:QI (reg:SI 1573) 0)) src/switch_core_media.c:3276 -1
     (nil))

(insn 2410 2409 2411 239 (set (reg:SI 1574)
        (and:SI (subreg:SI (reg:QI 1570) 0)
            (subreg:SI (reg:QI 1572) 0))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2411 2410 2412 239 (set (reg:QI 1575)
        (subreg:QI (reg:SI 1574) 0)) src/switch_core_media.c:3276 -1
     (nil))

(insn 2412 2411 2413 239 (set (reg:SI 1576)
        (zero_extend:SI (reg:QI 1575))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2413 2412 2414 239 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1576)
            (const_int 0 [0]))) src/switch_core_media.c:3276 -1
     (nil))

(jump_insn 2414 2413 2415 239 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2441)
            (pc))) src/switch_core_media.c:3276 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2441)

(note 2415 2414 2416 240 [bb 240] NOTE_INSN_BASIC_BLOCK)

(insn 2416 2415 2417 240 (set (reg:SI 1577)
        (ior:SI (reg/v:SI 544 [ got_avp ])
            (reg/v:SI 188 [ got_webrtc ]))) src/switch_core_media.c:3276 -1
     (nil))

(insn 2417 2416 2418 240 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1577)
            (const_int 0 [0]))) src/switch_core_media.c:3276 -1
     (nil))

(jump_insn 2418 2417 2419 240 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2441)
            (pc))) src/switch_core_media.c:3276 -1
     (expr_list:REG_BR_PROB (const_int 9800 [0x2648])
        (nil))
 -> 2441)

(note 2419 2418 2420 241 [bb 241] NOTE_INSN_BASIC_BLOCK)

(insn 2420 2419 2421 241 (set (reg:SI 1579)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1033 [0x409])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1033 [0x409])
            ] 29)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2421 2420 2422 241 (set (reg:SI 1578)
        (reg:SI 1579)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2422 2421 2423 241 (set (reg:SI 1581)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1034 [0x40a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1034 [0x40a])
            ] 29)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2423 2422 2424 241 (set (reg/f:SI 1580)
        (reg:SI 1581)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2424 2423 2425 241 (set (reg:SI 1583)
        (plus:SI (reg/f:SI 1580)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3277 -1
     (nil))

(insn 2425 2424 2426 241 (set (reg:SI 1582)
        (plus:SI (reg:SI 1583)
            (const_int 8 [0x8]))) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1580)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2426 2425 2427 241 (set (reg:SI 1584)
        (const_int 3277 [0xccd])) src/switch_core_media.c:3277 -1
     (nil))

(insn 2427 2426 2428 241 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3277 -1
     (nil))

(insn 2428 2427 2429 241 (set (reg:SI 1585)
        (const_int 4 [0x4])) src/switch_core_media.c:3277 -1
     (nil))

(insn 2429 2428 2430 241 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1585)) src/switch_core_media.c:3277 -1
     (nil))

(insn 2430 2429 2431 241 (set (reg:SI 1587)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC332") [flags 0x82]  <var_decl 0x40410f60 *.LC332>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1035 [0x40b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1035 [0x40b])
            ] 29)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC332") [flags 0x82]  <var_decl 0x40410f60 *.LC332>)
        (nil)))

(insn 2431 2430 2432 241 (set (reg/f:SI 1586)
        (reg:SI 1587)) src/switch_core_media.c:3277 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC332") [flags 0x82]  <var_decl 0x40410f60 *.LC332>)
        (nil)))

(insn 2432 2431 2433 241 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1586)) src/switch_core_media.c:3277 -1
     (nil))

(insn 2433 2432 2434 241 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3277 -1
     (nil))

(insn 2434 2433 2435 241 (set (reg:SI 1 r1)
        (reg:SI 1578)) src/switch_core_media.c:3277 -1
     (nil))

(insn 2435 2434 2436 241 (set (reg:SI 2 r2)
        (reg:SI 1582)) src/switch_core_media.c:3277 -1
     (nil))

(insn 2436 2435 2437 241 (set (reg:SI 3 r3)
        (reg:SI 1584)) src/switch_core_media.c:3277 -1
     (nil))

(call_insn 2437 2436 2438 241 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3277 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 2438 2437 131 241 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3278 -1
     (nil))

(insn 131 2438 2439 241 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:3278 -1
     (nil))

(jump_insn 2439 131 2440 241 (set (pc)
        (label_ref 5127)) src/switch_core_media.c:3279 -1
     (nil)
 -> 5127)

(barrier 2440 2439 2441)

(code_label 2441 2440 2442 242 1407 "" [2 uses])

(note 2442 2441 2443 242 [bb 242] NOTE_INSN_BASIC_BLOCK)

(insn 2443 2442 2444 242 (set (reg/v/f:SI 471 [ connection ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 36 [0x24])) [2 sdp_198->sdp_connection+0 S4 A32])) src/switch_core_media.c:3282 -1
     (nil))

(debug_insn 2444 2443 2445 242 (var_location:SI connection (reg/v/f:SI 471 [ connection ])) src/switch_core_media.c:3282 -1
     (nil))

(insn 2445 2444 2446 242 (set (reg/v/f:SI 228 [ connection ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 48 [0x30])) [2 m_1764->m_connections+0 S4 A32])) src/switch_core_media.c:3283 -1
     (nil))

(insn 2446 2445 2447 242 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 228 [ connection ])
            (const_int 0 [0]))) src/switch_core_media.c:3283 -1
     (nil))

(jump_insn 2447 2446 2448 242 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2474)
            (pc))) src/switch_core_media.c:3283 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil))
 -> 2474)

(note 2448 2447 2449 243 [bb 243] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2449 2448 2450 243 (var_location:SI connection (reg/v/f:SI 471 [ connection ])) -1
     (nil))

(insn 2450 2449 2451 243 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 471 [ connection ])
            (const_int 0 [0]))) src/switch_core_media.c:3287 -1
     (nil))

(jump_insn 2451 2450 2452 243 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5488)
            (pc))) src/switch_core_media.c:3287 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 8650 [0x21ca])
        (nil))
 -> 5488)

(note 2452 2451 2453 244 [bb 244] NOTE_INSN_BASIC_BLOCK)

(insn 2453 2452 2454 244 (set (reg:SI 1589)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1036 [0x40c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1036 [0x40c])
            ] 29)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2454 2453 2455 244 (set (reg:SI 1588)
        (reg:SI 1589)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2455 2454 2456 244 (set (reg:SI 1591)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1037 [0x40d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1037 [0x40d])
            ] 29)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2456 2455 2457 244 (set (reg/f:SI 1590)
        (reg:SI 1591)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2457 2456 2458 244 (set (reg:SI 1593)
        (plus:SI (reg/f:SI 1590)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3288 -1
     (nil))

(insn 2458 2457 2459 244 (set (reg:SI 1592)
        (plus:SI (reg:SI 1593)
            (const_int 8 [0x8]))) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1590)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2459 2458 2460 244 (set (reg:SI 1594)
        (const_int 3288 [0xcd8])) src/switch_core_media.c:3288 -1
     (nil))

(insn 2460 2459 2461 244 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3288 -1
     (nil))

(insn 2461 2460 2462 244 (set (reg:SI 1595)
        (const_int 3 [0x3])) src/switch_core_media.c:3288 -1
     (nil))

(insn 2462 2461 2463 244 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1595)) src/switch_core_media.c:3288 -1
     (nil))

(insn 2463 2462 2464 244 (set (reg:SI 1597)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1038 [0x40e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1038 [0x40e])
            ] 29)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
        (nil)))

(insn 2464 2463 2465 244 (set (reg/f:SI 1596)
        (reg:SI 1597)) src/switch_core_media.c:3288 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
        (nil)))

(insn 2465 2464 2466 244 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1596)) src/switch_core_media.c:3288 -1
     (nil))

(insn 2466 2465 2467 244 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3288 -1
     (nil))

(insn 2467 2466 2468 244 (set (reg:SI 1 r1)
        (reg:SI 1588)) src/switch_core_media.c:3288 -1
     (nil))

(insn 2468 2467 2469 244 (set (reg:SI 2 r2)
        (reg:SI 1592)) src/switch_core_media.c:3288 -1
     (nil))

(insn 2469 2468 2470 244 (set (reg:SI 3 r3)
        (reg:SI 1594)) src/switch_core_media.c:3288 -1
     (nil))

(call_insn 2470 2469 2471 244 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3288 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 2471 2470 132 244 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3289 -1
     (nil))

(insn 132 2471 2472 244 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:3289 -1
     (nil))

(jump_insn 2472 132 2473 244 (set (pc)
        (label_ref 5127)) src/switch_core_media.c:3290 -1
     (nil)
 -> 5127)

(barrier 2473 2472 5488)

(code_label 5488 2473 5487 245 1545 "" [1 uses])

(note 5487 5488 63 245 [bb 245] NOTE_INSN_BASIC_BLOCK)

(insn 63 5487 2474 245 (set (reg/v/f:SI 228 [ connection ])
        (reg/v/f:SI 471 [ connection ])) src/switch_core_media.c:3287 -1
     (nil))

(code_label 2474 63 2475 246 1408 "" [1 uses])

(note 2475 2474 2476 246 [bb 246] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2476 2475 2477 246 (var_location:SI x (const_int 0 [0])) src/switch_core_media.c:3293 -1
     (nil))

(insn 2477 2476 2478 246 (set (reg/v/f:SI 283 [ map ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 40 [0x28])) [2 m_1764->m_rtpmaps+0 S4 A32])) src/switch_core_media.c:3295 -1
     (nil))

(debug_insn 2478 2477 2479 246 (var_location:SI map (reg/v/f:SI 283 [ map ])) src/switch_core_media.c:3295 -1
     (nil))

(debug_insn 2479 2478 2480 246 (var_location:SI map (reg/v/f:SI 283 [ map ])) -1
     (nil))

(debug_insn 2480 2479 2481 246 (var_location:SI nm_idx (reg/v:SI 211 [ nm_idx ])) -1
     (nil))

(debug_insn 2481 2480 2482 246 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 2482 2481 2483 246 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) -1
     (nil))

(debug_insn 2483 2482 2484 246 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))

(debug_insn 2484 2483 2485 246 (var_location:QI cng_pt (subreg:QI (reg/v:SI 149 [ cng_pt ]) 0)) -1
     (nil))

(debug_insn 2485 2484 2486 246 (var_location:QI best_te (subreg:QI (reg/v:SI 145 [ best_te ]) 0)) -1
     (nil))

(debug_insn 2486 2485 2487 246 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(insn 2487 2486 2488 246 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 283 [ map ])
            (const_int 0 [0]))) src/switch_core_media.c:3295 -1
     (nil))

(jump_insn 2488 2487 2489 246 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3245)
            (pc))) src/switch_core_media.c:3295 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 3245)

(note 2489 2488 3242 247 [bb 247] NOTE_INSN_BASIC_BLOCK)

(code_label 3242 2489 2490 248 1442 "" [1 uses])

(note 2490 3242 2491 248 [bb 248] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2491 2490 2492 248 (var_location:SI map_bit_rate (const_int 0 [0])) src/switch_core_media.c:3298 -1
     (nil))

(insn 2492 2491 2493 248 (set (reg:SI 1598)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3299 -1
     (nil))

(insn 2493 2492 2494 248 (set (reg:SI 1599)
        (const_int 0 [0])) src/switch_core_media.c:3299 -1
     (nil))

(insn 2494 2493 2495 248 (set (mem/s/c:SI (reg:SI 1598) [32 codec_fmtp+0 S4 A64])
        (reg:SI 1599)) src/switch_core_media.c:3299 -1
     (nil))

(insn 2495 2494 2496 248 (set (reg:SI 1598)
        (plus:SI (reg:SI 1598)
            (const_int 4 [0x4]))) src/switch_core_media.c:3299 -1
     (nil))

(insn 2496 2495 2497 248 (set (reg:SI 1600)
        (const_int 0 [0])) src/switch_core_media.c:3299 -1
     (nil))

(insn 2497 2496 2498 248 (set (mem/s/c:SI (reg:SI 1598) [32 codec_fmtp+4 S4 A32])
        (reg:SI 1600)) src/switch_core_media.c:3299 -1
     (nil))

(insn 2498 2497 2499 248 (set (reg:SI 1598)
        (plus:SI (reg:SI 1598)
            (const_int 4 [0x4]))) src/switch_core_media.c:3299 -1
     (nil))

(insn 2499 2498 2500 248 (set (reg:SI 1601)
        (const_int 0 [0])) src/switch_core_media.c:3299 -1
     (nil))

(insn 2500 2499 2501 248 (set (mem/s/c:SI (reg:SI 1598) [32 codec_fmtp+8 S4 A64])
        (reg:SI 1601)) src/switch_core_media.c:3299 -1
     (nil))

(insn 2501 2500 2502 248 (set (reg:SI 1598)
        (plus:SI (reg:SI 1598)
            (const_int 4 [0x4]))) src/switch_core_media.c:3299 -1
     (nil))

(insn 2502 2501 2503 248 (set (reg:SI 1602)
        (const_int 0 [0])) src/switch_core_media.c:3299 -1
     (nil))

(insn 2503 2502 2504 248 (set (mem/s/c:SI (reg:SI 1598) [32 codec_fmtp+12 S4 A32])
        (reg:SI 1602)) src/switch_core_media.c:3299 -1
     (nil))

(insn 2504 2503 2505 248 (set (reg:SI 1598)
        (plus:SI (reg:SI 1598)
            (const_int 4 [0x4]))) src/switch_core_media.c:3299 -1
     (nil))

(insn 2505 2504 2506 248 (set (reg/v/f:SI 221 [ rm_encoding ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 8 [0x8])) [2 map_1728->rm_encoding+0 S4 A32])) src/switch_core_media.c:3301 -1
     (nil))

(debug_insn 2506 2505 2507 248 (var_location:SI rm_encoding (reg/v/f:SI 221 [ rm_encoding ])) src/switch_core_media.c:3301 -1
     (nil))

(insn 2507 2506 2508 248 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 221 [ rm_encoding ])
            (const_int 0 [0]))) src/switch_core_media.c:3301 -1
     (nil))

(jump_insn 2508 2507 2509 248 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5492)
            (pc))) src/switch_core_media.c:3301 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 5492)

(note 2509 2508 5489 249 [bb 249] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5489 2509 5490 249 (set (pc)
        (label_ref 2510)) -1
     (nil)
 -> 2510)

(barrier 5490 5489 5492)

(code_label 5492 5490 5491 250 1546 "" [1 uses])

(note 5491 5492 64 250 [bb 250] NOTE_INSN_BASIC_BLOCK)

(insn 64 5491 65 250 (set (reg:SI 1029)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC149") [flags 0x82]  <var_decl 0x421b9c00 *.LC149>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 894 [0x37e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 894 [0x37e])
            ] 29)) src/switch_core_media.c:3302 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC149") [flags 0x82]  <var_decl 0x421b9c00 *.LC149>)
        (nil)))

(insn 65 64 2510 250 (set (reg/v/f:SI 221 [ rm_encoding ])
        (reg:SI 1029)) src/switch_core_media.c:3302 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC149") [flags 0x82]  <var_decl 0x421b9c00 *.LC149>)
        (nil)))

(code_label 2510 65 2511 251 1410 "" [1 uses])

(note 2511 2510 2512 251 [bb 251] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2512 2511 2513 251 (var_location:SI rm_encoding (reg/v/f:SI 221 [ rm_encoding ])) -1
     (nil))

(insn 2513 2512 2514 251 (set (reg:SI 1604)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC333") [flags 0x82]  <var_decl 0x40418000 *.LC333>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1039 [0x40f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1039 [0x40f])
            ] 29)) src/switch_core_media.c:3306 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC333") [flags 0x82]  <var_decl 0x40418000 *.LC333>)
        (nil)))

(insn 2514 2513 2515 251 (set (reg:SI 1603)
        (reg:SI 1604)) src/switch_core_media.c:3306 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC333") [flags 0x82]  <var_decl 0x40418000 *.LC333>)
        (nil)))

(insn 2515 2514 2516 251 (set (reg:SI 0 r0)
        (reg/v/f:SI 221 [ rm_encoding ])) src/switch_core_media.c:3306 -1
     (nil))

(insn 2516 2515 2517 251 (set (reg:SI 1 r1)
        (reg:SI 1603)) src/switch_core_media.c:3306 -1
     (nil))

(call_insn/i 2517 2516 2518 251 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3306 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2518 2517 2519 251 (set (reg:SI 472 [ D.44848 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3306 -1
     (nil))

(insn 2519 2518 2520 251 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 472 [ D.44848 ])
            (const_int 0 [0]))) src/switch_core_media.c:3306 -1
     (nil))

(jump_insn 2520 2519 2521 251 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2557)
            (pc))) src/switch_core_media.c:3306 -1
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil))
 -> 2557)

(note 2521 2520 2522 252 [bb 252] NOTE_INSN_BASIC_BLOCK)

(insn 2522 2521 2523 252 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ best_te ])
            (const_int 0 [0]))) src/switch_core_media.c:3307 -1
     (nil))

(jump_insn 2523 2522 2524 252 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2530)
            (pc))) src/switch_core_media.c:3307 -1
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil))
 -> 2530)

(note 2524 2523 2525 253 [bb 253] NOTE_INSN_BASIC_BLOCK)

(insn 2525 2524 2526 253 (set (reg/f:SI 1605)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3307 -1
     (nil))

(insn 2526 2525 2527 253 (set (reg:SI 1606)
        (mem/s:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 12 [0xc])) [26 map_1728->rm_rate+0 S4 A32])) src/switch_core_media.c:3307 -1
     (nil))

(insn 2527 2526 2528 253 (set (reg:SI 1607)
        (mem/s:SI (plus:SI (reg/f:SI 1605)
                (const_int 36 [0x24])) [26 D.44750_565->rm_rate+0 S4 A32])) src/switch_core_media.c:3307 -1
     (nil))

(insn 2528 2527 2529 253 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1606)
            (reg:SI 1607))) src/switch_core_media.c:3307 -1
     (nil))

(jump_insn 2529 2528 2530 253 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3223)
            (pc))) src/switch_core_media.c:3307 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 3223)

(code_label 2530 2529 2531 254 1412 "" [1 uses])

(note 2531 2530 2532 254 [bb 254] NOTE_INSN_BASIC_BLOCK)

(insn 2532 2531 2533 254 (set (reg:SI 1608)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3308 -1
     (nil))

(insn 2533 2532 2534 254 (set (reg:SI 1609)
        (lshiftrt:SI (reg:SI 1608)
            (const_int 1 [0x1]))) src/switch_core_media.c:3308 -1
     (nil))

(insn 2534 2533 2535 254 (set (reg/v:SI 145 [ best_te ])
        (zero_extend:SI (subreg:QI (reg:SI 1609) 0))) src/switch_core_media.c:3308 -1
     (nil))

(debug_insn 2535 2534 2536 254 (var_location:QI best_te (subreg:QI (reg/v:SI 145 [ best_te ]) 0)) src/switch_core_media.c:3308 -1
     (nil))

(insn 2536 2535 2537 254 (set (reg:SI 1611)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1040 [0x410])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1040 [0x410])
            ] 29)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2537 2536 2538 254 (set (reg:SI 1610)
        (reg:SI 1611)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2538 2537 2539 254 (set (reg:SI 1613)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1041 [0x411])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1041 [0x411])
            ] 29)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2539 2538 2540 254 (set (reg/f:SI 1612)
        (reg:SI 1613)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2540 2539 2541 254 (set (reg:SI 1615)
        (plus:SI (reg/f:SI 1612)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3309 -1
     (nil))

(insn 2541 2540 2542 254 (set (reg:SI 1614)
        (plus:SI (reg:SI 1615)
            (const_int 8 [0x8]))) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1612)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2542 2541 2543 254 (set (reg:SI 1616)
        (const_int 3309 [0xced])) src/switch_core_media.c:3309 -1
     (nil))

(insn 2543 2542 2544 254 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3309 -1
     (nil))

(insn 2544 2543 2545 254 (set (reg:SI 1617)
        (const_int 7 [0x7])) src/switch_core_media.c:3309 -1
     (nil))

(insn 2545 2544 2546 254 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1617)) src/switch_core_media.c:3309 -1
     (nil))

(insn 2546 2545 2547 254 (set (reg:SI 1619)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC334") [flags 0x82]  <var_decl 0x40418060 *.LC334>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1042 [0x412])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1042 [0x412])
            ] 29)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC334") [flags 0x82]  <var_decl 0x40418060 *.LC334>)
        (nil)))

(insn 2547 2546 2548 254 (set (reg/f:SI 1618)
        (reg:SI 1619)) src/switch_core_media.c:3309 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC334") [flags 0x82]  <var_decl 0x40418060 *.LC334>)
        (nil)))

(insn 2548 2547 2549 254 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1618)) src/switch_core_media.c:3309 -1
     (nil))

(insn 2549 2548 2550 254 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3309 -1
     (nil))

(insn 2550 2549 2551 254 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3309 -1
     (nil))

(insn 2551 2550 2552 254 (set (reg:SI 1 r1)
        (reg:SI 1610)) src/switch_core_media.c:3309 -1
     (nil))

(insn 2552 2551 2553 254 (set (reg:SI 2 r2)
        (reg:SI 1614)) src/switch_core_media.c:3309 -1
     (nil))

(insn 2553 2552 2554 254 (set (reg:SI 3 r3)
        (reg:SI 1616)) src/switch_core_media.c:3309 -1
     (nil))

(call_insn 2554 2553 2555 254 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3309 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 2555 2554 2556 254 (set (pc)
        (label_ref 3223)) src/switch_core_media.c:3309 -1
     (nil)
 -> 3223)

(barrier 2556 2555 2557)

(code_label 2557 2556 2558 255 1411 "" [1 uses])

(note 2558 2557 2559 255 [bb 255] NOTE_INSN_BASIC_BLOCK)

(insn 2559 2558 2560 255 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3314 -1
     (nil))

(insn 2560 2559 2561 255 (set (reg:SI 1 r1)
        (const_int 9 [0x9])) src/switch_core_media.c:3314 -1
     (nil))

(call_insn 2561 2560 2562 255 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3314 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2562 2561 2563 255 (set (reg:SI 478 [ D.44858 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3314 -1
     (nil))

(insn 2563 2562 2564 255 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 478 [ D.44858 ])
            (const_int 0 [0]))) src/switch_core_media.c:3314 -1
     (nil))

(jump_insn 2564 2563 2565 255 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2614)
            (pc))) src/switch_core_media.c:3314 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2614)

(note 2565 2564 2566 256 [bb 256] NOTE_INSN_BASIC_BLOCK)

(insn 2566 2565 2567 256 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 149 [ cng_pt ])
            (const_int 0 [0]))) src/switch_core_media.c:3314 -1
     (nil))

(jump_insn 2567 2566 2568 256 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2614)
            (pc))) src/switch_core_media.c:3314 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2614)

(note 2568 2567 2569 257 [bb 257] NOTE_INSN_BASIC_BLOCK)

(insn 2569 2568 2570 257 (set (reg:SI 1621)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC335") [flags 0x82]  <var_decl 0x404180c0 *.LC335>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1043 [0x413])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1043 [0x413])
            ] 29)) src/switch_core_media.c:3314 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC335") [flags 0x82]  <var_decl 0x404180c0 *.LC335>)
        (nil)))

(insn 2570 2569 2571 257 (set (reg:SI 1620)
        (reg:SI 1621)) src/switch_core_media.c:3314 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC335") [flags 0x82]  <var_decl 0x404180c0 *.LC335>)
        (nil)))

(insn 2571 2570 2572 257 (set (reg:SI 0 r0)
        (reg/v/f:SI 221 [ rm_encoding ])) src/switch_core_media.c:3314 -1
     (nil))

(insn 2572 2571 2573 257 (set (reg:SI 1 r1)
        (reg:SI 1620)) src/switch_core_media.c:3314 -1
     (nil))

(call_insn/i 2573 2572 2574 257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3314 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2574 2573 2575 257 (set (reg:SI 479 [ D.44863 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3314 -1
     (nil))

(insn 2575 2574 2576 257 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 479 [ D.44863 ])
            (const_int 0 [0]))) src/switch_core_media.c:3314 -1
     (nil))

(jump_insn 2576 2575 2577 257 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2614)
            (pc))) src/switch_core_media.c:3314 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2614)

(note 2577 2576 2578 258 [bb 258] NOTE_INSN_BASIC_BLOCK)

(insn 2578 2577 2579 258 (set (reg:SI 1622)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3315 -1
     (nil))

(insn 2579 2578 2580 258 (set (reg:SI 1623)
        (lshiftrt:SI (reg:SI 1622)
            (const_int 1 [0x1]))) src/switch_core_media.c:3315 -1
     (nil))

(insn 2580 2579 2581 258 (set (reg/v:SI 149 [ cng_pt ])
        (zero_extend:SI (subreg:QI (reg:SI 1623) 0))) src/switch_core_media.c:3315 -1
     (nil))

(debug_insn 2581 2580 2582 258 (var_location:QI cng_pt (subreg:QI (reg/v:SI 149 [ cng_pt ]) 0)) src/switch_core_media.c:3315 -1
     (nil))

(insn 2582 2581 2583 258 (set (reg:SI 1624)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3316 -1
     (nil))

(insn 2583 2582 2584 258 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1624)
            (const_int 0 [0]))) src/switch_core_media.c:3316 -1
     (nil))

(jump_insn 2584 2583 2585 258 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3223)
            (pc))) src/switch_core_media.c:3316 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 3223)

(note 2585 2584 2586 259 [bb 259] NOTE_INSN_BASIC_BLOCK)

(insn 2586 2585 2587 259 (set (reg:SI 1626)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1044 [0x414])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1044 [0x414])
            ] 29)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2587 2586 2588 259 (set (reg:SI 1625)
        (reg:SI 1626)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2588 2587 2589 259 (set (reg:SI 1628)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1045 [0x415])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1045 [0x415])
            ] 29)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2589 2588 2590 259 (set (reg/f:SI 1627)
        (reg:SI 1628)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2590 2589 2591 259 (set (reg:SI 1630)
        (plus:SI (reg/f:SI 1627)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3317 -1
     (nil))

(insn 2591 2590 2592 259 (set (reg:SI 1629)
        (plus:SI (reg:SI 1630)
            (const_int 8 [0x8]))) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1627)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2592 2591 2593 259 (set (reg:SI 1631)
        (const_int 3317 [0xcf5])) src/switch_core_media.c:3317 -1
     (nil))

(insn 2593 2592 2594 259 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3317 -1
     (nil))

(insn 2594 2593 2595 259 (set (reg:SI 1632)
        (const_int 7 [0x7])) src/switch_core_media.c:3317 -1
     (nil))

(insn 2595 2594 2596 259 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1632)) src/switch_core_media.c:3317 -1
     (nil))

(insn 2596 2595 2597 259 (set (reg:SI 1634)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC336") [flags 0x82]  <var_decl 0x40418120 *.LC336>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1046 [0x416])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1046 [0x416])
            ] 29)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC336") [flags 0x82]  <var_decl 0x40418120 *.LC336>)
        (nil)))

(insn 2597 2596 2598 259 (set (reg/f:SI 1633)
        (reg:SI 1634)) src/switch_core_media.c:3317 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC336") [flags 0x82]  <var_decl 0x40418120 *.LC336>)
        (nil)))

(insn 2598 2597 2599 259 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1633)) src/switch_core_media.c:3317 -1
     (nil))

(insn 2599 2598 2600 259 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v:SI 149 [ cng_pt ])) src/switch_core_media.c:3317 -1
     (nil))

(insn 2600 2599 2601 259 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3317 -1
     (nil))

(insn 2601 2600 2602 259 (set (reg:SI 1 r1)
        (reg:SI 1625)) src/switch_core_media.c:3317 -1
     (nil))

(insn 2602 2601 2603 259 (set (reg:SI 2 r2)
        (reg:SI 1629)) src/switch_core_media.c:3317 -1
     (nil))

(insn 2603 2602 2604 259 (set (reg:SI 3 r3)
        (reg:SI 1631)) src/switch_core_media.c:3317 -1
     (nil))

(call_insn 2604 2603 2605 259 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3317 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 2605 2604 2606 259 (set (reg:SI 1635)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3318 -1
     (nil))

(insn 2606 2605 2607 259 (set (reg:SI 1637)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3318 -1
     (nil))

(insn 2607 2606 2608 259 (set (reg/f:SI 1636)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1637)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3318 -1
     (nil))

(insn 2608 2607 2609 259 (set (reg:SI 1638)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 1636)
                    (const_int 140 [0x8c])) [0 D.44471_577->cng_pt+0 S1 A32]))) src/switch_core_media.c:3318 -1
     (nil))

(insn 2609 2608 2610 259 (set (reg:SI 0 r0)
        (reg:SI 1635)) src/switch_core_media.c:3318 -1
     (nil))

(insn 2610 2609 2611 259 (set (reg:SI 1 r1)
        (reg:SI 1638)) src/switch_core_media.c:3318 -1
     (nil))

(call_insn 2611 2610 2612 259 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_cng_pt") [flags 0x41]  <function_decl 0x408cec00 switch_rtp_set_cng_pt>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3318 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 2612 2611 2613 259 (set (pc)
        (label_ref 3223)) src/switch_core_media.c:3318 -1
     (nil)
 -> 3223)

(barrier 2613 2612 2614)

(code_label 2614 2613 2615 260 1414 "" [3 uses])

(note 2615 2614 2616 260 [bb 260] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2616 2615 2617 260 (var_location:SI x (clobber (const_int 0 [0]))) src/switch_core_media.c:3324 -1
     (nil))

(insn 2617 2616 2618 260 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ match ])
            (const_int 0 [0]))) src/switch_core_media.c:3328 -1
     (nil))

(jump_insn 2618 2617 2619 260 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3223)
            (pc))) src/switch_core_media.c:3328 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3223)

(note 2619 2618 2620 261 [bb 261] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2620 2619 2621 261 (var_location:SI codec_ms (reg/v:SI 158 [ ptime ])) src/switch_core_media.c:3332 -1
     (nil))

(insn 2621 2620 2622 261 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 162 [ maxptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3334 -1
     (nil))

(jump_insn 2622 2621 2623 261 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2638)
            (pc))) src/switch_core_media.c:3334 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2638)

(note 2623 2622 2624 262 [bb 262] NOTE_INSN_BASIC_BLOCK)

(insn 2624 2623 2625 262 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ ptime ])
            (reg/v:SI 162 [ maxptime ]))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2625 2624 2626 262 (set (reg:SI 1640)
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2626 2625 2627 262 (set (reg:QI 1639)
        (subreg:QI (reg:SI 1640) 0)) src/switch_core_media.c:3334 -1
     (nil))

(insn 2627 2626 2628 262 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ ptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2628 2627 2629 262 (set (reg:SI 1642)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2629 2628 2630 262 (set (reg:QI 1641)
        (subreg:QI (reg:SI 1642) 0)) src/switch_core_media.c:3334 -1
     (nil))

(insn 2630 2629 2631 262 (set (reg:SI 1643)
        (ior:SI (subreg:SI (reg:QI 1639) 0)
            (subreg:SI (reg:QI 1641) 0))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2631 2630 2632 262 (set (reg:QI 1644)
        (subreg:QI (reg:SI 1643) 0)) src/switch_core_media.c:3334 -1
     (nil))

(insn 2632 2631 2633 262 (set (reg:SI 1645)
        (zero_extend:SI (reg:QI 1644))) src/switch_core_media.c:3334 -1
     (nil))

(insn 2633 2632 2634 262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1645)
            (const_int 0 [0]))) src/switch_core_media.c:3334 -1
     (nil))

(jump_insn 2634 2633 2635 262 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5494)
            (pc))) src/switch_core_media.c:3334 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5494)

(note 2635 2634 144 263 [bb 263] NOTE_INSN_BASIC_BLOCK)

(insn 144 2635 2636 263 (set (reg/v:SI 196 [ codec_ms ])
        (reg/v:SI 158 [ ptime ])) src/switch_core_media.c:3334 -1
     (nil))

(jump_insn 2636 144 2637 263 (set (pc)
        (label_ref 5211)) src/switch_core_media.c:3334 -1
     (nil)
 -> 5211)

(barrier 2637 2636 2638)

(code_label 2638 2637 2639 264 1415 "" [1 uses])

(note 2639 2638 2640 264 [bb 264] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2640 2639 2641 264 (var_location:SI codec_ms (reg/v:SI 158 [ ptime ])) -1
     (nil))

(insn 2641 2640 2642 264 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ ptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3338 -1
     (nil))

(jump_insn 2642 2641 2643 264 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5498)
            (pc))) src/switch_core_media.c:3338 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 4200 [0x1068])
        (nil))
 -> 5498)

(note 2643 2642 2644 265 [bb 265] NOTE_INSN_BASIC_BLOCK)

(insn 2644 2643 2645 265 (set (reg:SI 1646)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3339 -1
     (nil))

(insn 2645 2644 2646 265 (set (reg:SI 1647)
        (lshiftrt:SI (reg:SI 1646)
            (const_int 1 [0x1]))) src/switch_core_media.c:3339 -1
     (nil))

(insn 2646 2645 2647 265 (set (reg:SI 1648)
        (zero_extend:SI (subreg:QI (reg:SI 1647) 0))) src/switch_core_media.c:3339 -1
     (nil))

(insn 2647 2646 2648 265 (set (reg:SI 0 r0)
        (reg/v/f:SI 221 [ rm_encoding ])) src/switch_core_media.c:3339 -1
     (nil))

(insn 2648 2647 2649 265 (set (reg:SI 1 r1)
        (reg:SI 1648)) src/switch_core_media.c:3339 -1
     (nil))

(call_insn 2649 2648 2650 265 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_default_ptime") [flags 0x41]  <function_decl 0x40749700 switch_default_ptime>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3339 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2650 2649 2651 265 (set (reg:SI 492 [ D.44885 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3339 -1
     (nil))

(insn 2651 2650 2652 265 (set (reg/v:SI 196 [ codec_ms ])
        (reg:SI 492 [ D.44885 ])) src/switch_core_media.c:3339 -1
     (nil))

(debug_insn 2652 2651 5495 265 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) src/switch_core_media.c:3339 -1
     (nil))

(jump_insn 5495 2652 5496 265 (set (pc)
        (label_ref 2653)) -1
     (nil)
 -> 2653)

(barrier 5496 5495 5498)

(code_label 5498 5496 5497 266 1548 "" [1 uses])

(note 5497 5498 66 266 [bb 266] NOTE_INSN_BASIC_BLOCK)

(insn 66 5497 2653 266 (set (reg/v:SI 196 [ codec_ms ])
        (reg/v:SI 158 [ ptime ])) src/switch_core_media.c:3338 -1
     (nil))

(code_label 2653 66 2654 267 1417 "" [2 uses])

(note 2654 2653 2655 267 [bb 267] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2655 2654 2656 267 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) -1
     (nil))

(insn 2656 2655 2657 267 (set (reg:SI 1649)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3342 -1
     (nil))

(insn 2657 2656 2658 267 (set (reg:SI 1650)
        (lshiftrt:SI (reg:SI 1649)
            (const_int 1 [0x1]))) src/switch_core_media.c:3342 -1
     (nil))

(insn 2658 2657 2659 267 (set (reg:SI 494 [ csui.173 ])
        (zero_extend:SI (subreg:QI (reg:SI 1650) 0))) src/switch_core_media.c:3342 -1
     (nil))

(debug_insn 2659 2658 2660 267 (var_location:QI payload (subreg:QI (reg:SI 494 [ csui.173 ]) 0)) src/switch_core_media.c:3342 -1
     (nil))

(insn 2660 2659 2661 267 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 494 [ csui.173 ])
            (const_int 18 [0x12]))) src/switch_core_media.c:3342 -1
     (nil))

(jump_insn 2661 2660 2662 267 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5502)
            (pc))) src/switch_core_media.c:3342 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5502)

(note 2662 2661 2663 268 [bb 268] NOTE_INSN_BASIC_BLOCK)

(insn 2663 2662 2664 268 (set (reg:SI 1652)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1047 [0x417])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1047 [0x417])
            ] 29)) src/switch_core_media.c:3342 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2664 2663 2665 268 (set (reg/f:SI 1651)
        (reg:SI 1652)) src/switch_core_media.c:3342 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2665 2664 2666 268 (set (reg:SI 1653)
        (const_int 184 [0xb8])) src/switch_core_media.c:3342 -1
     (nil))

(insn 2666 2665 2667 268 (set (reg:SI 1654)
        (ashift:SI (reg:SI 494 [ csui.173 ])
            (const_int 2 [0x2]))) src/switch_core_media.c:3342 -1
     (nil))

(insn 2667 2666 2668 268 (set (reg:SI 1655)
        (plus:SI (reg/f:SI 1651)
            (reg:SI 1654))) src/switch_core_media.c:3342 -1
     (nil))

(insn 2668 2667 2669 268 (set (reg/f:SI 1656)
        (plus:SI (reg:SI 1655)
            (reg:SI 1653))) src/switch_core_media.c:3342 -1
     (nil))

(insn 2669 2668 5499 268 (set (reg/v:SI 222 [ map_bit_rate ])
        (mem/s/u:SI (reg/f:SI 1656) [4 CSWTCH.174 S4 A32])) src/switch_core_media.c:3342 -1
     (nil))

(jump_insn 5499 2669 5500 268 (set (pc)
        (label_ref 2670)) -1
     (nil)
 -> 2670)

(barrier 5500 5499 5502)

(code_label 5502 5500 5501 269 1549 "" [1 uses])

(note 5501 5502 67 269 [bb 269] NOTE_INSN_BASIC_BLOCK)

(insn 67 5501 2670 269 (set (reg/v:SI 222 [ map_bit_rate ])
        (const_int 0 [0])) -1
     (nil))

(code_label 2670 67 2671 270 1418 "" [1 uses])

(note 2671 2670 2672 270 [bb 270] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2672 2671 2673 270 (var_location:SI map_bit_rate (clobber (const_int 0 [0]))) src/switch_core_media.c:3342 -1
     (nil))

(insn 2673 2672 2674 270 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ ptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3344 -1
     (nil))

(jump_insn 2674 2673 2675 270 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2686)
            (pc))) src/switch_core_media.c:3344 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2686)

(note 2675 2674 2676 271 [bb 271] NOTE_INSN_BASIC_BLOCK)

(insn 2676 2675 2677 271 (set (reg:SI 1657)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 8 [0x8])) [2 map_1728->rm_encoding+0 S4 A32])) src/switch_core_media.c:3344 -1
     (nil))

(insn 2677 2676 2678 271 (set (reg:SI 1659)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC70") [flags 0x82]  <var_decl 0x41ea4000 *.LC70>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1048 [0x418])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1048 [0x418])
            ] 29)) src/switch_core_media.c:3344 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC70") [flags 0x82]  <var_decl 0x41ea4000 *.LC70>)
        (nil)))

(insn 2678 2677 2679 271 (set (reg:SI 1658)
        (reg:SI 1659)) src/switch_core_media.c:3344 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC70") [flags 0x82]  <var_decl 0x41ea4000 *.LC70>)
        (nil)))

(insn 2679 2678 2680 271 (set (reg:SI 0 r0)
        (reg:SI 1657)) src/switch_core_media.c:3344 -1
     (nil))

(insn 2680 2679 2681 271 (set (reg:SI 1 r1)
        (reg:SI 1658)) src/switch_core_media.c:3344 -1
     (nil))

(call_insn/i 2681 2680 2682 271 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3344 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2682 2681 2683 271 (set (reg:SI 496 [ D.44890 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3344 -1
     (nil))

(insn 2683 2682 2684 271 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 496 [ D.44890 ])
            (const_int 0 [0]))) src/switch_core_media.c:3344 -1
     (nil))

(jump_insn 2684 2683 2685 271 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5506)
            (pc))) src/switch_core_media.c:3344 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5506)

(note 2685 2684 5503 272 [bb 272] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5503 2685 5504 272 (set (pc)
        (label_ref 2686)) -1
     (nil)
 -> 2686)

(barrier 5504 5503 5506)

(code_label 5506 5504 5505 273 1550 "" [1 uses])

(note 5505 5506 68 273 [bb 273] NOTE_INSN_BASIC_BLOCK)

(insn 68 5505 2686 273 (set (reg/v:SI 196 [ codec_ms ])
        (const_int 33 [0x21])) src/switch_core_media.c:3345 -1
     (nil))

(code_label 2686 68 2687 274 1419 "" [2 uses])

(note 2687 2686 2688 274 [bb 274] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2688 2687 2689 274 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) -1
     (nil))

(insn 2689 2688 2690 274 (set (reg/v:SI 199 [ remote_codec_rate ])
        (mem/s:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 12 [0xc])) [26 map_1728->rm_rate+0 S4 A32])) src/switch_core_media.c:3348 -1
     (nil))

(debug_insn 2690 2689 2691 274 (var_location:SI remote_codec_rate (reg/v:SI 199 [ remote_codec_rate ])) src/switch_core_media.c:3348 -1
     (nil))

(debug_insn 2691 2690 2692 274 (var_location:SI fmtp_remote_codec_rate (const_int 0 [0])) src/switch_core_media.c:3349 -1
     (nil))

(insn 2692 2691 2693 274 (set (reg:SI 1660)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3350 -1
     (nil))

(insn 2693 2692 2694 274 (set (reg:SI 1661)
        (reg:SI 1660)) src/switch_core_media.c:3350 -1
     (nil))

(insn 2694 2693 2695 274 (set (reg:SI 1662)
        (const_int 0 [0])) src/switch_core_media.c:3350 -1
     (nil))

(insn 2695 2694 2696 274 (set (mem/s/c:SI (reg:SI 1661) [0 codec_fmtp+0 S4 A64])
        (reg:SI 1662)) src/switch_core_media.c:3350 -1
     (nil))

(insn 2696 2695 2697 274 (set (reg:SI 1661)
        (plus:SI (reg:SI 1661)
            (const_int 4 [0x4]))) src/switch_core_media.c:3350 -1
     (nil))

(insn 2697 2696 2698 274 (set (reg:SI 1663)
        (const_int 0 [0])) src/switch_core_media.c:3350 -1
     (nil))

(insn 2698 2697 2699 274 (set (mem/s/c:SI (reg:SI 1661) [0 codec_fmtp+4 S4 A32])
        (reg:SI 1663)) src/switch_core_media.c:3350 -1
     (nil))

(insn 2699 2698 2700 274 (set (reg:SI 1661)
        (plus:SI (reg:SI 1661)
            (const_int 4 [0x4]))) src/switch_core_media.c:3350 -1
     (nil))

(insn 2700 2699 2701 274 (set (reg:SI 1664)
        (const_int 0 [0])) src/switch_core_media.c:3350 -1
     (nil))

(insn 2701 2700 2702 274 (set (mem/s/c:SI (reg:SI 1661) [0 codec_fmtp+8 S4 A64])
        (reg:SI 1664)) src/switch_core_media.c:3350 -1
     (nil))

(insn 2702 2701 2703 274 (set (reg:SI 1661)
        (plus:SI (reg:SI 1661)
            (const_int 4 [0x4]))) src/switch_core_media.c:3350 -1
     (nil))

(insn 2703 2702 2704 274 (set (reg:SI 1665)
        (const_int 0 [0])) src/switch_core_media.c:3350 -1
     (nil))

(insn 2704 2703 2705 274 (set (mem/s/c:SI (reg:SI 1661) [0 codec_fmtp+12 S4 A32])
        (reg:SI 1665)) src/switch_core_media.c:3350 -1
     (nil))

(insn 2705 2704 2706 274 (set (reg:SI 1661)
        (plus:SI (reg:SI 1661)
            (const_int 4 [0x4]))) src/switch_core_media.c:3350 -1
     (nil))

(insn 2706 2705 2707 274 (set (reg/f:SI 497 [ D.44893 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 20 [0x14])) [2 map_1728->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3352 -1
     (nil))

(debug_insn 2707 2706 2708 274 (var_location:SI s (reg/f:SI 497 [ D.44893 ])) src/switch_core_media.c:3352 -1
     (nil))

(insn 2708 2707 2709 274 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 497 [ D.44893 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2709 2708 2710 274 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2714)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 2714)

(note 2710 2709 2711 275 [bb 275] NOTE_INSN_BASIC_BLOCK)

(insn 2711 2710 2712 275 (set (reg:SI 1666)
        (zero_extend:SI (mem:QI (reg/f:SI 497 [ D.44893 ]) [0 *D.44893_598+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 2712 2711 2713 275 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1666)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2713 2712 2714 275 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5216)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5216)

(code_label 2714 2713 2715 276 1420 "" [1 uses])

(note 2715 2714 2716 276 [bb 276] NOTE_INSN_BASIC_BLOCK)

(insn 2716 2715 2717 276 (set (reg/f:SI 498 [ D.44889 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 8 [0x8])) [2 map_1728->rm_encoding+0 S4 A32])) src/switch_core_media.c:3353 -1
     (nil))

(insn 2717 2716 2718 276 (set (reg:SI 1668)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1049 [0x419])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1049 [0x419])
            ] 29)) src/switch_core_media.c:3353 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
        (nil)))

(insn 2718 2717 2719 276 (set (reg:SI 1667)
        (reg:SI 1668)) src/switch_core_media.c:3353 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
        (nil)))

(insn 2719 2718 2720 276 (set (reg:SI 0 r0)
        (reg/f:SI 498 [ D.44889 ])) src/switch_core_media.c:3353 -1
     (nil))

(insn 2720 2719 2721 276 (set (reg:SI 1 r1)
        (reg:SI 1667)) src/switch_core_media.c:3353 -1
     (nil))

(call_insn/i 2721 2720 2722 276 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3353 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2722 2721 2723 276 (set (reg:SI 499 [ D.44897 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3353 -1
     (nil))

(insn 2723 2722 2724 276 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 499 [ D.44897 ])
            (const_int 0 [0]))) src/switch_core_media.c:3353 -1
     (nil))

(jump_insn 2724 2723 2725 276 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5510)
            (pc))) src/switch_core_media.c:3353 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5510)

(note 2725 2724 2726 277 [bb 277] NOTE_INSN_BASIC_BLOCK)

(insn 2726 2725 2727 277 (set (reg:SI 1670)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1050 [0x41a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1050 [0x41a])
            ] 29)) src/switch_core_media.c:3356 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
        (nil)))

(insn 2727 2726 2728 277 (set (reg:SI 1669)
        (reg:SI 1670)) src/switch_core_media.c:3356 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
        (nil)))

(insn 2728 2727 2729 277 (set (reg:SI 0 r0)
        (reg/f:SI 498 [ D.44889 ])) src/switch_core_media.c:3356 -1
     (nil))

(insn 2729 2728 2730 277 (set (reg:SI 1 r1)
        (reg:SI 1669)) src/switch_core_media.c:3356 -1
     (nil))

(call_insn/i 2730 2729 2731 277 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3356 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2731 2730 2732 277 (set (reg:SI 500 [ D.44901 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3356 -1
     (nil))

(insn 2732 2731 2733 277 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 500 [ D.44901 ])
            (const_int 0 [0]))) src/switch_core_media.c:3356 -1
     (nil))

(jump_insn 2733 2732 2734 277 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5514)
            (pc))) src/switch_core_media.c:3356 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5514)

(note 2734 2733 69 278 [bb 278] NOTE_INSN_BASIC_BLOCK)

(insn 69 2734 2735 278 (set (reg/v:SI 201 [ fmtp_remote_codec_rate ])
        (const_int 0 [0])) src/switch_core_media.c:3349 -1
     (nil))

(jump_insn 2735 69 2736 278 (set (pc)
        (label_ref 2761)) src/switch_core_media.c:3356 -1
     (nil)
 -> 2761)

(barrier 2736 2735 5227)

(code_label 5227 2736 2737 279 1512 "" [1 uses])

(note 2737 5227 2738 279 [bb 279] NOTE_INSN_BASIC_BLOCK)

(insn 2738 2737 2739 279 (set (reg:SI 504 [ D.44908 ])
        (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [4 codec_fmtp.bits_per_second+0 S4 A32])) src/switch_core_media.c:3362 -1
     (nil))

(insn 2739 2738 2740 279 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 504 [ D.44908 ])
            (const_int 0 [0]))) src/switch_core_media.c:3362 -1
     (nil))

(jump_insn 2740 2739 2741 279 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2744)
            (pc))) src/switch_core_media.c:3362 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2744)

(note 2741 2740 2742 280 [bb 280] NOTE_INSN_BASIC_BLOCK)

(insn 2742 2741 2743 280 (set (reg/v:SI 222 [ map_bit_rate ])
        (reg:SI 504 [ D.44908 ])) src/switch_core_media.c:3363 -1
     (nil))

(debug_insn 2743 2742 2744 280 (var_location:SI map_bit_rate (reg/v:SI 222 [ map_bit_rate ])) src/switch_core_media.c:3363 -1
     (nil))

(code_label 2744 2743 2745 281 1423 "" [1 uses])

(note 2745 2744 2746 281 [bb 281] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2746 2745 2747 281 (var_location:SI map_bit_rate (reg/v:SI 222 [ map_bit_rate ])) -1
     (nil))

(insn 2747 2746 2748 281 (set (reg:SI 505 [ D.44911 ])
        (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [4 codec_fmtp.microseconds_per_packet+0 S4 A64])) src/switch_core_media.c:3365 -1
     (nil))

(insn 2748 2747 2749 281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 505 [ D.44911 ])
            (const_int 0 [0]))) src/switch_core_media.c:3365 -1
     (nil))

(jump_insn 2749 2748 2750 281 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2757)
            (pc))) src/switch_core_media.c:3365 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2757)

(note 2750 2749 2751 282 [bb 282] NOTE_INSN_BASIC_BLOCK)

(insn 2751 2750 2752 282 (set (reg:SI 1672)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3366 -1
     (nil))

(insn 2752 2751 2753 282 (parallel [
            (set (reg:SI 1671)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 505 [ D.44911 ]))
                            (sign_extend:DI (reg:SI 1672)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3366 -1
     (nil))

(insn 2753 2752 2754 282 (set (reg:SI 1673)
        (ashiftrt:SI (reg:SI 1671)
            (const_int 6 [0x6]))) src/switch_core_media.c:3366 -1
     (nil))

(insn 2754 2753 2755 282 (set (reg:SI 1674)
        (ashiftrt:SI (reg:SI 505 [ D.44911 ])
            (const_int 31 [0x1f]))) src/switch_core_media.c:3366 -1
     (nil))

(insn 2755 2754 2756 282 (set (reg/v:SI 196 [ codec_ms ])
        (minus:SI (reg:SI 1673)
            (reg:SI 1674))) src/switch_core_media.c:3366 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 505 [ D.44911 ])
            (const_int 1000 [0x3e8]))
        (nil)))

(debug_insn 2756 2755 2757 282 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) src/switch_core_media.c:3366 -1
     (nil))

(code_label 2757 2756 2758 283 1424 "" [1 uses])

(note 2758 2757 2759 283 [bb 283] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2759 2758 2760 283 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) -1
     (nil))

(insn 2760 2759 5507 283 (set (reg/v:SI 201 [ fmtp_remote_codec_rate ])
        (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [4 codec_fmtp.actual_samples_per_second+0 S4 A64])) src/switch_core_media.c:3368 -1
     (nil))

(jump_insn 5507 2760 5508 283 (set (pc)
        (label_ref 2761)) -1
     (nil)
 -> 2761)

(barrier 5508 5507 5510)

(code_label 5510 5508 5509 284 1551 "" [1 uses])

(note 5509 5510 74 284 [bb 284] NOTE_INSN_BASIC_BLOCK)

(insn 74 5509 75 284 (set (reg/v:SI 222 [ map_bit_rate ])
        (const_int 13332 [0x3414])) src/switch_core_media.c:3355 -1
     (nil))

(insn 75 74 76 284 (set (reg/v:SI 201 [ fmtp_remote_codec_rate ])
        (const_int 0 [0])) src/switch_core_media.c:3349 -1
     (nil))

(insn 76 75 5511 284 (set (reg/v:SI 196 [ codec_ms ])
        (const_int 32 [0x20])) src/switch_core_media.c:3354 -1
     (nil))

(jump_insn 5511 76 5512 284 (set (pc)
        (label_ref 2761)) -1
     (nil)
 -> 2761)

(barrier 5512 5511 5514)

(code_label 5514 5512 5513 285 1552 "" [1 uses])

(note 5513 5514 71 285 [bb 285] NOTE_INSN_BASIC_BLOCK)

(insn 71 5513 72 285 (set (reg/v:SI 222 [ map_bit_rate ])
        (const_int 32001 [0x7d01])) src/switch_core_media.c:3358 -1
     (nil))

(insn 72 71 73 285 (set (reg/v:SI 201 [ fmtp_remote_codec_rate ])
        (const_int 0 [0])) src/switch_core_media.c:3349 -1
     (nil))

(insn 73 72 2761 285 (set (reg/v:SI 196 [ codec_ms ])
        (const_int 39 [0x27])) src/switch_core_media.c:3357 -1
     (nil))

(code_label 2761 73 2762 286 1422 "" [4 uses])

(note 2762 2761 2763 286 [bb 286] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2763 2762 2764 286 (var_location:SI map_bit_rate (reg/v:SI 222 [ map_bit_rate ])) -1
     (nil))

(debug_insn 2764 2763 2765 286 (var_location:SI fmtp_remote_codec_rate (reg/v:SI 201 [ fmtp_remote_codec_rate ])) -1
     (nil))

(debug_insn 2765 2764 2766 286 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) -1
     (nil))

(debug_insn 2766 2765 2767 286 (var_location:SI i (const_int 0 [0])) src/switch_core_media.c:3374 -1
     (nil))

(debug_insn 2767 2766 2768 286 (var_location:SI i (const_int 0 [0])) -1
     (nil))

(debug_insn 2768 2767 2769 286 (var_location:SI nm_idx (reg/v:SI 211 [ nm_idx ])) -1
     (nil))

(debug_insn 2769 2768 2770 286 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 2770 2769 2771 286 (var_location:SI remote_codec_rate (reg/v:SI 199 [ remote_codec_rate ])) -1
     (nil))

(debug_insn 2771 2770 2772 286 (var_location:QI match (const_int 0 [0])) -1
     (nil))

(insn 2772 2771 2773 286 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 194 [ total_codecs ])
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2773 2772 2774 286 (set (reg:SI 1676)
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2774 2773 2775 286 (set (reg:QI 1675)
        (subreg:QI (reg:SI 1676) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 2775 2774 2776 286 (set (reg:SI 1678)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3374 -1
     (nil))

(insn 2776 2775 2777 286 (set (reg/f:SI 1677)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1678)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3374 -1
     (nil))

(insn 2777 2776 2778 286 (set (reg:SI 1680)
        (mem/s:SI (plus:SI (reg/f:SI 1677)
                (const_int 128 [0x80])) [4 D.44471_1501->num_codecs+0 S4 A32])) src/switch_core_media.c:3374 -1
     (nil))

(insn 2778 2777 2779 286 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1680)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2779 2778 2780 286 (set (reg:SI 1681)
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2780 2779 2781 286 (set (reg:QI 1679)
        (subreg:QI (reg:SI 1681) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 2781 2780 2782 286 (set (reg:SI 1682)
        (and:SI (subreg:SI (reg:QI 1675) 0)
            (subreg:SI (reg:QI 1679) 0))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2782 2781 2783 286 (set (reg:QI 1683)
        (subreg:QI (reg:SI 1682) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 2783 2782 2784 286 (set (reg:SI 1684)
        (zero_extend:SI (reg:QI 1683))) src/switch_core_media.c:3374 -1
     (nil))

(insn 2784 2783 2785 286 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1684)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(jump_insn 2785 2784 2786 286 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3217)
            (pc))) src/switch_core_media.c:3374 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 3217)

(note 2786 2785 2787 287 [bb 287] NOTE_INSN_BASIC_BLOCK)

(insn 2787 2786 2788 287 (set (reg:SI 1685)
        (const_int 1000 [0x3e8])) src/switch_core_media.c:3414 -1
     (nil))

(insn 2788 2787 2789 287 (set (reg:SI 560 [ D.44993 ])
        (mult:SI (reg:SI 1685)
            (reg/v:SI 196 [ codec_ms ]))) src/switch_core_media.c:3414 -1
     (nil))

(insn 2789 2788 77 287 (set (reg:SI 340 [ ivtmp.1076 ])
        (reg/v/f:SI 193 [ codec_array ])) src/switch_core_media.c:3414 -1
     (nil))

(insn 77 2789 3202 287 (set (reg/v:SI 573 [ i ])
        (const_int 0 [0])) src/switch_core_media.c:3374 -1
     (nil))

(code_label 3202 77 2790 288 1441 "" [1 uses])

(note 2790 3202 2791 288 [bb 288] NOTE_INSN_BASIC_BLOCK)

(insn 2791 2790 2792 288 (set (reg/v/f:SI 515 [ imp ])
        (mem/f:SI (reg:SI 340 [ ivtmp.1076 ]) [2 MEM[base: D.49971_95, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3375 -1
     (nil))

(insn 2792 2791 2793 288 (set (reg:SI 340 [ ivtmp.1076 ])
        (plus:SI (reg:SI 340 [ ivtmp.1076 ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3375 -1
     (nil))

(debug_insn 2793 2792 2794 288 (var_location:SI imp (reg/v/f:SI 515 [ imp ])) src/switch_core_media.c:3375 -1
     (nil))

(insn 2794 2793 2795 288 (set (reg:SI 516 [ D.44920 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 24 [0x18])) [4 imp_629->bits_per_second+0 S4 A32])) src/switch_core_media.c:3376 -1
     (nil))

(debug_insn 2795 2794 2796 288 (var_location:SI bit_rate (reg:SI 516 [ D.44920 ])) src/switch_core_media.c:3376 -1
     (nil))

(insn 2796 2795 2797 288 (set (reg/v:SI 518 [ codec_rate ])
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 16 [0x10])) [4 imp_629->samples_per_second+0 S4 A32])) src/switch_core_media.c:3377 -1
     (nil))

(debug_insn 2797 2796 2798 288 (var_location:SI codec_rate (reg/v:SI 518 [ codec_rate ])) src/switch_core_media.c:3377 -1
     (nil))

(insn 2798 2797 2799 288 (set (reg:SI 1686)
        (mem/s:SI (reg/v/f:SI 515 [ imp ]) [17 imp_629->codec_type+0 S4 A32])) src/switch_core_media.c:3379 -1
     (nil))

(insn 2799 2798 2800 288 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1686)
            (const_int 0 [0]))) src/switch_core_media.c:3379 -1
     (nil))

(jump_insn 2800 2799 2801 288 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3189)
            (pc))) src/switch_core_media.c:3379 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 3189)

(note 2801 2800 2802 289 [bb 289] NOTE_INSN_BASIC_BLOCK)

(insn 2802 2801 2803 289 (set (reg/v:SI 517 [ bit_rate ])
        (reg:SI 516 [ D.44920 ])) src/switch_core_media.c:3376 -1
     (nil))

(insn 2803 2802 2804 289 (set (reg:SI 1688)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1051 [0x41b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1051 [0x41b])
            ] 29)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2804 2803 2805 289 (set (reg:SI 1687)
        (reg:SI 1688)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2805 2804 2806 289 (set (reg:SI 1690)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1052 [0x41c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1052 [0x41c])
            ] 29)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2806 2805 2807 289 (set (reg/f:SI 1689)
        (reg:SI 1690)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2807 2806 2808 289 (set (reg:SI 1692)
        (plus:SI (reg/f:SI 1689)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3383 -1
     (nil))

(insn 2808 2807 2809 289 (set (reg:SI 1691)
        (plus:SI (reg:SI 1692)
            (const_int 8 [0x8]))) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1689)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2809 2808 2810 289 (set (reg:SI 1693)
        (const_int 3383 [0xd37])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2810 2809 2811 289 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2811 2810 2812 289 (set (reg:SI 1694)
        (const_int 7 [0x7])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2812 2811 2813 289 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1694)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2813 2812 2814 289 (set (reg:SI 1696)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC337") [flags 0x82]  <var_decl 0x40418180 *.LC337>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1053 [0x41d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1053 [0x41d])
            ] 29)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC337") [flags 0x82]  <var_decl 0x40418180 *.LC337>)
        (nil)))

(insn 2814 2813 2815 289 (set (reg/f:SI 1695)
        (reg:SI 1696)) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC337") [flags 0x82]  <var_decl 0x40418180 *.LC337>)
        (nil)))

(insn 2815 2814 2816 289 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1695)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2816 2815 2817 289 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v/f:SI 221 [ rm_encoding ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2817 2816 2818 289 (set (reg:SI 1697)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3384 -1
     (nil))

(insn 2818 2817 2819 289 (set (reg:SI 1698)
        (lshiftrt:SI (reg:SI 1697)
            (const_int 1 [0x1]))) src/switch_core_media.c:3384 -1
     (nil))

(insn 2819 2818 2820 289 (set (reg:SI 1699)
        (zero_extend:SI (subreg:QI (reg:SI 1698) 0))) src/switch_core_media.c:3383 -1
     (nil))

(insn 2820 2819 2821 289 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 1699)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2821 2820 2822 289 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg/v:SI 199 [ remote_codec_rate ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2822 2821 2823 289 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg/v:SI 196 [ codec_ms ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2823 2822 2824 289 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 28 [0x1c])) [0 S4 A32])
        (reg/v:SI 222 [ map_bit_rate ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2824 2823 2825 289 (set (reg/f:SI 1700)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 8 [0x8])) [2 imp_629->iananame+0 S4 A32])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2825 2824 2826 289 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 32 [0x20])) [0 S4 A32])
        (reg/f:SI 1700)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2826 2825 2827 289 (set (reg:SI 1701)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 515 [ imp ])
                    (const_int 4 [0x4])) [0 imp_629->ianacode+0 S1 A32]))) src/switch_core_media.c:3383 -1
     (nil))

(insn 2827 2826 2828 289 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 36 [0x24])) [0 S4 A32])
        (reg:SI 1701)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2828 2827 2829 289 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 40 [0x28])) [0 S4 A32])
        (reg/v:SI 518 [ codec_rate ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2829 2828 2830 289 (set (reg:SI 1703)
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 28 [0x1c])) [4 imp_629->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2830 2829 2831 289 (set (reg:SI 1705)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2831 2830 2832 289 (parallel [
            (set (reg:SI 1704)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1703))
                            (sign_extend:DI (reg:SI 1705)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3383 -1
     (nil))

(insn 2832 2831 2833 289 (set (reg:SI 1706)
        (ashiftrt:SI (reg:SI 1704)
            (const_int 6 [0x6]))) src/switch_core_media.c:3383 -1
     (nil))

(insn 2833 2832 2834 289 (set (reg:SI 1707)
        (ashiftrt:SI (reg:SI 1703)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3383 -1
     (nil))

(insn 2834 2833 2835 289 (set (reg:SI 1702)
        (minus:SI (reg:SI 1706)
            (reg:SI 1707))) src/switch_core_media.c:3383 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1703)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 2835 2834 2836 289 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 44 [0x2c])) [0 S4 A32])
        (reg:SI 1702)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2836 2835 2837 289 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 48 [0x30])) [0 S4 A32])
        (reg/v:SI 517 [ bit_rate ])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2837 2836 2838 289 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3383 -1
     (nil))

(insn 2838 2837 2839 289 (set (reg:SI 1 r1)
        (reg:SI 1687)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2839 2838 2840 289 (set (reg:SI 2 r2)
        (reg:SI 1691)) src/switch_core_media.c:3383 -1
     (nil))

(insn 2840 2839 2841 289 (set (reg:SI 3 r3)
        (reg:SI 1693)) src/switch_core_media.c:3383 -1
     (nil))

(call_insn 2841 2840 2842 289 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 56 [0x38]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3383 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 2842 2841 2843 289 (set (reg/f:SI 528 [ D.44889 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 8 [0x8])) [2 map_1728->rm_encoding+0 S4 A32])) src/switch_core_media.c:3386 -1
     (nil))

(debug_insn 2843 2842 2844 289 (var_location:SI s (reg/f:SI 528 [ D.44889 ])) src/switch_core_media.c:3386 -1
     (nil))

(insn 2844 2843 2845 289 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 528 [ D.44889 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2845 2844 2846 289 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2850)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 2850)

(note 2846 2845 2847 290 [bb 290] NOTE_INSN_BASIC_BLOCK)

(insn 2847 2846 2848 290 (set (reg:SI 1708)
        (zero_extend:SI (mem:QI (reg/f:SI 528 [ D.44889 ]) [0 *D.44889_642+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 2848 2847 2849 290 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1708)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 2849 2848 2850 290 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5233)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5233)

(code_label 2850 2849 2851 291 1427 "" [2 uses])

(note 2851 2850 2852 291 [bb 291] NOTE_INSN_BASIC_BLOCK)

(insn 2852 2851 2853 291 (set (reg:SI 1709)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 283 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3386 -1
     (nil))

(insn 2853 2852 2854 291 (set (reg:SI 1710)
        (lshiftrt:SI (reg:SI 1709)
            (const_int 1 [0x1]))) src/switch_core_media.c:3386 -1
     (nil))

(insn 2854 2853 2855 291 (set (reg:SI 534 [ D.44924 ])
        (zero_extend:SI (subreg:QI (reg:SI 1710) 0))) src/switch_core_media.c:3386 -1
     (nil))

(insn 2855 2854 2856 291 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 534 [ D.44924 ])
            (const_int 95 [0x5f]))) src/switch_core_media.c:3386 -1
     (nil))

(jump_insn 2856 2855 2857 291 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2872)
            (pc))) src/switch_core_media.c:3386 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2872)

(note 2857 2856 2858 292 [bb 292] NOTE_INSN_BASIC_BLOCK)

(insn 2858 2857 2859 292 (set (reg:SI 1711)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 515 [ imp ])
                    (const_int 4 [0x4])) [0 imp_629->ianacode+0 S1 A32]))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2859 2858 2860 292 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 534 [ D.44924 ])
            (reg:SI 1711))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2860 2859 2861 292 (set (reg:SI 1713)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2861 2860 2862 292 (set (reg:QI 1712)
        (subreg:QI (reg:SI 1713) 0)) src/switch_core_media.c:3387 -1
     (nil))

(insn 2862 2861 2863 292 (set (reg/v:SI 134 [ match ])
        (zero_extend:SI (reg:QI 1712))) src/switch_core_media.c:3387 -1
     (nil))

(debug_insn 2863 2862 2864 292 (var_location:QI match (subreg:QI (reg/v:SI 134 [ match ]) 0)) src/switch_core_media.c:3387 -1
     (nil))

(insn 2864 2863 2865 292 (set (reg:SI 594 [ prephitmp.1055 ])
        (reg/v:SI 134 [ match ])) src/switch_core_media.c:3387 -1
     (nil))

(insn 2865 2864 2866 292 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 517 [ bit_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2866 2865 2867 292 (set (reg:SI 1715)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2867 2866 2868 292 (set (reg:QI 1714)
        (subreg:QI (reg:SI 1715) 0)) src/switch_core_media.c:3387 -1
     (nil))

(insn 2868 2867 2869 292 (set (reg:SI 1716)
        (and:SI (reg:SI 594 [ prephitmp.1055 ])
            (subreg:SI (reg:QI 1714) 0))) src/switch_core_media.c:3387 -1
     (nil))

(insn 2869 2868 2870 292 (set (reg:SI 954 [ prephitmp.1047 ])
        (zero_extend:SI (subreg:QI (reg:SI 1716) 0))) src/switch_core_media.c:3387 -1
     (nil))

(jump_insn 2870 2869 2871 292 (set (pc)
        (label_ref 2910)) src/switch_core_media.c:3387 -1
     (nil)
 -> 2910)

(barrier 2871 2870 2872)

(code_label 2872 2871 2873 293 1429 "" [2 uses])

(note 2873 2872 2874 293 [bb 293] NOTE_INSN_BASIC_BLOCK)

(insn 2874 2873 2875 293 (set (reg:SI 1717)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 8 [0x8])) [2 imp_629->iananame+0 S4 A32])) src/switch_core_media.c:3389 -1
     (nil))

(insn 2875 2874 2876 293 (set (reg:SI 0 r0)
        (reg/v/f:SI 221 [ rm_encoding ])) src/switch_core_media.c:3389 -1
     (nil))

(insn 2876 2875 2877 293 (set (reg:SI 1 r1)
        (reg:SI 1717)) src/switch_core_media.c:3389 -1
     (nil))

(call_insn/i 2877 2876 2878 293 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3389 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2878 2877 2879 293 (set (reg:SI 538 [ D.44944 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3389 -1
     (nil))

(insn 2879 2878 2880 293 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 538 [ D.44944 ])
            (const_int 0 [0]))) src/switch_core_media.c:3389 -1
     (nil))

(jump_insn 2880 2879 2881 293 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5518)
            (pc))) src/switch_core_media.c:3389 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5518)

(note 2881 2880 2882 294 [bb 294] NOTE_INSN_BASIC_BLOCK)

(insn 2882 2881 2883 294 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 199 [ remote_codec_rate ])
            (reg/v:SI 518 [ codec_rate ]))) src/switch_core_media.c:3390 -1
     (nil))

(jump_insn 2883 2882 2884 294 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2891)
            (pc))) src/switch_core_media.c:3390 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 2891)

(note 2884 2883 2885 295 [bb 295] NOTE_INSN_BASIC_BLOCK)

(insn 2885 2884 2886 295 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 517 [ bit_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2886 2885 2887 295 (set (reg:SI 1719)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2887 2886 2888 295 (set (reg:QI 1718)
        (subreg:QI (reg:SI 1719) 0)) src/switch_core_media.c:3390 -1
     (nil))

(insn 2888 2887 81 295 (set (reg:SI 954 [ prephitmp.1047 ])
        (zero_extend:SI (reg:QI 1718))) src/switch_core_media.c:3390 -1
     (nil))

(insn 81 2888 82 295 (set (reg:SI 594 [ prephitmp.1055 ])
        (const_int 1 [0x1])) src/switch_core_media.c:3390 -1
     (nil))

(insn 82 81 2889 295 (set (reg/v:SI 134 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3390 -1
     (nil))

(jump_insn 2889 82 2890 295 (set (pc)
        (label_ref 2904)) src/switch_core_media.c:3390 -1
     (nil)
 -> 2904)

(barrier 2890 2889 2891)

(code_label 2891 2890 2892 296 1432 "" [1 uses])

(note 2892 2891 2893 296 [bb 296] NOTE_INSN_BASIC_BLOCK)

(insn 2893 2892 2894 296 (set (reg:SI 1721)
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 20 [0x14])) [4 imp_629->actual_samples_per_second+0 S4 A32])) src/switch_core_media.c:3390 -1
     (nil))

(insn 2894 2893 2895 296 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 201 [ fmtp_remote_codec_rate ])
            (reg:SI 1721))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2895 2894 2896 296 (set (reg:SI 1722)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2896 2895 2897 296 (set (reg:QI 1720)
        (subreg:QI (reg:SI 1722) 0)) src/switch_core_media.c:3390 -1
     (nil))

(insn 2897 2896 2898 296 (set (reg/v:SI 134 [ match ])
        (zero_extend:SI (reg:QI 1720))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2898 2897 2899 296 (set (reg:SI 594 [ prephitmp.1055 ])
        (reg/v:SI 134 [ match ])) src/switch_core_media.c:3390 -1
     (nil))

(insn 2899 2898 2900 296 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 517 [ bit_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2900 2899 2901 296 (set (reg:SI 1724)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2901 2900 2902 296 (set (reg:QI 1723)
        (subreg:QI (reg:SI 1724) 0)) src/switch_core_media.c:3390 -1
     (nil))

(insn 2902 2901 2903 296 (set (reg:SI 1725)
        (and:SI (reg:SI 594 [ prephitmp.1055 ])
            (subreg:SI (reg:QI 1723) 0))) src/switch_core_media.c:3390 -1
     (nil))

(insn 2903 2902 5515 296 (set (reg:SI 954 [ prephitmp.1047 ])
        (zero_extend:SI (subreg:QI (reg:SI 1725) 0))) src/switch_core_media.c:3390 -1
     (nil))

(jump_insn 5515 2903 5516 296 (set (pc)
        (label_ref 2904)) -1
     (nil)
 -> 2904)

(barrier 5516 5515 5518)

(code_label 5518 5516 5517 297 1553 "" [1 uses])

(note 5517 5518 78 297 [bb 297] NOTE_INSN_BASIC_BLOCK)

(insn 78 5517 79 297 (set (reg/v:SI 134 [ match ])
        (reg/v:SI 142 [ match ])) src/switch_core_media.c:3389 -1
     (nil))

(insn 79 78 80 297 (set (reg:SI 954 [ prephitmp.1047 ])
        (const_int 0 [0])) src/switch_core_media.c:3389 -1
     (nil))

(insn 80 79 2904 297 (set (reg:SI 594 [ prephitmp.1055 ])
        (const_int 0 [0])) src/switch_core_media.c:3389 -1
     (nil))

(code_label 2904 80 2905 298 1431 "" [2 uses])

(note 2905 2904 2906 298 [bb 298] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2906 2905 2907 298 (var_location:QI match (subreg:QI (reg/v:SI 134 [ match ]) 0)) src/switch_core_media.c:3389 -1
     (nil))

(insn 2907 2906 2908 298 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 201 [ fmtp_remote_codec_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3391 -1
     (nil))

(jump_insn 2908 2907 2909 298 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5522)
            (pc))) src/switch_core_media.c:3391 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5522)

(note 2909 2908 5519 299 [bb 299] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5519 2909 5520 299 (set (pc)
        (label_ref 2910)) -1
     (nil)
 -> 2910)

(barrier 5520 5519 5522)

(code_label 5522 5520 5521 300 1554 "" [1 uses])

(note 5521 5522 83 300 [bb 300] NOTE_INSN_BASIC_BLOCK)

(insn 83 5521 2910 300 (set (reg/v:SI 199 [ remote_codec_rate ])
        (reg/v:SI 201 [ fmtp_remote_codec_rate ])) src/switch_core_media.c:3391 -1
     (nil))

(code_label 2910 83 2911 301 1430 "" [2 uses])

(note 2911 2910 2912 301 [bb 301] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2912 2911 2913 301 (var_location:SI remote_codec_rate (reg/v:SI 199 [ remote_codec_rate ])) -1
     (nil))

(debug_insn 2913 2912 2914 301 (var_location:QI match (subreg:QI (reg/v:SI 134 [ match ]) 0)) -1
     (nil))

(insn 2914 2913 2915 301 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 954 [ prephitmp.1047 ])
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(jump_insn 2915 2914 2916 301 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2946)
            (pc))) src/switch_core_media.c:3396 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2946)

(note 2916 2915 2917 302 [bb 302] NOTE_INSN_BASIC_BLOCK)

(insn 2917 2916 2918 302 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 222 [ map_bit_rate ])
            (reg/v:SI 517 [ bit_rate ]))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2918 2917 2919 302 (set (reg:SI 1727)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2919 2918 2920 302 (set (reg:QI 1726)
        (subreg:QI (reg:SI 1727) 0)) src/switch_core_media.c:3396 -1
     (nil))

(insn 2920 2919 2921 302 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 222 [ map_bit_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2921 2920 2922 302 (set (reg:SI 1729)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2922 2921 2923 302 (set (reg:QI 1728)
        (subreg:QI (reg:SI 1729) 0)) src/switch_core_media.c:3396 -1
     (nil))

(insn 2923 2922 2924 302 (set (reg:SI 1730)
        (and:SI (subreg:SI (reg:QI 1726) 0)
            (subreg:SI (reg:QI 1728) 0))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2924 2923 2925 302 (set (reg:QI 1731)
        (subreg:QI (reg:SI 1730) 0)) src/switch_core_media.c:3396 -1
     (nil))

(insn 2925 2924 2926 302 (set (reg:SI 1732)
        (zero_extend:SI (reg:QI 1731))) src/switch_core_media.c:3396 -1
     (nil))

(insn 2926 2925 2927 302 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1732)
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(jump_insn 2927 2926 2928 302 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5527)
            (pc))) src/switch_core_media.c:3396 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5527)

(note 2928 2927 2929 303 [bb 303] NOTE_INSN_BASIC_BLOCK)

(insn 2929 2928 2930 303 (set (reg:SI 1734)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1054 [0x41e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1054 [0x41e])
            ] 29)) src/switch_core_media.c:3396 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
        (nil)))

(insn 2930 2929 2931 303 (set (reg:SI 1733)
        (reg:SI 1734)) src/switch_core_media.c:3396 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC71") [flags 0x82]  <var_decl 0x41ea4060 *.LC71>)
        (nil)))

(insn 2931 2930 2932 303 (set (reg:SI 0 r0)
        (reg/f:SI 528 [ D.44889 ])) src/switch_core_media.c:3396 -1
     (nil))

(insn 2932 2931 2933 303 (set (reg:SI 1 r1)
        (reg:SI 1733)) src/switch_core_media.c:3396 -1
     (nil))

(call_insn/i 2933 2932 2934 303 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3396 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2934 2933 2935 303 (set (reg:SI 543 [ D.44960 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3396 -1
     (nil))

(insn 2935 2934 2936 303 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 543 [ D.44960 ])
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(jump_insn 2936 2935 2937 303 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5531)
            (pc))) src/switch_core_media.c:3396 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5531)

(note 2937 2936 2938 304 [bb 304] NOTE_INSN_BASIC_BLOCK)

(insn 2938 2937 2939 304 (set (reg:SI 1736)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1055 [0x41f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1055 [0x41f])
            ] 29)) src/switch_core_media.c:3397 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
        (nil)))

(insn 2939 2938 2940 304 (set (reg:SI 1735)
        (reg:SI 1736)) src/switch_core_media.c:3397 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC72") [flags 0x82]  <var_decl 0x41ea40c0 *.LC72>)
        (nil)))

(insn 2940 2939 2941 304 (set (reg:SI 0 r0)
        (reg/f:SI 528 [ D.44889 ])) src/switch_core_media.c:3397 -1
     (nil))

(insn 2941 2940 2942 304 (set (reg:SI 1 r1)
        (reg:SI 1735)) src/switch_core_media.c:3397 -1
     (nil))

(call_insn/i 2942 2941 2943 304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3397 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2943 2942 2944 304 (set (reg:SI 545 [ D.44963 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3397 -1
     (nil))

(insn 2944 2943 2945 304 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 545 [ D.44963 ])
            (const_int 0 [0]))) src/switch_core_media.c:3396 -1
     (nil))

(jump_insn 2945 2944 5523 304 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3189)
            (pc))) src/switch_core_media.c:3396 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3189)

(note 5523 2945 88 305 [bb 305] NOTE_INSN_BASIC_BLOCK)

(insn 88 5523 89 305 (set (reg:SI 594 [ prephitmp.1055 ])
        (const_int 1 [0x1])) src/switch_core_media.c:3396 -1
     (nil))

(insn 89 88 5524 305 (set (reg/v:SI 134 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3396 -1
     (nil))

(jump_insn 5524 89 5525 305 (set (pc)
        (label_ref 2946)) -1
     (nil)
 -> 2946)

(barrier 5525 5524 5527)

(code_label 5527 5525 5526 306 1555 "" [1 uses])

(note 5526 5527 84 306 [bb 306] NOTE_INSN_BASIC_BLOCK)

(insn 84 5526 85 306 (set (reg:SI 594 [ prephitmp.1055 ])
        (const_int 1 [0x1])) src/switch_core_media.c:3396 -1
     (nil))

(insn 85 84 5528 306 (set (reg/v:SI 134 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3396 -1
     (nil))

(jump_insn 5528 85 5529 306 (set (pc)
        (label_ref 2946)) -1
     (nil)
 -> 2946)

(barrier 5529 5528 5531)

(code_label 5531 5529 5530 307 1556 "" [1 uses])

(note 5530 5531 86 307 [bb 307] NOTE_INSN_BASIC_BLOCK)

(insn 86 5530 87 307 (set (reg:SI 594 [ prephitmp.1055 ])
        (const_int 1 [0x1])) src/switch_core_media.c:3396 -1
     (nil))

(insn 87 86 2946 307 (set (reg/v:SI 134 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3396 -1
     (nil))

(code_label 2946 87 2947 308 1433 "" [3 uses])

(note 2947 2946 2948 308 [bb 308] NOTE_INSN_BASIC_BLOCK)

(debug_insn 2948 2947 2949 308 (var_location:QI match (subreg:QI (reg/v:SI 134 [ match ]) 0)) -1
     (nil))

(insn 2949 2948 2950 308 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 199 [ remote_codec_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2950 2949 2951 308 (set (reg:SI 1738)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2951 2950 2952 308 (set (reg:QI 1737)
        (subreg:QI (reg:SI 1738) 0)) src/switch_core_media.c:3402 -1
     (nil))

(insn 2952 2951 2953 308 (set (reg:SI 1739)
        (and:SI (reg:SI 594 [ prephitmp.1055 ])
            (subreg:SI (reg:QI 1737) 0))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2953 2952 2954 308 (set (reg:QI 1740)
        (subreg:QI (reg:SI 1739) 0)) src/switch_core_media.c:3402 -1
     (nil))

(insn 2954 2953 2955 308 (set (reg:SI 1741)
        (zero_extend:SI (reg:QI 1740))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2955 2954 2956 308 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1741)
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(jump_insn 2956 2955 2957 308 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3011)
            (pc))) src/switch_core_media.c:3402 -1
     (expr_list:REG_BR_PROB (const_int 4676 [0x1244])
        (nil))
 -> 3011)

(note 2957 2956 2958 309 [bb 309] NOTE_INSN_BASIC_BLOCK)

(insn 2958 2957 2959 309 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 199 [ remote_codec_rate ])
            (reg/v:SI 518 [ codec_rate ]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2959 2958 2960 309 (set (reg:SI 1743)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2960 2959 2961 309 (set (reg:QI 1742)
        (subreg:QI (reg:SI 1743) 0)) src/switch_core_media.c:3402 -1
     (nil))

(insn 2961 2960 2962 309 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 518 [ codec_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2962 2961 2963 309 (set (reg:SI 1745)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2963 2962 2964 309 (set (reg:QI 1744)
        (subreg:QI (reg:SI 1745) 0)) src/switch_core_media.c:3402 -1
     (nil))

(insn 2964 2963 2965 309 (set (reg:SI 1746)
        (and:SI (subreg:SI (reg:QI 1742) 0)
            (subreg:SI (reg:QI 1744) 0))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2965 2964 2966 309 (set (reg:QI 1747)
        (subreg:QI (reg:SI 1746) 0)) src/switch_core_media.c:3402 -1
     (nil))

(insn 2966 2965 2967 309 (set (reg:SI 1748)
        (zero_extend:SI (reg:QI 1747))) src/switch_core_media.c:3402 -1
     (nil))

(insn 2967 2966 2968 309 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1748)
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(jump_insn 2968 2967 2969 309 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3016)
            (pc))) src/switch_core_media.c:3402 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3016)

(note 2969 2968 2970 310 [bb 310] NOTE_INSN_BASIC_BLOCK)

(insn 2970 2969 2971 310 (set (reg:SI 1750)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC338") [flags 0x82]  <var_decl 0x404181e0 *.LC338>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1056 [0x420])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1056 [0x420])
            ] 29)) src/switch_core_media.c:3402 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC338") [flags 0x82]  <var_decl 0x404181e0 *.LC338>)
        (nil)))

(insn 2971 2970 2972 310 (set (reg:SI 1749)
        (reg:SI 1750)) src/switch_core_media.c:3402 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC338") [flags 0x82]  <var_decl 0x404181e0 *.LC338>)
        (nil)))

(insn 2972 2971 2973 310 (set (reg:SI 0 r0)
        (reg/f:SI 528 [ D.44889 ])) src/switch_core_media.c:3402 -1
     (nil))

(insn 2973 2972 2974 310 (set (reg:SI 1 r1)
        (reg:SI 1749)) src/switch_core_media.c:3402 -1
     (nil))

(call_insn/i 2974 2973 2975 310 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3402 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2975 2974 2976 310 (set (reg:SI 551 [ D.44977 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3402 -1
     (nil))

(insn 2976 2975 2977 310 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 551 [ D.44977 ])
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(jump_insn 2977 2976 2978 310 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2987)
            (pc))) src/switch_core_media.c:3402 -1
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil))
 -> 2987)

(note 2978 2977 2979 311 [bb 311] NOTE_INSN_BASIC_BLOCK)

(insn 2979 2978 2980 311 (set (reg:SI 1752)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC339") [flags 0x82]  <var_decl 0x40418240 *.LC339>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1057 [0x421])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1057 [0x421])
            ] 29)) src/switch_core_media.c:3403 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC339") [flags 0x82]  <var_decl 0x40418240 *.LC339>)
        (nil)))

(insn 2980 2979 2981 311 (set (reg:SI 1751)
        (reg:SI 1752)) src/switch_core_media.c:3403 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC339") [flags 0x82]  <var_decl 0x40418240 *.LC339>)
        (nil)))

(insn 2981 2980 2982 311 (set (reg:SI 0 r0)
        (reg/f:SI 528 [ D.44889 ])) src/switch_core_media.c:3403 -1
     (nil))

(insn 2982 2981 2983 311 (set (reg:SI 1 r1)
        (reg:SI 1751)) src/switch_core_media.c:3403 -1
     (nil))

(call_insn/i 2983 2982 2984 311 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3403 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 2984 2983 2985 311 (set (reg:SI 552 [ D.44979 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3403 -1
     (nil))

(insn 2985 2984 2986 311 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 552 [ D.44979 ])
            (const_int 0 [0]))) src/switch_core_media.c:3402 -1
     (nil))

(jump_insn 2986 2985 2987 311 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3016)
            (pc))) src/switch_core_media.c:3402 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3016)

(code_label 2987 2986 2988 312 1436 "" [1 uses])

(note 2988 2987 2989 312 [bb 312] NOTE_INSN_BASIC_BLOCK)

(insn 2989 2988 2990 312 (set (reg:SI 1754)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1058 [0x422])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1058 [0x422])
            ] 29)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2990 2989 2991 312 (set (reg:SI 1753)
        (reg:SI 1754)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 2991 2990 2992 312 (set (reg:SI 1756)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1059 [0x423])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1059 [0x423])
            ] 29)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2992 2991 2993 312 (set (reg/f:SI 1755)
        (reg:SI 1756)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2993 2992 2994 312 (set (reg:SI 1758)
        (plus:SI (reg/f:SI 1755)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3405 -1
     (nil))

(insn 2994 2993 2995 312 (set (reg:SI 1757)
        (plus:SI (reg:SI 1758)
            (const_int 8 [0x8]))) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1755)
            (const_int 1800 [0x708]))
        (nil)))

(insn 2995 2994 2996 312 (set (reg:SI 1759)
        (const_int 3405 [0xd4d])) src/switch_core_media.c:3405 -1
     (nil))

(insn 2996 2995 2997 312 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3405 -1
     (nil))

(insn 2997 2996 2998 312 (set (reg:SI 1760)
        (const_int 7 [0x7])) src/switch_core_media.c:3405 -1
     (nil))

(insn 2998 2997 2999 312 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1760)) src/switch_core_media.c:3405 -1
     (nil))

(insn 2999 2998 3000 312 (set (reg:SI 1762)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC340") [flags 0x82]  <var_decl 0x404182a0 *.LC340>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1060 [0x424])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1060 [0x424])
            ] 29)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC340") [flags 0x82]  <var_decl 0x404182a0 *.LC340>)
        (nil)))

(insn 3000 2999 3001 312 (set (reg/f:SI 1761)
        (reg:SI 1762)) src/switch_core_media.c:3405 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC340") [flags 0x82]  <var_decl 0x404182a0 *.LC340>)
        (nil)))

(insn 3001 3000 3002 312 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1761)) src/switch_core_media.c:3405 -1
     (nil))

(insn 3002 3001 3003 312 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3405 -1
     (nil))

(insn 3003 3002 3004 312 (set (reg:SI 1 r1)
        (reg:SI 1753)) src/switch_core_media.c:3405 -1
     (nil))

(insn 3004 3003 3005 312 (set (reg:SI 2 r2)
        (reg:SI 1757)) src/switch_core_media.c:3405 -1
     (nil))

(insn 3005 3004 3006 312 (set (reg:SI 3 r3)
        (reg:SI 1759)) src/switch_core_media.c:3405 -1
     (nil))

(call_insn 3006 3005 3007 312 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3405 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 3007 3006 3008 312 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3406 -1
     (nil))

(debug_insn 3008 3007 3009 312 (var_location:QI match (const_int 0 [0])) -1
     (nil))

(jump_insn 3009 3008 3010 312 (set (pc)
        (label_ref 3189)) src/switch_core_media.c:3405 -1
     (nil)
 -> 3189)

(barrier 3010 3009 3011)

(code_label 3011 3010 3012 313 1434 "" [1 uses])

(note 3012 3011 3013 313 [bb 313] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3013 3012 3014 313 (var_location:QI match (subreg:QI (reg/v:SI 134 [ match ]) 0)) -1
     (nil))

(insn 3014 3013 3015 313 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ match ])
            (const_int 0 [0]))) src/switch_core_media.c:3409 -1
     (nil))

(jump_insn 3015 3014 3016 313 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3189)
            (pc))) src/switch_core_media.c:3409 -1
     (expr_list:REG_BR_PROB (const_int 6352 [0x18d0])
        (nil))
 -> 3189)

(code_label 3016 3015 3017 314 1435 "" [2 uses])

(note 3017 3016 3018 314 [bb 314] NOTE_INSN_BASIC_BLOCK)

(insn 3018 3017 3019 314 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ scrooge ])
            (const_int 0 [0]))) src/switch_core_media.c:3410 -1
     (nil))

(jump_insn 3019 3018 3020 314 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3052)
            (pc))) src/switch_core_media.c:3410 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 3052)

(note 3020 3019 3021 315 [bb 315] NOTE_INSN_BASIC_BLOCK)

(insn 3021 3020 3022 315 (set (reg:SI 1764)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1061 [0x425])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1061 [0x425])
            ] 29)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3022 3021 3023 315 (set (reg:SI 1763)
        (reg:SI 1764)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3023 3022 3024 315 (set (reg:SI 1766)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1062 [0x426])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1062 [0x426])
            ] 29)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3024 3023 3025 315 (set (reg/f:SI 1765)
        (reg:SI 1766)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3025 3024 3026 315 (set (reg:SI 1768)
        (plus:SI (reg/f:SI 1765)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3411 -1
     (nil))

(insn 3026 3025 3027 315 (set (reg:SI 1767)
        (plus:SI (reg:SI 1768)
            (const_int 8 [0x8]))) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1765)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3027 3026 3028 315 (set (reg:SI 1769)
        (const_int 3411 [0xd53])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3028 3027 3029 315 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3029 3028 3030 315 (set (reg:SI 1770)
        (const_int 7 [0x7])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3030 3029 3031 315 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1770)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3031 3030 3032 315 (set (reg:SI 1772)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC341") [flags 0x82]  <var_decl 0x40418360 *.LC341>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1063 [0x427])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1063 [0x427])
            ] 29)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC341") [flags 0x82]  <var_decl 0x40418360 *.LC341>)
        (nil)))

(insn 3032 3031 3033 315 (set (reg/f:SI 1771)
        (reg:SI 1772)) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC341") [flags 0x82]  <var_decl 0x40418360 *.LC341>)
        (nil)))

(insn 3033 3032 3034 315 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1771)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3034 3033 3035 315 (set (reg/f:SI 1773)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 8 [0x8])) [2 imp_629->iananame+0 S4 A32])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3035 3034 3036 315 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 1773)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3036 3035 3037 315 (set (reg:SI 1774)
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 16 [0x10])) [4 imp_629->samples_per_second+0 S4 A32])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3037 3036 3038 315 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 1774)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3038 3037 3039 315 (set (reg:SI 1776)
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 28 [0x1c])) [4 imp_629->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3039 3038 3040 315 (set (reg:SI 1778)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3040 3039 3041 315 (parallel [
            (set (reg:SI 1777)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1776))
                            (sign_extend:DI (reg:SI 1778)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3411 -1
     (nil))

(insn 3041 3040 3042 315 (set (reg:SI 1779)
        (ashiftrt:SI (reg:SI 1777)
            (const_int 6 [0x6]))) src/switch_core_media.c:3411 -1
     (nil))

(insn 3042 3041 3043 315 (set (reg:SI 1780)
        (ashiftrt:SI (reg:SI 1776)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3411 -1
     (nil))

(insn 3043 3042 3044 315 (set (reg:SI 1775)
        (minus:SI (reg:SI 1779)
            (reg:SI 1780))) src/switch_core_media.c:3411 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1776)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 3044 3043 3045 315 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg:SI 1775)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3045 3044 3046 315 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3411 -1
     (nil))

(insn 3046 3045 3047 315 (set (reg:SI 1 r1)
        (reg:SI 1763)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3047 3046 3048 315 (set (reg:SI 2 r2)
        (reg:SI 1767)) src/switch_core_media.c:3411 -1
     (nil))

(insn 3048 3047 3049 315 (set (reg:SI 3 r3)
        (reg:SI 1769)) src/switch_core_media.c:3411 -1
     (nil))

(call_insn 3049 3048 3050 315 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 24 [0x18]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3411 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 3050 3049 3051 315 (set (pc)
        (label_ref 3132)) src/switch_core_media.c:3411 -1
     (nil)
 -> 3132)

(barrier 3051 3050 3052)

(code_label 3052 3051 3053 316 1437 "" [1 uses])

(note 3053 3052 3054 316 [bb 316] NOTE_INSN_BASIC_BLOCK)

(insn 3054 3053 3055 316 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 196 [ codec_ms ])
            (const_int 0 [0]))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3055 3054 3056 316 (set (reg:SI 1782)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3056 3055 3057 316 (set (reg:QI 1781)
        (subreg:QI (reg:SI 1782) 0)) src/switch_core_media.c:3414 -1
     (nil))

(insn 3057 3056 3058 316 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ ptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3058 3057 3059 316 (set (reg:SI 1784)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3059 3058 3060 316 (set (reg:QI 1783)
        (subreg:QI (reg:SI 1784) 0)) src/switch_core_media.c:3414 -1
     (nil))

(insn 3060 3059 3061 316 (set (reg:SI 1785)
        (and:SI (subreg:SI (reg:QI 1781) 0)
            (subreg:SI (reg:QI 1783) 0))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3061 3060 3062 316 (set (reg:QI 1786)
        (subreg:QI (reg:SI 1785) 0)) src/switch_core_media.c:3414 -1
     (nil))

(insn 3062 3061 3063 316 (set (reg:SI 1787)
        (zero_extend:SI (reg:QI 1786))) src/switch_core_media.c:3414 -1
     (nil))

(insn 3063 3062 3064 316 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1787)
            (const_int 0 [0]))) src/switch_core_media.c:3414 -1
     (nil))

(jump_insn 3064 3063 3065 316 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3069)
            (pc))) src/switch_core_media.c:3414 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3069)

(note 3065 3064 3066 317 [bb 317] NOTE_INSN_BASIC_BLOCK)

(insn 3066 3065 3067 317 (set (reg:SI 561 [ prephitmp.1043 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 28 [0x1c])) [4 imp_629->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3414 -1
     (nil))

(insn 3067 3066 3068 317 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 560 [ D.44993 ])
            (reg:SI 561 [ prephitmp.1043 ]))) src/switch_core_media.c:3414 -1
     (nil))

(jump_insn 3068 3067 3069 317 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3075)
            (pc))) src/switch_core_media.c:3414 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 3075)

(code_label 3069 3068 3070 318 1439 "" [1 uses])

(note 3070 3069 3071 318 [bb 318] NOTE_INSN_BASIC_BLOCK)

(insn 3071 3070 3072 318 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 199 [ remote_codec_rate ])
            (reg/v:SI 518 [ codec_rate ]))) src/switch_core_media.c:3414 -1
     (nil))

(jump_insn 3072 3071 3073 318 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3132)
            (pc))) src/switch_core_media.c:3414 -1
     (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil))
 -> 3132)

(note 3073 3072 3074 319 [bb 319] NOTE_INSN_BASIC_BLOCK)

(insn 3074 3073 3075 319 (set (reg:SI 561 [ prephitmp.1043 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 28 [0x1c])) [4 imp_629->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3414 -1
     (nil))

(code_label 3075 3074 3076 320 1440 "" [1 uses])

(note 3076 3075 3077 320 [bb 320] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3077 3076 3078 320 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3416 -1
     (nil))

(insn 3078 3077 3079 320 (set (reg:SI 1789)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1064 [0x428])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1064 [0x428])
            ] 29)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3079 3078 3080 320 (set (reg:SI 1788)
        (reg:SI 1789)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3080 3079 3081 320 (set (reg:SI 1791)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1065 [0x429])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1065 [0x429])
            ] 29)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3081 3080 3082 320 (set (reg/f:SI 1790)
        (reg:SI 1791)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3082 3081 3083 320 (set (reg:SI 1793)
        (plus:SI (reg/f:SI 1790)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3418 -1
     (nil))

(insn 3083 3082 3084 320 (set (reg:SI 1792)
        (plus:SI (reg:SI 1793)
            (const_int 8 [0x8]))) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1790)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3084 3083 3085 320 (set (reg:SI 1794)
        (const_int 3418 [0xd5a])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3085 3084 3086 320 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3086 3085 3087 320 (set (reg:SI 1795)
        (const_int 7 [0x7])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3087 3086 3088 320 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1795)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3088 3087 3089 320 (set (reg:SI 1797)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC342") [flags 0x82]  <var_decl 0x404183c0 *.LC342>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1066 [0x42a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1066 [0x42a])
            ] 29)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC342") [flags 0x82]  <var_decl 0x404183c0 *.LC342>)
        (nil)))

(insn 3089 3088 3090 320 (set (reg/f:SI 1796)
        (reg:SI 1797)) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC342") [flags 0x82]  <var_decl 0x404183c0 *.LC342>)
        (nil)))

(insn 3090 3089 3091 320 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1796)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3091 3090 3092 320 (set (reg/f:SI 1798)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 8 [0x8])) [2 imp_629->iananame+0 S4 A32])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3092 3091 3093 320 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 1798)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3093 3092 3094 320 (set (reg:SI 1799)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 515 [ imp ])
                    (const_int 4 [0x4])) [0 imp_629->ianacode+0 S1 A32]))) src/switch_core_media.c:3418 -1
     (nil))

(insn 3094 3093 3095 320 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 1799)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3095 3094 3096 320 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg/v:SI 518 [ codec_rate ])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3096 3095 3097 320 (set (reg:SI 1802)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3097 3096 3098 320 (parallel [
            (set (reg:SI 1801)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 561 [ prephitmp.1043 ]))
                            (sign_extend:DI (reg:SI 1802)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3418 -1
     (nil))

(insn 3098 3097 3099 320 (set (reg:SI 1803)
        (ashiftrt:SI (reg:SI 1801)
            (const_int 6 [0x6]))) src/switch_core_media.c:3418 -1
     (nil))

(insn 3099 3098 3100 320 (set (reg:SI 1804)
        (ashiftrt:SI (reg:SI 561 [ prephitmp.1043 ])
            (const_int 31 [0x1f]))) src/switch_core_media.c:3418 -1
     (nil))

(insn 3100 3099 3101 320 (set (reg:SI 1800)
        (minus:SI (reg:SI 1803)
            (reg:SI 1804))) src/switch_core_media.c:3418 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 561 [ prephitmp.1043 ])
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 3101 3100 3102 320 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg:SI 1800)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3102 3101 3103 320 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 28 [0x1c])) [0 S4 A32])
        (reg/v:SI 517 [ bit_rate ])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3103 3102 3104 320 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3418 -1
     (nil))

(insn 3104 3103 3105 320 (set (reg:SI 1 r1)
        (reg:SI 1788)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3105 3104 3106 320 (set (reg:SI 2 r2)
        (reg:SI 1792)) src/switch_core_media.c:3418 -1
     (nil))

(insn 3106 3105 3107 320 (set (reg:SI 3 r3)
        (reg:SI 1794)) src/switch_core_media.c:3418 -1
     (nil))

(call_insn 3107 3106 3108 320 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 32 [0x20]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3418 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3108 3107 3109 320 (set (reg:SI 1805)
        (const_int -568 [0xfffffffffffffdc8])) src/switch_core_media.c:3422 -1
     (nil))

(insn 3109 3108 3110 320 (set (reg:SI 1806)
        (ashift:SI (reg/v:SI 211 [ nm_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3422 -1
     (nil))

(insn 3110 3109 3111 320 (set (reg:SI 1807)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1806))) src/switch_core_media.c:3422 -1
     (nil))

(insn 3111 3110 3112 320 (set (reg/f:SI 1808)
        (plus:SI (reg:SI 1807)
            (reg:SI 1805))) src/switch_core_media.c:3422 -1
     (nil))

(insn 3112 3111 3113 320 (set (mem/s:SI (plus:SI (reg/f:SI 1808)
                (const_int 4 [0x4])) [4 near_matches[nm_idx_1139].codec_idx+0 S4 A32])
        (reg/v:SI 573 [ i ])) src/switch_core_media.c:3422 -1
     (nil))

(insn 3113 3112 3114 320 (set (reg:SI 1809)
        (const_int -568 [0xfffffffffffffdc8])) src/switch_core_media.c:3423 -1
     (nil))

(insn 3114 3113 3115 320 (set (reg:SI 1810)
        (ashift:SI (reg/v:SI 211 [ nm_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3423 -1
     (nil))

(insn 3115 3114 3116 320 (set (reg:SI 1811)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1810))) src/switch_core_media.c:3423 -1
     (nil))

(insn 3116 3115 3117 320 (set (reg/f:SI 1812)
        (plus:SI (reg:SI 1811)
            (reg:SI 1809))) src/switch_core_media.c:3423 -1
     (nil))

(insn 3117 3116 3118 320 (set (mem/s:SI (reg/f:SI 1812) [4 near_matches[nm_idx_1139].rate+0 S4 A64])
        (reg/v:SI 199 [ remote_codec_rate ])) src/switch_core_media.c:3423 -1
     (nil))

(insn 3118 3117 3119 320 (set (reg:SI 1813)
        (const_int -576 [0xfffffffffffffdc0])) src/switch_core_media.c:3424 -1
     (nil))

(insn 3119 3118 3120 320 (set (reg:SI 1814)
        (ashift:SI (reg/v:SI 211 [ nm_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3424 -1
     (nil))

(insn 3120 3119 3121 320 (set (reg:SI 1815)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1814))) src/switch_core_media.c:3424 -1
     (nil))

(insn 3121 3120 3122 320 (set (reg/f:SI 1816)
        (plus:SI (reg:SI 1815)
            (reg:SI 1813))) src/switch_core_media.c:3424 -1
     (nil))

(insn 3122 3121 3123 320 (set (mem/s/f:SI (reg/f:SI 1816) [2 near_matches[nm_idx_1139].imp+0 S4 A64])
        (reg/v/f:SI 515 [ imp ])) src/switch_core_media.c:3424 -1
     (nil))

(insn 3123 3122 3124 320 (set (reg:SI 1817)
        (const_int -576 [0xfffffffffffffdc0])) src/switch_core_media.c:3425 -1
     (nil))

(insn 3124 3123 3125 320 (set (reg:SI 1818)
        (ashift:SI (reg/v:SI 211 [ nm_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3425 -1
     (nil))

(insn 3125 3124 3126 320 (set (reg:SI 1819)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1818))) src/switch_core_media.c:3425 -1
     (nil))

(insn 3126 3125 3127 320 (set (reg/f:SI 1820)
        (plus:SI (reg:SI 1819)
            (reg:SI 1817))) src/switch_core_media.c:3425 -1
     (nil))

(insn 3127 3126 3128 320 (set (mem/s/f:SI (plus:SI (reg/f:SI 1820)
                (const_int 4 [0x4])) [2 near_matches[nm_idx_1139].map+0 S4 A32])
        (reg/v/f:SI 283 [ map ])) src/switch_core_media.c:3425 -1
     (nil))

(insn 3128 3127 3129 320 (set (reg/v:SI 211 [ nm_idx ])
        (plus:SI (reg/v:SI 211 [ nm_idx ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3426 -1
     (nil))

(debug_insn 3129 3128 3130 320 (var_location:SI nm_idx (reg/v:SI 211 [ nm_idx ])) src/switch_core_media.c:3426 -1
     (nil))

(jump_insn 3130 3129 3131 320 (set (pc)
        (label_ref 3189)) src/switch_core_media.c:3428 -1
     (nil)
 -> 3189)

(barrier 3131 3130 3132)

(code_label 3132 3131 3133 321 1438 "" [2 uses])

(note 3133 3132 3134 321 [bb 321] NOTE_INSN_BASIC_BLOCK)

(insn 3134 3133 3135 321 (set (reg:SI 1821)
        (const_int -1048 [0xfffffffffffffbe8])) src/switch_core_media.c:3431 -1
     (nil))

(insn 3135 3134 3136 321 (set (reg:SI 1822)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3431 -1
     (nil))

(insn 3136 3135 3137 321 (set (reg:SI 1823)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1822))) src/switch_core_media.c:3431 -1
     (nil))

(insn 3137 3136 3138 321 (set (reg/f:SI 1824)
        (plus:SI (reg:SI 1823)
            (reg:SI 1821))) src/switch_core_media.c:3431 -1
     (nil))

(insn 3138 3137 3139 321 (set (mem/s:SI (plus:SI (reg/f:SI 1824)
                (const_int 4 [0x4])) [4 matches[m_idx_1487].codec_idx+0 S4 A32])
        (reg/v:SI 573 [ i ])) src/switch_core_media.c:3431 -1
     (nil))

(insn 3139 3138 3140 321 (set (reg:SI 1825)
        (const_int -1048 [0xfffffffffffffbe8])) src/switch_core_media.c:3432 -1
     (nil))

(insn 3140 3139 3141 321 (set (reg:SI 1826)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3432 -1
     (nil))

(insn 3141 3140 3142 321 (set (reg:SI 1827)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1826))) src/switch_core_media.c:3432 -1
     (nil))

(insn 3142 3141 3143 321 (set (reg/f:SI 1828)
        (plus:SI (reg:SI 1827)
            (reg:SI 1825))) src/switch_core_media.c:3432 -1
     (nil))

(insn 3143 3142 3144 321 (set (mem/s:SI (reg/f:SI 1828) [4 matches[m_idx_1487].rate+0 S4 A64])
        (reg/v:SI 518 [ codec_rate ])) src/switch_core_media.c:3432 -1
     (nil))

(insn 3144 3143 3145 321 (set (reg:SI 1829)
        (const_int -1056 [0xfffffffffffffbe0])) src/switch_core_media.c:3433 -1
     (nil))

(insn 3145 3144 3146 321 (set (reg:SI 1830)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3433 -1
     (nil))

(insn 3146 3145 3147 321 (set (reg:SI 1831)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1830))) src/switch_core_media.c:3433 -1
     (nil))

(insn 3147 3146 3148 321 (set (reg/f:SI 1832)
        (plus:SI (reg:SI 1831)
            (reg:SI 1829))) src/switch_core_media.c:3433 -1
     (nil))

(insn 3148 3147 3149 321 (set (mem/s/f:SI (reg/f:SI 1832) [2 matches[m_idx_1487].imp+0 S4 A64])
        (reg/v/f:SI 515 [ imp ])) src/switch_core_media.c:3433 -1
     (nil))

(insn 3149 3148 3150 321 (set (reg:SI 1833)
        (const_int -1056 [0xfffffffffffffbe0])) src/switch_core_media.c:3434 -1
     (nil))

(insn 3150 3149 3151 321 (set (reg:SI 1834)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3434 -1
     (nil))

(insn 3151 3150 3152 321 (set (reg:SI 1835)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1834))) src/switch_core_media.c:3434 -1
     (nil))

(insn 3152 3151 3153 321 (set (reg/f:SI 1836)
        (plus:SI (reg:SI 1835)
            (reg:SI 1833))) src/switch_core_media.c:3434 -1
     (nil))

(insn 3153 3152 3154 321 (set (mem/s/f:SI (plus:SI (reg/f:SI 1836)
                (const_int 4 [0x4])) [2 matches[m_idx_1487].map+0 S4 A32])
        (reg/v/f:SI 283 [ map ])) src/switch_core_media.c:3434 -1
     (nil))

(insn 3154 3153 3155 321 (set (reg/v:SI 202 [ m_idx ])
        (plus:SI (reg/v:SI 202 [ m_idx ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3435 -1
     (nil))

(debug_insn 3155 3154 3156 321 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) src/switch_core_media.c:3435 -1
     (nil))

(insn 3156 3155 3157 321 (set (reg:SI 1838)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1067 [0x42b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1067 [0x42b])
            ] 29)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3157 3156 3158 321 (set (reg:SI 1837)
        (reg:SI 1838)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3158 3157 3159 321 (set (reg:SI 1840)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1068 [0x42c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1068 [0x42c])
            ] 29)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3159 3158 3160 321 (set (reg/f:SI 1839)
        (reg:SI 1840)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3160 3159 3161 321 (set (reg:SI 1842)
        (plus:SI (reg/f:SI 1839)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3437 -1
     (nil))

(insn 3161 3160 3162 321 (set (reg:SI 1841)
        (plus:SI (reg:SI 1842)
            (const_int 8 [0x8]))) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1839)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3162 3161 3163 321 (set (reg:SI 1843)
        (const_int 3437 [0xd6d])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3163 3162 3164 321 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3164 3163 3165 321 (set (reg:SI 1844)
        (const_int 7 [0x7])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3165 3164 3166 321 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1844)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3166 3165 3167 321 (set (reg:SI 1846)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC343") [flags 0x82]  <var_decl 0x40418420 *.LC343>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1069 [0x42d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1069 [0x42d])
            ] 29)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC343") [flags 0x82]  <var_decl 0x40418420 *.LC343>)
        (nil)))

(insn 3167 3166 3168 321 (set (reg/f:SI 1845)
        (reg:SI 1846)) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC343") [flags 0x82]  <var_decl 0x40418420 *.LC343>)
        (nil)))

(insn 3168 3167 3169 321 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1845)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3169 3168 3170 321 (set (reg/f:SI 1847)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 8 [0x8])) [2 imp_629->iananame+0 S4 A32])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3170 3169 3171 321 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 1847)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3171 3170 3172 321 (set (reg:SI 1848)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 515 [ imp ])
                    (const_int 4 [0x4])) [0 imp_629->ianacode+0 S1 A32]))) src/switch_core_media.c:3437 -1
     (nil))

(insn 3172 3171 3173 321 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 1848)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3173 3172 3174 321 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg/v:SI 518 [ codec_rate ])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3174 3173 3175 321 (set (reg:SI 1850)
        (mem/s:SI (plus:SI (reg/v/f:SI 515 [ imp ])
                (const_int 28 [0x1c])) [4 imp_629->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3175 3174 3176 321 (set (reg:SI 1852)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3176 3175 3177 321 (parallel [
            (set (reg:SI 1851)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1850))
                            (sign_extend:DI (reg:SI 1852)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3437 -1
     (nil))

(insn 3177 3176 3178 321 (set (reg:SI 1853)
        (ashiftrt:SI (reg:SI 1851)
            (const_int 6 [0x6]))) src/switch_core_media.c:3437 -1
     (nil))

(insn 3178 3177 3179 321 (set (reg:SI 1854)
        (ashiftrt:SI (reg:SI 1850)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3437 -1
     (nil))

(insn 3179 3178 3180 321 (set (reg:SI 1849)
        (minus:SI (reg:SI 1853)
            (reg:SI 1854))) src/switch_core_media.c:3437 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1850)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 3180 3179 3181 321 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg:SI 1849)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3181 3180 3182 321 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 28 [0x1c])) [0 S4 A32])
        (reg/v:SI 517 [ bit_rate ])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3182 3181 3183 321 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3437 -1
     (nil))

(insn 3183 3182 3184 321 (set (reg:SI 1 r1)
        (reg:SI 1837)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3184 3183 3185 321 (set (reg:SI 2 r2)
        (reg:SI 1841)) src/switch_core_media.c:3437 -1
     (nil))

(insn 3185 3184 3186 321 (set (reg:SI 3 r3)
        (reg:SI 1843)) src/switch_core_media.c:3437 -1
     (nil))

(call_insn 3186 3185 3187 321 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 32 [0x20]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3437 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3187 3186 3188 321 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (const_int 29 [0x1d]))) src/switch_core_media.c:3441 -1
     (nil))

(jump_insn 3188 3187 3189 321 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5536)
            (pc))) src/switch_core_media.c:3441 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 5536)

(code_label 3189 3188 3190 322 1426 "" [5 uses])

(note 3190 3189 3191 322 [bb 322] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3191 3190 3192 322 (var_location:SI nm_idx (reg/v:SI 211 [ nm_idx ])) -1
     (nil))

(debug_insn 3192 3191 3193 322 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 3193 3192 3194 322 (var_location:SI remote_codec_rate (reg/v:SI 199 [ remote_codec_rate ])) -1
     (nil))

(debug_insn 3194 3193 3195 322 (var_location:QI match (const_int 0 [0])) -1
     (nil))

(insn 3195 3194 3196 322 (set (reg/v:SI 573 [ i ])
        (plus:SI (reg/v:SI 573 [ i ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3374 -1
     (nil))

(debug_insn 3196 3195 3197 322 (var_location:SI i (reg/v:SI 573 [ i ])) src/switch_core_media.c:3374 -1
     (nil))

(debug_insn 3197 3196 3198 322 (var_location:SI i (reg/v:SI 573 [ i ])) -1
     (nil))

(debug_insn 3198 3197 3199 322 (var_location:SI nm_idx (reg/v:SI 211 [ nm_idx ])) -1
     (nil))

(debug_insn 3199 3198 3200 322 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 3200 3199 3201 322 (var_location:SI remote_codec_rate (reg/v:SI 199 [ remote_codec_rate ])) -1
     (nil))

(debug_insn 3201 3200 3203 322 (var_location:QI match (const_int 0 [0])) -1
     (nil))

(insn 3203 3201 3204 322 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 194 [ total_codecs ])
            (reg/v:SI 573 [ i ]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3204 3203 3205 322 (set (reg:SI 1856)
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3205 3204 3206 322 (set (reg:QI 1855)
        (subreg:QI (reg:SI 1856) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 3206 3205 3207 322 (set (reg:SI 1858)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3374 -1
     (nil))

(insn 3207 3206 3208 322 (set (reg/f:SI 1857)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1858)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3374 -1
     (nil))

(insn 3208 3207 3209 322 (set (reg:SI 1860)
        (mem/s:SI (plus:SI (reg/f:SI 1857)
                (const_int 128 [0x80])) [4 D.44471_621->num_codecs+0 S4 A32])) src/switch_core_media.c:3374 -1
     (nil))

(insn 3209 3208 3210 322 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1860)
            (reg/v:SI 573 [ i ]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3210 3209 3211 322 (set (reg:SI 1861)
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3211 3210 3212 322 (set (reg:QI 1859)
        (subreg:QI (reg:SI 1861) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 3212 3211 3213 322 (set (reg:SI 1862)
        (and:SI (subreg:SI (reg:QI 1855) 0)
            (subreg:SI (reg:QI 1859) 0))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3213 3212 3214 322 (set (reg:QI 1863)
        (subreg:QI (reg:SI 1862) 0)) src/switch_core_media.c:3374 -1
     (nil))

(insn 3214 3213 3215 322 (set (reg:SI 1864)
        (zero_extend:SI (reg:QI 1863))) src/switch_core_media.c:3374 -1
     (nil))

(insn 3215 3214 3216 322 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1864)
            (const_int 0 [0]))) src/switch_core_media.c:3374 -1
     (nil))

(jump_insn 3216 3215 3217 322 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3202)
            (pc))) src/switch_core_media.c:3374 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil))
 -> 3202)

(code_label 3217 3216 3218 323 1425 "" [1 uses])

(note 3218 3217 3219 323 [bb 323] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3219 3218 3220 323 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 3220 3219 3221 323 (var_location:QI match (const_int 0 [0])) -1
     (nil))

(insn 3221 3220 3222 323 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (const_int 29 [0x1d]))) src/switch_core_media.c:3449 -1
     (nil))

(jump_insn 3222 3221 3223 323 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3245)
            (pc))) src/switch_core_media.c:3449 -1
     (expr_list:REG_BR_PROB (const_int 0 [0])
        (nil))
 -> 3245)

(code_label 3223 3222 3224 324 1413 "" [5 uses])

(note 3224 3223 3225 324 [bb 324] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3225 3224 3226 324 (var_location:SI nm_idx (reg/v:SI 211 [ nm_idx ])) -1
     (nil))

(debug_insn 3226 3225 3227 324 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 3227 3226 3228 324 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) -1
     (nil))

(debug_insn 3228 3227 3229 324 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))

(debug_insn 3229 3228 3230 324 (var_location:QI cng_pt (subreg:QI (reg/v:SI 149 [ cng_pt ]) 0)) -1
     (nil))

(debug_insn 3230 3229 3231 324 (var_location:QI best_te (subreg:QI (reg/v:SI 145 [ best_te ]) 0)) -1
     (nil))

(debug_insn 3231 3230 3232 324 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(insn 3232 3231 3233 324 (set (reg/v/f:SI 283 [ map ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 4 [0x4])) [2 map_1728->rm_next+0 S4 A32])) src/switch_core_media.c:3295 -1
     (nil))

(debug_insn 3233 3232 3234 324 (var_location:SI map (reg/v/f:SI 283 [ map ])) src/switch_core_media.c:3295 -1
     (nil))

(debug_insn 3234 3233 3235 324 (var_location:SI map (reg/v/f:SI 283 [ map ])) -1
     (nil))

(debug_insn 3235 3234 3236 324 (var_location:SI nm_idx (reg/v:SI 211 [ nm_idx ])) -1
     (nil))

(debug_insn 3236 3235 3237 324 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 3237 3236 3238 324 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) -1
     (nil))

(debug_insn 3238 3237 3239 324 (var_location:SI x (clobber (const_int 0 [0]))) -1
     (nil))

(debug_insn 3239 3238 3240 324 (var_location:QI cng_pt (subreg:QI (reg/v:SI 149 [ cng_pt ]) 0)) -1
     (nil))

(debug_insn 3240 3239 3241 324 (var_location:QI best_te (subreg:QI (reg/v:SI 145 [ best_te ]) 0)) -1
     (nil))

(debug_insn 3241 3240 3243 324 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(insn 3243 3241 3244 324 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 283 [ map ])
            (const_int 0 [0]))) src/switch_core_media.c:3295 -1
     (nil))

(jump_insn 3244 3243 5532 324 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3242)
            (pc))) src/switch_core_media.c:3295 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil))
 -> 3242)

(note 5532 3244 5533 325 [bb 325] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5533 5532 5534 325 (set (pc)
        (label_ref 3245)) -1
     (nil)
 -> 3245)

(barrier 5534 5533 5536)

(code_label 5536 5534 5535 326 1557 "" [1 uses])

(note 5535 5536 90 326 [bb 326] NOTE_INSN_BASIC_BLOCK)

(insn 90 5535 3245 326 (set (reg/v:SI 142 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3441 -1
     (nil))

(code_label 3245 90 3246 327 1409 "" [3 uses])

(note 3246 3245 3247 327 [bb 327] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3247 3246 3248 327 (var_location:SI nm_idx (reg/v:SI 211 [ nm_idx ])) -1
     (nil))

(debug_insn 3248 3247 3249 327 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 3249 3248 3250 327 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) -1
     (nil))

(debug_insn 3250 3249 3251 327 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(insn 3251 3250 3252 327 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 175 [ got_crypto ])
            (const_int 0 [0]))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3252 3251 3253 327 (set (reg:SI 1866)
        (le:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3253 3252 3254 327 (set (reg:QI 1865)
        (subreg:QI (reg:SI 1866) 0)) src/switch_core_media.c:3454 -1
     (nil))

(insn 3254 3253 3255 327 (set (reg:SI 1867)
        (const_int 23812 [0x5d04])) src/switch_core_media.c:3454 -1
     (nil))

(insn 3255 3254 3256 327 (set (reg:SI 1869)
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1867)) [23 smh_186->crypto_mode+0 S4 A32])) src/switch_core_media.c:3454 -1
     (nil))

(insn 3256 3255 3257 327 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1869)
            (const_int 1 [0x1]))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3257 3256 3258 327 (set (reg:SI 1870)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3258 3257 3259 327 (set (reg:QI 1868)
        (subreg:QI (reg:SI 1870) 0)) src/switch_core_media.c:3454 -1
     (nil))

(insn 3259 3258 3260 327 (set (reg:SI 1871)
        (and:SI (subreg:SI (reg:QI 1865) 0)
            (subreg:SI (reg:QI 1868) 0))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3260 3259 3261 327 (set (reg:QI 1872)
        (subreg:QI (reg:SI 1871) 0)) src/switch_core_media.c:3454 -1
     (nil))

(insn 3261 3260 3262 327 (set (reg:SI 1873)
        (zero_extend:SI (reg:QI 1872))) src/switch_core_media.c:3454 -1
     (nil))

(insn 3262 3261 3263 327 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1873)
            (const_int 0 [0]))) src/switch_core_media.c:3454 -1
     (nil))

(jump_insn 3263 3262 3264 327 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3294)
            (pc))) src/switch_core_media.c:3454 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 3294)

(note 3264 3263 3265 328 [bb 328] NOTE_INSN_BASIC_BLOCK)

(insn 3265 3264 3266 328 (set (reg:SI 1875)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1070 [0x42e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1070 [0x42e])
            ] 29)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3266 3265 3267 328 (set (reg:SI 1874)
        (reg:SI 1875)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3267 3266 3268 328 (set (reg:SI 1877)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1071 [0x42f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1071 [0x42f])
            ] 29)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3268 3267 3269 328 (set (reg/f:SI 1876)
        (reg:SI 1877)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3269 3268 3270 328 (set (reg:SI 1879)
        (plus:SI (reg/f:SI 1876)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3455 -1
     (nil))

(insn 3270 3269 3271 328 (set (reg:SI 1878)
        (plus:SI (reg:SI 1879)
            (const_int 8 [0x8]))) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1876)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3271 3270 3272 328 (set (reg:SI 1880)
        (const_int 3455 [0xd7f])) src/switch_core_media.c:3455 -1
     (nil))

(insn 3272 3271 3273 328 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3455 -1
     (nil))

(insn 3273 3272 3274 328 (set (reg:SI 1881)
        (const_int 4 [0x4])) src/switch_core_media.c:3455 -1
     (nil))

(insn 3274 3273 3275 328 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1881)) src/switch_core_media.c:3455 -1
     (nil))

(insn 3275 3274 3276 328 (set (reg:SI 1883)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1072 [0x430])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1072 [0x430])
            ] 29)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
        (nil)))

(insn 3276 3275 3277 328 (set (reg/f:SI 1882)
        (reg:SI 1883)) src/switch_core_media.c:3455 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
        (nil)))

(insn 3277 3276 3278 328 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1882)) src/switch_core_media.c:3455 -1
     (nil))

(insn 3278 3277 3279 328 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3455 -1
     (nil))

(insn 3279 3278 3280 328 (set (reg:SI 1 r1)
        (reg:SI 1874)) src/switch_core_media.c:3455 -1
     (nil))

(insn 3280 3279 3281 328 (set (reg:SI 2 r2)
        (reg:SI 1878)) src/switch_core_media.c:3455 -1
     (nil))

(insn 3281 3280 3282 328 (set (reg:SI 3 r3)
        (reg:SI 1880)) src/switch_core_media.c:3455 -1
     (nil))

(call_insn 3282 3281 3283 328 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3455 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 3283 3282 3284 328 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3456 -1
     (nil))

(debug_insn 3284 3283 3285 328 (var_location:SI nm_idx (const_int 0 [0])) src/switch_core_media.c:3457 -1
     (nil))

(debug_insn 3285 3284 3286 328 (var_location:SI m_idx (const_int 0 [0])) src/switch_core_media.c:3457 -1
     (nil))

(debug_insn 3286 3285 3287 328 (var_location:SI nm_idx (const_int 0 [0])) -1
     (nil))

(debug_insn 3287 3286 3288 328 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))

(debug_insn 3288 3287 3289 328 (var_location:QI match (const_int 0 [0])) -1
     (nil))

(debug_insn 3289 3288 3290 328 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))

(debug_insn 3290 3289 3291 328 (var_location:QI match (const_int 0 [0])) -1
     (nil))

(debug_insn 3291 3290 105 328 (var_location:QI match (const_int 0 [0])) -1
     (nil))

(insn 105 3291 106 328 (set (reg/v:SI 211 [ nm_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3457 -1
     (nil))

(insn 106 105 107 328 (set (reg/v:SI 202 [ m_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3455 -1
     (nil))

(insn 107 106 108 328 (set (reg/v:SI 183 [ got_audio ])
        (const_int 0 [0])) src/switch_core_media.c:3455 -1
     (nil))

(insn 108 107 3292 328 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:3455 -1
     (nil))

(jump_insn 3292 108 3293 328 (set (pc)
        (label_ref 3818)) src/switch_core_media.c:3455 -1
     (nil)
 -> 3818)

(barrier 3293 3292 3294)

(code_label 3294 3293 3295 329 1443 "" [1 uses])

(note 3295 3294 3296 329 [bb 329] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3296 3295 3297 329 (var_location:SI nm_idx (reg/v:SI 211 [ nm_idx ])) -1
     (nil))

(debug_insn 3297 3296 3298 329 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 3298 3297 3299 329 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(insn 3299 3298 3300 329 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 211 [ nm_idx ])
            (const_int 0 [0]))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3300 3299 3301 329 (set (reg:SI 1885)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3301 3300 3302 329 (set (reg:QI 1884)
        (subreg:QI (reg:SI 1885) 0)) src/switch_core_media.c:3461 -1
     (nil))

(insn 3302 3301 3303 329 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (const_int 0 [0]))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3303 3302 3304 329 (set (reg:SI 1887)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3304 3303 3305 329 (set (reg:QI 1886)
        (subreg:QI (reg:SI 1887) 0)) src/switch_core_media.c:3461 -1
     (nil))

(insn 3305 3304 3306 329 (set (reg:SI 1888)
        (and:SI (subreg:SI (reg:QI 1884) 0)
            (subreg:SI (reg:QI 1886) 0))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3306 3305 3307 329 (set (reg:QI 1889)
        (subreg:QI (reg:SI 1888) 0)) src/switch_core_media.c:3461 -1
     (nil))

(insn 3307 3306 3308 329 (set (reg:SI 1890)
        (zero_extend:SI (reg:QI 1889))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3308 3307 3309 329 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1890)
            (const_int 0 [0]))) src/switch_core_media.c:3461 -1
     (nil))

(jump_insn 3309 3308 3310 329 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3431)
            (pc))) src/switch_core_media.c:3461 -1
     (expr_list:REG_BR_PROB (const_int 2896 [0xb50])
        (nil))
 -> 3431)

(note 3310 3309 3311 330 [bb 330] NOTE_INSN_BASIC_BLOCK)

(insn 3311 3310 3312 330 (set (reg:SI 1891)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -576 [0xfffffffffffffdc0]))) src/switch_core_media.c:3461 -1
     (nil))

(insn 3312 3311 91 330 (set (reg:SI 600 [ ivtmp.1067 ])
        (plus:SI (reg:SI 1891)
            (const_int 8 [0x8]))) src/switch_core_media.c:3461 -1
     (nil))

(insn 91 3312 3425 330 (set (reg/v:SI 587 [ j ])
        (const_int 0 [0])) src/switch_core_media.c:3461 -1
     (nil))

(code_label 3425 91 3313 331 1452 "" [1 uses])

(note 3313 3425 3314 331 [bb 331] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3314 3313 3315 331 (var_location:SI timp (const_int 0 [0])) src/switch_core_media.c:3469 -1
     (nil))

(insn 3315 3314 3316 331 (set (reg/f:SI 266 [ D.49960 ])
        (reg:SI 600 [ ivtmp.1067 ])) src/switch_core_media.c:2890 -1
     (nil))

(insn 3316 3315 3317 331 (set (reg:SI 506 [ near_rate.96 ])
        (mem:SI (reg/f:SI 266 [ D.49960 ]) [3 MEM[base: D.49960_238, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3471 -1
     (nil))

(insn 3317 3316 3318 331 (set (reg/v:SI 230 [ near_rate ])
        (reg:SI 506 [ near_rate.96 ])) src/switch_core_media.c:3471 -1
     (nil))

(debug_insn 3318 3317 3319 331 (var_location:SI near_rate (reg/v:SI 230 [ near_rate ])) src/switch_core_media.c:3471 -1
     (nil))

(insn 3319 3318 3320 331 (set (reg/v/f:SI 581 [ near_match ])
        (mem/f:SI (plus:SI (reg/f:SI 266 [ D.49960 ])
                (const_int -8 [0xfffffffffffffff8])) [3 MEM[base: D.49960_238, offset: 4294967288B]+0 S4 A32])) src/switch_core_media.c:3472 -1
     (nil))

(debug_insn 3320 3319 3321 331 (var_location:SI near_match (reg/v/f:SI 581 [ near_match ])) src/switch_core_media.c:3472 -1
     (nil))

(insn 3321 3320 3322 331 (set (reg/v/f:SI 582 [ near_map ])
        (mem/f:SI (plus:SI (reg/f:SI 266 [ D.49960 ])
                (const_int -4 [0xfffffffffffffffc])) [3 MEM[base: D.49960_238, offset: 4294967292B]+0 S4 A32])) src/switch_core_media.c:3473 -1
     (nil))

(debug_insn 3322 3321 3323 331 (var_location:SI near_map (reg/v/f:SI 582 [ near_map ])) src/switch_core_media.c:3473 -1
     (nil))

(insn 3323 3322 3324 331 (set (reg/f:SI 583 [ D.45013 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 581 [ near_match ])
                (const_int 8 [0x8])) [2 near_match_726->iananame+0 S4 A32])) src/switch_core_media.c:3475 -1
     (nil))

(insn 3324 3323 3325 331 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 230 [ near_rate ])
            (const_int 0 [0]))) src/switch_core_media.c:3475 -1
     (nil))

(jump_insn 3325 3324 3326 331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3328)
            (pc))) src/switch_core_media.c:3475 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3328)

(note 3326 3325 3327 332 [bb 332] NOTE_INSN_BASIC_BLOCK)

(insn 3327 3326 3328 332 (set (reg/v:SI 230 [ near_rate ])
        (mem/s:SI (plus:SI (reg/v/f:SI 581 [ near_match ])
                (const_int 16 [0x10])) [4 near_match_726->samples_per_second+0 S4 A32])) src/switch_core_media.c:3475 -1
     (nil))

(code_label 3328 3327 3329 333 1446 "" [1 uses])

(note 3329 3328 3330 333 [bb 333] NOTE_INSN_BASIC_BLOCK)

(insn 3330 3329 3331 333 (set (reg:SI 1892)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3475 -1
     (nil))

(insn 3331 3330 3332 333 (set (reg:SI 1894)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC345") [flags 0x82]  <var_decl 0x404184e0 *.LC345>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1073 [0x431])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1073 [0x431])
            ] 29)) src/switch_core_media.c:3475 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC345") [flags 0x82]  <var_decl 0x404184e0 *.LC345>)
        (nil)))

(insn 3332 3331 3333 333 (set (reg:SI 1893)
        (reg:SI 1894)) src/switch_core_media.c:3475 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC345") [flags 0x82]  <var_decl 0x404184e0 *.LC345>)
        (nil)))

(insn 3333 3332 3334 333 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 230 [ near_rate ])) src/switch_core_media.c:3475 -1
     (nil))

(insn 3334 3333 3335 333 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 196 [ codec_ms ])) src/switch_core_media.c:3475 -1
     (nil))

(insn 3335 3334 3336 333 (set (reg:SI 0 r0)
        (reg:SI 1892)) src/switch_core_media.c:3475 -1
     (nil))

(insn 3336 3335 3337 333 (set (reg:SI 1 r1)
        (const_int 80 [0x50])) src/switch_core_media.c:3475 -1
     (nil))

(insn 3337 3336 3338 333 (set (reg:SI 2 r2)
        (reg:SI 1893)) src/switch_core_media.c:3475 -1
     (nil))

(insn 3338 3337 3339 333 (set (reg:SI 3 r3)
        (reg/f:SI 583 [ D.45013 ])) src/switch_core_media.c:3475 -1
     (nil))

(call_insn 3339 3338 3340 333 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3475 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3340 3339 3341 333 (set (reg:SI 1895)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3478 -1
     (nil))

(insn 3341 3340 3342 333 (set (mem/s/f/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 prefs+0 S4 A32])
        (reg:SI 1895)) src/switch_core_media.c:3478 -1
     (nil))

(insn 3342 3341 3343 333 (set (reg:SI 1896)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8]))) src/switch_core_media.c:3479 -1
     (nil))

(insn 3343 3342 3344 333 (set (reg:SI 1897)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -4 [0xfffffffffffffffc]))) src/switch_core_media.c:3479 -1
     (nil))

(insn 3344 3343 3345 333 (set (reg:SI 0 r0)
        (reg:SI 1896)) src/switch_core_media.c:3479 -1
     (nil))

(insn 3345 3344 3346 333 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) src/switch_core_media.c:3479 -1
     (nil))

(insn 3346 3345 3347 333 (set (reg:SI 2 r2)
        (reg:SI 1897)) src/switch_core_media.c:3479 -1
     (nil))

(insn 3347 3346 3348 333 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3479 -1
     (nil))

(call_insn 3348 3347 3349 333 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_loadable_module_get_codecs_sorted") [flags 0x41]  <function_decl 0x407cbb00 switch_loadable_module_get_codecs_sorted>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3479 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3349 3348 3350 333 (set (reg/v:SI 584 [ num ])
        (reg:SI 0 r0)) src/switch_core_media.c:3479 -1
     (nil))

(debug_insn 3350 3349 3351 333 (var_location:SI num (reg/v:SI 584 [ num ])) src/switch_core_media.c:3479 -1
     (nil))

(insn 3351 3350 3352 333 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 584 [ num ])
            (const_int 0 [0]))) src/switch_core_media.c:3481 -1
     (nil))

(jump_insn 3352 3351 3353 333 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5540)
            (pc))) src/switch_core_media.c:3481 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5540)

(note 3353 3352 3354 334 [bb 334] NOTE_INSN_BASIC_BLOCK)

(insn 3354 3353 3355 334 (set (reg/v/f:SI 224 [ timp ])
        (mem/s/f/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [2 search+0 S4 A64])) src/switch_core_media.c:3482 -1
     (nil))

(debug_insn 3355 3354 5537 334 (var_location:SI timp (reg/v/f:SI 224 [ timp ])) src/switch_core_media.c:3482 -1
     (nil))

(jump_insn 5537 3355 5538 334 (set (pc)
        (label_ref 3356)) -1
     (nil)
 -> 3356)

(barrier 5538 5537 5540)

(code_label 5540 5538 5539 335 1558 "" [1 uses])

(note 5539 5540 92 335 [bb 335] NOTE_INSN_BASIC_BLOCK)

(insn 92 5539 3356 335 (set (reg/v/f:SI 224 [ timp ])
        (reg/v/f:SI 581 [ near_match ])) src/switch_core_media.c:3481 -1
     (nil))

(code_label 3356 92 3357 336 1447 "" [1 uses])

(note 3357 3356 3358 336 [bb 336] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3358 3357 3359 336 (var_location:SI timp (reg/v/f:SI 224 [ timp ])) -1
     (nil))

(insn 3359 3358 3360 336 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 162 [ maxptime ])
            (const_int 0 [0]))) src/switch_core_media.c:3487 -1
     (nil))

(jump_insn 3360 3359 3361 336 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3370)
            (pc))) src/switch_core_media.c:3487 -1
     (expr_list:REG_BR_PROB (const_int 9700 [0x25e4])
        (nil))
 -> 3370)

(note 3361 3360 93 337 [bb 337] NOTE_INSN_BASIC_BLOCK)

(insn 93 3361 3362 337 (set (reg/v/f:SI 302 [ timp ])
        (reg/v/f:SI 224 [ timp ])) src/switch_core_media.c:3487 -1
     (nil))

(insn 3362 93 3363 337 (set (reg:SI 1898)
        (mem/s:SI (plus:SI (reg/v/f:SI 302 [ timp ])
                (const_int 28 [0x1c])) [4 timp_330->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3487 -1
     (nil))

(insn 3363 3362 3364 337 (set (reg:SI 1900)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3487 -1
     (nil))

(insn 3364 3363 3365 337 (parallel [
            (set (reg:SI 1899)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1898))
                            (sign_extend:DI (reg:SI 1900)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3487 -1
     (nil))

(insn 3365 3364 3366 337 (set (reg:SI 1901)
        (ashiftrt:SI (reg:SI 1899)
            (const_int 6 [0x6]))) src/switch_core_media.c:3487 -1
     (nil))

(insn 3366 3365 3367 337 (set (reg:SI 1902)
        (ashiftrt:SI (reg:SI 1898)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3487 -1
     (nil))

(insn 3367 3366 3368 337 (set (reg:SI 586 [ prephitmp.1039 ])
        (minus:SI (reg:SI 1901)
            (reg:SI 1902))) src/switch_core_media.c:3487 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1898)
            (const_int 1000 [0x3e8]))
        (nil)))

(jump_insn 3368 3367 3369 337 (set (pc)
        (label_ref 3380)) src/switch_core_media.c:3487 -1
     (nil)
 -> 3380)

(barrier 3369 3368 3370)

(code_label 3370 3369 3371 338 1448 "" [1 uses])

(note 3371 3370 3372 338 [bb 338] NOTE_INSN_BASIC_BLOCK)

(insn 3372 3371 3373 338 (set (reg:SI 1903)
        (mem/s:SI (plus:SI (reg/v/f:SI 224 [ timp ])
                (const_int 28 [0x1c])) [4 timp_134->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3487 -1
     (nil))

(insn 3373 3372 3374 338 (set (reg:SI 1905)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3487 -1
     (nil))

(insn 3374 3373 3375 338 (parallel [
            (set (reg:SI 1904)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1903))
                            (sign_extend:DI (reg:SI 1905)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3487 -1
     (nil))

(insn 3375 3374 3376 338 (set (reg:SI 1906)
        (ashiftrt:SI (reg:SI 1904)
            (const_int 6 [0x6]))) src/switch_core_media.c:3487 -1
     (nil))

(insn 3376 3375 3377 338 (set (reg:SI 1907)
        (ashiftrt:SI (reg:SI 1903)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3487 -1
     (nil))

(insn 3377 3376 3378 338 (set (reg:SI 586 [ prephitmp.1039 ])
        (minus:SI (reg:SI 1906)
            (reg:SI 1907))) src/switch_core_media.c:3487 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1903)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 3378 3377 3379 338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 586 [ prephitmp.1039 ])
            (reg/v:SI 162 [ maxptime ]))) src/switch_core_media.c:3487 -1
     (nil))

(jump_insn 3379 3378 3380 338 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3419)
            (pc))) src/switch_core_media.c:3487 -1
     (expr_list:REG_BR_PROB (const_int 9700 [0x25e4])
        (nil))
 -> 3419)

(code_label 3380 3379 3381 339 1449 "" [1 uses])

(note 3381 3380 3382 339 [bb 339] NOTE_INSN_BASIC_BLOCK)

(insn 3382 3381 3383 339 (set (reg:SI 1909)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1074 [0x432])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1074 [0x432])
            ] 29)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3383 3382 3384 339 (set (reg:SI 1908)
        (reg:SI 1909)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3384 3383 3385 339 (set (reg:SI 1911)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1075 [0x433])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1075 [0x433])
            ] 29)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3385 3384 3386 339 (set (reg/f:SI 1910)
        (reg:SI 1911)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3386 3385 3387 339 (set (reg:SI 1913)
        (plus:SI (reg/f:SI 1910)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3488 -1
     (nil))

(insn 3387 3386 3388 339 (set (reg:SI 1912)
        (plus:SI (reg:SI 1913)
            (const_int 8 [0x8]))) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1910)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3388 3387 3389 339 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3389 3388 3390 339 (set (reg:SI 1914)
        (const_int 7 [0x7])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3390 3389 3391 339 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1914)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3391 3390 3392 339 (set (reg:SI 1916)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC346") [flags 0x82]  <var_decl 0x404186c0 *.LC346>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1076 [0x434])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1076 [0x434])
            ] 29)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC346") [flags 0x82]  <var_decl 0x404186c0 *.LC346>)
        (nil)))

(insn 3392 3391 3393 339 (set (reg/f:SI 1915)
        (reg:SI 1916)) src/switch_core_media.c:3488 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC346") [flags 0x82]  <var_decl 0x404186c0 *.LC346>)
        (nil)))

(insn 3393 3392 3394 339 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1915)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3394 3393 3395 339 (set (reg/f:SI 1917)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 224 [ timp ])
                (const_int 8 [0x8])) [2 timp_1785->iananame+0 S4 A32])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3395 3394 3396 339 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 1917)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3396 3395 3397 339 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 586 [ prephitmp.1039 ])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3397 3396 3398 339 (set (reg:SI 1918)
        (mem/s:SI (plus:SI (reg/v/f:SI 224 [ timp ])
                (const_int 20 [0x14])) [4 timp_1785->actual_samples_per_second+0 S4 A32])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3398 3397 3399 339 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg:SI 1918)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3399 3398 3400 339 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3488 -1
     (nil))

(insn 3400 3399 3401 339 (set (reg:SI 1 r1)
        (reg:SI 1908)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3401 3400 3402 339 (set (reg:SI 2 r2)
        (reg:SI 1912)) src/switch_core_media.c:3488 -1
     (nil))

(insn 3402 3401 3403 339 (set (reg:SI 3 r3)
        (const_int 3488 [0xda0])) src/switch_core_media.c:3488 -1
     (nil))

(call_insn 3403 3402 3404 339 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 24 [0x18]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3488 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 3404 3403 3405 339 (var_location:QI match (const_int 1 [0x1])) src/switch_core_media.c:3490 -1
     (nil))

(insn 3405 3404 3406 339 (set (reg:SI 1919)
        (const_int -568 [0xfffffffffffffdc8])) src/switch_core_media.c:3492 -1
     (nil))

(insn 3406 3405 3407 339 (set (reg:SI 1920)
        (ashift:SI (reg/v:SI 587 [ j ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3492 -1
     (nil))

(insn 3407 3406 3408 339 (set (reg:SI 1921)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 1920))) src/switch_core_media.c:3492 -1
     (nil))

(insn 3408 3407 3409 339 (set (reg/f:SI 1922)
        (plus:SI (reg:SI 1921)
            (reg:SI 1919))) src/switch_core_media.c:3492 -1
     (nil))

(insn 3409 3408 3410 339 (set (reg:SI 1923)
        (mem/s:SI (plus:SI (reg/f:SI 1922)
                (const_int 4 [0x4])) [4 near_matches[j_1786].codec_idx+0 S4 A32])) src/switch_core_media.c:3492 -1
     (nil))

(insn 3410 3409 3411 339 (set (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -1044 [0xfffffffffffffbec])) [4 matches[0].codec_idx+0 S4 A32])
        (reg:SI 1923)) src/switch_core_media.c:3492 -1
     (nil))

(insn 3411 3410 3412 339 (set (mem/s/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -1048 [0xfffffffffffffbe8])) [4 matches[0].rate+0 S4 A64])
        (reg:SI 506 [ near_rate.96 ])) src/switch_core_media.c:3493 -1
     (nil))

(insn 3412 3411 3413 339 (set (mem/s/f/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -1056 [0xfffffffffffffbe0])) [2 matches[0].imp+0 S4 A64])
        (reg/v/f:SI 224 [ timp ])) src/switch_core_media.c:3494 -1
     (nil))

(insn 3413 3412 3414 339 (set (mem/s/f/c:SI (plus:SI (reg/f:SI 129 virtual-stack-vars)
                (const_int -1052 [0xfffffffffffffbe4])) [2 matches[0].map+0 S4 A32])
        (reg/v/f:SI 582 [ near_map ])) src/switch_core_media.c:3495 -1
     (nil))

(debug_insn 3414 3413 3415 339 (var_location:SI m_idx (const_int 1 [0x1])) src/switch_core_media.c:3496 -1
     (nil))

(debug_insn 3415 3414 3416 339 (var_location:SI m_idx (const_int 1 [0x1])) -1
     (nil))

(debug_insn 3416 3415 94 339 (var_location:QI match (const_int 1 [0x1])) -1
     (nil))

(insn 94 3416 3417 339 (set (reg/v:SI 202 [ m_idx ])
        (const_int 1 [0x1])) src/switch_core_media.c:3496 -1
     (nil))

(jump_insn 3417 94 3418 339 (set (pc)
        (label_ref 3437)) src/switch_core_media.c:3495 -1
     (nil)
 -> 3437)

(barrier 3418 3417 3419)

(code_label 3419 3418 3420 340 1450 "" [1 uses])

(note 3420 3419 3421 340 [bb 340] NOTE_INSN_BASIC_BLOCK)

(insn 3421 3420 3422 340 (set (reg/v:SI 587 [ j ])
        (plus:SI (reg/v:SI 587 [ j ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3464 -1
     (nil))

(debug_insn 3422 3421 3423 340 (var_location:SI j (reg/v:SI 587 [ j ])) src/switch_core_media.c:3464 -1
     (nil))

(debug_insn 3423 3422 3424 340 (var_location:SI j (reg/v:SI 587 [ j ])) -1
     (nil))

(insn 3424 3423 3426 340 (set (reg:SI 600 [ ivtmp.1067 ])
        (plus:SI (reg:SI 600 [ ivtmp.1067 ])
            (const_int 16 [0x10]))) src/switch_core_media.c:3464 -1
     (nil))

(insn 3426 3424 3427 340 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 211 [ nm_idx ])
            (reg/v:SI 587 [ j ]))) src/switch_core_media.c:3464 -1
     (nil))

(jump_insn 3427 3426 3430 340 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3425)
            (pc))) src/switch_core_media.c:3464 -1
     (expr_list:REG_BR_PROB (const_int 9672 [0x25c8])
        (nil))
 -> 3425)

(note 3430 3427 3428 341 [bb 341] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3428 3430 3429 341 (set (pc)
        (label_ref 3721)) src/switch_core_media.c:3464 -1
     (nil)
 -> 3721)

(barrier 3429 3428 3431)

(code_label 3431 3429 3432 342 1445 "" [1 uses])

(note 3432 3431 3433 342 [bb 342] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3433 3432 3434 342 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 3434 3433 3435 342 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(insn 3435 3434 3436 342 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (const_int 0 [0]))) src/switch_core_media.c:3503 -1
     (nil))

(jump_insn 3436 3435 3437 342 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3721)
            (pc))) src/switch_core_media.c:3503 -1
     (expr_list:REG_BR_PROB (const_int 1003 [0x3eb])
        (nil))
 -> 3721)

(code_label 3437 3436 3438 343 1451 "" [1 uses])

(note 3438 3437 3439 343 [bb 343] NOTE_INSN_BASIC_BLOCK)

(insn 3439 3438 3440 343 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 170 [ greedy ])
            (const_int 0 [0]))) src/switch_core_media.c:3506 -1
     (nil))

(jump_insn 3440 3439 3441 343 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3449)
            (pc))) src/switch_core_media.c:3506 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 3449)

(note 3441 3440 3442 344 [bb 344] NOTE_INSN_BASIC_BLOCK)

(insn 3442 3441 3443 344 (set (reg:SI 1924)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3507 -1
     (nil))

(insn 3443 3442 3444 344 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 194 [ total_codecs ])) src/switch_core_media.c:3507 -1
     (nil))

(insn 3444 3443 3445 344 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3507 -1
     (nil))

(insn 3445 3444 3446 344 (set (reg:SI 1 r1)
        (reg:SI 1924)) src/switch_core_media.c:3507 -1
     (nil))

(insn 3446 3445 3447 344 (set (reg:SI 2 r2)
        (reg/v:SI 202 [ m_idx ])) src/switch_core_media.c:3507 -1
     (nil))

(insn 3447 3446 3448 344 (set (reg:SI 3 r3)
        (reg/v/f:SI 193 [ codec_array ])) src/switch_core_media.c:3507 -1
     (nil))

(call_insn 3448 3447 3449 344 (parallel [
            (call (mem:SI (symbol_ref:SI ("greedy_sort") [flags 0x3]  <function_decl 0x414f3b00 greedy_sort>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3507 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(code_label 3449 3448 3450 345 1454 "" [1 uses])

(note 3450 3449 3451 345 [bb 345] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3451 3450 3452 345 (var_location:QI match (const_int 1 [0x1])) src/switch_core_media.c:3510 -1
     (nil))

(insn 3452 3451 3453 345 (set (reg:SI 1925)
        (const_int 11489 [0x2ce1])) src/switch_core_media.c:3511 -1
     (nil))

(insn 3453 3452 3454 345 (set (reg:SI 1926)
        (const_int 1 [0x1])) src/switch_core_media.c:3511 -1
     (nil))

(insn 3454 3453 3455 345 (set (reg:QI 1927)
        (subreg:QI (reg:SI 1926) 0)) src/switch_core_media.c:3511 -1
     (nil))

(insn 3455 3454 3456 345 (set (mem/s:QI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1925)) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].codec_negotiated+0 S1 A8])
        (reg:QI 1927)) src/switch_core_media.c:3511 -1
     (nil))

(insn 3456 3455 3457 345 (set (reg:SI 1928)
        (const_int 23532 [0x5bec])) src/switch_core_media.c:3512 -1
     (nil))

(insn 3457 3456 3458 345 (set (reg:SI 1929)
        (const_int 0 [0])) src/switch_core_media.c:3512 -1
     (nil))

(insn 3458 3457 3459 345 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 1928)) [4 smh_186->num_negotiated_codecs+0 S4 A32])
        (reg:SI 1929)) src/switch_core_media.c:3512 -1
     (nil))

(debug_insn 3459 3458 3460 345 (var_location:SI j (const_int 0 [0])) src/switch_core_media.c:3514 -1
     (nil))

(debug_insn 3460 3459 95 345 (var_location:SI j (const_int 0 [0])) -1
     (nil))

(insn 95 3460 96 345 (set (reg:SI 453 [ ivtmp.1062 ])
        (const_int 0 [0])) src/switch_core_media.c:3512 -1
     (nil))

(insn 96 95 3715 345 (set (reg/v:SI 642 [ j ])
        (const_int 0 [0])) src/switch_core_media.c:3512 -1
     (nil))

(code_label 3715 96 3461 346 1464 "" [1 uses])

(note 3461 3715 3462 346 [bb 346] NOTE_INSN_BASIC_BLOCK)

(insn 3462 3461 3463 346 (set (reg:SI 1930)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:2890 -1
     (nil))

(insn 3463 3462 3464 346 (set (reg/f:SI 315 [ D.49951 ])
        (plus:SI (reg:SI 1930)
            (reg:SI 453 [ ivtmp.1062 ]))) src/switch_core_media.c:2890 -1
     (nil))

(insn 3464 3463 3465 346 (set (reg/f:SI 592 [ D.45034 ])
        (mem/f:SI (plus:SI (reg/f:SI 315 [ D.49951 ])
                (const_int 4 [0x4])) [3 MEM[base: D.49951_345, offset: 4B]+0 S4 A32])) src/switch_core_media.c:3517 -1
     (nil))

(insn 3465 3464 3466 346 (set (reg:SI 1931)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3521 -1
     (nil))

(insn 3466 3465 3467 346 (set (reg/f:SI 598 [ D.45039 ])
        (mem/f:SI (plus:SI (reg:SI 453 [ ivtmp.1062 ])
                (reg:SI 1931)) [3 MEM[symbol: matches, index: ivtmp.1062_1793, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3521 -1
     (nil))

(insn 3467 3466 3468 346 (set (reg:SI 1932)
        (mem/s/f:SI (plus:SI (reg/f:SI 592 [ D.45034 ])
                (const_int 8 [0x8])) [2 D.45034_747->rm_encoding+0 S4 A32])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3468 3467 3469 346 (set (reg:SI 1933)
        (mem/s/f:SI (plus:SI (reg/f:SI 592 [ D.45034 ])
                (const_int 20 [0x14])) [2 D.45034_747->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3469 3468 3470 346 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 1028 [ sdp_type ])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3470 3469 3471 346 (set (reg:SI 1934)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 592 [ D.45034 ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3520 -1
     (nil))

(insn 3471 3470 3472 346 (set (reg:SI 1935)
        (lshiftrt:SI (reg:SI 1934)
            (const_int 1 [0x1]))) src/switch_core_media.c:3520 -1
     (nil))

(insn 3472 3471 3473 346 (set (reg:SI 1936)
        (zero_extend:SI (subreg:QI (reg:SI 1935) 0))) src/switch_core_media.c:3515 -1
     (nil))

(insn 3473 3472 3474 346 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1936)) src/switch_core_media.c:3515 -1
     (nil))

(insn 3474 3473 3475 346 (set (reg:SI 1937)
        (mem/s:SI (plus:SI (reg/f:SI 598 [ D.45039 ])
                (const_int 16 [0x10])) [4 D.45039_754->samples_per_second+0 S4 A32])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3475 3474 3476 346 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 1937)) src/switch_core_media.c:3515 -1
     (nil))

(insn 3476 3475 3477 346 (set (reg:SI 1939)
        (mem/s:SI (plus:SI (reg/f:SI 598 [ D.45039 ])
                (const_int 28 [0x1c])) [4 D.45039_754->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3522 -1
     (nil))

(insn 3477 3476 3478 346 (set (reg:SI 1941)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3522 -1
     (nil))

(insn 3478 3477 3479 346 (parallel [
            (set (reg:SI 1940)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1939))
                            (sign_extend:DI (reg:SI 1941)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3522 -1
     (nil))

(insn 3479 3478 3480 346 (set (reg:SI 1942)
        (ashiftrt:SI (reg:SI 1940)
            (const_int 6 [0x6]))) src/switch_core_media.c:3522 -1
     (nil))

(insn 3480 3479 3481 346 (set (reg:SI 1943)
        (ashiftrt:SI (reg:SI 1939)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3522 -1
     (nil))

(insn 3481 3480 3482 346 (set (reg:SI 1938)
        (minus:SI (reg:SI 1942)
            (reg:SI 1943))) src/switch_core_media.c:3522 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1939)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 3482 3481 3483 346 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 1938)) src/switch_core_media.c:3515 -1
     (nil))

(insn 3483 3482 3484 346 (set (reg:SI 1944)
        (const_int 1 [0x1])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3484 3483 3485 346 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 1944)) src/switch_core_media.c:3515 -1
     (nil))

(insn 3485 3484 3486 346 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3486 3485 3487 346 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3487 3486 3488 346 (set (reg:SI 2 r2)
        (reg:SI 1932)) src/switch_core_media.c:3515 -1
     (nil))

(insn 3488 3487 3489 346 (set (reg:SI 3 r3)
        (reg:SI 1933)) src/switch_core_media.c:3515 -1
     (nil))

(call_insn 3489 3488 3490 346 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_add_payload_map") [flags 0x1]  <function_decl 0x40957200 switch_core_media_add_payload_map>) [0 S4 A32])
                    (const_int 24 [0x18])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3515 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3490 3489 3491 346 (set (reg/v/f:SI 604 [ pmap ])
        (reg:SI 0 r0)) src/switch_core_media.c:3515 -1
     (nil))

(debug_insn 3491 3490 3492 346 (var_location:SI pmap (reg/v/f:SI 604 [ pmap ])) src/switch_core_media.c:3515 -1
     (nil))

(insn 3492 3491 3493 346 (set (reg:SI 1945)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3524 -1
     (nil))

(insn 3493 3492 3494 346 (set (reg/v/f:SI 605 [ mimp ])
        (mem/f:SI (plus:SI (reg:SI 453 [ ivtmp.1062 ])
                (reg:SI 1945)) [3 MEM[symbol: matches, index: ivtmp.1062_1793, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3524 -1
     (nil))

(debug_insn 3494 3493 3495 346 (var_location:SI mimp (reg/v/f:SI 605 [ mimp ])) src/switch_core_media.c:3524 -1
     (nil))

(insn 3495 3494 3496 346 (set (reg/v/f:SI 606 [ mmap ])
        (mem/f:SI (plus:SI (reg/f:SI 315 [ D.49951 ])
                (const_int 4 [0x4])) [3 MEM[base: D.49951_345, offset: 4B]+0 S4 A32])) src/switch_core_media.c:3525 -1
     (nil))

(debug_insn 3496 3495 3497 346 (var_location:SI mmap (reg/v/f:SI 606 [ mmap ])) src/switch_core_media.c:3525 -1
     (nil))

(insn 3497 3496 3498 346 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 642 [ j ])
            (const_int 0 [0]))) src/switch_core_media.c:3527 -1
     (nil))

(jump_insn 3498 3497 3499 346 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3512)
            (pc))) src/switch_core_media.c:3527 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3512)

(note 3499 3498 3500 347 [bb 347] NOTE_INSN_BASIC_BLOCK)

(insn 3500 3499 3501 347 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])
        (reg/v/f:SI 604 [ pmap ])) src/switch_core_media.c:3528 -1
     (nil))

(insn 3501 3500 3502 347 (set (reg:SI 1946)
        (const_int 1 [0x1])) src/switch_core_media.c:3529 -1
     (nil))

(insn 3502 3501 3503 347 (set (reg:QI 1947)
        (subreg:QI (reg:SI 1946) 0)) src/switch_core_media.c:3529 -1
     (nil))

(insn 3503 3502 3504 347 (set (mem/s:QI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 18 [0x12])) [0 pmap_760->current+0 S1 A16])
        (reg:QI 1947)) src/switch_core_media.c:3529 -1
     (nil))

(insn 3504 3503 3505 347 (set (reg/f:SI 607 [ D.44605 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3530 -1
     (nil))

(insn 3505 3504 3506 347 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 607 [ D.44605 ])
            (const_int 0 [0]))) src/switch_core_media.c:3530 -1
     (nil))

(jump_insn 3506 3505 3507 347 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3512)
            (pc))) src/switch_core_media.c:3530 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 3512)

(note 3507 3506 3508 348 [bb 348] NOTE_INSN_BASIC_BLOCK)

(insn 3508 3507 3509 348 (set (reg:SI 1948)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 604 [ pmap ])
                    (const_int 32 [0x20])) [0 pmap_760->pt+0 S1 A32]))) src/switch_core_media.c:3531 -1
     (nil))

(insn 3509 3508 3510 348 (set (reg:SI 0 r0)
        (reg/f:SI 607 [ D.44605 ])) src/switch_core_media.c:3531 -1
     (nil))

(insn 3510 3509 3511 348 (set (reg:SI 1 r1)
        (reg:SI 1948)) src/switch_core_media.c:3531 -1
     (nil))

(call_insn 3511 3510 3512 348 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_default_payload") [flags 0x41]  <function_decl 0x408ce200 switch_rtp_set_default_payload>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3531 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(code_label 3512 3511 3513 349 1455 "" [2 uses])

(note 3513 3512 3514 349 [bb 349] NOTE_INSN_BASIC_BLOCK)

(insn 3514 3513 3515 349 (set (reg:SI 1949)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 606 [ mmap ])
                (const_int 8 [0x8])) [2 mmap_762->rm_encoding+0 S4 A32])) src/switch_core_media.c:3535 -1
     (nil))

(insn 3515 3514 3516 349 (set (reg:SI 1951)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1077 [0x435])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1077 [0x435])
            ] 29)) src/switch_core_media.c:3535 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3516 3515 3517 349 (set (reg:SI 1950)
        (reg:SI 1951)) src/switch_core_media.c:3535 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3517 3516 3518 349 (set (reg:SI 1953)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1078 [0x436])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1078 [0x436])
            ] 29)) src/switch_core_media.c:3535 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3518 3517 3519 349 (set (reg/f:SI 1952)
        (reg:SI 1953)) src/switch_core_media.c:3535 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3519 3518 3520 349 (set (reg:SI 1955)
        (plus:SI (reg/f:SI 1952)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3535 -1
     (nil))

(insn 3520 3519 3521 349 (set (reg:SI 1954)
        (plus:SI (reg:SI 1955)
            (const_int 8 [0x8]))) src/switch_core_media.c:3535 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1952)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3521 3520 3522 349 (set (reg:SI 1956)
        (const_int 3535 [0xdcf])) src/switch_core_media.c:3535 -1
     (nil))

(insn 3522 3521 3523 349 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1956)) src/switch_core_media.c:3535 -1
     (nil))

(insn 3523 3522 3524 349 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3535 -1
     (nil))

(insn 3524 3523 3525 349 (set (reg:SI 1 r1)
        (reg:SI 1949)) src/switch_core_media.c:3535 -1
     (nil))

(insn 3525 3524 3526 349 (set (reg:SI 2 r2)
        (reg:SI 1950)) src/switch_core_media.c:3535 -1
     (nil))

(insn 3526 3525 3527 349 (set (reg:SI 3 r3)
        (reg:SI 1954)) src/switch_core_media.c:3535 -1
     (nil))

(call_insn 3527 3526 3528 349 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3535 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3528 3527 3529 349 (set (reg/f:SI 610 [ D.45050 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3535 -1
     (nil))

(insn 3529 3528 3530 349 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 24 [0x18])) [2 pmap_760->rm_encoding+0 S4 A32])
        (reg/f:SI 610 [ D.45050 ])) src/switch_core_media.c:3535 -1
     (nil))

(insn 3530 3529 3531 349 (set (reg:SI 1957)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 8 [0x8])) [2 mimp_761->iananame+0 S4 A32])) src/switch_core_media.c:3536 -1
     (nil))

(insn 3531 3530 3532 349 (set (reg:SI 1959)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1079 [0x437])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1079 [0x437])
            ] 29)) src/switch_core_media.c:3536 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3532 3531 3533 349 (set (reg:SI 1958)
        (reg:SI 1959)) src/switch_core_media.c:3536 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3533 3532 3534 349 (set (reg:SI 1961)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1080 [0x438])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1080 [0x438])
            ] 29)) src/switch_core_media.c:3536 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3534 3533 3535 349 (set (reg/f:SI 1960)
        (reg:SI 1961)) src/switch_core_media.c:3536 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3535 3534 3536 349 (set (reg:SI 1963)
        (plus:SI (reg/f:SI 1960)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3536 -1
     (nil))

(insn 3536 3535 3537 349 (set (reg:SI 1962)
        (plus:SI (reg:SI 1963)
            (const_int 8 [0x8]))) src/switch_core_media.c:3536 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1960)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3537 3536 3538 349 (set (reg:SI 1964)
        (const_int 3536 [0xdd0])) src/switch_core_media.c:3536 -1
     (nil))

(insn 3538 3537 3539 349 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 1964)) src/switch_core_media.c:3536 -1
     (nil))

(insn 3539 3538 3540 349 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3536 -1
     (nil))

(insn 3540 3539 3541 349 (set (reg:SI 1 r1)
        (reg:SI 1957)) src/switch_core_media.c:3536 -1
     (nil))

(insn 3541 3540 3542 349 (set (reg:SI 2 r2)
        (reg:SI 1958)) src/switch_core_media.c:3536 -1
     (nil))

(insn 3542 3541 3543 349 (set (reg:SI 3 r3)
        (reg:SI 1962)) src/switch_core_media.c:3536 -1
     (nil))

(call_insn 3543 3542 3544 349 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3536 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3544 3543 3545 349 (set (reg/f:SI 612 [ D.45052 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3536 -1
     (nil))

(insn 3545 3544 3546 349 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 28 [0x1c])) [2 pmap_760->iananame+0 S4 A32])
        (reg/f:SI 612 [ D.45052 ])) src/switch_core_media.c:3536 -1
     (nil))

(insn 3546 3545 3547 349 (set (reg:SI 1965)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 606 [ mmap ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3537 -1
     (nil))

(insn 3547 3546 3548 349 (set (reg:SI 1966)
        (lshiftrt:SI (reg:SI 1965)
            (const_int 1 [0x1]))) src/switch_core_media.c:3537 -1
     (nil))

(insn 3548 3547 3549 349 (set (reg:QI 1967)
        (subreg:QI (reg:SI 1966) 0)) src/switch_core_media.c:3537 -1
     (nil))

(insn 3549 3548 3550 349 (set (mem/s:QI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 57 [0x39])) [0 pmap_760->recv_pt+0 S1 A8])
        (reg:QI 1967)) src/switch_core_media.c:3537 -1
     (nil))

(insn 3550 3549 3551 349 (set (reg:SI 615 [ D.45055 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 16 [0x10])) [4 mimp_761->samples_per_second+0 S4 A32])) src/switch_core_media.c:3538 -1
     (nil))

(insn 3551 3550 3552 349 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 36 [0x24])) [26 pmap_760->rm_rate+0 S4 A32])
        (reg:SI 615 [ D.45055 ])) src/switch_core_media.c:3538 -1
     (nil))

(insn 3552 3551 3553 349 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 40 [0x28])) [26 pmap_760->adv_rm_rate+0 S4 A32])
        (reg:SI 615 [ D.45055 ])) src/switch_core_media.c:3539 -1
     (nil))

(insn 3553 3552 3554 349 (set (reg:SI 1968)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 8 [0x8])) [2 mimp_761->iananame+0 S4 A32])) src/switch_core_media.c:3540 -1
     (nil))

(insn 3554 3553 3555 349 (set (reg:SI 1970)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC347") [flags 0x82]  <var_decl 0x404187e0 *.LC347>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1081 [0x439])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1081 [0x439])
            ] 29)) src/switch_core_media.c:3540 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC347") [flags 0x82]  <var_decl 0x404187e0 *.LC347>)
        (nil)))

(insn 3555 3554 3556 349 (set (reg:SI 1969)
        (reg:SI 1970)) src/switch_core_media.c:3540 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC347") [flags 0x82]  <var_decl 0x404187e0 *.LC347>)
        (nil)))

(insn 3556 3555 3557 349 (set (reg:SI 0 r0)
        (reg:SI 1968)) src/switch_core_media.c:3540 -1
     (nil))

(insn 3557 3556 3558 349 (set (reg:SI 1 r1)
        (reg:SI 1969)) src/switch_core_media.c:3540 -1
     (nil))

(call_insn/i 3558 3557 3559 349 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3540 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 3559 3558 3560 349 (set (reg:SI 617 [ D.45056 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3540 -1
     (nil))

(insn 3560 3559 3561 349 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 617 [ D.45056 ])
            (const_int 0 [0]))) src/switch_core_media.c:3540 -1
     (nil))

(jump_insn 3561 3560 3562 349 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3565)
            (pc))) src/switch_core_media.c:3540 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3565)

(note 3562 3561 3563 350 [bb 350] NOTE_INSN_BASIC_BLOCK)

(insn 3563 3562 3564 350 (set (reg:SI 1971)
        (mem/s:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 20 [0x14])) [4 mimp_761->actual_samples_per_second+0 S4 A32])) src/switch_core_media.c:3541 -1
     (nil))

(insn 3564 3563 3565 350 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 36 [0x24])) [26 pmap_760->rm_rate+0 S4 A32])
        (reg:SI 1971)) src/switch_core_media.c:3541 -1
     (nil))

(code_label 3565 3564 3566 351 1456 "" [1 uses])

(note 3566 3565 3567 351 [bb 351] NOTE_INSN_BASIC_BLOCK)

(insn 3567 3566 3568 351 (set (reg:SI 1973)
        (mem/s:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 28 [0x1c])) [4 mimp_761->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3543 -1
     (nil))

(insn 3568 3567 3569 351 (set (reg:SI 1975)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3543 -1
     (nil))

(insn 3569 3568 3570 351 (parallel [
            (set (reg:SI 1974)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 1973))
                            (sign_extend:DI (reg:SI 1975)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3543 -1
     (nil))

(insn 3570 3569 3571 351 (set (reg:SI 1976)
        (ashiftrt:SI (reg:SI 1974)
            (const_int 6 [0x6]))) src/switch_core_media.c:3543 -1
     (nil))

(insn 3571 3570 3572 351 (set (reg:SI 1977)
        (ashiftrt:SI (reg:SI 1973)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3543 -1
     (nil))

(insn 3572 3571 3573 351 (set (reg:SI 1972)
        (minus:SI (reg:SI 1976)
            (reg:SI 1977))) src/switch_core_media.c:3543 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 1973)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 3573 3572 3574 351 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 44 [0x2c])) [4 pmap_760->codec_ms+0 S4 A32])
        (reg:SI 1972)) src/switch_core_media.c:3543 -1
     (nil))

(insn 3574 3573 3575 351 (set (reg:SI 1978)
        (mem/s:SI (plus:SI (reg/v/f:SI 605 [ mimp ])
                (const_int 24 [0x18])) [4 mimp_761->bits_per_second+0 S4 A32])) src/switch_core_media.c:3544 -1
     (nil))

(insn 3575 3574 3576 351 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 48 [0x30])) [4 pmap_760->bitrate+0 S4 A32])
        (reg:SI 1978)) src/switch_core_media.c:3544 -1
     (nil))

(insn 3576 3575 3577 351 (set (reg/f:SI 624 [ D.45066 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 606 [ mmap ])
                (const_int 16 [0x10])) [2 mmap_762->rm_params+0 S4 A32])) src/switch_core_media.c:3545 -1
     (nil))

(insn 3577 3576 3578 351 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 624 [ D.45066 ])
            (const_int 0 [0]))) src/switch_core_media.c:3545 -1
     (nil))

(jump_insn 3578 3577 3579 351 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5544)
            (pc))) src/switch_core_media.c:3545 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 5544)

(note 3579 3578 3580 352 [bb 352] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3580 3579 3581 352 (var_location:SI __nptr (reg/f:SI 624 [ D.45066 ])) src/switch_core_media.c:3545 -1
     (nil))

(insn 3581 3580 3582 352 (set (reg:SI 0 r0)
        (reg/f:SI 624 [ D.45066 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 3582 3581 3583 352 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 3583 3582 3584 352 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 3584 3583 3585 352 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 3585 3584 5541 352 (set (reg:SI 231 [ D.47922 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(jump_insn 5541 3585 5542 352 (set (pc)
        (label_ref 3586)) -1
     (nil)
 -> 3586)

(barrier 5542 5541 5544)

(code_label 5544 5542 5543 353 1559 "" [1 uses])

(note 5543 5544 97 353 [bb 353] NOTE_INSN_BASIC_BLOCK)

(insn 97 5543 3586 353 (set (reg:SI 231 [ D.47922 ])
        (const_int 1 [0x1])) src/switch_core_media.c:3545 -1
     (nil))

(code_label 3586 97 3587 354 1457 "" [1 uses])

(note 3587 3586 3588 354 [bb 354] NOTE_INSN_BASIC_BLOCK)

(insn 3588 3587 3589 354 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 72 [0x48])) [4 pmap_760->channels+0 S4 A32])
        (reg:SI 231 [ D.47922 ])) src/switch_core_media.c:3545 -1
     (nil))

(insn 3589 3588 3590 354 (set (reg:SI 1979)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 606 [ mmap ])
                (const_int 8 [0x8])) [2 mmap_762->rm_encoding+0 S4 A32])) src/switch_core_media.c:3547 -1
     (nil))

(insn 3590 3589 3591 354 (set (reg:SI 1981)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC78") [flags 0x82]  <var_decl 0x41ea4840 *.LC78>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1082 [0x43a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1082 [0x43a])
            ] 29)) src/switch_core_media.c:3547 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC78") [flags 0x82]  <var_decl 0x41ea4840 *.LC78>)
        (nil)))

(insn 3591 3590 3592 354 (set (reg:SI 1980)
        (reg:SI 1981)) src/switch_core_media.c:3547 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC78") [flags 0x82]  <var_decl 0x41ea4840 *.LC78>)
        (nil)))

(insn 3592 3591 3593 354 (set (reg:SI 0 r0)
        (reg:SI 1979)) src/switch_core_media.c:3547 -1
     (nil))

(insn 3593 3592 3594 354 (set (reg:SI 1 r1)
        (reg:SI 1980)) src/switch_core_media.c:3547 -1
     (nil))

(call_insn/i 3594 3593 3595 354 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3547 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 3595 3594 3596 354 (set (reg:SI 627 [ D.45070 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3547 -1
     (nil))

(insn 3596 3595 3597 354 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 627 [ D.45070 ])
            (const_int 0 [0]))) src/switch_core_media.c:3547 -1
     (nil))

(jump_insn 3597 3596 3598 354 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3652)
            (pc))) src/switch_core_media.c:3547 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3652)

(note 3598 3597 3599 355 [bb 355] NOTE_INSN_BASIC_BLOCK)

(insn 3599 3598 3600 355 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 231 [ D.47922 ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3548 -1
     (nil))

(jump_insn 3600 3599 3601 355 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3624)
            (pc))) src/switch_core_media.c:3548 -1
     (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil))
 -> 3624)

(note 3601 3600 3602 356 [bb 356] NOTE_INSN_BASIC_BLOCK)

(insn 3602 3601 3603 356 (set (reg:SI 1983)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1083 [0x43b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1083 [0x43b])
            ] 29)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3603 3602 3604 356 (set (reg:SI 1982)
        (reg:SI 1983)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3604 3603 3605 356 (set (reg:SI 1985)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1084 [0x43c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1084 [0x43c])
            ] 29)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3605 3604 3606 356 (set (reg/f:SI 1984)
        (reg:SI 1985)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3606 3605 3607 356 (set (reg:SI 1987)
        (plus:SI (reg/f:SI 1984)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3549 -1
     (nil))

(insn 3607 3606 3608 356 (set (reg:SI 1986)
        (plus:SI (reg:SI 1987)
            (const_int 8 [0x8]))) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1984)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3608 3607 3609 356 (set (reg:SI 1988)
        (const_int 3549 [0xddd])) src/switch_core_media.c:3549 -1
     (nil))

(insn 3609 3608 3610 356 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3549 -1
     (nil))

(insn 3610 3609 3611 356 (set (reg:SI 1989)
        (const_int 4 [0x4])) src/switch_core_media.c:3549 -1
     (nil))

(insn 3611 3610 3612 356 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 1989)) src/switch_core_media.c:3549 -1
     (nil))

(insn 3612 3611 3613 356 (set (reg:SI 1991)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC348") [flags 0x82]  <var_decl 0x40418840 *.LC348>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1085 [0x43d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1085 [0x43d])
            ] 29)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC348") [flags 0x82]  <var_decl 0x40418840 *.LC348>)
        (nil)))

(insn 3613 3612 3614 356 (set (reg/f:SI 1990)
        (reg:SI 1991)) src/switch_core_media.c:3549 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC348") [flags 0x82]  <var_decl 0x40418840 *.LC348>)
        (nil)))

(insn 3614 3613 3615 356 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 1990)) src/switch_core_media.c:3549 -1
     (nil))

(insn 3615 3614 3616 356 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3549 -1
     (nil))

(insn 3616 3615 3617 356 (set (reg:SI 1 r1)
        (reg:SI 1982)) src/switch_core_media.c:3549 -1
     (nil))

(insn 3617 3616 3618 356 (set (reg:SI 2 r2)
        (reg:SI 1986)) src/switch_core_media.c:3549 -1
     (nil))

(insn 3618 3617 3619 356 (set (reg:SI 3 r3)
        (reg:SI 1988)) src/switch_core_media.c:3549 -1
     (nil))

(call_insn 3619 3618 3620 356 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3549 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3620 3619 3621 356 (set (reg:SI 1992)
        (const_int 1 [0x1])) src/switch_core_media.c:3550 -1
     (nil))

(insn 3621 3620 3622 356 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 76 [0x4c])) [4 pmap_760->adv_channels+0 S4 A32])
        (reg:SI 1992)) src/switch_core_media.c:3550 -1
     (nil))

(jump_insn 3622 3621 3623 356 (set (pc)
        (label_ref 3628)) src/switch_core_media.c:3550 -1
     (nil)
 -> 3628)

(barrier 3623 3622 3624)

(code_label 3624 3623 3625 357 1459 "" [1 uses])

(note 3625 3624 3626 357 [bb 357] NOTE_INSN_BASIC_BLOCK)

(insn 3626 3625 3627 357 (set (reg:SI 1993)
        (const_int 2 [0x2])) src/switch_core_media.c:3552 -1
     (nil))

(insn 3627 3626 3628 357 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 76 [0x4c])) [4 pmap_760->adv_channels+0 S4 A32])
        (reg:SI 1993)) src/switch_core_media.c:3552 -1
     (nil))

(code_label 3628 3627 3629 358 1460 "" [1 uses])

(note 3629 3628 3630 358 [bb 358] NOTE_INSN_BASIC_BLOCK)

(insn 3630 3629 3631 358 (set (reg/f:SI 628 [ D.45079 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 606 [ mmap ])
                (const_int 20 [0x14])) [2 mmap_762->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3554 -1
     (nil))

(debug_insn 3631 3630 3632 358 (var_location:SI s (reg/f:SI 628 [ D.45079 ])) src/switch_core_media.c:3554 -1
     (nil))

(insn 3632 3631 3633 358 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 628 [ D.45079 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 3633 3632 3634 358 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3646)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 3646)

(note 3634 3633 3635 359 [bb 359] NOTE_INSN_BASIC_BLOCK)

(insn 3635 3634 3636 359 (set (reg:SI 1994)
        (zero_extend:SI (mem:QI (reg/f:SI 628 [ D.45079 ]) [0 *D.45079_790+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 3636 3635 3637 359 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1994)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 3637 3636 3640 359 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3646)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3646)

(note 3640 3637 3638 360 [bb 360] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3638 3640 3639 360 (set (pc)
        (label_ref 5244)) ./src/include/switch_utils.h:254 -1
     (nil)
 -> 5244)

(barrier 3639 3638 5252)

(code_label 5252 3639 3641 361 1513 "" [1 uses])

(note 3641 5252 3642 361 [bb 361] NOTE_INSN_BASIC_BLOCK)

(insn 3642 3641 3643 361 (set (reg:SI 1995)
        (const_int 2 [0x2])) src/switch_core_media.c:3555 -1
     (nil))

(insn 3643 3642 3644 361 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 72 [0x48])) [4 pmap_760->channels+0 S4 A32])
        (reg:SI 1995)) src/switch_core_media.c:3555 -1
     (nil))

(jump_insn 3644 3643 3645 361 (set (pc)
        (label_ref 3655)) src/switch_core_media.c:3555 -1
     (nil)
 -> 3655)

(barrier 3645 3644 3646)

(code_label 3646 3645 3647 362 1461 "" [3 uses])

(note 3647 3646 3648 362 [bb 362] NOTE_INSN_BASIC_BLOCK)

(insn 3648 3647 3649 362 (set (reg:SI 1996)
        (const_int 1 [0x1])) src/switch_core_media.c:3557 -1
     (nil))

(insn 3649 3648 3650 362 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 72 [0x48])) [4 pmap_760->channels+0 S4 A32])
        (reg:SI 1996)) src/switch_core_media.c:3557 -1
     (nil))

(jump_insn 3650 3649 3651 362 (set (pc)
        (label_ref 3655)) src/switch_core_media.c:3557 -1
     (nil)
 -> 3655)

(barrier 3651 3650 3652)

(code_label 3652 3651 3653 363 1458 "" [1 uses])

(note 3653 3652 3654 363 [bb 363] NOTE_INSN_BASIC_BLOCK)

(insn 3654 3653 3655 363 (set (mem/s:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 76 [0x4c])) [4 pmap_760->adv_channels+0 S4 A32])
        (reg:SI 231 [ D.47922 ])) src/switch_core_media.c:3560 -1
     (nil))

(code_label 3655 3654 3656 364 1463 "" [2 uses])

(note 3656 3655 3657 364 [bb 364] NOTE_INSN_BASIC_BLOCK)

(insn 3657 3656 3658 364 (set (reg:SI 1997)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 228 [ connection ])
                (const_int 16 [0x10])) [2 connection_139->c_address+0 S4 A32])) src/switch_core_media.c:3563 -1
     (nil))

(insn 3658 3657 3659 364 (set (reg:SI 1999)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1086 [0x43e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1086 [0x43e])
            ] 29)) src/switch_core_media.c:3563 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3659 3658 3660 364 (set (reg:SI 1998)
        (reg:SI 1999)) src/switch_core_media.c:3563 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3660 3659 3661 364 (set (reg:SI 2001)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1087 [0x43f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1087 [0x43f])
            ] 29)) src/switch_core_media.c:3563 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3661 3660 3662 364 (set (reg/f:SI 2000)
        (reg:SI 2001)) src/switch_core_media.c:3563 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3662 3661 3663 364 (set (reg:SI 2003)
        (plus:SI (reg/f:SI 2000)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3563 -1
     (nil))

(insn 3663 3662 3664 364 (set (reg:SI 2002)
        (plus:SI (reg:SI 2003)
            (const_int 8 [0x8]))) src/switch_core_media.c:3563 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2000)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3664 3663 3665 364 (set (reg:SI 2004)
        (const_int 3563 [0xdeb])) src/switch_core_media.c:3563 -1
     (nil))

(insn 3665 3664 3666 364 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 2004)) src/switch_core_media.c:3563 -1
     (nil))

(insn 3666 3665 3667 364 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3563 -1
     (nil))

(insn 3667 3666 3668 364 (set (reg:SI 1 r1)
        (reg:SI 1997)) src/switch_core_media.c:3563 -1
     (nil))

(insn 3668 3667 3669 364 (set (reg:SI 2 r2)
        (reg:SI 1998)) src/switch_core_media.c:3563 -1
     (nil))

(insn 3669 3668 3670 364 (set (reg:SI 3 r3)
        (reg:SI 2002)) src/switch_core_media.c:3563 -1
     (nil))

(call_insn 3670 3669 3671 364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3563 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3671 3670 3672 364 (set (reg/f:SI 631 [ D.45086 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3563 -1
     (nil))

(insn 3672 3671 3673 364 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 64 [0x40])) [2 pmap_760->remote_sdp_ip+0 S4 A32])
        (reg/f:SI 631 [ D.45086 ])) src/switch_core_media.c:3563 -1
     (nil))

(insn 3673 3672 3674 364 (set (reg:SI 2005)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 20 [0x14])) [26 m_1764->m_port+0 S4 A32])) src/switch_core_media.c:3564 -1
     (nil))

(insn 3674 3673 3675 364 (set (mem/s:HI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 68 [0x44])) [13 pmap_760->remote_sdp_port+0 S2 A32])
        (subreg:HI (reg:SI 2005) 0)) src/switch_core_media.c:3564 -1
     (nil))

(insn 3675 3674 3676 364 (set (reg:SI 2006)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 606 [ mmap ])
                (const_int 20 [0x14])) [2 mmap_762->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3565 -1
     (nil))

(insn 3676 3675 3677 364 (set (reg:SI 2008)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1088 [0x440])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1088 [0x440])
            ] 29)) src/switch_core_media.c:3565 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3677 3676 3678 364 (set (reg:SI 2007)
        (reg:SI 2008)) src/switch_core_media.c:3565 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3678 3677 3679 364 (set (reg:SI 2010)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1089 [0x441])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1089 [0x441])
            ] 29)) src/switch_core_media.c:3565 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3679 3678 3680 364 (set (reg/f:SI 2009)
        (reg:SI 2010)) src/switch_core_media.c:3565 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3680 3679 3681 364 (set (reg:SI 2012)
        (plus:SI (reg/f:SI 2009)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3565 -1
     (nil))

(insn 3681 3680 3682 364 (set (reg:SI 2011)
        (plus:SI (reg:SI 2012)
            (const_int 8 [0x8]))) src/switch_core_media.c:3565 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2009)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3682 3681 3683 364 (set (reg:SI 2013)
        (const_int 3565 [0xded])) src/switch_core_media.c:3565 -1
     (nil))

(insn 3683 3682 3684 364 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 2013)) src/switch_core_media.c:3565 -1
     (nil))

(insn 3684 3683 3685 364 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3565 -1
     (nil))

(insn 3685 3684 3686 364 (set (reg:SI 1 r1)
        (reg:SI 2006)) src/switch_core_media.c:3565 -1
     (nil))

(insn 3686 3685 3687 364 (set (reg:SI 2 r2)
        (reg:SI 2007)) src/switch_core_media.c:3565 -1
     (nil))

(insn 3687 3686 3688 364 (set (reg:SI 3 r3)
        (reg:SI 2011)) src/switch_core_media.c:3565 -1
     (nil))

(call_insn 3688 3687 3689 364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3565 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3689 3688 3690 364 (set (reg/f:SI 635 [ D.45088 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3565 -1
     (nil))

(insn 3690 3689 3691 364 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 52 [0x34])) [2 pmap_760->rm_fmtp+0 S4 A32])
        (reg/f:SI 635 [ D.45088 ])) src/switch_core_media.c:3565 -1
     (nil))

(insn 3691 3690 3692 364 (set (reg:SI 2014)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 606 [ mmap ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3567 -1
     (nil))

(insn 3692 3691 3693 364 (set (reg:SI 2015)
        (lshiftrt:SI (reg:SI 2014)
            (const_int 1 [0x1]))) src/switch_core_media.c:3567 -1
     (nil))

(insn 3693 3692 3694 364 (set (reg:QI 2016)
        (subreg:QI (reg:SI 2015) 0)) src/switch_core_media.c:3567 -1
     (nil))

(insn 3694 3693 3695 364 (set (mem/s:QI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 56 [0x38])) [0 pmap_760->agreed_pt+0 S1 A32])
        (reg:QI 2016)) src/switch_core_media.c:3567 -1
     (nil))

(insn 3695 3694 3696 364 (set (reg:SI 2017)
        (const_int 23532 [0x5bec])) src/switch_core_media.c:3568 -1
     (nil))

(insn 3696 3695 3697 364 (set (reg:SI 638 [ D.44655 ])
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2017)) [4 smh_186->num_negotiated_codecs+0 S4 A32])) src/switch_core_media.c:3568 -1
     (nil))

(insn 3697 3696 3698 364 (set (reg:SI 2019)
        (plus:SI (reg:SI 638 [ D.44655 ])
            (const_int 5824 [0x16c0]))) src/switch_core_media.c:3568 -1
     (nil))

(insn 3698 3697 3699 364 (set (reg:SI 2018)
        (plus:SI (reg:SI 2019)
            (const_int 8 [0x8]))) src/switch_core_media.c:3568 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 638 [ D.44655 ])
            (const_int 5832 [0x16c8]))
        (nil)))

(insn 3699 3698 3700 364 (set (reg:SI 2020)
        (const_int 4 [0x4])) src/switch_core_media.c:3568 -1
     (nil))

(insn 3700 3699 3701 364 (set (reg:SI 2021)
        (ashift:SI (reg:SI 2018)
            (const_int 2 [0x2]))) src/switch_core_media.c:3568 -1
     (nil))

(insn 3701 3700 3702 364 (set (reg:SI 2022)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2021))) src/switch_core_media.c:3568 -1
     (nil))

(insn 3702 3701 3703 364 (set (reg/f:SI 2023)
        (plus:SI (reg:SI 2022)
            (reg:SI 2020))) src/switch_core_media.c:3568 -1
     (nil))

(insn 3703 3702 3704 364 (set (mem/s/f:SI (reg/f:SI 2023) [2 smh_186->negotiated_codecs S4 A32])
        (reg/v/f:SI 605 [ mimp ])) src/switch_core_media.c:3568 -1
     (nil))

(insn 3704 3703 3705 364 (set (reg:SI 2024)
        (const_int 23532 [0x5bec])) src/switch_core_media.c:3568 -1
     (nil))

(insn 3705 3704 3706 364 (set (reg:SI 2025)
        (plus:SI (reg:SI 638 [ D.44655 ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3568 -1
     (nil))

(insn 3706 3705 3707 364 (set (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2024)) [4 smh_186->num_negotiated_codecs+0 S4 A32])
        (reg:SI 2025)) src/switch_core_media.c:3568 -1
     (nil))

(insn 3707 3706 3708 364 (set (reg:SI 2026)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 606 [ mmap ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3569 -1
     (nil))

(insn 3708 3707 3709 364 (set (reg:SI 2027)
        (lshiftrt:SI (reg:SI 2026)
            (const_int 1 [0x1]))) src/switch_core_media.c:3569 -1
     (nil))

(insn 3709 3708 3710 364 (set (reg:QI 2028)
        (subreg:QI (reg:SI 2027) 0)) src/switch_core_media.c:3569 -1
     (nil))

(insn 3710 3709 3711 364 (set (mem/s:QI (plus:SI (reg/v/f:SI 604 [ pmap ])
                (const_int 57 [0x39])) [0 pmap_760->recv_pt+0 S1 A8])
        (reg:QI 2028)) src/switch_core_media.c:3569 -1
     (nil))

(insn 3711 3710 3712 364 (set (reg/v:SI 642 [ j ])
        (plus:SI (reg/v:SI 642 [ j ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3514 -1
     (nil))

(debug_insn 3712 3711 3713 364 (var_location:SI j (reg/v:SI 642 [ j ])) src/switch_core_media.c:3514 -1
     (nil))

(debug_insn 3713 3712 3714 364 (var_location:SI j (reg/v:SI 642 [ j ])) -1
     (nil))

(insn 3714 3713 3716 364 (set (reg:SI 453 [ ivtmp.1062 ])
        (plus:SI (reg:SI 453 [ ivtmp.1062 ])
            (const_int 16 [0x10]))) src/switch_core_media.c:3514 -1
     (nil))

(insn 3716 3714 3717 364 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 642 [ j ])
            (reg/v:SI 202 [ m_idx ]))) src/switch_core_media.c:3514 -1
     (nil))

(jump_insn 3717 3716 3720 364 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3715)
            (pc))) src/switch_core_media.c:3514 -1
     (expr_list:REG_BR_PROB (const_int 9677 [0x25cd])
        (nil))
 -> 3715)

(note 3720 3717 99 365 [bb 365] NOTE_INSN_BASIC_BLOCK)

(insn 99 3720 3718 365 (set (reg/v:SI 142 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3510 -1
     (nil))

(jump_insn 3718 99 3719 365 (set (pc)
        (label_ref 3726)) src/switch_core_media.c:3514 -1
     (nil)
 -> 3726)

(barrier 3719 3718 3721)

(code_label 3721 3719 3722 366 1453 "" [2 uses])

(note 3722 3721 3723 366 [bb 366] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3723 3722 3724 366 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(insn 3724 3723 3725 366 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ match ])
            (const_int 0 [0]))) src/switch_core_media.c:3574 -1
     (nil))

(jump_insn 3725 3724 5545 366 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5549)
            (pc))) src/switch_core_media.c:3574 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil))
 -> 5549)

(note 5545 3725 98 367 [bb 367] NOTE_INSN_BASIC_BLOCK)

(insn 98 5545 3726 367 (set (reg/v:SI 202 [ m_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3574 -1
     (nil))

(code_label 3726 98 3727 368 1465 "" [1 uses])

(note 3727 3726 3728 368 [bb 368] NOTE_INSN_BASIC_BLOCK)

(insn 3728 3727 3729 368 (set (reg:SI 2029)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3579 -1
     (nil))

(insn 3729 3728 3730 368 (set (reg:SI 2031)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1090 [0x442])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1090 [0x442])
            ] 29)) src/switch_core_media.c:3579 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3730 3729 3731 368 (set (reg:SI 2030)
        (reg:SI 2031)) src/switch_core_media.c:3579 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3731 3730 3732 368 (set (reg/f:SI 2032)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3579 -1
     (nil))

(insn 3732 3731 3733 368 (set (reg:SI 2033)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 2032)
                    (const_int 68 [0x44])) [13 D.44750_808->remote_sdp_port+0 S2 A32]))) src/switch_core_media.c:3579 -1
     (nil))

(insn 3733 3732 3734 368 (set (reg:SI 0 r0)
        (reg:SI 2029)) src/switch_core_media.c:3579 -1
     (nil))

(insn 3734 3733 3735 368 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) src/switch_core_media.c:3579 -1
     (nil))

(insn 3735 3734 3736 368 (set (reg:SI 2 r2)
        (reg:SI 2030)) src/switch_core_media.c:3579 -1
     (nil))

(insn 3736 3735 3737 368 (set (reg:SI 3 r3)
        (reg:SI 2033)) src/switch_core_media.c:3579 -1
     (nil))

(call_insn 3737 3736 3738 368 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3579 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3738 3737 3739 368 (set (reg:SI 2034)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3580 -1
     (nil))

(insn 3739 3738 3740 368 (set (reg:SI 2036)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1091 [0x443])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1091 [0x443])
            ] 29)) src/switch_core_media.c:3580 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
        (nil)))

(insn 3740 3739 3741 368 (set (reg:SI 2035)
        (reg:SI 2036)) src/switch_core_media.c:3580 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC185") [flags 0x82]  <var_decl 0x4229e420 *.LC185>)
        (nil)))

(insn 3741 3740 3742 368 (set (reg/f:SI 2037)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3580 -1
     (nil))

(insn 3742 3741 3743 368 (set (reg:SI 2038)
        (mem/s/f:SI (plus:SI (reg/f:SI 2037)
                (const_int 64 [0x40])) [2 D.44750_812->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3580 -1
     (nil))

(insn 3743 3742 3744 368 (set (reg:SI 0 r0)
        (reg:SI 2034)) src/switch_core_media.c:3580 -1
     (nil))

(insn 3744 3743 3745 368 (set (reg:SI 1 r1)
        (reg:SI 2035)) src/switch_core_media.c:3580 -1
     (nil))

(insn 3745 3744 3746 368 (set (reg:SI 2 r2)
        (reg:SI 2038)) src/switch_core_media.c:3580 -1
     (nil))

(insn 3746 3745 3747 368 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3580 -1
     (nil))

(call_insn 3747 3746 3748 368 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3580 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3748 3747 3749 368 (set (reg:SI 2039)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3581 -1
     (nil))

(insn 3749 3748 3750 368 (set (reg:SI 2041)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1092 [0x444])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1092 [0x444])
            ] 29)) src/switch_core_media.c:3581 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
        (nil)))

(insn 3750 3749 3751 368 (set (reg:SI 2040)
        (reg:SI 2041)) src/switch_core_media.c:3581 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC186") [flags 0x82]  <var_decl 0x4229e480 *.LC186>)
        (nil)))

(insn 3751 3750 3752 368 (set (reg:SI 2042)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3581 -1
     (nil))

(insn 3752 3751 3753 368 (set (reg:SI 0 r0)
        (reg:SI 2039)) src/switch_core_media.c:3581 -1
     (nil))

(insn 3753 3752 3754 368 (set (reg:SI 1 r1)
        (reg:SI 2040)) src/switch_core_media.c:3581 -1
     (nil))

(insn 3754 3753 3755 368 (set (reg:SI 2 r2)
        (reg:SI 2042)) src/switch_core_media.c:3581 -1
     (nil))

(insn 3755 3754 3756 368 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3581 -1
     (nil))

(call_insn 3756 3755 3757 368 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3581 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3757 3756 3758 368 (set (reg:SI 2043)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3592 -1
     (nil))

(insn 3758 3757 3759 368 (set (reg:SI 2045)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1093 [0x445])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1093 [0x445])
            ] 29)) src/switch_core_media.c:3592 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3759 3758 3760 368 (set (reg:SI 2044)
        (reg:SI 2045)) src/switch_core_media.c:3592 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3760 3759 3761 368 (set (reg/f:SI 2046)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1936 [0x790])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3592 -1
     (nil))

(insn 3761 3760 3762 368 (set (reg:SI 2047)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 2046)
                    (const_int 57 [0x39])) [0 D.44750_815->recv_pt+0 S1 A8]))) src/switch_core_media.c:3592 -1
     (nil))

(insn 3762 3761 3763 368 (set (reg:SI 0 r0)
        (reg:SI 2043)) src/switch_core_media.c:3592 -1
     (nil))

(insn 3763 3762 3764 368 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) src/switch_core_media.c:3592 -1
     (nil))

(insn 3764 3763 3765 368 (set (reg:SI 2 r2)
        (reg:SI 2044)) src/switch_core_media.c:3592 -1
     (nil))

(insn 3765 3764 3766 368 (set (reg:SI 3 r3)
        (reg:SI 2047)) src/switch_core_media.c:3592 -1
     (nil))

(call_insn 3766 3765 3767 368 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3592 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3767 3766 3768 368 (set (reg:SI 2048)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3593 -1
     (nil))

(insn 3768 3767 3769 368 (set (reg:SI 2050)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC349") [flags 0x82]  <var_decl 0x404188a0 *.LC349>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1094 [0x446])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1094 [0x446])
            ] 29)) src/switch_core_media.c:3593 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC349") [flags 0x82]  <var_decl 0x404188a0 *.LC349>)
        (nil)))

(insn 3769 3768 3770 368 (set (reg:SI 2049)
        (reg:SI 2050)) src/switch_core_media.c:3593 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC349") [flags 0x82]  <var_decl 0x404188a0 *.LC349>)
        (nil)))

(insn 3770 3769 3771 368 (set (reg:SI 2051)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3593 -1
     (nil))

(insn 3771 3770 3772 368 (set (reg:SI 0 r0)
        (reg:SI 2048)) src/switch_core_media.c:3593 -1
     (nil))

(insn 3772 3771 3773 368 (set (reg:SI 1 r1)
        (reg:SI 2049)) src/switch_core_media.c:3593 -1
     (nil))

(insn 3773 3772 3774 368 (set (reg:SI 2 r2)
        (reg:SI 2051)) src/switch_core_media.c:3593 -1
     (nil))

(insn 3774 3773 3775 368 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3593 -1
     (nil))

(call_insn 3775 3774 3776 368 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3593 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 3776 3775 3777 368 (var_location:SI D#75 (plus:SI (reg/v/f:SI 233 [ smh ])
        (const_int 1604 [0x644]))) src/switch_core_media.c:3595 -1
     (nil))

(debug_insn 3777 3776 3778 368 (var_location:SI codec (debug_expr:SI D#75)) src/switch_core_media.c:3595 -1
     (nil))

(insn 3778 3777 3779 368 (set (reg:SI 2053)
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1620 [0x654])) [4 MEM[(struct switch_codec_t *)smh_186 + 1604B].flags+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 3779 3778 3780 368 (set (reg:SI 2052)
        (and:SI (reg:SI 2053)
            (const_int 256 [0x100]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 3780 3779 3781 368 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2052)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 3781 3780 3782 368 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3799)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3799)

(note 3782 3781 3783 369 [bb 369] NOTE_INSN_BASIC_BLOCK)

(insn 3783 3782 3784 369 (set (reg:SI 2054)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1636 [0x664])) [2 MEM[(struct switch_codec_t *)smh_186 + 1604B].mutex+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 3784 3783 3785 369 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2054)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 3785 3784 3786 369 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3799)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 3799)

(note 3786 3785 3787 370 [bb 370] NOTE_INSN_BASIC_BLOCK)

(insn 3787 3786 3788 370 (set (reg:SI 2055)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1604 [0x644])) [2 MEM[(struct switch_codec_t *)smh_186 + 1604B].codec_interface+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 3788 3787 3789 370 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2055)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 3789 3788 3790 370 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3799)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 3799)

(note 3790 3789 3791 371 [bb 371] NOTE_INSN_BASIC_BLOCK)

(insn 3791 3790 3792 371 (set (reg:SI 2056)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1608 [0x648])) [2 MEM[(struct switch_codec_t *)smh_186 + 1604B].implementation+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 3792 3791 3793 371 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2056)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 3793 3792 3794 371 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3799)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 3799)

(note 3794 3793 3795 372 [bb 372] NOTE_INSN_BASIC_BLOCK)

(insn 3795 3794 3796 372 (set (reg:SI 2057)
        (const_int 11488 [0x2ce0])) src/switch_core_media.c:3596 -1
     (nil))

(insn 3796 3795 3797 372 (set (reg:SI 2058)
        (const_int 1 [0x1])) src/switch_core_media.c:3596 -1
     (nil))

(insn 3797 3796 3798 372 (set (reg:QI 2059)
        (subreg:QI (reg:SI 2058) 0)) src/switch_core_media.c:3596 -1
     (nil))

(insn 3798 3797 3799 372 (set (mem/s:QI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2057)) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].reset_codec+0 S1 A32])
        (reg:QI 2059)) src/switch_core_media.c:3596 -1
     (nil))

(code_label 3799 3798 3800 373 1466 "" [4 uses])

(note 3800 3799 3801 373 [bb 373] NOTE_INSN_BASIC_BLOCK)

(insn 3801 3800 3802 373 (set (reg:SI 2061)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3599 -1
     (nil))

(insn 3802 3801 3803 373 (set (reg/f:SI 2060)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2061)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3599 -1
     (nil))

(insn 3803 3802 3804 373 (set (reg:SI 2062)
        (mem/s:SI (plus:SI (reg/f:SI 2060)
                (const_int 12 [0xc])) [4 D.44471_821->codec_flags+0 S4 A32])) src/switch_core_media.c:3599 -1
     (nil))

(insn 3804 3803 3805 373 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3599 -1
     (nil))

(insn 3805 3804 3806 373 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3599 -1
     (nil))

(insn 3806 3805 3807 373 (set (reg:SI 2 r2)
        (reg:SI 2062)) src/switch_core_media.c:3599 -1
     (nil))

(call_insn 3807 3806 3808 373 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_set_codec") [flags 0x1]  <function_decl 0x40945a00 switch_core_media_set_codec>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3599 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 3808 3807 3809 373 (set (reg:SI 656 [ D.45099 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3599 -1
     (nil))

(insn 3809 3808 3810 373 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 656 [ D.45099 ])
            (const_int 0 [0]))) src/switch_core_media.c:3599 -1
     (nil))

(jump_insn 3810 3809 3811 373 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5553)
            (pc))) src/switch_core_media.c:3599 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5553)

(note 3811 3810 3812 374 [bb 374] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3812 3811 3813 374 (var_location:SI got_audio (const_int 1 [0x1])) src/switch_core_media.c:3600 -1
     (nil))

(insn 3813 3812 3814 374 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3601 -1
     (nil))

(insn 3814 3813 3815 374 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3601 -1
     (nil))

(insn 3815 3814 3816 374 (set (reg:SI 2 r2)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3601 -1
     (nil))

(insn 3816 3815 3817 374 (set (reg:SI 3 r3)
        (reg/v/f:SI 813 [ m ])) src/switch_core_media.c:3601 -1
     (nil))

(call_insn 3817 3816 102 374 (parallel [
            (call (mem:SI (symbol_ref:SI ("check_ice") [flags 0x3]  <function_decl 0x414f3a00 check_ice>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3601 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 102 3817 5546 374 (set (reg/v:SI 183 [ got_audio ])
        (const_int 1 [0x1])) src/switch_core_media.c:3600 -1
     (nil))

(jump_insn 5546 102 5547 374 (set (pc)
        (label_ref 3818)) -1
     (nil)
 -> 3818)

(barrier 5547 5546 5549)

(code_label 5549 5547 5548 375 1560 "" [1 uses])

(note 5548 5549 100 375 [bb 375] NOTE_INSN_BASIC_BLOCK)

(insn 100 5548 101 375 (set (reg/v:SI 202 [ m_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3574 -1
     (nil))

(insn 101 100 5550 375 (set (reg/v:SI 183 [ got_audio ])
        (const_int 0 [0])) src/switch_core_media.c:3574 -1
     (nil))

(jump_insn 5550 101 5551 375 (set (pc)
        (label_ref 3818)) -1
     (nil)
 -> 3818)

(barrier 5551 5550 5553)

(code_label 5553 5551 5552 376 1561 "" [1 uses])

(note 5552 5553 103 376 [bb 376] NOTE_INSN_BASIC_BLOCK)

(insn 103 5552 104 376 (set (reg/v:SI 183 [ got_audio ])
        (const_int 0 [0])) src/switch_core_media.c:3599 -1
     (nil))

(insn 104 103 3818 376 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:3603 -1
     (nil))

(code_label 3818 104 3819 377 1444 "" [3 uses])

(note 3819 3818 3820 377 [bb 377] NOTE_INSN_BASIC_BLOCK)

(debug_insn 3820 3819 3821 377 (var_location:SI got_audio (reg/v:SI 183 [ got_audio ])) -1
     (nil))

(debug_insn 3821 3820 3822 377 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(insn 3822 3821 3823 377 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ best_te ])
            (const_int 0 [0]))) src/switch_core_media.c:3607 -1
     (nil))

(jump_insn 3823 3822 3824 377 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3870)
            (pc))) src/switch_core_media.c:3607 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 3870)

(note 3824 3823 3825 378 [bb 378] NOTE_INSN_BASIC_BLOCK)

(insn 3825 3824 3826 378 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3607 -1
     (nil))

(insn 3826 3825 3827 378 (set (reg:SI 1 r1)
        (const_int 8 [0x8])) src/switch_core_media.c:3607 -1
     (nil))

(call_insn 3827 3826 3828 378 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_media_handle_test_media_flag") [flags 0x1]  <function_decl 0x40945200 switch_media_handle_test_media_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3607 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 3828 3827 3829 378 (set (reg:SI 657 [ D.45107 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3607 -1
     (nil))

(insn 3829 3828 3830 378 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 657 [ D.45107 ])
            (const_int 0 [0]))) src/switch_core_media.c:3607 -1
     (nil))

(jump_insn 3830 3829 3831 378 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3839)
            (pc))) src/switch_core_media.c:3607 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 3839)

(note 3831 3830 3832 379 [bb 379] NOTE_INSN_BASIC_BLOCK)

(insn 3832 3831 3833 379 (set (reg:SI 2063)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3608 -1
     (nil))

(insn 3833 3832 3834 379 (set (reg:SI 0 r0)
        (reg:SI 2063)) src/switch_core_media.c:3608 -1
     (nil))

(insn 3834 3833 3835 379 (set (reg:SI 1 r1)
        (const_int 93 [0x5d])) src/switch_core_media.c:3608 -1
     (nil))

(call_insn 3835 3834 3836 379 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3608 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 3836 3835 3837 379 (set (reg:SI 659 [ D.45109 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3608 -1
     (nil))

(insn 3837 3836 3838 379 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 659 [ D.45109 ])
            (const_int 0 [0]))) src/switch_core_media.c:3607 -1
     (nil))

(jump_insn 3838 3837 3839 379 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4013)
            (pc))) src/switch_core_media.c:3607 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4013)

(code_label 3839 3838 3840 380 1468 "" [1 uses])

(note 3840 3839 3841 380 [bb 380] NOTE_INSN_BASIC_BLOCK)

(insn 3841 3840 3842 380 (set (reg:SI 2065)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1095 [0x447])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1095 [0x447])
            ] 29)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3842 3841 3843 380 (set (reg:SI 2064)
        (reg:SI 2065)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3843 3842 3844 380 (set (reg:SI 2067)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1096 [0x448])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1096 [0x448])
            ] 29)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3844 3843 3845 380 (set (reg/f:SI 2066)
        (reg:SI 2067)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3845 3844 3846 380 (set (reg:SI 2069)
        (plus:SI (reg/f:SI 2066)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3609 -1
     (nil))

(insn 3846 3845 3847 380 (set (reg:SI 2068)
        (plus:SI (reg:SI 2069)
            (const_int 8 [0x8]))) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2066)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3847 3846 3848 380 (set (reg:SI 2070)
        (const_int 3609 [0xe19])) src/switch_core_media.c:3609 -1
     (nil))

(insn 3848 3847 3849 380 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3609 -1
     (nil))

(insn 3849 3848 3850 380 (set (reg:SI 2071)
        (const_int 7 [0x7])) src/switch_core_media.c:3609 -1
     (nil))

(insn 3850 3849 3851 380 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2071)) src/switch_core_media.c:3609 -1
     (nil))

(insn 3851 3850 3852 380 (set (reg:SI 2073)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC350") [flags 0x82]  <var_decl 0x40418900 *.LC350>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1097 [0x449])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1097 [0x449])
            ] 29)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC350") [flags 0x82]  <var_decl 0x40418900 *.LC350>)
        (nil)))

(insn 3852 3851 3853 380 (set (reg/f:SI 2072)
        (reg:SI 2073)) src/switch_core_media.c:3609 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC350") [flags 0x82]  <var_decl 0x40418900 *.LC350>)
        (nil)))

(insn 3853 3852 3854 380 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2072)) src/switch_core_media.c:3609 -1
     (nil))

(insn 3854 3853 3855 380 (set (reg:SI 2075)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3610 -1
     (nil))

(insn 3855 3854 3856 380 (set (reg/f:SI 2074)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2075)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3610 -1
     (nil))

(insn 3856 3855 3857 380 (set (reg:SI 2076)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 2074)
                    (const_int 120 [0x78])) [0 D.44471_829->te+0 S1 A32]))) src/switch_core_media.c:3609 -1
     (nil))

(insn 3857 3856 3858 380 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 2076)) src/switch_core_media.c:3609 -1
     (nil))

(insn 3858 3857 3859 380 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3609 -1
     (nil))

(insn 3859 3858 3860 380 (set (reg:SI 1 r1)
        (reg:SI 2064)) src/switch_core_media.c:3609 -1
     (nil))

(insn 3860 3859 3861 380 (set (reg:SI 2 r2)
        (reg:SI 2068)) src/switch_core_media.c:3609 -1
     (nil))

(insn 3861 3860 3862 380 (set (reg:SI 3 r3)
        (reg:SI 2070)) src/switch_core_media.c:3609 -1
     (nil))

(call_insn 3862 3861 3863 380 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3609 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3863 3862 3864 380 (set (reg:SI 2078)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3611 -1
     (nil))

(insn 3864 3863 3865 380 (set (reg/f:SI 2077)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2078)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3611 -1
     (nil))

(insn 3865 3864 3866 380 (set (reg/v:SI 664 [ best_te ])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 2077)
                    (const_int 120 [0x78])) [0 D.44471_832->te+0 S1 A32]))) src/switch_core_media.c:3611 -1
     (nil))

(debug_insn 3866 3865 3867 380 (var_location:QI best_te (subreg:QI (reg/v:SI 664 [ best_te ]) 0)) src/switch_core_media.c:3611 -1
     (nil))

(debug_insn 3867 3866 3868 380 (var_location:QI best_te (subreg:QI (reg/v:SI 664 [ best_te ]) 0)) -1
     (nil))

(insn 3868 3867 3869 380 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 664 [ best_te ])
            (const_int 0 [0]))) src/switch_core_media.c:3614 -1
     (nil))

(jump_insn 3869 3868 5554 380 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4013)
            (pc))) src/switch_core_media.c:3614 -1
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil))
 -> 4013)

(note 5554 3869 109 381 [bb 381] NOTE_INSN_BASIC_BLOCK)

(insn 109 5554 3870 381 (set (reg/v:SI 145 [ best_te ])
        (reg/v:SI 664 [ best_te ])) src/switch_core_media.c:3614 -1
     (nil))

(code_label 3870 109 3871 382 1467 "" [1 uses])

(note 3871 3870 3872 382 [bb 382] NOTE_INSN_BASIC_BLOCK)

(insn 3872 3871 3873 382 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:3615 -1
     (nil))

(call_insn 3873 3872 3874 382 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_direction") [flags 0x41]  <function_decl 0x4085b700 switch_channel_direction>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3615 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 3874 3873 3875 382 (set (reg:SI 665 [ D.45114 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3615 -1
     (nil))

(insn 3875 3874 3876 382 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 665 [ D.45114 ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3615 -1
     (nil))

(jump_insn 3876 3875 3877 382 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 3937)
            (pc))) src/switch_core_media.c:3615 -1
     (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil))
 -> 3937)

(note 3877 3876 3878 383 [bb 383] NOTE_INSN_BASIC_BLOCK)

(insn 3878 3877 3879 383 (set (reg:SI 2079)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3616 -1
     (nil))

(insn 3879 3878 3880 383 (set (reg/f:SI 666 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2079)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3616 -1
     (nil))

(insn 3880 3879 3881 383 (set (reg:QI 2080)
        (subreg/s/u:QI (reg/v:SI 145 [ best_te ]) 0)) src/switch_core_media.c:3616 -1
     (nil))

(insn 3881 3880 3882 383 (set (mem/s:QI (plus:SI (reg/f:SI 666 [ D.44471 ])
                (const_int 120 [0x78])) [0 D.44471_835->te+0 S1 A32])
        (reg:QI 2080)) src/switch_core_media.c:3616 -1
     (nil))

(debug_insn 3882 3881 3883 383 (var_location:QI D#11 (mem/s/j:QI (plus:SI (reg/f:SI 666 [ D.44471 ])
            (const_int 120 [0x78])) [0 D.44471_835->te+0 S1 A32])) src/switch_core_media.c:3616 -1
     (nil))

(debug_insn 3883 3882 3884 383 (var_location:QI te (debug_expr:QI D#11)) src/switch_core_media.c:3616 -1
     (nil))

(insn 3884 3883 3885 383 (set (reg:SI 667 [ D.44857 ])
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3617 -1
     (nil))

(insn 3885 3884 3886 383 (set (reg:SI 2082)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1098 [0x44a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1098 [0x44a])
            ] 29)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3886 3885 3887 383 (set (reg:SI 2081)
        (reg:SI 2082)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3887 3886 3888 383 (set (reg:SI 2084)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1099 [0x44b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1099 [0x44b])
            ] 29)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3888 3887 3889 383 (set (reg/f:SI 2083)
        (reg:SI 2084)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3889 3888 3890 383 (set (reg:SI 2086)
        (plus:SI (reg/f:SI 2083)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3617 -1
     (nil))

(insn 3890 3889 3891 383 (set (reg:SI 2085)
        (plus:SI (reg:SI 2086)
            (const_int 8 [0x8]))) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2083)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3891 3890 3892 383 (set (reg:SI 2087)
        (const_int 3617 [0xe21])) src/switch_core_media.c:3617 -1
     (nil))

(insn 3892 3891 3893 383 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3617 -1
     (nil))

(insn 3893 3892 3894 383 (set (reg:SI 2088)
        (const_int 7 [0x7])) src/switch_core_media.c:3617 -1
     (nil))

(insn 3894 3893 3895 383 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2088)) src/switch_core_media.c:3617 -1
     (nil))

(insn 3895 3894 3896 383 (set (reg:SI 2090)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC351") [flags 0x82]  <var_decl 0x40418960 *.LC351>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1100 [0x44c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1100 [0x44c])
            ] 29)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC351") [flags 0x82]  <var_decl 0x40418960 *.LC351>)
        (nil)))

(insn 3896 3895 3897 383 (set (reg/f:SI 2089)
        (reg:SI 2090)) src/switch_core_media.c:3617 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC351") [flags 0x82]  <var_decl 0x40418960 *.LC351>)
        (nil)))

(insn 3897 3896 3898 383 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2089)) src/switch_core_media.c:3617 -1
     (nil))

(insn 3898 3897 3899 383 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 667 [ D.44857 ])) src/switch_core_media.c:3617 -1
     (nil))

(insn 3899 3898 3900 383 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3617 -1
     (nil))

(insn 3900 3899 3901 383 (set (reg:SI 1 r1)
        (reg:SI 2081)) src/switch_core_media.c:3617 -1
     (nil))

(insn 3901 3900 3902 383 (set (reg:SI 2 r2)
        (reg:SI 2085)) src/switch_core_media.c:3617 -1
     (nil))

(insn 3902 3901 3903 383 (set (reg:SI 3 r3)
        (reg:SI 2087)) src/switch_core_media.c:3617 -1
     (nil))

(call_insn 3903 3902 3904 383 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3617 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3904 3903 3905 383 (set (reg:SI 2091)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3618 -1
     (nil))

(insn 3905 3904 3906 383 (set (reg:SI 2093)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1101 [0x44d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1101 [0x44d])
            ] 29)) src/switch_core_media.c:3618 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 3906 3905 3907 383 (set (reg:SI 2092)
        (reg:SI 2093)) src/switch_core_media.c:3618 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 3907 3906 3908 383 (set (reg:SI 2095)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1102 [0x44e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1102 [0x44e])
            ] 29)) src/switch_core_media.c:3618 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
        (nil)))

(insn 3908 3907 3909 383 (set (reg:SI 2094)
        (reg:SI 2095)) src/switch_core_media.c:3618 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
        (nil)))

(insn 3909 3908 3910 383 (set (reg:SI 0 r0)
        (reg:SI 2091)) src/switch_core_media.c:3618 -1
     (nil))

(insn 3910 3909 3911 383 (set (reg:SI 1 r1)
        (reg:SI 2092)) src/switch_core_media.c:3618 -1
     (nil))

(insn 3911 3910 3912 383 (set (reg:SI 2 r2)
        (reg:SI 2094)) src/switch_core_media.c:3618 -1
     (nil))

(insn 3912 3911 3913 383 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3618 -1
     (nil))

(call_insn 3913 3912 3914 383 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3618 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3914 3913 3915 383 (set (reg:SI 2097)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3619 -1
     (nil))

(insn 3915 3914 3916 383 (set (reg/f:SI 2096)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2097)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3619 -1
     (nil))

(insn 3916 3915 3917 383 (set (reg:SI 2098)
        (const_int 0 [0])) src/switch_core_media.c:3619 -1
     (nil))

(insn 3917 3916 3918 383 (set (mem/s:SI (plus:SI (reg/f:SI 2096)
                (const_int 136 [0x88])) [30 D.44471_839->dtmf_type+0 S4 A32])
        (reg:SI 2098)) src/switch_core_media.c:3619 -1
     (nil))

(insn 3918 3917 3919 383 (set (reg/f:SI 670 [ D.44605 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3620 -1
     (nil))

(insn 3919 3918 3920 383 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 670 [ D.44605 ])
            (const_int 0 [0]))) src/switch_core_media.c:3620 -1
     (nil))

(jump_insn 3920 3919 3921 383 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5095)
            (pc))) src/switch_core_media.c:3620 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 5095)

(note 3921 3920 3922 384 [bb 384] NOTE_INSN_BASIC_BLOCK)

(insn 3922 3921 3923 384 (set (reg:SI 0 r0)
        (reg/f:SI 670 [ D.44605 ])) src/switch_core_media.c:3621 -1
     (nil))

(insn 3923 3922 3924 384 (set (reg:SI 1 r1)
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3621 -1
     (nil))

(call_insn 3924 3923 3925 384 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_telephony_event") [flags 0x41]  <function_decl 0x408ceb00 switch_rtp_set_telephony_event>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3621 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 3925 3924 3926 384 (set (reg:SI 2099)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3622 -1
     (nil))

(insn 3926 3925 3927 384 (set (reg:SI 2101)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1103 [0x44f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1103 [0x44f])
            ] 29)) src/switch_core_media.c:3622 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
        (nil)))

(insn 3927 3926 3928 384 (set (reg:SI 2100)
        (reg:SI 2101)) src/switch_core_media.c:3622 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
        (nil)))

(insn 3928 3927 3929 384 (set (reg:SI 2103)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1104 [0x450])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1104 [0x450])
            ] 29)) src/switch_core_media.c:3622 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3929 3928 3930 384 (set (reg:SI 2102)
        (reg:SI 2103)) src/switch_core_media.c:3622 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3930 3929 3931 384 (set (reg:SI 0 r0)
        (reg:SI 2099)) src/switch_core_media.c:3622 -1
     (nil))

(insn 3931 3930 3932 384 (set (reg:SI 1 r1)
        (reg:SI 2100)) src/switch_core_media.c:3622 -1
     (nil))

(insn 3932 3931 3933 384 (set (reg:SI 2 r2)
        (reg:SI 2102)) src/switch_core_media.c:3622 -1
     (nil))

(insn 3933 3932 3934 384 (set (reg:SI 3 r3)
        (reg:SI 667 [ D.44857 ])) src/switch_core_media.c:3622 -1
     (nil))

(call_insn 3934 3933 3935 384 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_printf") [flags 0x41]  <function_decl 0x4083dc00 switch_channel_set_variable_printf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3622 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 3935 3934 3936 384 (set (pc)
        (label_ref 5095)) src/switch_core_media.c:3622 -1
     (nil)
 -> 5095)

(barrier 3936 3935 3937)

(code_label 3937 3936 3938 385 1470 "" [1 uses])

(note 3938 3937 3939 385 [bb 385] NOTE_INSN_BASIC_BLOCK)

(insn 3939 3938 3940 385 (set (reg:SI 2104)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3625 -1
     (nil))

(insn 3940 3939 3941 385 (set (reg/f:SI 672 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2104)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3625 -1
     (nil))

(insn 3941 3940 3942 385 (set (reg:QI 2105)
        (subreg/s/u:QI (reg/v:SI 145 [ best_te ]) 0)) src/switch_core_media.c:3625 -1
     (nil))

(insn 3942 3941 3943 385 (set (mem/s:QI (plus:SI (reg/f:SI 672 [ D.44471 ])
                (const_int 120 [0x78])) [0 D.44471_845->te+0 S1 A32])
        (reg:QI 2105)) src/switch_core_media.c:3625 -1
     (nil))

(insn 3943 3942 3944 385 (set (reg:QI 2106)
        (subreg/s/u:QI (reg/v:SI 145 [ best_te ]) 0)) src/switch_core_media.c:3625 -1
     (nil))

(insn 3944 3943 3945 385 (set (mem/s:QI (plus:SI (reg/f:SI 672 [ D.44471 ])
                (const_int 121 [0x79])) [0 D.44471_845->recv_te+0 S1 A8])
        (reg:QI 2106)) src/switch_core_media.c:3625 -1
     (nil))

(debug_insn 3945 3944 3946 385 (var_location:QI te (subreg:QI (reg/v:SI 145 [ best_te ]) 0)) src/switch_core_media.c:3625 -1
     (nil))

(insn 3946 3945 3947 385 (set (reg:SI 674 [ D.45120 ])
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3626 -1
     (nil))

(insn 3947 3946 3948 385 (set (reg:SI 2108)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1105 [0x451])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1105 [0x451])
            ] 29)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3948 3947 3949 385 (set (reg:SI 2107)
        (reg:SI 2108)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 3949 3948 3950 385 (set (reg:SI 2110)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1106 [0x452])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1106 [0x452])
            ] 29)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3950 3949 3951 385 (set (reg/f:SI 2109)
        (reg:SI 2110)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3951 3950 3952 385 (set (reg:SI 2112)
        (plus:SI (reg/f:SI 2109)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3626 -1
     (nil))

(insn 3952 3951 3953 385 (set (reg:SI 2111)
        (plus:SI (reg:SI 2112)
            (const_int 8 [0x8]))) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2109)
            (const_int 1800 [0x708]))
        (nil)))

(insn 3953 3952 3954 385 (set (reg:SI 2113)
        (const_int 3626 [0xe2a])) src/switch_core_media.c:3626 -1
     (nil))

(insn 3954 3953 3955 385 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3626 -1
     (nil))

(insn 3955 3954 3956 385 (set (reg:SI 2114)
        (const_int 7 [0x7])) src/switch_core_media.c:3626 -1
     (nil))

(insn 3956 3955 3957 385 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2114)) src/switch_core_media.c:3626 -1
     (nil))

(insn 3957 3956 3958 385 (set (reg:SI 2116)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC355") [flags 0x82]  <var_decl 0x40418ae0 *.LC355>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1107 [0x453])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1107 [0x453])
            ] 29)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC355") [flags 0x82]  <var_decl 0x40418ae0 *.LC355>)
        (nil)))

(insn 3958 3957 3959 385 (set (reg/f:SI 2115)
        (reg:SI 2116)) src/switch_core_media.c:3626 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC355") [flags 0x82]  <var_decl 0x40418ae0 *.LC355>)
        (nil)))

(insn 3959 3958 3960 385 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2115)) src/switch_core_media.c:3626 -1
     (nil))

(insn 3960 3959 3961 385 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 674 [ D.45120 ])) src/switch_core_media.c:3626 -1
     (nil))

(insn 3961 3960 3962 385 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3626 -1
     (nil))

(insn 3962 3961 3963 385 (set (reg:SI 1 r1)
        (reg:SI 2107)) src/switch_core_media.c:3626 -1
     (nil))

(insn 3963 3962 3964 385 (set (reg:SI 2 r2)
        (reg:SI 2111)) src/switch_core_media.c:3626 -1
     (nil))

(insn 3964 3963 3965 385 (set (reg:SI 3 r3)
        (reg:SI 2113)) src/switch_core_media.c:3626 -1
     (nil))

(call_insn 3965 3964 3966 385 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3626 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3966 3965 3967 385 (set (reg:SI 2117)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3627 -1
     (nil))

(insn 3967 3966 3968 385 (set (reg:SI 2119)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1108 [0x454])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1108 [0x454])
            ] 29)) src/switch_core_media.c:3627 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 3968 3967 3969 385 (set (reg:SI 2118)
        (reg:SI 2119)) src/switch_core_media.c:3627 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 3969 3968 3970 385 (set (reg:SI 2121)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1109 [0x455])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1109 [0x455])
            ] 29)) src/switch_core_media.c:3627 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
        (nil)))

(insn 3970 3969 3971 385 (set (reg:SI 2120)
        (reg:SI 2121)) src/switch_core_media.c:3627 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC353") [flags 0x82]  <var_decl 0x40418a20 *.LC353>)
        (nil)))

(insn 3971 3970 3972 385 (set (reg:SI 0 r0)
        (reg:SI 2117)) src/switch_core_media.c:3627 -1
     (nil))

(insn 3972 3971 3973 385 (set (reg:SI 1 r1)
        (reg:SI 2118)) src/switch_core_media.c:3627 -1
     (nil))

(insn 3973 3972 3974 385 (set (reg:SI 2 r2)
        (reg:SI 2120)) src/switch_core_media.c:3627 -1
     (nil))

(insn 3974 3973 3975 385 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3627 -1
     (nil))

(call_insn 3975 3974 3976 385 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3627 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3976 3975 3977 385 (set (reg:SI 2123)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3628 -1
     (nil))

(insn 3977 3976 3978 385 (set (reg/f:SI 2122)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2123)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3628 -1
     (nil))

(insn 3978 3977 3979 385 (set (reg:SI 2124)
        (const_int 0 [0])) src/switch_core_media.c:3628 -1
     (nil))

(insn 3979 3978 3980 385 (set (mem/s:SI (plus:SI (reg/f:SI 2122)
                (const_int 136 [0x88])) [30 D.44471_850->dtmf_type+0 S4 A32])
        (reg:SI 2124)) src/switch_core_media.c:3628 -1
     (nil))

(insn 3980 3979 3981 385 (set (reg/f:SI 677 [ D.44605 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3629 -1
     (nil))

(insn 3981 3980 3982 385 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 677 [ D.44605 ])
            (const_int 0 [0]))) src/switch_core_media.c:3629 -1
     (nil))

(jump_insn 3982 3981 3983 385 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5095)
            (pc))) src/switch_core_media.c:3629 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 5095)

(note 3983 3982 3984 386 [bb 386] NOTE_INSN_BASIC_BLOCK)

(insn 3984 3983 3985 386 (set (reg:SI 0 r0)
        (reg/f:SI 677 [ D.44605 ])) src/switch_core_media.c:3630 -1
     (nil))

(insn 3985 3984 3986 386 (set (reg:SI 1 r1)
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3630 -1
     (nil))

(call_insn 3986 3985 3987 386 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_telephony_event") [flags 0x41]  <function_decl 0x408ceb00 switch_rtp_set_telephony_event>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3630 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 3987 3986 3988 386 (set (reg:SI 2125)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3631 -1
     (nil))

(insn 3988 3987 3989 386 (set (reg:SI 2127)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1110 [0x456])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1110 [0x456])
            ] 29)) src/switch_core_media.c:3631 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
        (nil)))

(insn 3989 3988 3990 386 (set (reg:SI 2126)
        (reg:SI 2127)) src/switch_core_media.c:3631 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC354") [flags 0x82]  <var_decl 0x40418a80 *.LC354>)
        (nil)))

(insn 3990 3989 3991 386 (set (reg:SI 2129)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1111 [0x457])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1111 [0x457])
            ] 29)) src/switch_core_media.c:3631 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3991 3990 3992 386 (set (reg:SI 2128)
        (reg:SI 2129)) src/switch_core_media.c:3631 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 3992 3991 3993 386 (set (reg:SI 0 r0)
        (reg:SI 2125)) src/switch_core_media.c:3631 -1
     (nil))

(insn 3993 3992 3994 386 (set (reg:SI 1 r1)
        (reg:SI 2126)) src/switch_core_media.c:3631 -1
     (nil))

(insn 3994 3993 3995 386 (set (reg:SI 2 r2)
        (reg:SI 2128)) src/switch_core_media.c:3631 -1
     (nil))

(insn 3995 3994 3996 386 (set (reg:SI 3 r3)
        (reg:SI 674 [ D.45120 ])) src/switch_core_media.c:3631 -1
     (nil))

(call_insn 3996 3995 3997 386 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_printf") [flags 0x41]  <function_decl 0x4083dc00 switch_channel_set_variable_printf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3631 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 3997 3996 3998 386 (set (reg:SI 2130)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (const_int 1528 [0x5f8])) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session+0 S4 A32])) src/switch_core_media.c:3632 -1
     (nil))

(insn 3998 3997 3999 386 (set (reg:SI 0 r0)
        (reg:SI 2130)) src/switch_core_media.c:3632 -1
     (nil))

(insn 3999 3998 4000 386 (set (reg:SI 1 r1)
        (reg/v:SI 145 [ best_te ])) src/switch_core_media.c:3632 -1
     (nil))

(call_insn 4000 3999 4001 386 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_telephony_recv_event") [flags 0x41]  <function_decl 0x408ceb80 switch_rtp_set_telephony_recv_event>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3632 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4001 4000 4002 386 (set (reg:SI 2131)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3633 -1
     (nil))

(insn 4002 4001 4003 386 (set (reg:SI 2133)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC356") [flags 0x82]  <var_decl 0x40418b40 *.LC356>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1112 [0x458])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1112 [0x458])
            ] 29)) src/switch_core_media.c:3633 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC356") [flags 0x82]  <var_decl 0x40418b40 *.LC356>)
        (nil)))

(insn 4003 4002 4004 386 (set (reg:SI 2132)
        (reg:SI 2133)) src/switch_core_media.c:3633 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC356") [flags 0x82]  <var_decl 0x40418b40 *.LC356>)
        (nil)))

(insn 4004 4003 4005 386 (set (reg:SI 2135)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1113 [0x459])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1113 [0x459])
            ] 29)) src/switch_core_media.c:3633 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4005 4004 4006 386 (set (reg:SI 2134)
        (reg:SI 2135)) src/switch_core_media.c:3633 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4006 4005 4007 386 (set (reg:SI 0 r0)
        (reg:SI 2131)) src/switch_core_media.c:3633 -1
     (nil))

(insn 4007 4006 4008 386 (set (reg:SI 1 r1)
        (reg:SI 2132)) src/switch_core_media.c:3633 -1
     (nil))

(insn 4008 4007 4009 386 (set (reg:SI 2 r2)
        (reg:SI 2134)) src/switch_core_media.c:3633 -1
     (nil))

(insn 4009 4008 4010 386 (set (reg:SI 3 r3)
        (reg:SI 674 [ D.45120 ])) src/switch_core_media.c:3633 -1
     (nil))

(call_insn 4010 4009 4011 386 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_printf") [flags 0x41]  <function_decl 0x4083dc00 switch_channel_set_variable_printf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3633 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 4011 4010 4012 386 (set (pc)
        (label_ref 5095)) src/switch_core_media.c:3633 -1
     (nil)
 -> 5095)

(barrier 4012 4011 4013)

(code_label 4013 4012 4014 387 1469 "" [2 uses])

(note 4014 4013 4015 387 [bb 387] NOTE_INSN_BASIC_BLOCK)

(insn 4015 4014 4016 387 (set (reg:SI 2137)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC357") [flags 0x82]  <var_decl 0x40418ba0 *.LC357>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1114 [0x45a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1114 [0x45a])
            ] 29)) src/switch_core_media.c:3638 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC357") [flags 0x82]  <var_decl 0x40418ba0 *.LC357>)
        (nil)))

(insn 4016 4015 4017 387 (set (reg:SI 2136)
        (reg:SI 2137)) src/switch_core_media.c:3638 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC357") [flags 0x82]  <var_decl 0x40418ba0 *.LC357>)
        (nil)))

(insn 4017 4016 4018 387 (set (reg:SI 0 r0)
        (reg/v/f:SI 232 [ channel ])) src/switch_core_media.c:3638 -1
     (nil))

(insn 4018 4017 4019 387 (set (reg:SI 1 r1)
        (reg:SI 2136)) src/switch_core_media.c:3638 -1
     (nil))

(insn 4019 4018 4020 387 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3638 -1
     (nil))

(insn 4020 4019 4021 387 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3638 -1
     (nil))

(call_insn 4021 4020 4022 387 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3638 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4022 4021 4023 387 (set (reg/f:SI 683 [ D.45124 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3638 -1
     (nil))

(debug_insn 4023 4022 4024 387 (var_location:SI expr (reg/f:SI 683 [ D.45124 ])) src/switch_core_media.c:3638 -1
     (nil))

(insn 4024 4023 4025 387 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 683 [ D.45124 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:461 -1
     (nil))

(jump_insn 4025 4024 4026 387 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5258)
            (pc))) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 5258)

(note 4026 4025 4027 388 [bb 388] NOTE_INSN_BASIC_BLOCK)

(insn 4027 4026 4028 388 (set (reg:SI 2139)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1115 [0x45b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1115 [0x45b])
            ] 29)) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
        (nil)))

(insn 4028 4027 4029 388 (set (reg:SI 2138)
        (reg:SI 2139)) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82]  <var_decl 0x41de80c0 *.LC30>)
        (nil)))

(insn 4029 4028 4030 388 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:461 -1
     (nil))

(insn 4030 4029 4031 388 (set (reg:SI 1 r1)
        (reg:SI 2138)) ./src/include/switch_utils.h:461 -1
     (nil))

(call_insn/i 4031 4030 4032 388 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4032 4031 4033 388 (set (reg:SI 917 [ D.49735 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:461 -1
     (nil))

(insn 4033 4032 4034 388 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 917 [ D.49735 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:468 -1
     (nil))

(jump_insn 4034 4033 4035 388 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4104)
            (pc))) ./src/include/switch_utils.h:468 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4104)

(note 4035 4034 4036 389 [bb 389] NOTE_INSN_BASIC_BLOCK)

(insn 4036 4035 4037 389 (set (reg:SI 2141)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1116 [0x45c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1116 [0x45c])
            ] 29)) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
        (nil)))

(insn 4037 4036 4038 389 (set (reg:SI 2140)
        (reg:SI 2141)) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82]  <var_decl 0x41de8120 *.LC31>)
        (nil)))

(insn 4038 4037 4039 389 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:462 -1
     (nil))

(insn 4039 4038 4040 389 (set (reg:SI 1 r1)
        (reg:SI 2140)) ./src/include/switch_utils.h:462 -1
     (nil))

(call_insn/i 4040 4039 4041 389 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4041 4040 4042 389 (set (reg:SI 918 [ D.49736 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:462 -1
     (nil))

(insn 4042 4041 4043 389 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 918 [ D.49736 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:461 -1
     (nil))

(jump_insn 4043 4042 4044 389 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4104)
            (pc))) ./src/include/switch_utils.h:461 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4104)

(note 4044 4043 4045 390 [bb 390] NOTE_INSN_BASIC_BLOCK)

(insn 4045 4044 4046 390 (set (reg:SI 2143)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1117 [0x45d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1117 [0x45d])
            ] 29)) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
        (nil)))

(insn 4046 4045 4047 390 (set (reg:SI 2142)
        (reg:SI 2143)) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82]  <var_decl 0x41de8180 *.LC32>)
        (nil)))

(insn 4047 4046 4048 390 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:463 -1
     (nil))

(insn 4048 4047 4049 390 (set (reg:SI 1 r1)
        (reg:SI 2142)) ./src/include/switch_utils.h:463 -1
     (nil))

(call_insn/i 4049 4048 4050 390 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4050 4049 4051 390 (set (reg:SI 919 [ D.49737 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:463 -1
     (nil))

(insn 4051 4050 4052 390 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 919 [ D.49737 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:462 -1
     (nil))

(jump_insn 4052 4051 4053 390 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4104)
            (pc))) ./src/include/switch_utils.h:462 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4104)

(note 4053 4052 4054 391 [bb 391] NOTE_INSN_BASIC_BLOCK)

(insn 4054 4053 4055 391 (set (reg:SI 2145)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1118 [0x45e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1118 [0x45e])
            ] 29)) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
        (nil)))

(insn 4055 4054 4056 391 (set (reg:SI 2144)
        (reg:SI 2145)) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82]  <var_decl 0x41de81e0 *.LC33>)
        (nil)))

(insn 4056 4055 4057 391 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:464 -1
     (nil))

(insn 4057 4056 4058 391 (set (reg:SI 1 r1)
        (reg:SI 2144)) ./src/include/switch_utils.h:464 -1
     (nil))

(call_insn/i 4058 4057 4059 391 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4059 4058 4060 391 (set (reg:SI 920 [ D.49738 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:464 -1
     (nil))

(insn 4060 4059 4061 391 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 920 [ D.49738 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:463 -1
     (nil))

(jump_insn 4061 4060 4062 391 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4104)
            (pc))) ./src/include/switch_utils.h:463 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4104)

(note 4062 4061 4063 392 [bb 392] NOTE_INSN_BASIC_BLOCK)

(insn 4063 4062 4064 392 (set (reg:SI 2147)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1119 [0x45f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1119 [0x45f])
            ] 29)) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
        (nil)))

(insn 4064 4063 4065 392 (set (reg:SI 2146)
        (reg:SI 2147)) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82]  <var_decl 0x41de8240 *.LC34>)
        (nil)))

(insn 4065 4064 4066 392 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:465 -1
     (nil))

(insn 4066 4065 4067 392 (set (reg:SI 1 r1)
        (reg:SI 2146)) ./src/include/switch_utils.h:465 -1
     (nil))

(call_insn/i 4067 4066 4068 392 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4068 4067 4069 392 (set (reg:SI 921 [ D.49739 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:465 -1
     (nil))

(insn 4069 4068 4070 392 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 921 [ D.49739 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:464 -1
     (nil))

(jump_insn 4070 4069 4071 392 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4104)
            (pc))) ./src/include/switch_utils.h:464 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4104)

(note 4071 4070 4072 393 [bb 393] NOTE_INSN_BASIC_BLOCK)

(insn 4072 4071 4073 393 (set (reg:SI 2149)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1120 [0x460])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1120 [0x460])
            ] 29)) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 4073 4072 4074 393 (set (reg:SI 2148)
        (reg:SI 2149)) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82]  <var_decl 0x41de82a0 *.LC35>)
        (nil)))

(insn 4074 4073 4075 393 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:466 -1
     (nil))

(insn 4075 4074 4076 393 (set (reg:SI 1 r1)
        (reg:SI 2148)) ./src/include/switch_utils.h:466 -1
     (nil))

(call_insn/i 4076 4075 4077 393 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4077 4076 4078 393 (set (reg:SI 922 [ D.49740 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:466 -1
     (nil))

(insn 4078 4077 4079 393 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 922 [ D.49740 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:465 -1
     (nil))

(jump_insn 4079 4078 4080 393 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4104)
            (pc))) ./src/include/switch_utils.h:465 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4104)

(note 4080 4079 4081 394 [bb 394] NOTE_INSN_BASIC_BLOCK)

(insn 4081 4080 4082 394 (set (reg:SI 2151)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1121 [0x461])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1121 [0x461])
            ] 29)) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
        (nil)))

(insn 4082 4081 4083 394 (set (reg:SI 2150)
        (reg:SI 2151)) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82]  <var_decl 0x41de8300 *.LC36>)
        (nil)))

(insn 4083 4082 4084 394 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:467 -1
     (nil))

(insn 4084 4083 4085 394 (set (reg:SI 1 r1)
        (reg:SI 2150)) ./src/include/switch_utils.h:467 -1
     (nil))

(call_insn/i 4085 4084 4086 394 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4086 4085 4087 394 (set (reg:SI 923 [ D.49741 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:467 -1
     (nil))

(insn 4087 4086 4088 394 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 923 [ D.49741 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:466 -1
     (nil))

(jump_insn 4088 4087 4089 394 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4104)
            (pc))) ./src/include/switch_utils.h:466 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil))
 -> 4104)

(note 4089 4088 4090 395 [bb 395] NOTE_INSN_BASIC_BLOCK)

(insn 4090 4089 4091 395 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) ./src/include/switch_utils.h:468 -1
     (nil))

(call_insn 4091 4090 4092 395 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:468 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 4092 4091 4093 395 (set (reg:SI 924 [ D.49742 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:468 -1
     (nil))

(insn 4093 4092 4094 395 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 924 [ D.49742 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:467 -1
     (nil))

(jump_insn 4094 4093 4095 395 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5258)
            (pc))) ./src/include/switch_utils.h:467 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5258)

(note 4095 4094 4096 396 [bb 396] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4096 4095 4097 396 (var_location:SI __nptr (reg/f:SI 683 [ D.45124 ])) -1
     (nil))

(insn 4097 4096 4098 396 (set (reg:SI 0 r0)
        (reg/f:SI 683 [ D.45124 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4098 4097 4099 396 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4099 4098 4100 396 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 4100 4099 4101 396 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4101 4100 4102 396 (set (reg:SI 925 [ D.49743 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4102 4101 4103 396 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 925 [ D.49743 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:468 -1
     (nil))

(jump_insn 4103 4102 4104 396 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5258)
            (pc))) ./src/include/switch_utils.h:468 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 5258)

(code_label 4104 4103 4105 397 1472 "" [7 uses])

(note 4105 4104 4106 397 [bb 397] NOTE_INSN_BASIC_BLOCK)

(insn 4106 4105 4107 397 (set (reg:SI 2152)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3644 -1
     (nil))

(insn 4107 4106 4108 397 (set (reg:SI 2154)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1122 [0x462])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1122 [0x462])
            ] 29)) src/switch_core_media.c:3644 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 4108 4107 4109 397 (set (reg:SI 2153)
        (reg:SI 2154)) src/switch_core_media.c:3644 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 4109 4108 4110 397 (set (reg:SI 2156)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC358") [flags 0x82]  <var_decl 0x40418c00 *.LC358>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1123 [0x463])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1123 [0x463])
            ] 29)) src/switch_core_media.c:3644 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC358") [flags 0x82]  <var_decl 0x40418c00 *.LC358>)
        (nil)))

(insn 4110 4109 4111 397 (set (reg:SI 2155)
        (reg:SI 2156)) src/switch_core_media.c:3644 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC358") [flags 0x82]  <var_decl 0x40418c00 *.LC358>)
        (nil)))

(insn 4111 4110 4112 397 (set (reg:SI 0 r0)
        (reg:SI 2152)) src/switch_core_media.c:3644 -1
     (nil))

(insn 4112 4111 4113 397 (set (reg:SI 1 r1)
        (reg:SI 2153)) src/switch_core_media.c:3644 -1
     (nil))

(insn 4113 4112 4114 397 (set (reg:SI 2 r2)
        (reg:SI 2155)) src/switch_core_media.c:3644 -1
     (nil))

(insn 4114 4113 4115 397 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3644 -1
     (nil))

(call_insn 4115 4114 4116 397 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3644 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4116 4115 4117 397 (set (reg:SI 2157)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3645 -1
     (nil))

(insn 4117 4116 4118 397 (set (reg/f:SI 689 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2157)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3645 -1
     (nil))

(insn 4118 4117 4119 397 (set (reg:SI 2158)
        (const_int 2 [0x2])) src/switch_core_media.c:3645 -1
     (nil))

(insn 4119 4118 4120 397 (set (mem/s:SI (plus:SI (reg/f:SI 689 [ D.44471 ])
                (const_int 136 [0x88])) [30 D.44471_867->dtmf_type+0 S4 A32])
        (reg:SI 2158)) src/switch_core_media.c:3645 -1
     (nil))

(insn 4120 4119 4121 397 (set (reg:SI 2159)
        (const_int 0 [0])) src/switch_core_media.c:3646 -1
     (nil))

(insn 4121 4120 4122 397 (set (reg:QI 2160)
        (subreg:QI (reg:SI 2159) 0)) src/switch_core_media.c:3646 -1
     (nil))

(insn 4122 4121 4123 397 (set (mem/s:QI (plus:SI (reg/f:SI 689 [ D.44471 ])
                (const_int 120 [0x78])) [0 D.44471_867->te+0 S1 A32])
        (reg:QI 2160)) src/switch_core_media.c:3646 -1
     (nil))

(insn 4123 4122 4124 397 (set (reg:SI 2161)
        (const_int 0 [0])) src/switch_core_media.c:3646 -1
     (nil))

(insn 4124 4123 4125 397 (set (reg:QI 2162)
        (subreg:QI (reg:SI 2161) 0)) src/switch_core_media.c:3646 -1
     (nil))

(insn 4125 4124 4126 397 (set (mem/s:QI (plus:SI (reg/f:SI 689 [ D.44471 ])
                (const_int 121 [0x79])) [0 D.44471_867->recv_te+0 S1 A8])
        (reg:QI 2162)) src/switch_core_media.c:3646 -1
     (nil))

(debug_insn 4126 4125 4127 397 (var_location:QI D#13 (mem/s/j:QI (plus:SI (reg/f:SI 689 [ D.44471 ])
            (const_int 121 [0x79])) [0 D.44471_867->recv_te+0 S1 A8])) src/switch_core_media.c:3646 -1
     (nil))

(debug_insn 4127 4126 4128 397 (var_location:QI te (debug_expr:QI D#13)) src/switch_core_media.c:3646 -1
     (nil))

(jump_insn 4128 4127 4129 397 (set (pc)
        (label_ref 5095)) src/switch_core_media.c:3646 -1
     (nil)
 -> 5095)

(barrier 4129 4128 4130)

(code_label 4130 4129 4131 398 1392 "" [1 uses])

(note 4131 4130 4132 398 [bb 398] NOTE_INSN_BASIC_BLOCK)

(insn 4132 4131 4133 398 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 979 [ prephitmp.1049 ])
            (const_int 3 [0x3]))) src/switch_core_media.c:3650 -1
     (nil))

(jump_insn 4133 4132 4134 398 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5095)
            (pc))) src/switch_core_media.c:3650 -1
     (expr_list:REG_BR_PROB (const_int 5580 [0x15cc])
        (nil))
 -> 5095)

(note 4134 4133 4135 399 [bb 399] NOTE_INSN_BASIC_BLOCK)

(insn 4135 4134 4136 399 (set (reg:SI 2163)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 20 [0x14])) [26 m_1764->m_port+0 S4 A32])) src/switch_core_media.c:3650 -1
     (nil))

(insn 4136 4135 4137 399 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2163)
            (const_int 0 [0]))) src/switch_core_media.c:3650 -1
     (nil))

(jump_insn 4137 4136 4138 399 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5095)
            (pc))) src/switch_core_media.c:3650 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5095)

(note 4138 4137 4139 400 [bb 400] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4139 4138 4140 400 (var_location:SI mimp (const_int 0 [0])) src/switch_core_media.c:3653 -1
     (nil))

(debug_insn 4140 4139 4141 400 (var_location:SI vmatch (const_int 0 [0])) src/switch_core_media.c:3654 -1
     (nil))

(debug_insn 4141 4140 4142 400 (var_location:SI nm_idx (const_int 0 [0])) src/switch_core_media.c:3656 -1
     (nil))

(debug_insn 4142 4141 4143 400 (var_location:SI m_idx (const_int 0 [0])) src/switch_core_media.c:3657 -1
     (nil))

(insn 4143 4142 4144 400 (set (reg:SI 2164)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3658 -1
     (nil))

(insn 4144 4143 4145 400 (set (reg:SI 2165)
        (reg:SI 2164)) src/switch_core_media.c:3658 -1
     (nil))

(insn 4145 4144 4146 400 (set (reg:SI 2166)
        (const_int 480 [0x1e0])) src/switch_core_media.c:3658 -1
     (nil))

(insn 4146 4145 4147 400 (set (reg:SI 0 r0)
        (reg:SI 2165)) src/switch_core_media.c:3658 -1
     (nil))

(insn 4147 4146 4148 400 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3658 -1
     (nil))

(insn 4148 4147 4149 400 (set (reg:SI 2 r2)
        (reg:SI 2166)) src/switch_core_media.c:3658 -1
     (nil))

(call_insn 4149 4148 4150 400 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x41afec00 memset>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3658 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4150 4149 4151 400 (set (reg:SI 2167)
        (reg:SI 0 r0)) src/switch_core_media.c:3658 -1
     (nil))

(insn 4151 4150 4152 400 (set (reg:SI 2168)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -576 [0xfffffffffffffdc0]))) src/switch_core_media.c:3659 -1
     (nil))

(insn 4152 4151 4153 400 (set (reg:SI 2169)
        (reg:SI 2168)) src/switch_core_media.c:3659 -1
     (nil))

(insn 4153 4152 4154 400 (set (reg:SI 2170)
        (const_int 480 [0x1e0])) src/switch_core_media.c:3659 -1
     (nil))

(insn 4154 4153 4155 400 (set (reg:SI 0 r0)
        (reg:SI 2169)) src/switch_core_media.c:3659 -1
     (nil))

(insn 4155 4154 4156 400 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3659 -1
     (nil))

(insn 4156 4155 4157 400 (set (reg:SI 2 r2)
        (reg:SI 2170)) src/switch_core_media.c:3659 -1
     (nil))

(call_insn 4157 4156 4158 400 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x41afec00 memset>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3659 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4158 4157 4159 400 (set (reg:SI 2171)
        (reg:SI 0 r0)) src/switch_core_media.c:3659 -1
     (nil))

(insn 4159 4158 4160 400 (set (reg:SI 2172)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3661 -1
     (nil))

(insn 4160 4159 4161 400 (set (reg:SI 2174)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC359") [flags 0x82]  <var_decl 0x40418de0 *.LC359>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1124 [0x464])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1124 [0x464])
            ] 29)) src/switch_core_media.c:3661 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC359") [flags 0x82]  <var_decl 0x40418de0 *.LC359>)
        (nil)))

(insn 4161 4160 4162 400 (set (reg:SI 2173)
        (reg:SI 2174)) src/switch_core_media.c:3661 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC359") [flags 0x82]  <var_decl 0x40418de0 *.LC359>)
        (nil)))

(insn 4162 4161 4163 400 (set (reg:SI 2176)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1125 [0x465])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1125 [0x465])
            ] 29)) src/switch_core_media.c:3661 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 4163 4162 4164 400 (set (reg:SI 2175)
        (reg:SI 2176)) src/switch_core_media.c:3661 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 4164 4163 4165 400 (set (reg:SI 0 r0)
        (reg:SI 2172)) src/switch_core_media.c:3661 -1
     (nil))

(insn 4165 4164 4166 400 (set (reg:SI 1 r1)
        (reg:SI 2173)) src/switch_core_media.c:3661 -1
     (nil))

(insn 4166 4165 4167 400 (set (reg:SI 2 r2)
        (reg:SI 2175)) src/switch_core_media.c:3661 -1
     (nil))

(insn 4167 4166 4168 400 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3661 -1
     (nil))

(call_insn 4168 4167 4169 400 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3661 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4169 4168 4170 400 (set (reg/v/f:SI 693 [ connection ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 238 [ sdp ])
                (const_int 36 [0x24])) [2 sdp_198->sdp_connection+0 S4 A32])) src/switch_core_media.c:3663 -1
     (nil))

(debug_insn 4170 4169 4171 400 (var_location:SI connection (reg/v/f:SI 693 [ connection ])) src/switch_core_media.c:3663 -1
     (nil))

(insn 4171 4170 4172 400 (set (reg/v/f:SI 207 [ connection ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 48 [0x30])) [2 m_1764->m_connections+0 S4 A32])) src/switch_core_media.c:3664 -1
     (nil))

(insn 4172 4171 4173 400 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 207 [ connection ])
            (const_int 0 [0]))) src/switch_core_media.c:3664 -1
     (nil))

(jump_insn 4173 4172 4174 400 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4200)
            (pc))) src/switch_core_media.c:3664 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil))
 -> 4200)

(note 4174 4173 4175 401 [bb 401] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4175 4174 4176 401 (var_location:SI connection (reg/v/f:SI 693 [ connection ])) -1
     (nil))

(insn 4176 4175 4177 401 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 693 [ connection ])
            (const_int 0 [0]))) src/switch_core_media.c:3668 -1
     (nil))

(jump_insn 4177 4176 4178 401 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5556)
            (pc))) src/switch_core_media.c:3668 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 8750 [0x222e])
        (nil))
 -> 5556)

(note 4178 4177 4179 402 [bb 402] NOTE_INSN_BASIC_BLOCK)

(insn 4179 4178 4180 402 (set (reg:SI 2178)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1126 [0x466])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1126 [0x466])
            ] 29)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4180 4179 4181 402 (set (reg:SI 2177)
        (reg:SI 2178)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4181 4180 4182 402 (set (reg:SI 2180)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1127 [0x467])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1127 [0x467])
            ] 29)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4182 4181 4183 402 (set (reg/f:SI 2179)
        (reg:SI 2180)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4183 4182 4184 402 (set (reg:SI 2182)
        (plus:SI (reg/f:SI 2179)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3669 -1
     (nil))

(insn 4184 4183 4185 402 (set (reg:SI 2181)
        (plus:SI (reg:SI 2182)
            (const_int 8 [0x8]))) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2179)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4185 4184 4186 402 (set (reg:SI 2183)
        (const_int 3669 [0xe55])) src/switch_core_media.c:3669 -1
     (nil))

(insn 4186 4185 4187 402 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3669 -1
     (nil))

(insn 4187 4186 4188 402 (set (reg:SI 2184)
        (const_int 3 [0x3])) src/switch_core_media.c:3669 -1
     (nil))

(insn 4188 4187 4189 402 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2184)) src/switch_core_media.c:3669 -1
     (nil))

(insn 4189 4188 4190 402 (set (reg:SI 2186)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1128 [0x468])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1128 [0x468])
            ] 29)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
        (nil)))

(insn 4190 4189 4191 402 (set (reg/f:SI 2185)
        (reg:SI 2186)) src/switch_core_media.c:3669 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC99") [flags 0x82]  <var_decl 0x41ff2d80 *.LC99>)
        (nil)))

(insn 4191 4190 4192 402 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2185)) src/switch_core_media.c:3669 -1
     (nil))

(insn 4192 4191 4193 402 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3669 -1
     (nil))

(insn 4193 4192 4194 402 (set (reg:SI 1 r1)
        (reg:SI 2177)) src/switch_core_media.c:3669 -1
     (nil))

(insn 4194 4193 4195 402 (set (reg:SI 2 r2)
        (reg:SI 2181)) src/switch_core_media.c:3669 -1
     (nil))

(insn 4195 4194 4196 402 (set (reg:SI 3 r3)
        (reg:SI 2183)) src/switch_core_media.c:3669 -1
     (nil))

(call_insn 4196 4195 4197 402 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3669 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 4197 4196 133 402 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3670 -1
     (nil))

(insn 133 4197 4198 402 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:3670 -1
     (nil))

(jump_insn 4198 133 4199 402 (set (pc)
        (label_ref 5127)) src/switch_core_media.c:3671 -1
     (nil)
 -> 5127)

(barrier 4199 4198 5556)

(code_label 5556 4199 5555 403 1562 "" [1 uses])

(note 5555 5556 110 403 [bb 403] NOTE_INSN_BASIC_BLOCK)

(insn 110 5555 4200 403 (set (reg/v/f:SI 207 [ connection ])
        (reg/v/f:SI 693 [ connection ])) src/switch_core_media.c:3668 -1
     (nil))

(code_label 4200 110 4201 404 1473 "" [1 uses])

(note 4201 4200 4202 404 [bb 404] NOTE_INSN_BASIC_BLOCK)

(insn 4202 4201 4203 404 (set (reg/v/f:SI 757 [ map ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 40 [0x28])) [2 m_1764->m_rtpmaps+0 S4 A32])) src/switch_core_media.c:3674 -1
     (nil))

(debug_insn 4203 4202 4204 404 (var_location:SI map (reg/v/f:SI 757 [ map ])) src/switch_core_media.c:3674 -1
     (nil))

(debug_insn 4204 4203 4205 404 (var_location:SI map (reg/v/f:SI 757 [ map ])) -1
     (nil))

(debug_insn 4205 4204 4206 404 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))

(debug_insn 4206 4205 4207 404 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) -1
     (nil))

(insn 4207 4206 4208 404 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 757 [ map ])
            (const_int 0 [0]))) src/switch_core_media.c:3674 -1
     (nil))

(jump_insn 4208 4207 5557 404 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5562)
            (pc))) src/switch_core_media.c:3674 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 5562)

(note 5557 4208 111 405 [bb 405] NOTE_INSN_BASIC_BLOCK)

(insn 111 5557 4730 405 (set (reg/v:SI 202 [ m_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3674 -1
     (nil))

(code_label 4730 111 4209 406 1499 "" [1 uses])

(note 4209 4730 4210 406 [bb 406] NOTE_INSN_BASIC_BLOCK)

(call_insn 4210 4209 4211 406 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_rtp_has_dtls") [flags 0x41]  <function_decl 0x408d7080 switch_rtp_has_dtls>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3676 -1
     (nil)
    (nil))

(insn 4211 4210 4212 406 (set (reg:SI 695 [ D.45137 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3676 -1
     (nil))

(insn 4212 4211 4213 406 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 695 [ D.45137 ])
            (const_int 0 [0]))) src/switch_core_media.c:3676 -1
     (nil))

(jump_insn 4213 4212 4214 406 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4261)
            (pc))) src/switch_core_media.c:3676 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 4261)

(note 4214 4213 4215 407 [bb 407] NOTE_INSN_BASIC_BLOCK)

(insn 4215 4214 4216 407 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3676 -1
     (nil))

(call_insn 4216 4215 4217 407 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dtls_ok") [flags 0x3]  <function_decl 0x414f3900 dtls_ok>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3676 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 4217 4216 4218 407 (set (reg:SI 696 [ D.45140 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3676 -1
     (nil))

(insn 4218 4217 4219 407 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 696 [ D.45140 ])
            (const_int 0 [0]))) src/switch_core_media.c:3676 -1
     (nil))

(jump_insn 4219 4218 4220 407 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4261)
            (pc))) src/switch_core_media.c:3676 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4261)

(note 4220 4219 4221 408 [bb 408] NOTE_INSN_BASIC_BLOCK)

(insn 4221 4220 4222 408 (set (reg/v/f:SI 507 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 60 [0x3c])) [2 m_1764->m_attributes+0 S4 A32])) src/switch_core_media.c:3677 -1
     (nil))

(debug_insn 4222 4221 4223 408 (var_location:SI attr (reg/v/f:SI 507 [ attr ])) src/switch_core_media.c:3677 -1
     (nil))

(debug_insn 4223 4222 4224 408 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) -1
     (nil))

(debug_insn 4224 4223 4225 408 (var_location:SI attr (reg/v/f:SI 507 [ attr ])) -1
     (nil))

(insn 4225 4224 4226 408 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 507 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3677 -1
     (nil))

(jump_insn 4226 4225 4227 408 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4566)
            (pc))) src/switch_core_media.c:3677 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 4566)

(note 4227 4226 112 409 [bb 409] NOTE_INSN_BASIC_BLOCK)

(insn 112 4227 4255 409 (set (reg/v/f:SI 700 [ attr ])
        (reg/v/f:SI 507 [ attr ])) src/switch_core_media.c:3677 -1
     (nil))

(code_label 4255 112 4228 410 1478 "" [1 uses])

(note 4228 4255 4229 410 [bb 410] NOTE_INSN_BASIC_BLOCK)

(insn 4229 4228 4230 410 (set (reg:SI 2187)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 700 [ attr ])
                (const_int 8 [0x8])) [2 attr_1850->a_name+0 S4 A32])) src/switch_core_media.c:3678 -1
     (nil))

(insn 4230 4229 4231 410 (set (reg:SI 2189)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1129 [0x469])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1129 [0x469])
            ] 29)) src/switch_core_media.c:3678 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
        (nil)))

(insn 4231 4230 4232 410 (set (reg:SI 2188)
        (reg:SI 2189)) src/switch_core_media.c:3678 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC251") [flags 0x82]  <var_decl 0x403448a0 *.LC251>)
        (nil)))

(insn 4232 4231 4233 410 (set (reg:SI 0 r0)
        (reg:SI 2187)) src/switch_core_media.c:3678 -1
     (nil))

(insn 4233 4232 4234 410 (set (reg:SI 1 r1)
        (reg:SI 2188)) src/switch_core_media.c:3678 -1
     (nil))

(call_insn/i 4234 4233 4235 410 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3678 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4235 4234 4236 410 (set (reg:SI 698 [ D.45143 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3678 -1
     (nil))

(insn 4236 4235 4237 410 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 698 [ D.45143 ])
            (const_int 0 [0]))) src/switch_core_media.c:3678 -1
     (nil))

(jump_insn 4237 4236 4238 410 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4248)
            (pc))) src/switch_core_media.c:3678 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4248)

(note 4238 4237 4239 411 [bb 411] NOTE_INSN_BASIC_BLOCK)

(insn 4239 4238 4240 411 (set (reg/f:SI 699 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 700 [ attr ])
                (const_int 12 [0xc])) [2 attr_1850->a_value+0 S4 A32])) src/switch_core_media.c:3678 -1
     (nil))

(debug_insn 4240 4239 4241 411 (var_location:SI s (reg/f:SI 699 [ D.44619 ])) src/switch_core_media.c:3678 -1
     (nil))

(insn 4241 4240 4242 411 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 699 [ D.44619 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4242 4241 4243 411 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4248)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 4248)

(note 4243 4242 4244 412 [bb 412] NOTE_INSN_BASIC_BLOCK)

(insn 4244 4243 4245 412 (set (reg:SI 2190)
        (zero_extend:SI (mem:QI (reg/f:SI 699 [ D.44619 ]) [0 *D.44619_889+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 4245 4244 4246 412 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2190)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4246 4245 4247 412 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5566)
            (pc))) ./src/include/switch_utils.h:254 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5566)

(note 4247 4246 5563 413 [bb 413] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5563 4247 5564 413 (set (pc)
        (label_ref 4248)) -1
     (nil)
 -> 4248)

(barrier 5564 5563 5566)

(code_label 5566 5564 5565 414 1564 "" [1 uses])

(note 5565 5566 113 414 [bb 414] NOTE_INSN_BASIC_BLOCK)

(insn 113 5565 4248 414 (set (reg/v:SI 179 [ got_video_crypto ])
        (const_int 1 [0x1])) src/switch_core_media.c:3679 -1
     (nil))

(code_label 4248 113 4249 415 1477 "" [3 uses])

(note 4249 4248 4250 415 [bb 415] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4250 4249 4251 415 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) -1
     (nil))

(insn 4251 4250 4252 415 (set (reg/v/f:SI 700 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 700 [ attr ])
                (const_int 4 [0x4])) [2 attr_1850->a_next+0 S4 A32])) src/switch_core_media.c:3677 -1
     (nil))

(debug_insn 4252 4251 4253 415 (var_location:SI attr (reg/v/f:SI 700 [ attr ])) src/switch_core_media.c:3677 -1
     (nil))

(debug_insn 4253 4252 4254 415 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) -1
     (nil))

(debug_insn 4254 4253 4256 415 (var_location:SI attr (reg/v/f:SI 700 [ attr ])) -1
     (nil))

(insn 4256 4254 4257 415 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 700 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3677 -1
     (nil))

(jump_insn 4257 4256 4260 415 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4255)
            (pc))) src/switch_core_media.c:3677 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 4255)

(note 4260 4257 4258 416 [bb 416] NOTE_INSN_BASIC_BLOCK)

(jump_insn 4258 4260 4259 416 (set (pc)
        (label_ref 5364)) src/switch_core_media.c:3677 -1
     (nil)
 -> 5364)

(barrier 4259 4258 4261)

(code_label 4261 4259 4262 417 1475 "" [2 uses])

(note 4262 4261 4263 417 [bb 417] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4263 4262 4264 417 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) -1
     (nil))

(insn 4264 4263 4265 417 (set (reg/v/f:SI 507 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 60 [0x3c])) [2 m_1764->m_attributes+0 S4 A32])) src/switch_core_media.c:3684 -1
     (nil))

(debug_insn 4265 4264 4266 417 (var_location:SI attr (reg/v/f:SI 507 [ attr ])) src/switch_core_media.c:3684 -1
     (nil))

(debug_insn 4266 4265 4267 417 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) -1
     (nil))

(debug_insn 4267 4266 4268 417 (var_location:SI attr (reg/v/f:SI 507 [ attr ])) -1
     (nil))

(insn 4268 4267 4269 417 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 507 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3684 -1
     (nil))

(jump_insn 4269 4268 4272 417 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5364)
            (pc))) src/switch_core_media.c:3684 -1
     (expr_list:REG_BR_PROB (const_int 9627 [0x259b])
        (nil))
 -> 5364)

(note 4272 4269 4270 418 [bb 418] NOTE_INSN_BASIC_BLOCK)

(jump_insn 4270 4272 4271 418 (set (pc)
        (label_ref 4566)) src/switch_core_media.c:3684 -1
     (nil)
 -> 4566)

(barrier 4271 4270 4563)

(code_label 4563 4271 4273 419 1489 "" [2 uses])

(note 4273 4563 4274 419 [bb 419] NOTE_INSN_BASIC_BLOCK)

(insn 4274 4273 4275 419 (set (reg/f:SI 701 [ D.44590 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 8 [0x8])) [2 attr_619->a_name+0 S4 A32])) src/switch_core_media.c:3685 -1
     (nil))

(insn 4275 4274 4276 419 (set (reg:SI 2192)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC360") [flags 0x82]  <var_decl 0x40418e40 *.LC360>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1130 [0x46a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1130 [0x46a])
            ] 29)) src/switch_core_media.c:3685 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC360") [flags 0x82]  <var_decl 0x40418e40 *.LC360>)
        (nil)))

(insn 4276 4275 4277 419 (set (reg:SI 2191)
        (reg:SI 2192)) src/switch_core_media.c:3685 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC360") [flags 0x82]  <var_decl 0x40418e40 *.LC360>)
        (nil)))

(insn 4277 4276 4278 419 (set (reg:SI 0 r0)
        (reg/f:SI 701 [ D.44590 ])) src/switch_core_media.c:3685 -1
     (nil))

(insn 4278 4277 4279 419 (set (reg:SI 1 r1)
        (reg:SI 2191)) src/switch_core_media.c:3685 -1
     (nil))

(call_insn/i 4279 4278 4280 419 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3685 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4280 4279 4281 419 (set (reg:SI 702 [ D.45151 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3685 -1
     (nil))

(insn 4281 4280 4282 419 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 702 [ D.45151 ])
            (const_int 0 [0]))) src/switch_core_media.c:3685 -1
     (nil))

(jump_insn 4282 4281 4283 419 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4287)
            (pc))) src/switch_core_media.c:3685 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4287)

(note 4283 4282 4284 420 [bb 420] NOTE_INSN_BASIC_BLOCK)

(insn 4284 4283 4285 420 (set (reg:SI 2193)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) src/switch_core_media.c:3685 -1
     (nil))

(insn 4285 4284 4286 420 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2193)
            (const_int 0 [0]))) src/switch_core_media.c:3685 -1
     (nil))

(jump_insn 4286 4285 4287 420 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4556)
            (pc))) src/switch_core_media.c:3685 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil))
 -> 4556)

(code_label 4287 4286 4288 421 1480 "" [1 uses])

(note 4288 4287 4289 421 [bb 421] NOTE_INSN_BASIC_BLOCK)

(insn 4289 4288 4290 421 (set (reg:SI 2195)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC361") [flags 0x82]  <var_decl 0x40418ea0 *.LC361>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1131 [0x46b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1131 [0x46b])
            ] 29)) src/switch_core_media.c:3687 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC361") [flags 0x82]  <var_decl 0x40418ea0 *.LC361>)
        (nil)))

(insn 4290 4289 4291 421 (set (reg:SI 2194)
        (reg:SI 2195)) src/switch_core_media.c:3687 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC361") [flags 0x82]  <var_decl 0x40418ea0 *.LC361>)
        (nil)))

(insn 4291 4290 4292 421 (set (reg:SI 0 r0)
        (reg/f:SI 701 [ D.44590 ])) src/switch_core_media.c:3687 -1
     (nil))

(insn 4292 4291 4293 421 (set (reg:SI 1 r1)
        (reg:SI 2194)) src/switch_core_media.c:3687 -1
     (nil))

(call_insn/i 4293 4292 4294 421 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3687 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4294 4293 4295 421 (set (reg:SI 704 [ D.45154 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3687 -1
     (nil))

(insn 4295 4294 4296 421 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 704 [ D.45154 ])
            (const_int 0 [0]))) src/switch_core_media.c:3687 -1
     (nil))

(jump_insn 4296 4295 4297 421 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4331)
            (pc))) src/switch_core_media.c:3687 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4331)

(note 4297 4296 4298 422 [bb 422] NOTE_INSN_BASIC_BLOCK)

(insn 4298 4297 4299 422 (set (reg/f:SI 705 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) src/switch_core_media.c:3688 -1
     (nil))

(debug_insn 4299 4298 4300 422 (var_location:SI s (reg/f:SI 705 [ D.44619 ])) src/switch_core_media.c:3688 -1
     (nil))

(insn 4300 4299 4301 422 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 705 [ D.44619 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4301 4300 4302 422 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4556)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 4556)

(note 4302 4301 4303 423 [bb 423] NOTE_INSN_BASIC_BLOCK)

(insn 4303 4302 4304 423 (set (reg:SI 2196)
        (zero_extend:SI (mem:QI (reg/f:SI 705 [ D.44619 ]) [0 *D.44619_899+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 4304 4303 4305 423 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2196)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4305 4304 4308 423 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4556)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4556)

(note 4308 4305 4306 424 [bb 424] NOTE_INSN_BASIC_BLOCK)

(jump_insn 4306 4308 4307 424 (set (pc)
        (label_ref 5302)) ./src/include/switch_utils.h:254 -1
     (nil)
 -> 5302)

(barrier 4307 4306 5310)

(code_label 5310 4307 4309 425 1514 "" [1 uses])

(note 4309 5310 4310 425 [bb 425] NOTE_INSN_BASIC_BLOCK)

(insn 4310 4309 4311 425 (set (reg:SI 2197)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3690 -1
     (nil))

(insn 4311 4310 4312 425 (set (reg:SI 2198)
        (const_int 11410 [0x2c92])) src/switch_core_media.c:3690 -1
     (nil))

(insn 4312 4311 4313 425 (set (reg:SI 2199)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2197))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4313 4312 4314 425 (set (reg/f:SI 2200)
        (plus:SI (reg:SI 2199)
            (reg:SI 2198))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4314 4313 4315 425 (set (reg:SI 2201)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3690 -1
     (nil))

(insn 4315 4314 4316 425 (set (reg:SI 2202)
        (const_int 11410 [0x2c92])) src/switch_core_media.c:3690 -1
     (nil))

(insn 4316 4315 4317 425 (set (reg:SI 2203)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2201))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4317 4316 4318 425 (set (reg/f:SI 2204)
        (plus:SI (reg:SI 2203)
            (reg:SI 2202))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4318 4317 4319 425 (set (reg:SI 2206)
        (zero_extend:SI (mem/s:QI (reg/f:SI 2204) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir+0 S1 A16]))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4319 4318 4320 425 (set (reg:QI 2205)
        (subreg:QI (reg:SI 2206) 0)) src/switch_core_media.c:3690 -1
     (nil))

(insn 4320 4319 4321 425 (set (reg:SI 2207)
        (plus:SI (subreg:SI (reg:QI 2205) 0)
            (const_int 1 [0x1]))) src/switch_core_media.c:3690 -1
     (nil))

(insn 4321 4320 4322 425 (set (reg:QI 2208)
        (subreg:QI (reg:SI 2207) 0)) src/switch_core_media.c:3690 -1
     (nil))

(insn 4322 4321 5313 425 (set (mem/s:QI (reg/f:SI 2200) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir+0 S1 A16])
        (reg:QI 2208)) src/switch_core_media.c:3690 -1
     (nil))

(code_label 5313 4322 4323 426 1515 "" [1 uses])

(note 4323 5313 4324 426 [bb 426] NOTE_INSN_BASIC_BLOCK)

(insn 4324 4323 4325 426 (set (reg:SI 2210)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3697 -1
     (nil))

(insn 4325 4324 4326 426 (set (reg/f:SI 2209)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2210)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3697 -1
     (nil))

(insn 4326 4325 4327 426 (set (reg:SI 2212)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC285") [flags 0x82]  <var_decl 0x40377120 *.LC285>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1132 [0x46c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1132 [0x46c])
            ] 29)) src/switch_core_media.c:3697 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC285") [flags 0x82]  <var_decl 0x40377120 *.LC285>)
        (nil)))

(insn 4327 4326 4328 426 (set (reg/f:SI 2211)
        (reg:SI 2212)) src/switch_core_media.c:3697 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC285") [flags 0x82]  <var_decl 0x40377120 *.LC285>)
        (nil)))

(insn 4328 4327 4329 426 (set (mem/s/f:SI (plus:SI (reg/f:SI 2209)
                (const_int 84 [0x54])) [2 D.44471_905->rtcp_video_interval_msec+0 S4 A32])
        (reg/f:SI 2211)) src/switch_core_media.c:3697 -1
     (nil))

(jump_insn 4329 4328 4330 426 (set (pc)
        (label_ref 4556)) src/switch_core_media.c:3697 -1
     (nil)
 -> 4556)

(barrier 4330 4329 4331)

(code_label 4331 4330 4332 427 1482 "" [1 uses])

(note 4332 4331 4333 427 [bb 427] NOTE_INSN_BASIC_BLOCK)

(insn 4333 4332 4334 427 (set (reg:SI 2214)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1133 [0x46d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1133 [0x46d])
            ] 29)) src/switch_core_media.c:3699 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
        (nil)))

(insn 4334 4333 4335 427 (set (reg:SI 2213)
        (reg:SI 2214)) src/switch_core_media.c:3699 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC326") [flags 0x82]  <var_decl 0x40410d20 *.LC326>)
        (nil)))

(insn 4335 4334 4336 427 (set (reg:SI 0 r0)
        (reg/f:SI 701 [ D.44590 ])) src/switch_core_media.c:3699 -1
     (nil))

(insn 4336 4335 4337 427 (set (reg:SI 1 r1)
        (reg:SI 2213)) src/switch_core_media.c:3699 -1
     (nil))

(call_insn/i 4337 4336 4338 427 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3699 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4338 4337 4339 427 (set (reg:SI 710 [ D.45168 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3699 -1
     (nil))

(insn 4339 4338 4340 427 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 710 [ D.45168 ])
            (const_int 0 [0]))) src/switch_core_media.c:3699 -1
     (nil))

(jump_insn 4340 4339 4341 427 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4392)
            (pc))) src/switch_core_media.c:3699 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4392)

(note 4341 4340 4342 428 [bb 428] NOTE_INSN_BASIC_BLOCK)

(insn 4342 4341 4343 428 (set (reg/f:SI 711 [ D.44619 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) src/switch_core_media.c:3699 -1
     (nil))

(insn 4343 4342 4344 428 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 711 [ D.44619 ])
            (const_int 0 [0]))) src/switch_core_media.c:3699 -1
     (nil))

(jump_insn 4344 4343 4345 428 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4392)
            (pc))) src/switch_core_media.c:3699 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 4392)

(note 4345 4344 4346 429 [bb 429] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4346 4345 4347 429 (var_location:SI __s2_len (const_int 1 [0x1])) src/switch_core_media.c:3699 -1
     (nil))

(debug_insn 4347 4346 4348 429 (var_location:SI __s1 (reg/f:SI 711 [ D.44619 ])) src/switch_core_media.c:3699 -1
     (nil))

(debug_insn 4348 4347 4349 429 (var_location:SI D#78 (zero_extend:SI (mem:QI (reg/f:SI 711 [ D.44619 ]) [0 MEM[(const unsigned char *)D.44619_908]+0 S1 A8]))) src/switch_core_media.c:3699 -1
     (nil))

(debug_insn 4349 4348 4350 429 (var_location:SI __result (plus:SI (debug_expr:SI D#78)
        (const_int -49 [0xffffffffffffffcf]))) src/switch_core_media.c:3699 -1
     (nil))

(insn 4350 4349 4351 429 (set (reg:SI 2215)
        (zero_extend:SI (mem:QI (reg/f:SI 711 [ D.44619 ]) [0 MEM[(const unsigned char *)D.44619_908]+0 S1 A8]))) src/switch_core_media.c:3699 -1
     (nil))

(insn 4351 4350 4352 429 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2215)
            (const_int 49 [0x31]))) src/switch_core_media.c:3699 -1
     (nil))

(jump_insn 4352 4351 4353 429 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4392)
            (pc))) src/switch_core_media.c:3699 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4392)

(note 4353 4352 4354 430 [bb 430] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4354 4353 4355 430 (var_location:SI D#79 (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 711 [ D.44619 ])
                (const_int 1 [0x1])) [0 MEM[(const unsigned char *)D.44619_908 + 1B]+0 S1 A8]))) src/switch_core_media.c:3699 -1
     (nil))

(debug_insn 4355 4354 4356 430 (var_location:SI __result (debug_expr:SI D#79)) src/switch_core_media.c:3699 -1
     (nil))

(debug_insn 4356 4355 4357 430 (var_location:SI __result (debug_expr:SI D#79)) -1
     (nil))

(insn 4357 4356 4358 430 (set (reg:SI 2216)
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 711 [ D.44619 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)D.44619_908 + 1B]+0 S1 A8]))) src/switch_core_media.c:3699 -1
     (nil))

(insn 4358 4357 4359 430 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2216)
            (const_int 0 [0]))) src/switch_core_media.c:3699 -1
     (nil))

(jump_insn 4359 4358 4360 430 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4392)
            (pc))) src/switch_core_media.c:3699 -1
     (expr_list:REG_BR_PROB (const_int 4195 [0x1063])
        (nil))
 -> 4392)

(note 4360 4359 4361 431 [bb 431] NOTE_INSN_BASIC_BLOCK)

(insn 4361 4360 4362 431 (set (reg:SI 2217)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3700 -1
     (nil))

(insn 4362 4361 4363 431 (set (reg:SI 2219)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC247") [flags 0x82]  <var_decl 0x40344420 *.LC247>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1134 [0x46e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1134 [0x46e])
            ] 29)) src/switch_core_media.c:3700 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC247") [flags 0x82]  <var_decl 0x40344420 *.LC247>)
        (nil)))

(insn 4363 4362 4364 431 (set (reg:SI 2218)
        (reg:SI 2219)) src/switch_core_media.c:3700 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC247") [flags 0x82]  <var_decl 0x40344420 *.LC247>)
        (nil)))

(insn 4364 4363 4365 431 (set (reg:SI 0 r0)
        (reg:SI 2217)) src/switch_core_media.c:3700 -1
     (nil))

(insn 4365 4364 4366 431 (set (reg:SI 1 r1)
        (reg:SI 2218)) src/switch_core_media.c:3700 -1
     (nil))

(insn 4366 4365 4367 431 (set (reg:SI 2 r2)
        (reg/f:SI 711 [ D.44619 ])) src/switch_core_media.c:3700 -1
     (nil))

(insn 4367 4366 4368 431 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3700 -1
     (nil))

(call_insn 4368 4367 4369 431 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3700 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 4369 4368 4370 431 (var_location:SI __nptr (mem/s/f/j:SI (plus:SI (reg/v/f:SI 507 [ attr ])
            (const_int 12 [0xc])) [0 attr_619->a_value+0 S4 A32])) src/switch_core_media.c:3701 -1
     (nil))

(insn 4370 4369 4371 431 (set (reg:SI 2220)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4371 4370 4372 431 (set (reg:SI 0 r0)
        (reg:SI 2220)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4372 4371 4373 431 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4373 4372 4374 431 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 4374 4373 4375 431 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4375 4374 4376 431 (set (reg:SI 857 [ D.47946 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4376 4375 4377 431 (set (reg:SI 2221)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3701 -1
     (nil))

(insn 4377 4376 4378 431 (set (reg:SI 2222)
        (const_int 1816 [0x718])) src/switch_core_media.c:3701 -1
     (nil))

(insn 4378 4377 4379 431 (set (reg:SI 2223)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2221))) src/switch_core_media.c:3701 -1
     (nil))

(insn 4379 4378 4380 431 (set (reg/f:SI 2224)
        (plus:SI (reg:SI 2223)
            (reg:SI 2222))) src/switch_core_media.c:3701 -1
     (nil))

(insn 4380 4379 4381 431 (set (mem/s:HI (reg/f:SI 2224) [13 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].remote_rtcp_port+0 S2 A32])
        (subreg:HI (reg:SI 857 [ D.47946 ]) 0)) src/switch_core_media.c:3701 -1
     (nil))

(insn 4381 4380 4382 431 (set (reg:SI 2225)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3702 -1
     (nil))

(insn 4382 4381 4383 431 (set (reg/f:SI 717 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2225)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3702 -1
     (nil))

(insn 4383 4382 4384 431 (set (reg:SI 2226)
        (mem/s/f:SI (plus:SI (reg/f:SI 717 [ D.44471 ])
                (const_int 84 [0x54])) [2 D.44471_957->rtcp_video_interval_msec+0 S4 A32])) src/switch_core_media.c:3702 -1
     (nil))

(insn 4384 4383 4385 431 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2226)
            (const_int 0 [0]))) src/switch_core_media.c:3702 -1
     (nil))

(jump_insn 4385 4384 4386 431 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4556)
            (pc))) src/switch_core_media.c:3702 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil))
 -> 4556)

(note 4386 4385 4387 432 [bb 432] NOTE_INSN_BASIC_BLOCK)

(insn 4387 4386 4388 432 (set (reg:SI 2228)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1135 [0x46f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1135 [0x46f])
            ] 29)) src/switch_core_media.c:3703 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
        (nil)))

(insn 4388 4387 4389 432 (set (reg/f:SI 2227)
        (reg:SI 2228)) src/switch_core_media.c:3703 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC327") [flags 0x82]  <var_decl 0x40410d80 *.LC327>)
        (nil)))

(insn 4389 4388 4390 432 (set (mem/s/f:SI (plus:SI (reg/f:SI 717 [ D.44471 ])
                (const_int 84 [0x54])) [2 D.44471_957->rtcp_video_interval_msec+0 S4 A32])
        (reg/f:SI 2227)) src/switch_core_media.c:3703 -1
     (nil))

(jump_insn 4390 4389 4391 432 (set (pc)
        (label_ref 4556)) src/switch_core_media.c:3703 -1
     (nil)
 -> 4556)

(barrier 4391 4390 4392)

(code_label 4392 4391 4393 433 1484 "" [4 uses])

(note 4393 4392 4394 433 [bb 433] NOTE_INSN_BASIC_BLOCK)

(insn 4394 4393 4395 433 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 179 [ got_video_crypto ])
            (const_int 0 [0]))) src/switch_core_media.c:3705 -1
     (nil))

(jump_insn 4395 4394 4396 433 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4556)
            (pc))) src/switch_core_media.c:3705 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4556)

(note 4396 4395 4397 434 [bb 434] NOTE_INSN_BASIC_BLOCK)

(insn 4397 4396 4398 434 (set (reg:SI 2230)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1136 [0x470])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1136 [0x470])
            ] 29)) src/switch_core_media.c:3705 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
        (nil)))

(insn 4398 4397 4399 434 (set (reg:SI 2229)
        (reg:SI 2230)) src/switch_core_media.c:3705 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC328") [flags 0x82]  <var_decl 0x40410de0 *.LC328>)
        (nil)))

(insn 4399 4398 4400 434 (set (reg:SI 0 r0)
        (reg/f:SI 701 [ D.44590 ])) src/switch_core_media.c:3705 -1
     (nil))

(insn 4400 4399 4401 434 (set (reg:SI 1 r1)
        (reg:SI 2229)) src/switch_core_media.c:3705 -1
     (nil))

(call_insn/i 4401 4400 4402 434 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3705 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4402 4401 4403 434 (set (reg:SI 719 [ D.45219 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3705 -1
     (nil))

(insn 4403 4402 4404 434 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 719 [ D.45219 ])
            (const_int 0 [0]))) src/switch_core_media.c:3705 -1
     (nil))

(jump_insn 4404 4403 4405 434 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4556)
            (pc))) src/switch_core_media.c:3705 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4556)

(note 4405 4404 4406 435 [bb 435] NOTE_INSN_BASIC_BLOCK)

(insn 4406 4405 4407 435 (set (reg/f:SI 720 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) src/switch_core_media.c:3705 -1
     (nil))

(debug_insn 4407 4406 4408 435 (var_location:SI s (reg/f:SI 720 [ prephitmp.1031 ])) src/switch_core_media.c:3705 -1
     (nil))

(insn 4408 4407 4409 435 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 720 [ prephitmp.1031 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4409 4408 4410 435 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4556)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 4556)

(note 4410 4409 4411 436 [bb 436] NOTE_INSN_BASIC_BLOCK)

(insn 4411 4410 4412 436 (set (reg:SI 2231)
        (zero_extend:SI (mem:QI (reg/f:SI 720 [ prephitmp.1031 ]) [0 *prephitmp.1031_962+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 4412 4411 4413 436 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2231)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4413 4412 4416 436 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4556)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4556)

(note 4416 4413 4414 437 [bb 437] NOTE_INSN_BASIC_BLOCK)

(jump_insn 4414 4416 4415 437 (set (pc)
        (label_ref 5317)) ./src/include/switch_utils.h:254 -1
     (nil)
 -> 5317)

(barrier 4415 4414 5319)

(code_label 5319 4415 4417 438 1516 "" [1 uses])

(note 4417 5319 4418 438 [bb 438] NOTE_INSN_BASIC_BLOCK)

(insn 4418 4417 4419 438 (set (reg:SI 2232)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3709 -1
     (nil))

(insn 4419 4418 4420 438 (set (reg:SI 2234)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1137 [0x471])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1137 [0x471])
            ] 29)) src/switch_core_media.c:3709 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
        (nil)))

(insn 4420 4419 4421 438 (set (reg:SI 2233)
        (reg:SI 2234)) src/switch_core_media.c:3709 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC329") [flags 0x82]  <var_decl 0x40410e40 *.LC329>)
        (nil)))

(insn 4421 4420 4422 438 (set (reg:SI 0 r0)
        (reg:SI 2232)) src/switch_core_media.c:3709 -1
     (nil))

(insn 4422 4421 4423 438 (set (reg:SI 1 r1)
        (reg:SI 2233)) src/switch_core_media.c:3709 -1
     (nil))

(insn 4423 4422 4424 438 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3709 -1
     (nil))

(insn 4424 4423 4425 438 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) src/switch_core_media.c:3709 -1
     (nil))

(call_insn 4425 4424 4426 438 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_get_variable_dup") [flags 0x41]  <function_decl 0x40846280 switch_channel_get_variable_dup>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3709 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4426 4425 4427 438 (set (reg/f:SI 725 [ D.45227 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3709 -1
     (nil))

(debug_insn 4427 4426 4428 438 (var_location:SI expr (reg/f:SI 725 [ D.45227 ])) src/switch_core_media.c:3709 -1
     (nil))

(insn 4428 4427 4429 438 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 725 [ D.45227 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 4429 4428 4430 438 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5329)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 5329)

(note 4430 4429 4431 439 [bb 439] NOTE_INSN_BASIC_BLOCK)

(insn 4431 4430 4432 439 (set (reg:SI 2236)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1138 [0x472])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1138 [0x472])
            ] 29)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 4432 4431 4433 439 (set (reg:SI 2235)
        (reg:SI 2236)) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82]  <var_decl 0x41d93840 *.LC23>)
        (nil)))

(insn 4433 4432 4434 439 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 4434 4433 4435 439 (set (reg:SI 1 r1)
        (reg:SI 2235)) ./src/include/switch_utils.h:429 -1
     (nil))

(call_insn/i 4435 4434 4436 439 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4436 4435 4437 439 (set (reg:SI 927 [ D.49747 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:429 -1
     (nil))

(insn 4437 4436 4438 439 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 927 [ D.49747 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 4438 4437 4439 439 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4508)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4508)

(note 4439 4438 4440 440 [bb 440] NOTE_INSN_BASIC_BLOCK)

(insn 4440 4439 4441 440 (set (reg:SI 2238)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1139 [0x473])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1139 [0x473])
            ] 29)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 4441 4440 4442 440 (set (reg:SI 2237)
        (reg:SI 2238)) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82]  <var_decl 0x41d938a0 *.LC24>)
        (nil)))

(insn 4442 4441 4443 440 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 4443 4442 4444 440 (set (reg:SI 1 r1)
        (reg:SI 2237)) ./src/include/switch_utils.h:430 -1
     (nil))

(call_insn/i 4444 4443 4445 440 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4445 4444 4446 440 (set (reg:SI 928 [ D.49748 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:430 -1
     (nil))

(insn 4446 4445 4447 440 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 928 [ D.49748 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:429 -1
     (nil))

(jump_insn 4447 4446 4448 440 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4508)
            (pc))) ./src/include/switch_utils.h:429 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4508)

(note 4448 4447 4449 441 [bb 441] NOTE_INSN_BASIC_BLOCK)

(insn 4449 4448 4450 441 (set (reg:SI 2240)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1140 [0x474])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1140 [0x474])
            ] 29)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 4450 4449 4451 441 (set (reg:SI 2239)
        (reg:SI 2240)) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82]  <var_decl 0x41d93900 *.LC25>)
        (nil)))

(insn 4451 4450 4452 441 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 4452 4451 4453 441 (set (reg:SI 1 r1)
        (reg:SI 2239)) ./src/include/switch_utils.h:431 -1
     (nil))

(call_insn/i 4453 4452 4454 441 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4454 4453 4455 441 (set (reg:SI 929 [ D.49749 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:431 -1
     (nil))

(insn 4455 4454 4456 441 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 929 [ D.49749 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:430 -1
     (nil))

(jump_insn 4456 4455 4457 441 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4508)
            (pc))) ./src/include/switch_utils.h:430 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4508)

(note 4457 4456 4458 442 [bb 442] NOTE_INSN_BASIC_BLOCK)

(insn 4458 4457 4459 442 (set (reg:SI 2242)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1141 [0x475])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1141 [0x475])
            ] 29)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 4459 4458 4460 442 (set (reg:SI 2241)
        (reg:SI 2242)) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82]  <var_decl 0x41d93960 *.LC26>)
        (nil)))

(insn 4460 4459 4461 442 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 4461 4460 4462 442 (set (reg:SI 1 r1)
        (reg:SI 2241)) ./src/include/switch_utils.h:432 -1
     (nil))

(call_insn/i 4462 4461 4463 442 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4463 4462 4464 442 (set (reg:SI 930 [ D.49750 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:432 -1
     (nil))

(insn 4464 4463 4465 442 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 930 [ D.49750 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:431 -1
     (nil))

(jump_insn 4465 4464 4466 442 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4508)
            (pc))) ./src/include/switch_utils.h:431 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4508)

(note 4466 4465 4467 443 [bb 443] NOTE_INSN_BASIC_BLOCK)

(insn 4467 4466 4468 443 (set (reg:SI 2244)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1142 [0x476])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1142 [0x476])
            ] 29)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 4468 4467 4469 443 (set (reg:SI 2243)
        (reg:SI 2244)) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82]  <var_decl 0x41d939c0 *.LC27>)
        (nil)))

(insn 4469 4468 4470 443 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 4470 4469 4471 443 (set (reg:SI 1 r1)
        (reg:SI 2243)) ./src/include/switch_utils.h:433 -1
     (nil))

(call_insn/i 4471 4470 4472 443 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4472 4471 4473 443 (set (reg:SI 931 [ D.49751 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:433 -1
     (nil))

(insn 4473 4472 4474 443 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 931 [ D.49751 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:432 -1
     (nil))

(jump_insn 4474 4473 4475 443 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4508)
            (pc))) ./src/include/switch_utils.h:432 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4508)

(note 4475 4474 4476 444 [bb 444] NOTE_INSN_BASIC_BLOCK)

(insn 4476 4475 4477 444 (set (reg:SI 2246)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1143 [0x477])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1143 [0x477])
            ] 29)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 4477 4476 4478 444 (set (reg:SI 2245)
        (reg:SI 2246)) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82]  <var_decl 0x41d93a20 *.LC28>)
        (nil)))

(insn 4478 4477 4479 444 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 4479 4478 4480 444 (set (reg:SI 1 r1)
        (reg:SI 2245)) ./src/include/switch_utils.h:434 -1
     (nil))

(call_insn/i 4480 4479 4481 444 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4481 4480 4482 444 (set (reg:SI 932 [ D.49752 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:434 -1
     (nil))

(insn 4482 4481 4483 444 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 932 [ D.49752 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:433 -1
     (nil))

(jump_insn 4483 4482 4484 444 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4508)
            (pc))) ./src/include/switch_utils.h:433 -1
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 4508)

(note 4484 4483 4485 445 [bb 445] NOTE_INSN_BASIC_BLOCK)

(insn 4485 4484 4486 445 (set (reg:SI 2248)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1144 [0x478])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1144 [0x478])
            ] 29)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 4486 4485 4487 445 (set (reg:SI 2247)
        (reg:SI 2248)) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82]  <var_decl 0x41d93a80 *.LC29>)
        (nil)))

(insn 4487 4486 4488 445 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 4488 4487 4489 445 (set (reg:SI 1 r1)
        (reg:SI 2247)) ./src/include/switch_utils.h:435 -1
     (nil))

(call_insn/i 4489 4488 4490 445 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4490 4489 4491 445 (set (reg:SI 933 [ D.49753 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:435 -1
     (nil))

(insn 4491 4490 4492 445 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 933 [ D.49753 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:434 -1
     (nil))

(jump_insn 4492 4491 4493 445 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4508)
            (pc))) ./src/include/switch_utils.h:434 -1
     (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil))
 -> 4508)

(note 4493 4492 4494 446 [bb 446] NOTE_INSN_BASIC_BLOCK)

(insn 4494 4493 4495 446 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) ./src/include/switch_utils.h:436 -1
     (nil))

(call_insn 4495 4494 4496 446 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_is_number") [flags 0x41]  <function_decl 0x407e7e80 switch_is_number>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) ./src/include/switch_utils.h:436 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 4496 4495 4497 446 (set (reg:SI 934 [ D.49754 ])
        (reg:SI 0 r0)) ./src/include/switch_utils.h:436 -1
     (nil))

(insn 4497 4496 4498 446 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 934 [ D.49754 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:435 -1
     (nil))

(jump_insn 4498 4497 4499 446 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5329)
            (pc))) ./src/include/switch_utils.h:435 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5329)

(note 4499 4498 4500 447 [bb 447] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4500 4499 4501 447 (var_location:SI __nptr (reg/f:SI 725 [ D.45227 ])) -1
     (nil))

(insn 4501 4500 4502 447 (set (reg:SI 0 r0)
        (reg/f:SI 725 [ D.45227 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4502 4501 4503 447 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4503 4502 4504 447 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 4504 4503 4505 447 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4505 4504 4506 447 (set (reg:SI 935 [ D.49755 ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4506 4505 4507 447 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 935 [ D.49755 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 4507 4506 4508 447 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5329)
            (pc))) ./src/include/switch_utils.h:436 -1
     (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil))
 -> 5329)

(code_label 4508 4507 4509 448 1487 "" [7 uses])

(note 4509 4508 4510 448 [bb 448] NOTE_INSN_BASIC_BLOCK)

(insn 4510 4509 4511 448 (set (reg/f:SI 720 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) ./src/include/switch_utils.h:436 -1
     (nil))

(jump_insn 4511 4510 4512 448 (set (pc)
        (label_ref 4535)) ./src/include/switch_utils.h:436 -1
     (nil)
 -> 4535)

(barrier 4512 4511 5331)

(code_label 5331 4512 4513 449 1517 "" [1 uses])

(note 4513 5331 4514 449 [bb 449] NOTE_INSN_BASIC_BLOCK)

(insn 4514 4513 4515 449 (set (reg:SI 2250)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1145 [0x479])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1145 [0x479])
            ] 29)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4515 4514 4516 449 (set (reg:SI 2249)
        (reg:SI 2250)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4516 4515 4517 449 (set (reg:SI 2252)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1146 [0x47a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1146 [0x47a])
            ] 29)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4517 4516 4518 449 (set (reg/f:SI 2251)
        (reg:SI 2252)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4518 4517 4519 449 (set (reg:SI 2254)
        (plus:SI (reg/f:SI 2251)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3711 -1
     (nil))

(insn 4519 4518 4520 449 (set (reg:SI 2253)
        (plus:SI (reg:SI 2254)
            (const_int 8 [0x8]))) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2251)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4520 4519 4521 449 (set (reg:SI 2255)
        (const_int 3711 [0xe7f])) src/switch_core_media.c:3711 -1
     (nil))

(insn 4521 4520 4522 449 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3711 -1
     (nil))

(insn 4522 4521 4523 449 (set (reg:SI 2256)
        (const_int 3 [0x3])) src/switch_core_media.c:3711 -1
     (nil))

(insn 4523 4522 4524 449 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2256)) src/switch_core_media.c:3711 -1
     (nil))

(insn 4524 4523 4525 449 (set (reg:SI 2258)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1147 [0x47b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1147 [0x47b])
            ] 29)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
        (nil)))

(insn 4525 4524 4526 449 (set (reg/f:SI 2257)
        (reg:SI 2258)) src/switch_core_media.c:3711 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC330") [flags 0x82]  <var_decl 0x40410ea0 *.LC330>)
        (nil)))

(insn 4526 4525 4527 449 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2257)) src/switch_core_media.c:3711 -1
     (nil))

(insn 4527 4526 4528 449 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3711 -1
     (nil))

(insn 4528 4527 4529 449 (set (reg:SI 1 r1)
        (reg:SI 2249)) src/switch_core_media.c:3711 -1
     (nil))

(insn 4529 4528 4530 449 (set (reg:SI 2 r2)
        (reg:SI 2253)) src/switch_core_media.c:3711 -1
     (nil))

(insn 4530 4529 4531 449 (set (reg:SI 3 r3)
        (reg:SI 2255)) src/switch_core_media.c:3711 -1
     (nil))

(call_insn 4531 4530 4532 449 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3711 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 4532 4531 134 449 (var_location:QI match (const_int 0 [0])) src/switch_core_media.c:3712 -1
     (nil))

(insn 134 4532 4533 449 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:3712 -1
     (nil))

(jump_insn 4533 134 4534 449 (set (pc)
        (label_ref 5127)) src/switch_core_media.c:3713 -1
     (nil)
 -> 5127)

(barrier 4534 4533 4535)

(code_label 4535 4534 4536 450 1488 "" [3 uses])

(note 4536 4535 4537 450 [bb 450] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4537 4536 4538 450 (var_location:SI crypto (reg/f:SI 720 [ prephitmp.1031 ])) src/switch_core_media.c:3717 -1
     (nil))

(debug_insn 4538 4537 4539 450 (var_location:SI __nptr (reg/f:SI 720 [ prephitmp.1031 ])) src/switch_core_media.c:3717 -1
     (nil))

(insn 4539 4538 4540 450 (set (reg:SI 0 r0)
        (reg/f:SI 720 [ prephitmp.1031 ])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4540 4539 4541 450 (set (reg:SI 1 r1)
        (const_int 0 [0])) /usr/include/stdlib.h:286 -1
     (nil))

(insn 4541 4540 4542 450 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) /usr/include/stdlib.h:286 -1
     (nil))

(call_insn 4542 4541 4543 450 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strtol") [flags 0x41]  <function_decl 0x40340100 strtol>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) /usr/include/stdlib.h:286 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 4543 4542 4544 450 (set (reg/v:SI 860 [ crypto_tag ])
        (reg:SI 0 r0)) /usr/include/stdlib.h:286 -1
     (nil))

(debug_insn 4544 4543 4545 450 (var_location:SI crypto_tag (clobber (const_int 0 [0]))) src/switch_core_media.c:3718 -1
     (nil))

(insn 4545 4544 4546 450 (set (reg:SI 2260)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC362") [flags 0x82]  <var_decl 0x40418f00 *.LC362>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1148 [0x47c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1148 [0x47c])
            ] 29)) src/switch_core_media.c:3720 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC362") [flags 0x82]  <var_decl 0x40418f00 *.LC362>)
        (nil)))

(insn 4546 4545 4547 450 (set (reg:SI 2259)
        (reg:SI 2260)) src/switch_core_media.c:3720 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC362") [flags 0x82]  <var_decl 0x40418f00 *.LC362>)
        (nil)))

(insn 4547 4546 4548 450 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 860 [ crypto_tag ])) src/switch_core_media.c:3720 -1
     (nil))

(insn 4548 4547 4549 450 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 1028 [ sdp_type ])) src/switch_core_media.c:3720 -1
     (nil))

(insn 4549 4548 4550 450 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3720 -1
     (nil))

(insn 4550 4549 4551 450 (set (reg:SI 1 r1)
        (reg:SI 2259)) src/switch_core_media.c:3720 -1
     (nil))

(insn 4551 4550 4552 450 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) src/switch_core_media.c:3720 -1
     (nil))

(insn 4552 4551 4553 450 (set (reg:SI 3 r3)
        (reg/f:SI 720 [ prephitmp.1031 ])) src/switch_core_media.c:3720 -1
     (nil))

(call_insn 4553 4552 4554 450 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_session_check_incoming_crypto") [flags 0x1]  <function_decl 0x40945400 switch_core_session_check_incoming_crypto>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3720 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4554 4553 4555 450 (set (reg/v:SI 179 [ got_video_crypto ])
        (reg:SI 0 r0)) src/switch_core_media.c:3720 -1
     (nil))

(debug_insn 4555 4554 4556 450 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) src/switch_core_media.c:3720 -1
     (nil))

(code_label 4556 4555 4557 451 1481 "" [10 uses])

(note 4557 4556 4558 451 [bb 451] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4558 4557 4559 451 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) -1
     (nil))

(insn 4559 4558 4560 451 (set (reg/v/f:SI 507 [ attr ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 4 [0x4])) [2 attr_619->a_next+0 S4 A32])) src/switch_core_media.c:3684 -1
     (nil))

(debug_insn 4560 4559 4561 451 (var_location:SI attr (reg/v/f:SI 507 [ attr ])) src/switch_core_media.c:3684 -1
     (nil))

(debug_insn 4561 4560 4562 451 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) -1
     (nil))

(debug_insn 4562 4561 4564 451 (var_location:SI attr (reg/v/f:SI 507 [ attr ])) -1
     (nil))

(insn 4564 4562 4565 451 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 507 [ attr ])
            (const_int 0 [0]))) src/switch_core_media.c:3684 -1
     (nil))

(jump_insn 4565 4564 4566 451 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4563)
            (pc))) src/switch_core_media.c:3684 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil))
 -> 4563)

(code_label 4566 4565 4567 452 1476 "" [2 uses])

(note 4567 4566 4568 452 [bb 452] NOTE_INSN_BASIC_BLOCK)

(insn 4568 4567 4569 452 (set (reg/v/f:SI 226 [ rm_encoding ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 757 [ map ])
                (const_int 8 [0x8])) [2 map_1620->rm_encoding+0 S4 A32])) src/switch_core_media.c:3727 -1
     (nil))

(debug_insn 4569 4568 4570 452 (var_location:SI rm_encoding (reg/v/f:SI 226 [ rm_encoding ])) src/switch_core_media.c:3727 -1
     (nil))

(insn 4570 4569 4571 452 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 226 [ rm_encoding ])
            (const_int 0 [0]))) src/switch_core_media.c:3727 -1
     (nil))

(jump_insn 4571 4570 4572 452 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5570)
            (pc))) src/switch_core_media.c:3727 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 5570)

(note 4572 4571 5567 453 [bb 453] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5567 4572 5568 453 (set (pc)
        (label_ref 4573)) -1
     (nil)
 -> 4573)

(barrier 5568 5567 5570)

(code_label 5570 5568 5569 454 1565 "" [1 uses])

(note 5569 5570 114 454 [bb 454] NOTE_INSN_BASIC_BLOCK)

(insn 114 5569 115 454 (set (reg:SI 1030)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC149") [flags 0x82]  <var_decl 0x421b9c00 *.LC149>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 895 [0x37f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 895 [0x37f])
            ] 29)) src/switch_core_media.c:3728 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC149") [flags 0x82]  <var_decl 0x421b9c00 *.LC149>)
        (nil)))

(insn 115 114 4573 454 (set (reg/v/f:SI 226 [ rm_encoding ])
        (reg:SI 1030)) src/switch_core_media.c:3728 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC149") [flags 0x82]  <var_decl 0x421b9c00 *.LC149>)
        (nil)))

(code_label 4573 115 4574 455 1490 "" [1 uses])

(note 4574 4573 4575 455 [bb 455] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4575 4574 4576 455 (var_location:SI rm_encoding (reg/v/f:SI 226 [ rm_encoding ])) -1
     (nil))

(debug_insn 4576 4575 4577 455 (var_location:SI i (const_int 0 [0])) src/switch_core_media.c:3731 -1
     (nil))

(debug_insn 4577 4576 4578 455 (var_location:SI i (const_int 0 [0])) -1
     (nil))

(debug_insn 4578 4577 4579 455 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(insn 4579 4578 4580 455 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 194 [ total_codecs ])
            (const_int 0 [0]))) src/switch_core_media.c:3731 -1
     (nil))

(jump_insn 4580 4579 4581 455 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4723)
            (pc))) src/switch_core_media.c:3731 -1
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 4723)

(note 4581 4580 4582 456 [bb 456] NOTE_INSN_BASIC_BLOCK)

(insn 4582 4581 116 456 (set (reg:SI 181 [ ivtmp.1090 ])
        (reg/v/f:SI 193 [ codec_array ])) src/switch_core_media.c:3731 -1
     (nil))

(insn 116 4582 4720 456 (set (reg/v:SI 687 [ i ])
        (const_int 0 [0])) src/switch_core_media.c:3731 -1
     (nil))

(code_label 4720 116 4583 457 1498 "" [1 uses])

(note 4583 4720 4584 457 [bb 457] NOTE_INSN_BASIC_BLOCK)

(insn 4584 4583 4585 457 (set (reg/v/f:SI 730 [ imp ])
        (mem/f:SI (reg:SI 181 [ ivtmp.1090 ]) [2 MEM[base: D.49988_872, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3732 -1
     (nil))

(insn 4585 4584 4586 457 (set (reg:SI 181 [ ivtmp.1090 ])
        (plus:SI (reg:SI 181 [ ivtmp.1090 ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3732 -1
     (nil))

(debug_insn 4586 4585 4587 457 (var_location:SI imp (reg/v/f:SI 730 [ imp ])) src/switch_core_media.c:3732 -1
     (nil))

(insn 4587 4586 4588 457 (set (reg:SI 2261)
        (mem/s:SI (reg/v/f:SI 730 [ imp ]) [17 imp_985->codec_type+0 S4 A32])) src/switch_core_media.c:3734 -1
     (nil))

(insn 4588 4587 4589 457 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2261)
            (const_int 1 [0x1]))) src/switch_core_media.c:3734 -1
     (nil))

(jump_insn 4589 4588 4590 457 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4713)
            (pc))) src/switch_core_media.c:3734 -1
     (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil))
 -> 4713)

(note 4590 4589 4591 458 [bb 458] NOTE_INSN_BASIC_BLOCK)

(insn 4591 4590 4592 458 (set (reg:SI 2262)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3738 -1
     (nil))

(insn 4592 4591 4593 458 (set (reg:SI 0 r0)
        (reg:SI 2262)) src/switch_core_media.c:3738 -1
     (nil))

(call_insn 4593 4592 4594 458 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_direction") [flags 0x41]  <function_decl 0x4085b700 switch_channel_direction>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3738 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 4594 4593 4595 458 (set (reg:SI 733 [ D.45241 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3738 -1
     (nil))

(insn 4595 4594 4596 458 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 733 [ D.45241 ])
            (const_int 0 [0]))) src/switch_core_media.c:3738 -1
     (nil))

(jump_insn 4596 4595 4597 458 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4605)
            (pc))) src/switch_core_media.c:3738 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4605)

(note 4597 4596 4598 459 [bb 459] NOTE_INSN_BASIC_BLOCK)

(insn 4598 4597 4599 459 (set (reg:SI 2263)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3739 -1
     (nil))

(insn 4599 4598 4600 459 (set (reg:SI 0 r0)
        (reg:SI 2263)) src/switch_core_media.c:3739 -1
     (nil))

(insn 4600 4599 4601 459 (set (reg:SI 1 r1)
        (const_int 114 [0x72])) src/switch_core_media.c:3739 -1
     (nil))

(call_insn 4601 4600 4602 459 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_test_flag") [flags 0x41]  <function_decl 0x40846880 switch_channel_test_flag>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3739 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4602 4601 4603 459 (set (reg:SI 735 [ D.45244 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3739 -1
     (nil))

(insn 4603 4602 4604 459 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 735 [ D.45244 ])
            (const_int 0 [0]))) src/switch_core_media.c:3738 -1
     (nil))

(jump_insn 4604 4603 4605 459 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4713)
            (pc))) src/switch_core_media.c:3738 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4713)

(code_label 4605 4604 4606 460 1493 "" [1 uses])

(note 4606 4605 4607 460 [bb 460] NOTE_INSN_BASIC_BLOCK)

(insn 4607 4606 4608 460 (set (reg:SI 2265)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1149 [0x47d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1149 [0x47d])
            ] 29)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4608 4607 4609 460 (set (reg:SI 2264)
        (reg:SI 2265)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4609 4608 4610 460 (set (reg:SI 2267)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1150 [0x47e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1150 [0x47e])
            ] 29)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4610 4609 4611 460 (set (reg/f:SI 2266)
        (reg:SI 2267)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4611 4610 4612 460 (set (reg:SI 2269)
        (plus:SI (reg/f:SI 2266)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3743 -1
     (nil))

(insn 4612 4611 4613 460 (set (reg:SI 2268)
        (plus:SI (reg:SI 2269)
            (const_int 8 [0x8]))) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2266)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4613 4612 4614 460 (set (reg:SI 2270)
        (const_int 3743 [0xe9f])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4614 4613 4615 460 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4615 4614 4616 460 (set (reg:SI 2271)
        (const_int 7 [0x7])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4616 4615 4617 460 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2271)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4617 4616 4618 460 (set (reg:SI 2273)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC363") [flags 0x82]  <var_decl 0x40418f60 *.LC363>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1151 [0x47f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1151 [0x47f])
            ] 29)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC363") [flags 0x82]  <var_decl 0x40418f60 *.LC363>)
        (nil)))

(insn 4618 4617 4619 460 (set (reg/f:SI 2272)
        (reg:SI 2273)) src/switch_core_media.c:3743 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC363") [flags 0x82]  <var_decl 0x40418f60 *.LC363>)
        (nil)))

(insn 4619 4618 4620 460 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2272)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4620 4619 4621 460 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v/f:SI 226 [ rm_encoding ])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4621 4620 4622 460 (set (reg:SI 2274)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 757 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3744 -1
     (nil))

(insn 4622 4621 4623 460 (set (reg:SI 2275)
        (lshiftrt:SI (reg:SI 2274)
            (const_int 1 [0x1]))) src/switch_core_media.c:3744 -1
     (nil))

(insn 4623 4622 4624 460 (set (reg:SI 2276)
        (zero_extend:SI (subreg:QI (reg:SI 2275) 0))) src/switch_core_media.c:3743 -1
     (nil))

(insn 4624 4623 4625 460 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 2276)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4625 4624 4626 460 (set (reg/f:SI 2277)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 730 [ imp ])
                (const_int 8 [0x8])) [2 imp_985->iananame+0 S4 A32])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4626 4625 4627 460 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg/f:SI 2277)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4627 4626 4628 460 (set (reg:SI 2278)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 730 [ imp ])
                    (const_int 4 [0x4])) [0 imp_985->ianacode+0 S1 A32]))) src/switch_core_media.c:3743 -1
     (nil))

(insn 4628 4627 4629 460 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg:SI 2278)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4629 4628 4630 460 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3743 -1
     (nil))

(insn 4630 4629 4631 460 (set (reg:SI 1 r1)
        (reg:SI 2264)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4631 4630 4632 460 (set (reg:SI 2 r2)
        (reg:SI 2268)) src/switch_core_media.c:3743 -1
     (nil))

(insn 4632 4631 4633 460 (set (reg:SI 3 r3)
        (reg:SI 2270)) src/switch_core_media.c:3743 -1
     (nil))

(call_insn 4633 4632 4634 460 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 32 [0x20]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3743 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4634 4633 4635 460 (set (reg/f:SI 741 [ D.45255 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 757 [ map ])
                (const_int 8 [0x8])) [2 map_1620->rm_encoding+0 S4 A32])) src/switch_core_media.c:3745 -1
     (nil))

(debug_insn 4635 4634 4636 460 (var_location:SI s (reg/f:SI 741 [ D.45255 ])) src/switch_core_media.c:3745 -1
     (nil))

(insn 4636 4635 4637 460 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 741 [ D.45255 ])
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4637 4636 4638 460 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4642)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 4642)

(note 4638 4637 4639 461 [bb 461] NOTE_INSN_BASIC_BLOCK)

(insn 4639 4638 4640 461 (set (reg:SI 2279)
        (zero_extend:SI (mem:QI (reg/f:SI 741 [ D.45255 ]) [0 *D.45255_996+0 S1 A8]))) ./src/include/switch_utils.h:254 -1
     (nil))

(insn 4640 4639 4641 461 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2279)
            (const_int 0 [0]))) ./src/include/switch_utils.h:254 -1
     (nil))

(jump_insn 4641 4640 4642 461 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5349)
            (pc))) ./src/include/switch_utils.h:254 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5349)

(code_label 4642 4641 4643 462 1494 "" [2 uses])

(note 4643 4642 4644 462 [bb 462] NOTE_INSN_BASIC_BLOCK)

(insn 4644 4643 4645 462 (set (reg:SI 2280)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 757 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3745 -1
     (nil))

(insn 4645 4644 4646 462 (set (reg:SI 2281)
        (lshiftrt:SI (reg:SI 2280)
            (const_int 1 [0x1]))) src/switch_core_media.c:3745 -1
     (nil))

(insn 4646 4645 4647 462 (set (reg:SI 747 [ D.45248 ])
        (zero_extend:SI (subreg:QI (reg:SI 2281) 0))) src/switch_core_media.c:3745 -1
     (nil))

(insn 4647 4646 4648 462 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 747 [ D.45248 ])
            (const_int 95 [0x5f]))) src/switch_core_media.c:3745 -1
     (nil))

(jump_insn 4648 4647 4649 462 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4657)
            (pc))) src/switch_core_media.c:3745 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4657)

(note 4649 4648 4650 463 [bb 463] NOTE_INSN_BASIC_BLOCK)

(insn 4650 4649 4651 463 (set (reg:SI 2282)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 730 [ imp ])
                    (const_int 4 [0x4])) [0 imp_985->ianacode+0 S1 A32]))) src/switch_core_media.c:3746 -1
     (nil))

(insn 4651 4650 4652 463 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 747 [ D.45248 ])
            (reg:SI 2282))) src/switch_core_media.c:3746 -1
     (nil))

(insn 4652 4651 4653 463 (set (reg:SI 2283)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3746 -1
     (nil))

(insn 4653 4652 4654 463 (set (reg/v:SI 227 [ vmatch ])
        (reg:SI 2283)) src/switch_core_media.c:3746 -1
     (nil))

(debug_insn 4654 4653 4655 463 (var_location:SI vmatch (reg/v:SI 227 [ vmatch ])) src/switch_core_media.c:3746 -1
     (nil))

(jump_insn 4655 4654 4656 463 (set (pc)
        (label_ref 4668)) src/switch_core_media.c:3746 -1
     (nil)
 -> 4668)

(barrier 4656 4655 4657)

(code_label 4657 4656 4658 464 1496 "" [2 uses])

(note 4658 4657 4659 464 [bb 464] NOTE_INSN_BASIC_BLOCK)

(insn 4659 4658 4660 464 (set (reg:SI 2284)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 730 [ imp ])
                (const_int 8 [0x8])) [2 imp_985->iananame+0 S4 A32])) src/switch_core_media.c:3748 -1
     (nil))

(insn 4660 4659 4661 464 (set (reg:SI 0 r0)
        (reg/v/f:SI 226 [ rm_encoding ])) src/switch_core_media.c:3748 -1
     (nil))

(insn 4661 4660 4662 464 (set (reg:SI 1 r1)
        (reg:SI 2284)) src/switch_core_media.c:3748 -1
     (nil))

(call_insn/i 4662 4661 4663 464 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3748 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 4663 4662 4664 464 (set (reg:SI 751 [ D.45259 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3748 -1
     (nil))

(insn 4664 4663 4665 464 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 751 [ D.45259 ])
            (const_int 0 [0]))) src/switch_core_media.c:3748 -1
     (nil))

(insn 4665 4664 4666 464 (set (reg:SI 2285)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3748 -1
     (nil))

(insn 4666 4665 4667 464 (set (reg/v:SI 227 [ vmatch ])
        (reg:SI 2285)) src/switch_core_media.c:3748 -1
     (nil))

(debug_insn 4667 4666 4668 464 (var_location:SI vmatch (reg/v:SI 227 [ vmatch ])) src/switch_core_media.c:3748 -1
     (nil))

(code_label 4668 4667 4669 465 1497 "" [1 uses])

(note 4669 4668 4670 465 [bb 465] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4670 4669 4671 465 (var_location:SI vmatch (reg/v:SI 227 [ vmatch ])) -1
     (nil))

(insn 4671 4670 4672 465 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 227 [ vmatch ])
            (const_int 0 [0]))) src/switch_core_media.c:3752 -1
     (nil))

(jump_insn 4672 4671 4673 465 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4713)
            (pc))) src/switch_core_media.c:3752 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4713)

(note 4673 4672 4674 466 [bb 466] NOTE_INSN_BASIC_BLOCK)

(insn 4674 4673 4675 466 (set (reg:SI 2286)
        (mem/s:SI (plus:SI (reg/v/f:SI 757 [ map ])
                (const_int 12 [0xc])) [26 map_1620->rm_rate+0 S4 A32])) src/switch_core_media.c:3752 -1
     (nil))

(insn 4675 4674 4676 466 (set (reg:SI 2287)
        (mem/s:SI (plus:SI (reg/v/f:SI 730 [ imp ])
                (const_int 16 [0x10])) [4 imp_985->samples_per_second+0 S4 A32])) src/switch_core_media.c:3752 -1
     (nil))

(insn 4676 4675 4677 466 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2286)
            (reg:SI 2287))) src/switch_core_media.c:3752 -1
     (nil))

(jump_insn 4677 4676 4678 466 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4713)
            (pc))) src/switch_core_media.c:3752 -1
     (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil))
 -> 4713)

(note 4678 4677 4679 467 [bb 467] NOTE_INSN_BASIC_BLOCK)

(insn 4679 4678 4680 467 (set (reg:SI 2288)
        (const_int -1056 [0xfffffffffffffbe0])) src/switch_core_media.c:3753 -1
     (nil))

(insn 4680 4679 4681 467 (set (reg:SI 2289)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3753 -1
     (nil))

(insn 4681 4680 4682 467 (set (reg:SI 2290)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 2289))) src/switch_core_media.c:3753 -1
     (nil))

(insn 4682 4681 4683 467 (set (reg/f:SI 2291)
        (plus:SI (reg:SI 2290)
            (reg:SI 2288))) src/switch_core_media.c:3753 -1
     (nil))

(insn 4683 4682 4684 467 (set (mem/s/f:SI (reg/f:SI 2291) [2 matches[m_idx_910].imp+0 S4 A64])
        (reg/v/f:SI 730 [ imp ])) src/switch_core_media.c:3753 -1
     (nil))

(insn 4684 4683 4685 467 (set (reg:SI 2292)
        (const_int -1056 [0xfffffffffffffbe0])) src/switch_core_media.c:3754 -1
     (nil))

(insn 4685 4684 4686 467 (set (reg:SI 2293)
        (ashift:SI (reg/v:SI 202 [ m_idx ])
            (const_int 4 [0x4]))) src/switch_core_media.c:3754 -1
     (nil))

(insn 4686 4685 4687 467 (set (reg:SI 2294)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (reg:SI 2293))) src/switch_core_media.c:3754 -1
     (nil))

(insn 4687 4686 4688 467 (set (reg/f:SI 2295)
        (plus:SI (reg:SI 2294)
            (reg:SI 2292))) src/switch_core_media.c:3754 -1
     (nil))

(insn 4688 4687 4689 467 (set (mem/s/f:SI (plus:SI (reg/f:SI 2295)
                (const_int 4 [0x4])) [2 matches[m_idx_910].map+0 S4 A32])
        (reg/v/f:SI 757 [ map ])) src/switch_core_media.c:3754 -1
     (nil))

(insn 4689 4688 4690 467 (set (reg:SI 2297)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1152 [0x480])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1152 [0x480])
            ] 29)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4690 4689 4691 467 (set (reg:SI 2296)
        (reg:SI 2297)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4691 4690 4692 467 (set (reg:SI 2299)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1153 [0x481])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1153 [0x481])
            ] 29)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4692 4691 4693 467 (set (reg/f:SI 2298)
        (reg:SI 2299)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4693 4692 4694 467 (set (reg:SI 2301)
        (plus:SI (reg/f:SI 2298)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3756 -1
     (nil))

(insn 4694 4693 4695 467 (set (reg:SI 2300)
        (plus:SI (reg:SI 2301)
            (const_int 8 [0x8]))) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2298)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4695 4694 4696 467 (set (reg:SI 2302)
        (const_int 3756 [0xeac])) src/switch_core_media.c:3756 -1
     (nil))

(insn 4696 4695 4697 467 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3756 -1
     (nil))

(insn 4697 4696 4698 467 (set (reg:SI 2303)
        (const_int 7 [0x7])) src/switch_core_media.c:3756 -1
     (nil))

(insn 4698 4697 4699 467 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2303)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4699 4698 4700 467 (set (reg:SI 2305)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC364") [flags 0x82]  <var_decl 0x4041f000 *.LC364>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1154 [0x482])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1154 [0x482])
            ] 29)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC364") [flags 0x82]  <var_decl 0x4041f000 *.LC364>)
        (nil)))

(insn 4700 4699 4701 467 (set (reg/f:SI 2304)
        (reg:SI 2305)) src/switch_core_media.c:3756 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC364") [flags 0x82]  <var_decl 0x4041f000 *.LC364>)
        (nil)))

(insn 4701 4700 4702 467 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2304)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4702 4701 4703 467 (set (reg/f:SI 2306)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 730 [ imp ])
                (const_int 8 [0x8])) [2 imp_985->iananame+0 S4 A32])) src/switch_core_media.c:3756 -1
     (nil))

(insn 4703 4702 4704 467 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/f:SI 2306)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4704 4703 4705 467 (set (reg:SI 2307)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 730 [ imp ])
                    (const_int 4 [0x4])) [0 imp_985->ianacode+0 S1 A32]))) src/switch_core_media.c:3756 -1
     (nil))

(insn 4705 4704 4706 467 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 2307)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4706 4705 4707 467 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3756 -1
     (nil))

(insn 4707 4706 4708 467 (set (reg:SI 1 r1)
        (reg:SI 2296)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4708 4707 4709 467 (set (reg:SI 2 r2)
        (reg:SI 2300)) src/switch_core_media.c:3756 -1
     (nil))

(insn 4709 4708 4710 467 (set (reg:SI 3 r3)
        (reg:SI 2302)) src/switch_core_media.c:3756 -1
     (nil))

(call_insn 4710 4709 4711 467 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 24 [0x18]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3756 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4711 4710 4712 467 (set (reg/v:SI 202 [ m_idx ])
        (plus:SI (reg/v:SI 202 [ m_idx ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3758 -1
     (nil))

(debug_insn 4712 4711 4713 467 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) src/switch_core_media.c:3758 -1
     (nil))

(code_label 4713 4712 4714 468 1492 "" [4 uses])

(note 4714 4713 4715 468 [bb 468] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4715 4714 4716 468 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(insn 4716 4715 4717 468 (set (reg/v:SI 687 [ i ])
        (plus:SI (reg/v:SI 687 [ i ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3731 -1
     (nil))

(debug_insn 4717 4716 4718 468 (var_location:SI i (reg/v:SI 687 [ i ])) src/switch_core_media.c:3731 -1
     (nil))

(debug_insn 4718 4717 4719 468 (var_location:SI i (reg/v:SI 687 [ i ])) -1
     (nil))

(debug_insn 4719 4718 4721 468 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(insn 4721 4719 4722 468 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 687 [ i ])
            (reg/v:SI 194 [ total_codecs ]))) src/switch_core_media.c:3731 -1
     (nil))

(jump_insn 4722 4721 4723 468 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4720)
            (pc))) src/switch_core_media.c:3731 -1
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 4720)

(code_label 4723 4722 4724 469 1491 "" [1 uses])

(note 4724 4723 4725 469 [bb 469] NOTE_INSN_BASIC_BLOCK)

(insn 4725 4724 4726 469 (set (reg/v/f:SI 757 [ map ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 757 [ map ])
                (const_int 4 [0x4])) [2 map_1620->rm_next+0 S4 A32])) src/switch_core_media.c:3674 -1
     (nil))

(debug_insn 4726 4725 4727 469 (var_location:SI map (reg/v/f:SI 757 [ map ])) src/switch_core_media.c:3674 -1
     (nil))

(debug_insn 4727 4726 4728 469 (var_location:SI map (reg/v/f:SI 757 [ map ])) -1
     (nil))

(debug_insn 4728 4727 4729 469 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 4729 4728 4731 469 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) -1
     (nil))

(insn 4731 4729 4732 469 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 757 [ map ])
            (const_int 0 [0]))) src/switch_core_media.c:3674 -1
     (nil))

(jump_insn 4732 4731 5558 469 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4730)
            (pc))) src/switch_core_media.c:3674 -1
     (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil))
 -> 4730)

(note 5558 4732 5559 470 [bb 470] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5559 5558 5560 470 (set (pc)
        (label_ref 4733)) -1
     (nil)
 -> 4733)

(barrier 5560 5559 5562)

(code_label 5562 5560 5561 471 1563 "" [1 uses])

(note 5561 5562 117 471 [bb 471] NOTE_INSN_BASIC_BLOCK)

(insn 117 5561 4733 471 (set (reg/v:SI 202 [ m_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3657 -1
     (nil))

(code_label 4733 117 4734 472 1474 "" [1 uses])

(note 4734 4733 4735 472 [bb 472] NOTE_INSN_BASIC_BLOCK)

(insn 4735 4734 4736 472 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 179 [ got_video_crypto ])
            (const_int 0 [0]))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4736 4735 4737 472 (set (reg:SI 2309)
        (le:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4737 4736 4738 472 (set (reg:QI 2308)
        (subreg:QI (reg:SI 2309) 0)) src/switch_core_media.c:3765 -1
     (nil))

(insn 4738 4737 4739 472 (set (reg:SI 2310)
        (const_int 23812 [0x5d04])) src/switch_core_media.c:3765 -1
     (nil))

(insn 4739 4738 4740 472 (set (reg:SI 2312)
        (mem/s:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2310)) [23 smh_186->crypto_mode+0 S4 A32])) src/switch_core_media.c:3765 -1
     (nil))

(insn 4740 4739 4741 472 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2312)
            (const_int 1 [0x1]))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4741 4740 4742 472 (set (reg:SI 2313)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4742 4741 4743 472 (set (reg:QI 2311)
        (subreg:QI (reg:SI 2313) 0)) src/switch_core_media.c:3765 -1
     (nil))

(insn 4743 4742 4744 472 (set (reg:SI 2314)
        (and:SI (subreg:SI (reg:QI 2308) 0)
            (subreg:SI (reg:QI 2311) 0))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4744 4743 4745 472 (set (reg:QI 2315)
        (subreg:QI (reg:SI 2314) 0)) src/switch_core_media.c:3765 -1
     (nil))

(insn 4745 4744 4746 472 (set (reg:SI 2316)
        (zero_extend:SI (reg:QI 2315))) src/switch_core_media.c:3765 -1
     (nil))

(insn 4746 4745 4747 472 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2316)
            (const_int 0 [0]))) src/switch_core_media.c:3765 -1
     (nil))

(jump_insn 4747 4746 4748 472 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4772)
            (pc))) src/switch_core_media.c:3765 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 4772)

(note 4748 4747 4749 473 [bb 473] NOTE_INSN_BASIC_BLOCK)

(insn 4749 4748 4750 473 (set (reg:SI 2318)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1155 [0x483])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1155 [0x483])
            ] 29)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4750 4749 4751 473 (set (reg:SI 2317)
        (reg:SI 2318)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4751 4750 4752 473 (set (reg:SI 2320)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1156 [0x484])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1156 [0x484])
            ] 29)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4752 4751 4753 473 (set (reg/f:SI 2319)
        (reg:SI 2320)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4753 4752 4754 473 (set (reg:SI 2322)
        (plus:SI (reg/f:SI 2319)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3766 -1
     (nil))

(insn 4754 4753 4755 473 (set (reg:SI 2321)
        (plus:SI (reg:SI 2322)
            (const_int 8 [0x8]))) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2319)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4755 4754 4756 473 (set (reg:SI 2323)
        (const_int 3766 [0xeb6])) src/switch_core_media.c:3766 -1
     (nil))

(insn 4756 4755 4757 473 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3766 -1
     (nil))

(insn 4757 4756 4758 473 (set (reg:SI 2324)
        (const_int 4 [0x4])) src/switch_core_media.c:3766 -1
     (nil))

(insn 4758 4757 4759 473 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2324)) src/switch_core_media.c:3766 -1
     (nil))

(insn 4759 4758 4760 473 (set (reg:SI 2326)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1157 [0x485])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1157 [0x485])
            ] 29)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
        (nil)))

(insn 4760 4759 4761 473 (set (reg/f:SI 2325)
        (reg:SI 2326)) src/switch_core_media.c:3766 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC344") [flags 0x82]  <var_decl 0x40418480 *.LC344>)
        (nil)))

(insn 4761 4760 4762 473 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2325)) src/switch_core_media.c:3766 -1
     (nil))

(insn 4762 4761 4763 473 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3766 -1
     (nil))

(insn 4763 4762 4764 473 (set (reg:SI 1 r1)
        (reg:SI 2317)) src/switch_core_media.c:3766 -1
     (nil))

(insn 4764 4763 4765 473 (set (reg:SI 2 r2)
        (reg:SI 2321)) src/switch_core_media.c:3766 -1
     (nil))

(insn 4765 4764 4766 473 (set (reg:SI 3 r3)
        (reg:SI 2323)) src/switch_core_media.c:3766 -1
     (nil))

(call_insn 4766 4765 4767 473 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3766 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(debug_insn 4767 4766 4768 473 (var_location:SI vmatch (const_int 0 [0])) src/switch_core_media.c:3767 -1
     (nil))

(debug_insn 4768 4767 4769 473 (var_location:SI m_idx (const_int 0 [0])) src/switch_core_media.c:3768 -1
     (nil))

(debug_insn 4769 4768 121 473 (var_location:SI m_idx (const_int 0 [0])) -1
     (nil))

(insn 121 4769 122 473 (set (reg/v:SI 211 [ nm_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3656 -1
     (nil))

(insn 122 121 4770 473 (set (reg/v:SI 202 [ m_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3766 -1
     (nil))

(jump_insn 4770 122 4771 473 (set (pc)
        (label_ref 5095)) src/switch_core_media.c:3766 -1
     (nil)
 -> 5095)

(barrier 4771 4770 4772)

(code_label 4772 4771 4773 474 1500 "" [1 uses])

(note 4773 4772 4774 474 [bb 474] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4774 4773 4775 474 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(insn 4775 4774 4776 474 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (const_int 0 [0]))) src/switch_core_media.c:3771 -1
     (nil))

(jump_insn 4776 4775 4777 474 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5574)
            (pc))) src/switch_core_media.c:3771 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 3000 [0xbb8])
        (nil))
 -> 5574)

(note 4777 4776 4778 475 [bb 475] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4778 4777 4779 475 (var_location:SI j (const_int 0 [0])) src/switch_core_media.c:3774 -1
     (nil))

(insn 4779 4778 4780 475 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 170 [ greedy ])
            (const_int 0 [0]))) src/switch_core_media.c:3776 -1
     (nil))

(jump_insn 4780 4779 4781 475 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4789)
            (pc))) src/switch_core_media.c:3776 -1
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 4789)

(note 4781 4780 4782 476 [bb 476] NOTE_INSN_BASIC_BLOCK)

(insn 4782 4781 4783 476 (set (reg:SI 2327)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3777 -1
     (nil))

(insn 4783 4782 4784 476 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 194 [ total_codecs ])) src/switch_core_media.c:3777 -1
     (nil))

(insn 4784 4783 4785 476 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3777 -1
     (nil))

(insn 4785 4784 4786 476 (set (reg:SI 1 r1)
        (reg:SI 2327)) src/switch_core_media.c:3777 -1
     (nil))

(insn 4786 4785 4787 476 (set (reg:SI 2 r2)
        (reg/v:SI 202 [ m_idx ])) src/switch_core_media.c:3777 -1
     (nil))

(insn 4787 4786 4788 476 (set (reg:SI 3 r3)
        (reg/v/f:SI 193 [ codec_array ])) src/switch_core_media.c:3777 -1
     (nil))

(call_insn 4788 4787 4789 476 (parallel [
            (call (mem:SI (symbol_ref:SI ("greedy_sort") [flags 0x3]  <function_decl 0x414f3b00 greedy_sort>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3777 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(code_label 4789 4788 4790 477 1501 "" [1 uses])

(note 4790 4789 4791 477 [bb 477] NOTE_INSN_BASIC_BLOCK)

(debug_insn 4791 4790 4792 477 (var_location:SI vmatch (const_int 1 [0x1])) src/switch_core_media.c:3780 -1
     (nil))

(insn 4792 4791 4793 477 (set (reg:SI 2328)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3781 -1
     (nil))

(insn 4793 4792 4794 477 (set (reg:SI 2329)
        (const_int 11409 [0x2c91])) src/switch_core_media.c:3781 -1
     (nil))

(insn 4794 4793 4795 477 (set (reg:SI 2330)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2328))) src/switch_core_media.c:3781 -1
     (nil))

(insn 4795 4794 4796 477 (set (reg/f:SI 2331)
        (plus:SI (reg:SI 2330)
            (reg:SI 2329))) src/switch_core_media.c:3781 -1
     (nil))

(insn 4796 4795 4797 477 (set (reg:SI 2332)
        (const_int 1 [0x1])) src/switch_core_media.c:3781 -1
     (nil))

(insn 4797 4796 4798 477 (set (reg:QI 2333)
        (subreg:QI (reg:SI 2332) 0)) src/switch_core_media.c:3781 -1
     (nil))

(insn 4798 4797 4799 477 (set (mem/s:QI (reg/f:SI 2331) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].codec_negotiated+0 S1 A8])
        (reg:QI 2333)) src/switch_core_media.c:3781 -1
     (nil))

(debug_insn 4799 4798 4800 477 (var_location:SI j (const_int 0 [0])) src/switch_core_media.c:3783 -1
     (nil))

(debug_insn 4800 4799 118 477 (var_location:SI j (const_int 0 [0])) -1
     (nil))

(insn 118 4800 119 477 (set (reg:SI 513 [ ivtmp.1083 ])
        (const_int 0 [0])) src/switch_core_media.c:3781 -1
     (nil))

(insn 119 118 4933 477 (set (reg/v:SI 793 [ j ])
        (const_int 0 [0])) src/switch_core_media.c:3783 -1
     (nil))

(code_label 4933 119 4801 478 1503 "" [1 uses])

(note 4801 4933 4802 478 [bb 478] NOTE_INSN_BASIC_BLOCK)

(insn 4802 4801 4803 478 (set (reg:SI 2334)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:2890 -1
     (nil))

(insn 4803 4802 4804 478 (set (reg/f:SI 514 [ D.49978 ])
        (plus:SI (reg:SI 2334)
            (reg:SI 513 [ ivtmp.1083 ]))) src/switch_core_media.c:2890 -1
     (nil))

(insn 4804 4803 4805 478 (set (reg/f:SI 762 [ D.45274 ])
        (mem/f:SI (plus:SI (reg/f:SI 514 [ D.49978 ])
                (const_int 4 [0x4])) [3 MEM[base: D.49978_628, offset: 4B]+0 S4 A32])) src/switch_core_media.c:3786 -1
     (nil))

(insn 4805 4804 4806 478 (set (reg:SI 2335)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3790 -1
     (nil))

(insn 4806 4805 4807 478 (set (reg/f:SI 767 [ D.45279 ])
        (mem/f:SI (plus:SI (reg:SI 513 [ ivtmp.1083 ])
                (reg:SI 2335)) [3 MEM[symbol: matches, index: ivtmp.1083_626, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3790 -1
     (nil))

(insn 4807 4806 4808 478 (set (reg:SI 2336)
        (mem/s/f:SI (plus:SI (reg/f:SI 762 [ D.45274 ])
                (const_int 8 [0x8])) [2 D.45274_1031->rm_encoding+0 S4 A32])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4808 4807 4809 478 (set (reg:SI 2337)
        (mem/s/f:SI (plus:SI (reg/f:SI 762 [ D.45274 ])
                (const_int 20 [0x14])) [2 D.45274_1031->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4809 4808 4810 478 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v:SI 1028 [ sdp_type ])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4810 4809 4811 478 (set (reg:SI 2338)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 762 [ D.45274 ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3789 -1
     (nil))

(insn 4811 4810 4812 478 (set (reg:SI 2339)
        (lshiftrt:SI (reg:SI 2338)
            (const_int 1 [0x1]))) src/switch_core_media.c:3789 -1
     (nil))

(insn 4812 4811 4813 478 (set (reg:SI 2340)
        (zero_extend:SI (subreg:QI (reg:SI 2339) 0))) src/switch_core_media.c:3784 -1
     (nil))

(insn 4813 4812 4814 478 (set (mem/i:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2340)) src/switch_core_media.c:3784 -1
     (nil))

(insn 4814 4813 4815 478 (set (reg:SI 2341)
        (mem/s:SI (plus:SI (reg/f:SI 767 [ D.45279 ])
                (const_int 16 [0x10])) [4 D.45279_1038->samples_per_second+0 S4 A32])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4815 4814 4816 478 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 2341)) src/switch_core_media.c:3784 -1
     (nil))

(insn 4816 4815 4817 478 (set (reg:SI 2343)
        (mem/s:SI (plus:SI (reg/f:SI 767 [ D.45279 ])
                (const_int 28 [0x1c])) [4 D.45279_1038->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3791 -1
     (nil))

(insn 4817 4816 4818 478 (set (reg:SI 2345)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3791 -1
     (nil))

(insn 4818 4817 4819 478 (parallel [
            (set (reg:SI 2344)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 2343))
                            (sign_extend:DI (reg:SI 2345)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3791 -1
     (nil))

(insn 4819 4818 4820 478 (set (reg:SI 2346)
        (ashiftrt:SI (reg:SI 2344)
            (const_int 6 [0x6]))) src/switch_core_media.c:3791 -1
     (nil))

(insn 4820 4819 4821 478 (set (reg:SI 2347)
        (ashiftrt:SI (reg:SI 2343)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3791 -1
     (nil))

(insn 4821 4820 4822 478 (set (reg:SI 2342)
        (minus:SI (reg:SI 2346)
            (reg:SI 2347))) src/switch_core_media.c:3791 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 2343)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 4822 4821 4823 478 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 2342)) src/switch_core_media.c:3784 -1
     (nil))

(insn 4823 4822 4824 478 (set (reg:SI 2348)
        (const_int 1 [0x1])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4824 4823 4825 478 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 2348)) src/switch_core_media.c:3784 -1
     (nil))

(insn 4825 4824 4826 478 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4826 4825 4827 478 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4827 4826 4828 478 (set (reg:SI 2 r2)
        (reg:SI 2336)) src/switch_core_media.c:3784 -1
     (nil))

(insn 4828 4827 4829 478 (set (reg:SI 3 r3)
        (reg:SI 2337)) src/switch_core_media.c:3784 -1
     (nil))

(call_insn 4829 4828 4830 478 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_add_payload_map") [flags 0x1]  <function_decl 0x40957200 switch_core_media_add_payload_map>) [0 S4 A32])
                    (const_int 24 [0x18])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3784 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4830 4829 4831 478 (set (reg/v/f:SI 772 [ pmap ])
        (reg:SI 0 r0)) src/switch_core_media.c:3784 -1
     (nil))

(debug_insn 4831 4830 4832 478 (var_location:SI pmap (reg/v/f:SI 772 [ pmap ])) src/switch_core_media.c:3784 -1
     (nil))

(insn 4832 4831 4833 478 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 793 [ j ])
            (const_int 0 [0]))) src/switch_core_media.c:3793 -1
     (nil))

(jump_insn 4833 4832 4834 478 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4855)
            (pc))) src/switch_core_media.c:3793 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4855)

(note 4834 4833 4835 479 [bb 479] NOTE_INSN_BASIC_BLOCK)

(insn 4835 4834 4836 479 (set (reg:SI 2349)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3794 -1
     (nil))

(insn 4836 4835 4837 479 (set (reg:SI 2350)
        (const_int 1856 [0x740])) src/switch_core_media.c:3794 -1
     (nil))

(insn 4837 4836 4838 479 (set (reg:SI 2351)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2349))) src/switch_core_media.c:3794 -1
     (nil))

(insn 4838 4837 4839 479 (set (reg/f:SI 2352)
        (plus:SI (reg:SI 2351)
            (reg:SI 2350))) src/switch_core_media.c:3794 -1
     (nil))

(insn 4839 4838 4840 479 (set (mem/s/f:SI (reg/f:SI 2352) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])
        (reg/v/f:SI 772 [ pmap ])) src/switch_core_media.c:3794 -1
     (nil))

(insn 4840 4839 4841 479 (set (reg:SI 2353)
        (const_int 1 [0x1])) src/switch_core_media.c:3795 -1
     (nil))

(insn 4841 4840 4842 479 (set (reg:QI 2354)
        (subreg:QI (reg:SI 2353) 0)) src/switch_core_media.c:3795 -1
     (nil))

(insn 4842 4841 4843 479 (set (mem/s:QI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 18 [0x12])) [0 pmap_1044->current+0 S1 A16])
        (reg:QI 2354)) src/switch_core_media.c:3795 -1
     (nil))

(insn 4843 4842 4844 479 (set (reg:SI 2355)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3796 -1
     (nil))

(insn 4844 4843 4845 479 (set (reg:SI 2356)
        (const_int 1448 [0x5a8])) src/switch_core_media.c:3796 -1
     (nil))

(insn 4845 4844 4846 479 (set (reg:SI 2357)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2355))) src/switch_core_media.c:3796 -1
     (nil))

(insn 4846 4845 4847 479 (set (reg/f:SI 2358)
        (plus:SI (reg:SI 2357)
            (reg:SI 2356))) src/switch_core_media.c:3796 -1
     (nil))

(insn 4847 4846 4848 479 (set (reg/f:SI 773 [ D.45287 ])
        (mem/s/f:SI (reg/f:SI 2358) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session+0 S4 A32])) src/switch_core_media.c:3796 -1
     (nil))

(insn 4848 4847 4849 479 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 773 [ D.45287 ])
            (const_int 0 [0]))) src/switch_core_media.c:3796 -1
     (nil))

(jump_insn 4849 4848 4850 479 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4855)
            (pc))) src/switch_core_media.c:3796 -1
     (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil))
 -> 4855)

(note 4850 4849 4851 480 [bb 480] NOTE_INSN_BASIC_BLOCK)

(insn 4851 4850 4852 480 (set (reg:SI 2359)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 772 [ pmap ])
                    (const_int 32 [0x20])) [0 pmap_1044->pt+0 S1 A32]))) src/switch_core_media.c:3797 -1
     (nil))

(insn 4852 4851 4853 480 (set (reg:SI 0 r0)
        (reg/f:SI 773 [ D.45287 ])) src/switch_core_media.c:3797 -1
     (nil))

(insn 4853 4852 4854 480 (set (reg:SI 1 r1)
        (reg:SI 2359)) src/switch_core_media.c:3797 -1
     (nil))

(call_insn 4854 4853 4855 480 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_rtp_set_default_payload") [flags 0x41]  <function_decl 0x408ce200 switch_rtp_set_default_payload>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3797 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(code_label 4855 4854 4856 481 1502 "" [2 uses])

(note 4856 4855 4857 481 [bb 481] NOTE_INSN_BASIC_BLOCK)

(insn 4857 4856 4858 481 (set (reg:SI 2360)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -1056 [0xfffffffffffffbe0]))) src/switch_core_media.c:3801 -1
     (nil))

(insn 4858 4857 4859 481 (set (reg/v/f:SI 775 [ mimp ])
        (mem/f:SI (plus:SI (reg:SI 513 [ ivtmp.1083 ])
                (reg:SI 2360)) [3 MEM[symbol: matches, index: ivtmp.1083_626, offset: 0B]+0 S4 A32])) src/switch_core_media.c:3801 -1
     (nil))

(debug_insn 4859 4858 4860 481 (var_location:SI mimp (reg/v/f:SI 775 [ mimp ])) src/switch_core_media.c:3801 -1
     (nil))

(insn 4860 4859 4861 481 (set (reg/v/f:SI 776 [ map ])
        (mem/f:SI (plus:SI (reg/f:SI 514 [ D.49978 ])
                (const_int 4 [0x4])) [3 MEM[base: D.49978_628, offset: 4B]+0 S4 A32])) src/switch_core_media.c:3802 -1
     (nil))

(debug_insn 4861 4860 4862 481 (var_location:SI map (reg/v/f:SI 776 [ map ])) src/switch_core_media.c:3802 -1
     (nil))

(insn 4862 4861 4863 481 (set (reg:SI 2361)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 776 [ map ])
                (const_int 8 [0x8])) [2 map_1050->rm_encoding+0 S4 A32])) src/switch_core_media.c:3804 -1
     (nil))

(insn 4863 4862 4864 481 (set (reg:SI 2363)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1158 [0x486])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1158 [0x486])
            ] 29)) src/switch_core_media.c:3804 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4864 4863 4865 481 (set (reg:SI 2362)
        (reg:SI 2363)) src/switch_core_media.c:3804 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4865 4864 4866 481 (set (reg:SI 2365)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1159 [0x487])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1159 [0x487])
            ] 29)) src/switch_core_media.c:3804 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4866 4865 4867 481 (set (reg/f:SI 2364)
        (reg:SI 2365)) src/switch_core_media.c:3804 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4867 4866 4868 481 (set (reg:SI 2367)
        (plus:SI (reg/f:SI 2364)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3804 -1
     (nil))

(insn 4868 4867 4869 481 (set (reg:SI 2366)
        (plus:SI (reg:SI 2367)
            (const_int 8 [0x8]))) src/switch_core_media.c:3804 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2364)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4869 4868 4870 481 (set (reg:SI 2368)
        (const_int 3804 [0xedc])) src/switch_core_media.c:3804 -1
     (nil))

(insn 4870 4869 4871 481 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 2368)) src/switch_core_media.c:3804 -1
     (nil))

(insn 4871 4870 4872 481 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3804 -1
     (nil))

(insn 4872 4871 4873 481 (set (reg:SI 1 r1)
        (reg:SI 2361)) src/switch_core_media.c:3804 -1
     (nil))

(insn 4873 4872 4874 481 (set (reg:SI 2 r2)
        (reg:SI 2362)) src/switch_core_media.c:3804 -1
     (nil))

(insn 4874 4873 4875 481 (set (reg:SI 3 r3)
        (reg:SI 2366)) src/switch_core_media.c:3804 -1
     (nil))

(call_insn 4875 4874 4876 481 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3804 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4876 4875 4877 481 (set (reg/f:SI 778 [ D.45291 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3804 -1
     (nil))

(insn 4877 4876 4878 481 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 24 [0x18])) [2 pmap_1044->rm_encoding+0 S4 A32])
        (reg/f:SI 778 [ D.45291 ])) src/switch_core_media.c:3804 -1
     (nil))

(insn 4878 4877 4879 481 (set (reg:SI 2369)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 776 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3805 -1
     (nil))

(insn 4879 4878 4880 481 (set (reg:SI 2370)
        (lshiftrt:SI (reg:SI 2369)
            (const_int 1 [0x1]))) src/switch_core_media.c:3805 -1
     (nil))

(insn 4880 4879 4881 481 (set (reg:QI 2371)
        (subreg:QI (reg:SI 2370) 0)) src/switch_core_media.c:3805 -1
     (nil))

(insn 4881 4880 4882 481 (set (mem/s:QI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 57 [0x39])) [0 pmap_1044->recv_pt+0 S1 A8])
        (reg:QI 2371)) src/switch_core_media.c:3805 -1
     (nil))

(insn 4882 4881 4883 481 (set (reg:SI 2372)
        (mem/s:SI (plus:SI (reg/v/f:SI 776 [ map ])
                (const_int 12 [0xc])) [26 map_1050->rm_rate+0 S4 A32])) src/switch_core_media.c:3806 -1
     (nil))

(insn 4883 4882 4884 481 (set (mem/s:SI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 36 [0x24])) [26 pmap_1044->rm_rate+0 S4 A32])
        (reg:SI 2372)) src/switch_core_media.c:3806 -1
     (nil))

(insn 4884 4883 4885 481 (set (reg:SI 2374)
        (mem/s:SI (plus:SI (reg/v/f:SI 775 [ mimp ])
                (const_int 28 [0x1c])) [4 mimp_1049->microseconds_per_packet+0 S4 A32])) src/switch_core_media.c:3807 -1
     (nil))

(insn 4885 4884 4886 481 (set (reg:SI 2376)
        (const_int 274877907 [0x10624dd3])) src/switch_core_media.c:3807 -1
     (nil))

(insn 4886 4885 4887 481 (parallel [
            (set (reg:SI 2375)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 2374))
                            (sign_extend:DI (reg:SI 2376)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
        ]) src/switch_core_media.c:3807 -1
     (nil))

(insn 4887 4886 4888 481 (set (reg:SI 2377)
        (ashiftrt:SI (reg:SI 2375)
            (const_int 6 [0x6]))) src/switch_core_media.c:3807 -1
     (nil))

(insn 4888 4887 4889 481 (set (reg:SI 2378)
        (ashiftrt:SI (reg:SI 2374)
            (const_int 31 [0x1f]))) src/switch_core_media.c:3807 -1
     (nil))

(insn 4889 4888 4890 481 (set (reg:SI 2373)
        (minus:SI (reg:SI 2377)
            (reg:SI 2378))) src/switch_core_media.c:3807 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 2374)
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 4890 4889 4891 481 (set (mem/s:SI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 44 [0x2c])) [4 pmap_1044->codec_ms+0 S4 A32])
        (reg:SI 2373)) src/switch_core_media.c:3807 -1
     (nil))

(insn 4891 4890 4892 481 (set (reg:SI 2379)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 207 [ connection ])
                (const_int 16 [0x10])) [2 connection_110->c_address+0 S4 A32])) src/switch_core_media.c:3810 -1
     (nil))

(insn 4892 4891 4893 481 (set (reg:SI 2381)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1160 [0x488])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1160 [0x488])
            ] 29)) src/switch_core_media.c:3810 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4893 4892 4894 481 (set (reg:SI 2380)
        (reg:SI 2381)) src/switch_core_media.c:3810 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4894 4893 4895 481 (set (reg:SI 2383)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1161 [0x489])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1161 [0x489])
            ] 29)) src/switch_core_media.c:3810 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4895 4894 4896 481 (set (reg/f:SI 2382)
        (reg:SI 2383)) src/switch_core_media.c:3810 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4896 4895 4897 481 (set (reg:SI 2385)
        (plus:SI (reg/f:SI 2382)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3810 -1
     (nil))

(insn 4897 4896 4898 481 (set (reg:SI 2384)
        (plus:SI (reg:SI 2385)
            (const_int 8 [0x8]))) src/switch_core_media.c:3810 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2382)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4898 4897 4899 481 (set (reg:SI 2386)
        (const_int 3810 [0xee2])) src/switch_core_media.c:3810 -1
     (nil))

(insn 4899 4898 4900 481 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 2386)) src/switch_core_media.c:3810 -1
     (nil))

(insn 4900 4899 4901 481 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3810 -1
     (nil))

(insn 4901 4900 4902 481 (set (reg:SI 1 r1)
        (reg:SI 2379)) src/switch_core_media.c:3810 -1
     (nil))

(insn 4902 4901 4903 481 (set (reg:SI 2 r2)
        (reg:SI 2380)) src/switch_core_media.c:3810 -1
     (nil))

(insn 4903 4902 4904 481 (set (reg:SI 3 r3)
        (reg:SI 2384)) src/switch_core_media.c:3810 -1
     (nil))

(call_insn 4904 4903 4905 481 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3810 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4905 4904 4906 481 (set (reg/f:SI 786 [ D.45296 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3810 -1
     (nil))

(insn 4906 4905 4907 481 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 64 [0x40])) [2 pmap_1044->remote_sdp_ip+0 S4 A32])
        (reg/f:SI 786 [ D.45296 ])) src/switch_core_media.c:3810 -1
     (nil))

(insn 4907 4906 4908 481 (set (reg:SI 2387)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 20 [0x14])) [26 m_1764->m_port+0 S4 A32])) src/switch_core_media.c:3811 -1
     (nil))

(insn 4908 4907 4909 481 (set (mem/s:HI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 68 [0x44])) [13 pmap_1044->remote_sdp_port+0 S2 A32])
        (subreg:HI (reg:SI 2387) 0)) src/switch_core_media.c:3811 -1
     (nil))

(insn 4909 4908 4910 481 (set (reg:SI 2388)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 776 [ map ])
                (const_int 20 [0x14])) [2 map_1050->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3813 -1
     (nil))

(insn 4910 4909 4911 481 (set (reg:SI 2390)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1162 [0x48a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1162 [0x48a])
            ] 29)) src/switch_core_media.c:3813 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4911 4910 4912 481 (set (reg:SI 2389)
        (reg:SI 2390)) src/switch_core_media.c:3813 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 4912 4911 4913 481 (set (reg:SI 2392)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1163 [0x48b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1163 [0x48b])
            ] 29)) src/switch_core_media.c:3813 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4913 4912 4914 481 (set (reg/f:SI 2391)
        (reg:SI 2392)) src/switch_core_media.c:3813 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 4914 4913 4915 481 (set (reg:SI 2394)
        (plus:SI (reg/f:SI 2391)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3813 -1
     (nil))

(insn 4915 4914 4916 481 (set (reg:SI 2393)
        (plus:SI (reg:SI 2394)
            (const_int 8 [0x8]))) src/switch_core_media.c:3813 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2391)
            (const_int 1800 [0x708]))
        (nil)))

(insn 4916 4915 4917 481 (set (reg:SI 2395)
        (const_int 3813 [0xee5])) src/switch_core_media.c:3813 -1
     (nil))

(insn 4917 4916 4918 481 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg:SI 2395)) src/switch_core_media.c:3813 -1
     (nil))

(insn 4918 4917 4919 481 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3813 -1
     (nil))

(insn 4919 4918 4920 481 (set (reg:SI 1 r1)
        (reg:SI 2388)) src/switch_core_media.c:3813 -1
     (nil))

(insn 4920 4919 4921 481 (set (reg:SI 2 r2)
        (reg:SI 2389)) src/switch_core_media.c:3813 -1
     (nil))

(insn 4921 4920 4922 481 (set (reg:SI 3 r3)
        (reg:SI 2393)) src/switch_core_media.c:3813 -1
     (nil))

(call_insn 4922 4921 4923 481 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_perform_session_strdup") [flags 0x41]  <function_decl 0x406f3480 switch_core_perform_session_strdup>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3813 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4923 4922 4924 481 (set (reg/f:SI 790 [ D.45298 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3813 -1
     (nil))

(insn 4924 4923 4925 481 (set (mem/s/f:SI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 52 [0x34])) [2 pmap_1044->rm_fmtp+0 S4 A32])
        (reg/f:SI 790 [ D.45298 ])) src/switch_core_media.c:3813 -1
     (nil))

(insn 4925 4924 4926 481 (set (reg:SI 2396)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 776 [ map ])
                    (const_int 24 [0x18])) [0+24 S1 A32]))) src/switch_core_media.c:3815 -1
     (nil))

(insn 4926 4925 4927 481 (set (reg:SI 2397)
        (lshiftrt:SI (reg:SI 2396)
            (const_int 1 [0x1]))) src/switch_core_media.c:3815 -1
     (nil))

(insn 4927 4926 4928 481 (set (reg:QI 2398)
        (subreg:QI (reg:SI 2397) 0)) src/switch_core_media.c:3815 -1
     (nil))

(insn 4928 4927 4929 481 (set (mem/s:QI (plus:SI (reg/v/f:SI 772 [ pmap ])
                (const_int 56 [0x38])) [0 pmap_1044->agreed_pt+0 S1 A32])
        (reg:QI 2398)) src/switch_core_media.c:3815 -1
     (nil))

(insn 4929 4928 4930 481 (set (reg/v:SI 793 [ j ])
        (plus:SI (reg/v:SI 793 [ j ])
            (const_int 1 [0x1]))) src/switch_core_media.c:3783 -1
     (nil))

(debug_insn 4930 4929 4931 481 (var_location:SI j (reg/v:SI 793 [ j ])) src/switch_core_media.c:3783 -1
     (nil))

(debug_insn 4931 4930 4932 481 (var_location:SI j (reg/v:SI 793 [ j ])) -1
     (nil))

(insn 4932 4931 4934 481 (set (reg:SI 513 [ ivtmp.1083 ])
        (plus:SI (reg:SI 513 [ ivtmp.1083 ])
            (const_int 16 [0x10]))) src/switch_core_media.c:3783 -1
     (nil))

(insn 4934 4932 4935 481 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 202 [ m_idx ])
            (reg/v:SI 793 [ j ]))) src/switch_core_media.c:3783 -1
     (nil))

(jump_insn 4935 4934 4936 481 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4933)
            (pc))) src/switch_core_media.c:3783 -1
     (expr_list:REG_BR_PROB (const_int 9666 [0x25c2])
        (nil))
 -> 4933)

(note 4936 4935 4937 482 [bb 482] NOTE_INSN_BASIC_BLOCK)

(insn 4937 4936 4938 482 (set (reg:SI 2399)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3827 -1
     (nil))

(insn 4938 4937 4939 482 (set (reg:SI 2401)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1164 [0x48c])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1164 [0x48c])
            ] 29)) src/switch_core_media.c:3827 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4939 4938 4940 482 (set (reg:SI 2400)
        (reg:SI 2401)) src/switch_core_media.c:3827 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4940 4939 4941 482 (set (reg:SI 2402)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3827 -1
     (nil))

(insn 4941 4940 4942 482 (set (reg:SI 2404)
        (const_int 1856 [0x740])) src/switch_core_media.c:3827 -1
     (nil))

(insn 4942 4941 4943 482 (set (reg:SI 2405)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2402))) src/switch_core_media.c:3827 -1
     (nil))

(insn 4943 4942 4944 482 (set (reg/f:SI 2406)
        (plus:SI (reg:SI 2405)
            (reg:SI 2404))) src/switch_core_media.c:3827 -1
     (nil))

(insn 4944 4943 4945 482 (set (reg/f:SI 2403)
        (mem/s/f:SI (reg/f:SI 2406) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3827 -1
     (nil))

(insn 4945 4944 4946 482 (set (reg:SI 2407)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 2403)
                    (const_int 68 [0x44])) [13 D.45286_1068->remote_sdp_port+0 S2 A32]))) src/switch_core_media.c:3827 -1
     (nil))

(insn 4946 4945 4947 482 (set (reg:SI 0 r0)
        (reg:SI 2399)) src/switch_core_media.c:3827 -1
     (nil))

(insn 4947 4946 4948 482 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) src/switch_core_media.c:3827 -1
     (nil))

(insn 4948 4947 4949 482 (set (reg:SI 2 r2)
        (reg:SI 2400)) src/switch_core_media.c:3827 -1
     (nil))

(insn 4949 4948 4950 482 (set (reg:SI 3 r3)
        (reg:SI 2407)) src/switch_core_media.c:3827 -1
     (nil))

(call_insn 4950 4949 4951 482 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3827 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4951 4950 4952 482 (set (reg:SI 2408)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3828 -1
     (nil))

(insn 4952 4951 4953 482 (set (reg:SI 2410)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC365") [flags 0x82]  <var_decl 0x4041f060 *.LC365>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1165 [0x48d])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1165 [0x48d])
            ] 29)) src/switch_core_media.c:3828 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC365") [flags 0x82]  <var_decl 0x4041f060 *.LC365>)
        (nil)))

(insn 4953 4952 4954 482 (set (reg:SI 2409)
        (reg:SI 2410)) src/switch_core_media.c:3828 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC365") [flags 0x82]  <var_decl 0x4041f060 *.LC365>)
        (nil)))

(insn 4954 4953 4955 482 (set (reg:SI 2411)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3828 -1
     (nil))

(insn 4955 4954 4956 482 (set (reg:SI 2413)
        (const_int 1856 [0x740])) src/switch_core_media.c:3828 -1
     (nil))

(insn 4956 4955 4957 482 (set (reg:SI 2414)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2411))) src/switch_core_media.c:3828 -1
     (nil))

(insn 4957 4956 4958 482 (set (reg/f:SI 2415)
        (plus:SI (reg:SI 2414)
            (reg:SI 2413))) src/switch_core_media.c:3828 -1
     (nil))

(insn 4958 4957 4959 482 (set (reg/f:SI 2412)
        (mem/s/f:SI (reg/f:SI 2415) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3828 -1
     (nil))

(insn 4959 4958 4960 482 (set (reg:SI 2416)
        (mem/s/f:SI (plus:SI (reg/f:SI 2412)
                (const_int 64 [0x40])) [2 D.45286_1072->remote_sdp_ip+0 S4 A32])) src/switch_core_media.c:3828 -1
     (nil))

(insn 4960 4959 4961 482 (set (reg:SI 0 r0)
        (reg:SI 2408)) src/switch_core_media.c:3828 -1
     (nil))

(insn 4961 4960 4962 482 (set (reg:SI 1 r1)
        (reg:SI 2409)) src/switch_core_media.c:3828 -1
     (nil))

(insn 4962 4961 4963 482 (set (reg:SI 2 r2)
        (reg:SI 2416)) src/switch_core_media.c:3828 -1
     (nil))

(insn 4963 4962 4964 482 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3828 -1
     (nil))

(call_insn 4964 4963 4965 482 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3828 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4965 4964 4966 482 (set (reg:SI 2417)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3829 -1
     (nil))

(insn 4966 4965 4967 482 (set (reg:SI 2419)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC366") [flags 0x82]  <var_decl 0x4041f0c0 *.LC366>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1166 [0x48e])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1166 [0x48e])
            ] 29)) src/switch_core_media.c:3829 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC366") [flags 0x82]  <var_decl 0x4041f0c0 *.LC366>)
        (nil)))

(insn 4967 4966 4968 482 (set (reg:SI 2418)
        (reg:SI 2419)) src/switch_core_media.c:3829 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC366") [flags 0x82]  <var_decl 0x4041f0c0 *.LC366>)
        (nil)))

(insn 4968 4967 4969 482 (set (reg:SI 2420)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3829 -1
     (nil))

(insn 4969 4968 4970 482 (set (reg:SI 0 r0)
        (reg:SI 2417)) src/switch_core_media.c:3829 -1
     (nil))

(insn 4970 4969 4971 482 (set (reg:SI 1 r1)
        (reg:SI 2418)) src/switch_core_media.c:3829 -1
     (nil))

(insn 4971 4970 4972 482 (set (reg:SI 2 r2)
        (reg:SI 2420)) src/switch_core_media.c:3829 -1
     (nil))

(insn 4972 4971 4973 482 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3829 -1
     (nil))

(call_insn 4973 4972 4974 482 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3829 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4974 4973 4975 482 (set (reg:SI 2421)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3830 -1
     (nil))

(insn 4975 4974 4976 482 (set (reg:SI 2423)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC367") [flags 0x82]  <var_decl 0x4041f120 *.LC367>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1167 [0x48f])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1167 [0x48f])
            ] 29)) src/switch_core_media.c:3830 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC367") [flags 0x82]  <var_decl 0x4041f120 *.LC367>)
        (nil)))

(insn 4976 4975 4977 482 (set (reg:SI 2422)
        (reg:SI 2423)) src/switch_core_media.c:3830 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC367") [flags 0x82]  <var_decl 0x4041f120 *.LC367>)
        (nil)))

(insn 4977 4976 4978 482 (set (reg:SI 2424)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3830 -1
     (nil))

(insn 4978 4977 4979 482 (set (reg:SI 2426)
        (const_int 1856 [0x740])) src/switch_core_media.c:3830 -1
     (nil))

(insn 4979 4978 4980 482 (set (reg:SI 2427)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2424))) src/switch_core_media.c:3830 -1
     (nil))

(insn 4980 4979 4981 482 (set (reg/f:SI 2428)
        (plus:SI (reg:SI 2427)
            (reg:SI 2426))) src/switch_core_media.c:3830 -1
     (nil))

(insn 4981 4980 4982 482 (set (reg/f:SI 2425)
        (mem/s/f:SI (reg/f:SI 2428) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3830 -1
     (nil))

(insn 4982 4981 4983 482 (set (reg:SI 2429)
        (mem/s/f:SI (plus:SI (reg/f:SI 2425)
                (const_int 52 [0x34])) [2 D.45286_1076->rm_fmtp+0 S4 A32])) src/switch_core_media.c:3830 -1
     (nil))

(insn 4983 4982 4984 482 (set (reg:SI 0 r0)
        (reg:SI 2421)) src/switch_core_media.c:3830 -1
     (nil))

(insn 4984 4983 4985 482 (set (reg:SI 1 r1)
        (reg:SI 2422)) src/switch_core_media.c:3830 -1
     (nil))

(insn 4985 4984 4986 482 (set (reg:SI 2 r2)
        (reg:SI 2429)) src/switch_core_media.c:3830 -1
     (nil))

(insn 4986 4985 4987 482 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3830 -1
     (nil))

(call_insn 4987 4986 4988 482 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3830 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 4988 4987 4989 482 (set (reg:SI 2430)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3831 -1
     (nil))

(insn 4989 4988 4990 482 (set (reg:SI 2432)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1168 [0x490])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1168 [0x490])
            ] 29)) src/switch_core_media.c:3831 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4990 4989 4991 482 (set (reg:SI 2431)
        (reg:SI 2432)) src/switch_core_media.c:3831 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 4991 4990 4992 482 (set (reg:SI 2433)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3831 -1
     (nil))

(insn 4992 4991 4993 482 (set (reg:SI 2435)
        (const_int 1856 [0x740])) src/switch_core_media.c:3831 -1
     (nil))

(insn 4993 4992 4994 482 (set (reg:SI 2436)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2433))) src/switch_core_media.c:3831 -1
     (nil))

(insn 4994 4993 4995 482 (set (reg/f:SI 2437)
        (plus:SI (reg:SI 2436)
            (reg:SI 2435))) src/switch_core_media.c:3831 -1
     (nil))

(insn 4995 4994 4996 482 (set (reg/f:SI 2434)
        (mem/s/f:SI (reg/f:SI 2437) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3831 -1
     (nil))

(insn 4996 4995 4997 482 (set (reg:SI 2438)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 2434)
                    (const_int 56 [0x38])) [0 D.45286_1078->agreed_pt+0 S1 A32]))) src/switch_core_media.c:3831 -1
     (nil))

(insn 4997 4996 4998 482 (set (reg:SI 0 r0)
        (reg:SI 2430)) src/switch_core_media.c:3831 -1
     (nil))

(insn 4998 4997 4999 482 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) src/switch_core_media.c:3831 -1
     (nil))

(insn 4999 4998 5000 482 (set (reg:SI 2 r2)
        (reg:SI 2431)) src/switch_core_media.c:3831 -1
     (nil))

(insn 5000 4999 5001 482 (set (reg:SI 3 r3)
        (reg:SI 2438)) src/switch_core_media.c:3831 -1
     (nil))

(call_insn 5001 5000 5002 482 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3831 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 5002 5001 5003 482 (set (reg:SI 2439)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3832 -1
     (nil))

(insn 5003 5002 5004 482 (set (reg:SI 2441)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC368") [flags 0x82]  <var_decl 0x4041f180 *.LC368>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1169 [0x491])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1169 [0x491])
            ] 29)) src/switch_core_media.c:3832 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC368") [flags 0x82]  <var_decl 0x4041f180 *.LC368>)
        (nil)))

(insn 5004 5003 5005 482 (set (reg:SI 2440)
        (reg:SI 2441)) src/switch_core_media.c:3832 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC368") [flags 0x82]  <var_decl 0x4041f180 *.LC368>)
        (nil)))

(insn 5005 5004 5006 482 (set (reg:SI 2442)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3832 -1
     (nil))

(insn 5006 5005 5007 482 (set (reg:SI 0 r0)
        (reg:SI 2439)) src/switch_core_media.c:3832 -1
     (nil))

(insn 5007 5006 5008 482 (set (reg:SI 1 r1)
        (reg:SI 2440)) src/switch_core_media.c:3832 -1
     (nil))

(insn 5008 5007 5009 482 (set (reg:SI 2 r2)
        (reg:SI 2442)) src/switch_core_media.c:3832 -1
     (nil))

(insn 5009 5008 5010 482 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3832 -1
     (nil))

(call_insn 5010 5009 5011 482 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3832 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 5011 5010 5012 482 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3833 -1
     (nil))

(call_insn 5012 5011 5013 482 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_core_media_check_video_codecs") [flags 0x1]  <function_decl 0x40945a80 switch_core_media_check_video_codecs>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3833 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 5013 5012 5014 482 (set (reg:SI 2443)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3834 -1
     (nil))

(insn 5014 5013 5015 482 (set (reg:SI 2445)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1170 [0x492])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1170 [0x492])
            ] 29)) src/switch_core_media.c:3834 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 5015 5014 5016 482 (set (reg:SI 2444)
        (reg:SI 2445)) src/switch_core_media.c:3834 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC144") [flags 0x82]  <var_decl 0x42107960 *.LC144>)
        (nil)))

(insn 5016 5015 5017 482 (set (reg:SI 2446)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3834 -1
     (nil))

(insn 5017 5016 5018 482 (set (reg:SI 2448)
        (const_int 1856 [0x740])) src/switch_core_media.c:3834 -1
     (nil))

(insn 5018 5017 5019 482 (set (reg:SI 2449)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2446))) src/switch_core_media.c:3834 -1
     (nil))

(insn 5019 5018 5020 482 (set (reg/f:SI 2450)
        (plus:SI (reg:SI 2449)
            (reg:SI 2448))) src/switch_core_media.c:3834 -1
     (nil))

(insn 5020 5019 5021 482 (set (reg/f:SI 2447)
        (mem/s/f:SI (reg/f:SI 2450) [2 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map+0 S4 A32])) src/switch_core_media.c:3834 -1
     (nil))

(insn 5021 5020 5022 482 (set (reg:SI 2451)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/f:SI 2447)
                    (const_int 57 [0x39])) [0 D.45286_1082->recv_pt+0 S1 A8]))) src/switch_core_media.c:3834 -1
     (nil))

(insn 5022 5021 5023 482 (set (reg:SI 0 r0)
        (reg:SI 2443)) src/switch_core_media.c:3834 -1
     (nil))

(insn 5023 5022 5024 482 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) src/switch_core_media.c:3834 -1
     (nil))

(insn 5024 5023 5025 482 (set (reg:SI 2 r2)
        (reg:SI 2444)) src/switch_core_media.c:3834 -1
     (nil))

(insn 5025 5024 5026 482 (set (reg:SI 3 r3)
        (reg:SI 2451)) src/switch_core_media.c:3834 -1
     (nil))

(call_insn 5026 5025 5027 482 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_snprintf") [flags 0x41]  <function_decl 0x40685000 switch_snprintf>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3834 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 5027 5026 5028 482 (set (reg:SI 2452)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3835 -1
     (nil))

(insn 5028 5027 5029 482 (set (reg:SI 2454)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC369") [flags 0x82]  <var_decl 0x4041f1e0 *.LC369>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1171 [0x493])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1171 [0x493])
            ] 29)) src/switch_core_media.c:3835 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC369") [flags 0x82]  <var_decl 0x4041f1e0 *.LC369>)
        (nil)))

(insn 5029 5028 5030 482 (set (reg:SI 2453)
        (reg:SI 2454)) src/switch_core_media.c:3835 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC369") [flags 0x82]  <var_decl 0x4041f1e0 *.LC369>)
        (nil)))

(insn 5030 5029 5031 482 (set (reg:SI 2455)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3835 -1
     (nil))

(insn 5031 5030 5032 482 (set (reg:SI 0 r0)
        (reg:SI 2452)) src/switch_core_media.c:3835 -1
     (nil))

(insn 5032 5031 5033 482 (set (reg:SI 1 r1)
        (reg:SI 2453)) src/switch_core_media.c:3835 -1
     (nil))

(insn 5033 5032 5034 482 (set (reg:SI 2 r2)
        (reg:SI 2455)) src/switch_core_media.c:3835 -1
     (nil))

(insn 5034 5033 5035 482 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3835 -1
     (nil))

(call_insn 5035 5034 5036 482 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3835 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 5036 5035 5037 482 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ match ])
            (const_int 0 [0]))) src/switch_core_media.c:3836 -1
     (nil))

(jump_insn 5037 5036 5038 482 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5578)
            (pc))) src/switch_core_media.c:3836 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5578)

(note 5038 5037 5575 483 [bb 483] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5575 5038 5576 483 (set (pc)
        (label_ref 5039)) -1
     (nil)
 -> 5039)

(barrier 5576 5575 5578)

(code_label 5578 5576 5577 484 1567 "" [1 uses])

(note 5577 5578 120 484 [bb 484] NOTE_INSN_BASIC_BLOCK)

(insn 120 5577 5039 484 (set (reg/v:SI 142 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3836 -1
     (nil))

(code_label 5039 120 5040 485 1504 "" [1 uses])

(note 5040 5039 5041 485 [bb 485] NOTE_INSN_BASIC_BLOCK)

(debug_insn 5041 5040 5042 485 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(debug_insn 5042 5041 5043 485 (var_location:SI D#74 (plus:SI (reg/v/f:SI 233 [ smh ])
        (const_int 13020 [0x32dc]))) src/switch_core_media.c:3838 -1
     (nil))

(debug_insn 5043 5042 5044 485 (var_location:SI codec (debug_expr:SI D#74)) src/switch_core_media.c:3838 -1
     (nil))

(insn 5044 5043 5045 485 (set (reg:SI 2456)
        (const_int 13020 [0x32dc])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5045 5044 5046 485 (set (reg:SI 2457)
        (const_int 16 [0x10])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5046 5045 5047 485 (set (reg:SI 2458)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2456))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5047 5046 5048 485 (set (reg/f:SI 2459)
        (plus:SI (reg:SI 2458)
            (reg:SI 2457))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5048 5047 5049 485 (set (reg:SI 2461)
        (mem/s:SI (reg/f:SI 2459) [4 MEM[(struct switch_codec_t *)smh_186 + 13020B].flags+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5049 5048 5050 485 (set (reg:SI 2460)
        (and:SI (reg:SI 2461)
            (const_int 256 [0x100]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5050 5049 5051 485 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2460)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 5051 5050 5052 485 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5081)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5081)

(note 5052 5051 5053 486 [bb 486] NOTE_INSN_BASIC_BLOCK)

(insn 5053 5052 5054 486 (set (reg:SI 2462)
        (const_int 13020 [0x32dc])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5054 5053 5055 486 (set (reg:SI 2463)
        (const_int 32 [0x20])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5055 5054 5056 486 (set (reg:SI 2464)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2462))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5056 5055 5057 486 (set (reg/f:SI 2465)
        (plus:SI (reg:SI 2464)
            (reg:SI 2463))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5057 5056 5058 486 (set (reg:SI 2466)
        (mem/s/f:SI (reg/f:SI 2465) [2 MEM[(struct switch_codec_t *)smh_186 + 13020B].mutex+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5058 5057 5059 486 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2466)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 5059 5058 5060 486 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5081)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 5081)

(note 5060 5059 5061 487 [bb 487] NOTE_INSN_BASIC_BLOCK)

(insn 5061 5060 5062 487 (set (reg:SI 2467)
        (const_int 13020 [0x32dc])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5062 5061 5063 487 (set (reg:SI 2468)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2467)) [2 MEM[(struct switch_codec_t *)smh_186 + 13020B].codec_interface+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5063 5062 5064 487 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2468)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 5064 5063 5065 487 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5081)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 5081)

(note 5065 5064 5066 488 [bb 488] NOTE_INSN_BASIC_BLOCK)

(insn 5066 5065 5067 488 (set (reg:SI 2469)
        (const_int 13020 [0x32dc])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5067 5066 5068 488 (set (reg:SI 2470)
        (const_int 4 [0x4])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5068 5067 5069 488 (set (reg:SI 2471)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2469))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5069 5068 5070 488 (set (reg/f:SI 2472)
        (plus:SI (reg:SI 2471)
            (reg:SI 2470))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5070 5069 5071 488 (set (reg:SI 2473)
        (mem/s/f:SI (reg/f:SI 2472) [2 MEM[(struct switch_codec_t *)smh_186 + 13020B].implementation+0 S4 A32])) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(insn 5071 5070 5072 488 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2473)
            (const_int 0 [0]))) ./src/include/switch_loadable_module.h:538 -1
     (nil))

(jump_insn 5072 5071 5073 488 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5081)
            (pc))) ./src/include/switch_loadable_module.h:538 -1
     (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil))
 -> 5081)

(note 5073 5072 5074 489 [bb 489] NOTE_INSN_BASIC_BLOCK)

(insn 5074 5073 5075 489 (set (reg:SI 2474)
        (const_int 11496 [0x2ce8])) src/switch_core_media.c:3839 -1
     (nil))

(insn 5075 5074 5076 489 (set (reg:SI 2475)
        (const_int 11408 [0x2c90])) src/switch_core_media.c:3839 -1
     (nil))

(insn 5076 5075 5077 489 (set (reg:SI 2476)
        (plus:SI (reg/v/f:SI 233 [ smh ])
            (reg:SI 2474))) src/switch_core_media.c:3839 -1
     (nil))

(insn 5077 5076 5078 489 (set (reg/f:SI 2477)
        (plus:SI (reg:SI 2476)
            (reg:SI 2475))) src/switch_core_media.c:3839 -1
     (nil))

(insn 5078 5077 5079 489 (set (reg:SI 2478)
        (const_int 1 [0x1])) src/switch_core_media.c:3839 -1
     (nil))

(insn 5079 5078 5080 489 (set (reg:QI 2479)
        (subreg:QI (reg:SI 2478) 0)) src/switch_core_media.c:3839 -1
     (nil))

(insn 5080 5079 5081 489 (set (mem/s:QI (reg/f:SI 2477) [0 MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].reset_codec+0 S1 A32])
        (reg:QI 2479)) src/switch_core_media.c:3839 -1
     (nil))

(code_label 5081 5080 5082 490 1505 "" [4 uses])

(note 5082 5081 5083 490 [bb 490] NOTE_INSN_BASIC_BLOCK)

(insn 5083 5082 5084 490 (set (reg:SI 0 r0)
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3842 -1
     (nil))

(insn 5084 5083 5085 490 (set (reg:SI 1 r1)
        (const_int 0 [0])) src/switch_core_media.c:3842 -1
     (nil))

(call_insn 5085 5084 5086 490 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_media_set_video_codec") [flags 0x1]  <function_decl 0x40945980 switch_core_media_set_video_codec>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3842 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 5086 5085 5087 490 (set (reg:SI 812 [ D.45316 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3842 -1
     (nil))

(insn 5087 5086 5088 490 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 812 [ D.45316 ])
            (const_int 0 [0]))) src/switch_core_media.c:3842 -1
     (nil))

(jump_insn 5088 5087 5089 490 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref:SI 5582)
            (pc))) src/switch_core_media.c:3842 211 {*arm_cond_branch}
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 5582)

(note 5089 5088 5090 491 [bb 491] NOTE_INSN_BASIC_BLOCK)

(insn 5090 5089 5091 491 (set (reg:SI 0 r0)
        (reg/v/f:SI 233 [ smh ])) src/switch_core_media.c:3843 -1
     (nil))

(insn 5091 5090 5092 491 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) src/switch_core_media.c:3843 -1
     (nil))

(insn 5092 5091 5093 491 (set (reg:SI 2 r2)
        (reg/v/f:SI 238 [ sdp ])) src/switch_core_media.c:3843 -1
     (nil))

(insn 5093 5092 5094 491 (set (reg:SI 3 r3)
        (reg/v/f:SI 813 [ m ])) src/switch_core_media.c:3843 -1
     (nil))

(call_insn 5094 5093 124 491 (parallel [
            (call (mem:SI (symbol_ref:SI ("check_ice") [flags 0x3]  <function_decl 0x414f3a00 check_ice>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3843 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 124 5094 5571 491 (set (reg/v:SI 211 [ nm_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3656 -1
     (nil))

(jump_insn 5571 124 5572 491 (set (pc)
        (label_ref 5095)) -1
     (nil)
 -> 5095)

(barrier 5572 5571 5574)

(code_label 5574 5572 5573 492 1566 "" [1 uses])

(note 5573 5574 125 492 [bb 492] NOTE_INSN_BASIC_BLOCK)

(insn 125 5573 5579 492 (set (reg/v:SI 211 [ nm_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3656 -1
     (nil))

(jump_insn 5579 125 5580 492 (set (pc)
        (label_ref 5095)) -1
     (nil)
 -> 5095)

(barrier 5580 5579 5582)

(code_label 5582 5580 5581 493 1568 "" [1 uses])

(note 5581 5582 123 493 [bb 493] NOTE_INSN_BASIC_BLOCK)

(insn 123 5581 5095 493 (set (reg/v:SI 211 [ nm_idx ])
        (const_int 0 [0])) src/switch_core_media.c:3656 -1
     (nil))

(code_label 5095 123 5096 494 1380 "" [13 uses])

(note 5096 5095 5097 494 [bb 494] NOTE_INSN_BASIC_BLOCK)

(debug_insn 5097 5096 5098 494 (var_location:SI nm_idx (reg/v:SI 211 [ nm_idx ])) -1
     (nil))

(debug_insn 5098 5097 5099 494 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 5099 5098 5100 494 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) -1
     (nil))

(debug_insn 5100 5099 5101 494 (var_location:SI got_audio (reg/v:SI 183 [ got_audio ])) -1
     (nil))

(debug_insn 5101 5100 5102 494 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) -1
     (nil))

(debug_insn 5102 5101 5103 494 (var_location:SI got_crypto (reg/v:SI 175 [ got_crypto ])) -1
     (nil))

(debug_insn 5103 5102 5104 494 (var_location:QI cng_pt (subreg:QI (reg/v:SI 149 [ cng_pt ]) 0)) -1
     (nil))

(debug_insn 5104 5103 5105 494 (var_location:QI best_te (subreg:QI (reg/v:SI 145 [ best_te ]) 0)) -1
     (nil))

(debug_insn 5105 5104 5106 494 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(insn 5106 5105 5107 494 (set (reg/v/f:SI 813 [ m ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 4 [0x4])) [2 m_1764->m_next+0 S4 A32])) src/switch_core_media.c:3091 -1
     (nil))

(debug_insn 5107 5106 5108 494 (var_location:SI m (reg/v/f:SI 813 [ m ])) src/switch_core_media.c:3091 -1
     (nil))

(debug_insn 5108 5107 5109 494 (var_location:SI nm_idx (reg/v:SI 211 [ nm_idx ])) -1
     (nil))

(debug_insn 5109 5108 5110 494 (var_location:SI m_idx (reg/v:SI 202 [ m_idx ])) -1
     (nil))

(debug_insn 5110 5109 5111 494 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) -1
     (nil))

(debug_insn 5111 5110 5112 494 (var_location:SI got_webrtc (reg/v:SI 188 [ got_webrtc ])) -1
     (nil))

(debug_insn 5112 5111 5113 494 (var_location:SI got_udptl (reg/v:SI 1011 [ got_udptl ])) -1
     (nil))

(debug_insn 5113 5112 5114 494 (var_location:SI got_savp (reg/v:SI 445 [ got_savp ])) -1
     (nil))

(debug_insn 5114 5113 5115 494 (var_location:SI got_video_savp (clobber (const_int 0 [0]))) -1
     (nil))

(debug_insn 5115 5114 5116 494 (var_location:SI got_video_avp (clobber (const_int 0 [0]))) -1
     (nil))

(debug_insn 5116 5115 5117 494 (var_location:SI got_avp (reg/v:SI 544 [ got_avp ])) -1
     (nil))

(debug_insn 5117 5116 5118 494 (var_location:SI got_audio (reg/v:SI 183 [ got_audio ])) -1
     (nil))

(debug_insn 5118 5117 5119 494 (var_location:SI got_video_crypto (reg/v:SI 179 [ got_video_crypto ])) -1
     (nil))

(debug_insn 5119 5118 5120 494 (var_location:SI got_crypto (reg/v:SI 175 [ got_crypto ])) -1
     (nil))

(debug_insn 5120 5119 5121 494 (var_location:SI m (reg/v/f:SI 813 [ m ])) -1
     (nil))

(debug_insn 5121 5120 5122 494 (var_location:QI cng_pt (subreg:QI (reg/v:SI 149 [ cng_pt ]) 0)) -1
     (nil))

(debug_insn 5122 5121 5123 494 (var_location:QI best_te (subreg:QI (reg/v:SI 145 [ best_te ]) 0)) -1
     (nil))

(debug_insn 5123 5122 5125 494 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(insn 5125 5123 5126 494 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 813 [ m ])
            (const_int 0 [0]))) src/switch_core_media.c:3091 -1
     (nil))

(jump_insn 5126 5125 5460 494 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5124)
            (pc))) src/switch_core_media.c:3091 -1
     (expr_list:REG_BR_PROB (const_int 9800 [0x2648])
        (nil))
 -> 5124)

(note 5460 5126 5461 495 [bb 495] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5461 5460 5462 495 (set (pc)
        (label_ref 5127)) -1
     (nil)
 -> 5127)

(barrier 5462 5461 5464)

(code_label 5464 5462 5463 496 1539 "" [1 uses])

(note 5463 5464 138 496 [bb 496] NOTE_INSN_BASIC_BLOCK)

(insn 138 5463 139 496 (set (reg/v:SI 149 [ cng_pt ])
        (const_int 0 [0])) src/switch_core_media.c:2893 -1
     (nil))

(insn 139 138 5465 496 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:2892 -1
     (nil))

(jump_insn 5465 139 5466 496 (set (pc)
        (label_ref 5127)) -1
     (nil)
 -> 5127)

(barrier 5466 5465 5468)

(code_label 5468 5466 5467 497 1540 "" [1 uses])

(note 5467 5468 126 497 [bb 497] NOTE_INSN_BASIC_BLOCK)

(insn 126 5467 5470 497 (set (reg/v:SI 142 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3127 -1
     (nil))

(jump_insn 5470 126 5471 497 (set (pc)
        (label_ref 5127)) -1
     (nil)
 -> 5127)

(barrier 5471 5470 5473)

(code_label 5473 5471 5472 498 1541 "" [1 uses])

(note 5472 5473 135 498 [bb 498] NOTE_INSN_BASIC_BLOCK)

(insn 135 5472 5474 498 (set (reg/v:SI 142 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3230 -1
     (nil))

(jump_insn 5474 135 5475 498 (set (pc)
        (label_ref 5127)) -1
     (nil)
 -> 5127)

(barrier 5475 5474 5477)

(code_label 5477 5475 5476 499 1542 "" [1 uses])

(note 5476 5477 129 499 [bb 499] NOTE_INSN_BASIC_BLOCK)

(insn 129 5476 5127 499 (set (reg/v:SI 142 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3230 -1
     (nil))

(code_label 5127 129 5128 500 1371 ("done") [13 uses])

(note 5128 5127 5129 500 [bb 500] NOTE_INSN_BASIC_BLOCK)

(debug_insn 5129 5128 5130 500 (var_location:QI match (subreg:QI (reg/v:SI 142 [ match ]) 0)) -1
     (nil))

(insn 5130 5129 5131 500 (set (reg:SI 0 r0)
        (reg/v/f:SI 237 [ parser ])) src/switch_core_media.c:3854 -1
     (nil))

(call_insn 5131 5130 5132 500 (parallel [
            (call (mem:SI (symbol_ref:SI ("sdp_parser_free") [flags 0x41]  <function_decl 0x4144df80 sdp_parser_free>) [0 S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3854 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 5132 5131 5133 500 (set (reg:SI 2480)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3857 -1
     (nil))

(insn 5133 5132 5134 500 (set (reg/f:SI 814 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2480)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3857 -1
     (nil))

(insn 5134 5133 5135 500 (set (reg:QI 2481)
        (subreg/s/u:QI (reg/v:SI 149 [ cng_pt ]) 0)) src/switch_core_media.c:3857 -1
     (nil))

(insn 5135 5134 5374 500 (set (mem/s:QI (plus:SI (reg/f:SI 814 [ D.44471 ])
                (const_int 140 [0x8c])) [0 D.44471_1094->cng_pt+0 S1 A32])
        (reg:QI 2481)) src/switch_core_media.c:3857 -1
     (nil))

(jump_insn 5374 5135 5375 500 (set (pc)
        (label_ref 5136)) src/switch_core_media.c:3859 -1
     (nil)
 -> 5136)

(barrier 5375 5374 5377)

(code_label 5377 5375 5376 501 1518 "" [1 uses])

(note 5376 5377 140 501 [bb 501] NOTE_INSN_BASIC_BLOCK)

(insn 140 5376 5378 501 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:2925 -1
     (nil))

(jump_insn 5378 140 5379 501 (set (pc)
        (label_ref 5136)) -1
     (nil)
 -> 5136)

(barrier 5379 5378 5381)

(code_label 5381 5379 5380 502 1519 "" [1 uses])

(note 5380 5381 141 502 [bb 502] NOTE_INSN_BASIC_BLOCK)

(insn 141 5380 5136 502 (set (reg/v:SI 142 [ match ])
        (const_int 0 [0])) src/switch_core_media.c:2935 -1
     (nil))

(code_label 5136 141 5137 503 1331 "" [3 uses])

(note 5137 5136 5138 503 [bb 503] NOTE_INSN_BASIC_BLOCK)

(insn 5138 5137 5139 503 (set (reg:SI 1024 [ <retval> ])
        (reg/v:SI 142 [ match ])) src/switch_core_media.c:3859 -1
     (nil))

(jump_insn 5139 5138 5140 503 (set (pc)
        (label_ref 5368)) src/switch_core_media.c:3859 -1
     (nil)
 -> 5368)

(barrier 5140 5139 5141)

(code_label 5141 5140 5142 504 1335 "" [2 uses])

(note 5142 5141 5143 504 [bb 504] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5143 5142 5144 504 (set (pc)
        (label_ref 375)) src/switch_core_media.c:3859 -1
     (nil)
 -> 375)

(barrier 5144 5143 5145)

(code_label 5145 5144 5146 505 1346 "" [2 uses])

(note 5146 5145 5147 505 [bb 505] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5147 5146 5148 505 (set (pc)
        (label_ref 728)) src/switch_core_media.c:3859 -1
     (nil)
 -> 728)

(barrier 5148 5147 5149)

(code_label 5149 5148 5150 506 1350 "" [1 uses])

(note 5150 5149 5151 506 [bb 506] NOTE_INSN_BASIC_BLOCK)

(insn 5151 5150 5152 506 (set (reg:SI 2484)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1172 [0x494])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1172 [0x494])
            ] 29)) src/switch_core_media.c:3010 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
        (nil)))

(insn 5152 5151 5153 506 (set (reg:SI 2483)
        (reg:SI 2484)) src/switch_core_media.c:3010 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC309") [flags 0x82]  <var_decl 0x40406c00 *.LC309>)
        (nil)))

(insn 5153 5152 5154 506 (set (reg:SI 0 r0)
        (reg/f:SI 287 [ D.44590 ])) src/switch_core_media.c:3010 -1
     (nil))

(insn 5154 5153 5155 506 (set (reg:SI 1 r1)
        (reg:SI 2483)) src/switch_core_media.c:3010 -1
     (nil))

(call_insn/i 5155 5154 5156 506 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcasecmp") [flags 0x41]  <function_decl 0x40442200 strcasecmp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3010 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 5156 5155 5158 506 (set (reg:SI 288 [ D.44594 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3010 -1
     (nil))

(insn 5158 5156 5159 506 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 288 [ D.44594 ])
            (const_int 0 [0]))) src/switch_core_media.c:3010 -1
     (nil))

(jump_insn 5159 5158 5163 506 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5157)
            (pc))) src/switch_core_media.c:3010 -1
     (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil))
 -> 5157)

(note 5163 5159 5161 507 [bb 507] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5161 5163 5162 507 (set (pc)
        (label_ref 5160)) src/switch_core_media.c:3010 -1
     (nil)
 -> 5160)

(barrier 5162 5161 5164)

(code_label 5164 5162 5165 508 1361 "" [2 uses])

(note 5165 5164 5166 508 [bb 508] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5166 5165 5167 508 (set (pc)
        (label_ref 1092)) src/switch_core_media.c:3010 -1
     (nil)
 -> 1092)

(barrier 5167 5166 5168)

(code_label 5168 5167 5169 509 1358 "" [4 uses])

(note 5169 5168 5170 509 [bb 509] NOTE_INSN_BASIC_BLOCK)

(debug_insn 5170 5169 5172 509 (var_location:SI reneg (const_int 1 [0x1])) -1
     (nil))

(jump_insn 5172 5170 5173 509 (set (pc)
        (label_ref 5171)) src/switch_core_media.c:3010 -1
     (nil)
 -> 5171)

(barrier 5173 5172 5174)

(code_label 5174 5173 5175 510 1387 "" [5 uses])

(note 5175 5174 5176 510 [bb 510] NOTE_INSN_BASIC_BLOCK)

(debug_insn 5176 5175 137 510 (var_location:SI pass (const_int 0 [0])) -1
     (nil))

(insn 137 5176 5177 510 (set (reg/v:SI 142 [ match ])
        (const_int 1 [0x1])) src/switch_core_media.c:3230 -1
     (nil))

(jump_insn 5177 137 5178 510 (set (pc)
        (label_ref 5127)) src/switch_core_media.c:3010 -1
     (nil)
 -> 5127)

(barrier 5178 5177 5179)

(code_label 5179 5178 5180 511 1402 "" [1 uses])

(note 5180 5179 5182 511 [bb 511] NOTE_INSN_BASIC_BLOCK)

(insn 5182 5180 5183 511 (set (reg:SI 2486)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3259 -1
     (nil))

(insn 5183 5182 5184 511 (set (reg/f:SI 2485)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2486)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3259 -1
     (nil))

(insn 5184 5183 5185 511 (set (reg:SI 2488)
        (mem/s:SI (plus:SI (reg/f:SI 2485)
                (const_int 16 [0x10])) [28 D.44471_533->ndlb+0 S4 A32])) src/switch_core_media.c:3259 -1
     (nil))

(insn 5185 5184 5186 511 (set (reg:SI 2487)
        (and:SI (reg:SI 2488)
            (const_int 4 [0x4]))) src/switch_core_media.c:3259 -1
     (nil))

(insn 5186 5185 5187 511 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2487)
            (const_int 0 [0]))) src/switch_core_media.c:3259 -1
     (nil))

(jump_insn 5187 5186 5190 511 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5181)
            (pc))) src/switch_core_media.c:3259 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5181)

(note 5190 5187 5188 512 [bb 512] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5188 5190 5189 512 (set (pc)
        (label_ref 2367)) src/switch_core_media.c:3259 -1
     (nil)
 -> 2367)

(barrier 5189 5188 5191)

(code_label 5191 5189 5192 513 1403 "" [3 uses])

(note 5192 5191 5194 513 [bb 513] NOTE_INSN_BASIC_BLOCK)

(insn 5194 5192 5195 513 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 188 [ got_webrtc ])
            (const_int 0 [0]))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5195 5194 5196 513 (set (reg:SI 2490)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5196 5195 5197 513 (set (reg:QI 2489)
        (subreg:QI (reg:SI 2490) 0)) src/switch_core_media.c:3261 -1
     (nil))

(insn 5197 5196 5198 513 (set (reg:SI 2492)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 28 [0x1c])) [44 m_1764->m_proto+0 S4 A32])) src/switch_core_media.c:3261 -1
     (nil))

(insn 5198 5197 5199 513 (set (reg:SI 2494)
        (const_int 257 [0x101])) src/switch_core_media.c:3261 -1
     (nil))

(insn 5199 5198 5200 513 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2492)
            (reg:SI 2494))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5200 5199 5201 513 (set (reg:SI 2493)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5201 5200 5202 513 (set (reg:QI 2491)
        (subreg:QI (reg:SI 2493) 0)) src/switch_core_media.c:3261 -1
     (nil))

(insn 5202 5201 5203 513 (set (reg:SI 2495)
        (and:SI (subreg:SI (reg:QI 2489) 0)
            (subreg:SI (reg:QI 2491) 0))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5203 5202 5204 513 (set (reg:QI 2496)
        (subreg:QI (reg:SI 2495) 0)) src/switch_core_media.c:3261 -1
     (nil))

(insn 5204 5203 5205 513 (set (reg:SI 2497)
        (zero_extend:SI (reg:QI 2496))) src/switch_core_media.c:3261 -1
     (nil))

(insn 5205 5204 5206 513 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2497)
            (const_int 0 [0]))) src/switch_core_media.c:3261 -1
     (nil))

(jump_insn 5206 5205 5207 513 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5193)
            (pc))) src/switch_core_media.c:3261 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 5193)

(note 5207 5206 5208 514 [bb 514] NOTE_INSN_BASIC_BLOCK)

(insn 5208 5207 5209 514 (set (reg/f:SI 457 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 440 [ attr ])
                (const_int 12 [0xc])) [2 attr_1599->a_value+0 S4 A32])) src/switch_core_media.c:3261 -1
     (nil))

(jump_insn 5209 5208 5210 514 (set (pc)
        (label_ref 2367)) src/switch_core_media.c:3261 -1
     (nil)
 -> 2367)

(barrier 5210 5209 5494)

(code_label 5494 5210 5493 515 1547 "" [1 uses])

(note 5493 5494 143 515 [bb 515] NOTE_INSN_BASIC_BLOCK)

(insn 143 5493 5211 515 (set (reg/v:SI 196 [ codec_ms ])
        (reg/v:SI 162 [ maxptime ])) src/switch_core_media.c:3334 -1
     (nil))

(code_label 5211 143 5212 516 1416 "" [1 uses])

(note 5212 5211 5213 516 [bb 516] NOTE_INSN_BASIC_BLOCK)

(debug_insn 5213 5212 5214 516 (var_location:SI codec_ms (reg/v:SI 196 [ codec_ms ])) -1
     (nil))

(jump_insn 5214 5213 5215 516 (set (pc)
        (label_ref 2653)) src/switch_core_media.c:3261 -1
     (nil)
 -> 2653)

(barrier 5215 5214 5216)

(code_label 5216 5215 5217 517 1421 "" [1 uses])

(note 5217 5216 5218 517 [bb 517] NOTE_INSN_BASIC_BLOCK)

(insn 5218 5217 5219 517 (set (reg:SI 2498)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 8 [0x8])) [2 map_1728->rm_encoding+0 S4 A32])) src/switch_core_media.c:3361 -1
     (nil))

(insn 5219 5218 5220 517 (set (reg:SI 2499)
        (mem/s:SI (plus:SI (reg/v/f:SI 283 [ map ])
                (const_int 12 [0xc])) [26 map_1728->rm_rate+0 S4 A32])) src/switch_core_media.c:3361 -1
     (nil))

(insn 5220 5219 5221 517 (set (reg:SI 2500)
        (plus:SI (reg/f:SI 129 virtual-stack-vars)
            (const_int -96 [0xffffffffffffffa0]))) src/switch_core_media.c:3361 -1
     (nil))

(insn 5221 5220 5222 517 (set (reg:SI 0 r0)
        (reg:SI 2498)) src/switch_core_media.c:3361 -1
     (nil))

(insn 5222 5221 5223 517 (set (reg:SI 1 r1)
        (reg/f:SI 497 [ D.44893 ])) src/switch_core_media.c:3361 -1
     (nil))

(insn 5223 5222 5224 517 (set (reg:SI 2 r2)
        (reg:SI 2499)) src/switch_core_media.c:3361 -1
     (nil))

(insn 5224 5223 5225 517 (set (reg:SI 3 r3)
        (reg:SI 2500)) src/switch_core_media.c:3361 -1
     (nil))

(call_insn 5225 5224 5226 517 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_core_codec_parse_fmtp") [flags 0x41]  <function_decl 0x40716700 switch_core_codec_parse_fmtp>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3361 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 5226 5225 5228 517 (set (reg:SI 503 [ D.44905 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3361 -1
     (nil))

(insn 5228 5226 5229 517 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 503 [ D.44905 ])
            (const_int 0 [0]))) src/switch_core_media.c:3361 -1
     (nil))

(jump_insn 5229 5228 5232 517 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5227)
            (pc))) src/switch_core_media.c:3361 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5227)

(note 5232 5229 70 518 [bb 518] NOTE_INSN_BASIC_BLOCK)

(insn 70 5232 5230 518 (set (reg/v:SI 201 [ fmtp_remote_codec_rate ])
        (const_int 0 [0])) src/switch_core_media.c:3349 -1
     (nil))

(jump_insn 5230 70 5231 518 (set (pc)
        (label_ref 2761)) src/switch_core_media.c:3361 -1
     (nil)
 -> 2761)

(barrier 5231 5230 5233)

(code_label 5233 5231 5234 519 1428 "" [1 uses])

(note 5234 5233 5235 519 [bb 519] NOTE_INSN_BASIC_BLOCK)

(insn 5235 5234 5236 519 (set (reg:SI 2502)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3386 -1
     (nil))

(insn 5236 5235 5237 519 (set (reg/f:SI 2501)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2502)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3386 -1
     (nil))

(insn 5237 5236 5238 519 (set (reg:SI 2504)
        (mem/s:SI (plus:SI (reg/f:SI 2501)
                (const_int 16 [0x10])) [28 D.44471_644->ndlb+0 S4 A32])) src/switch_core_media.c:3386 -1
     (nil))

(insn 5238 5237 5239 519 (set (reg:SI 2503)
        (and:SI (reg:SI 2504)
            (const_int 1 [0x1]))) src/switch_core_media.c:3386 -1
     (nil))

(insn 5239 5238 5240 519 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2503)
            (const_int 0 [0]))) src/switch_core_media.c:3386 -1
     (nil))

(jump_insn 5240 5239 5243 519 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 2850)
            (pc))) src/switch_core_media.c:3386 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 2850)

(note 5243 5240 5241 520 [bb 520] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5241 5243 5242 520 (set (pc)
        (label_ref 2872)) src/switch_core_media.c:3386 -1
     (nil)
 -> 2872)

(barrier 5242 5241 5244)

(code_label 5244 5242 5245 521 1462 "" [1 uses])

(note 5245 5244 5246 521 [bb 521] NOTE_INSN_BASIC_BLOCK)

(insn 5246 5245 5247 521 (set (reg:SI 2506)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC370") [flags 0x82]  <var_decl 0x4041f240 *.LC370>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1173 [0x495])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1173 [0x495])
            ] 29)) src/switch_core_media.c:3554 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC370") [flags 0x82]  <var_decl 0x4041f240 *.LC370>)
        (nil)))

(insn 5247 5246 5248 521 (set (reg:SI 2505)
        (reg:SI 2506)) src/switch_core_media.c:3554 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC370") [flags 0x82]  <var_decl 0x4041f240 *.LC370>)
        (nil)))

(insn 5248 5247 5249 521 (set (reg:SI 0 r0)
        (reg:SI 2505)) src/switch_core_media.c:3554 -1
     (nil))

(insn 5249 5248 5250 521 (set (reg:SI 1 r1)
        (reg/f:SI 628 [ D.45079 ])) src/switch_core_media.c:3554 -1
     (nil))

(call_insn 5250 5249 5251 521 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_stristr") [flags 0x41]  <function_decl 0x40815080 switch_stristr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3554 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 5251 5250 5253 521 (set (reg/f:SI 629 [ D.45082 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3554 -1
     (nil))

(insn 5253 5251 5254 521 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 629 [ D.45082 ])
            (const_int 0 [0]))) src/switch_core_media.c:3554 -1
     (nil))

(jump_insn 5254 5253 5257 521 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5252)
            (pc))) src/switch_core_media.c:3554 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil))
 -> 5252)

(note 5257 5254 5255 522 [bb 522] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5255 5257 5256 522 (set (pc)
        (label_ref 3646)) src/switch_core_media.c:3554 -1
     (nil)
 -> 3646)

(barrier 5256 5255 5258)

(code_label 5258 5256 5259 523 1471 "" [3 uses])

(note 5259 5258 5260 523 [bb 523] NOTE_INSN_BASIC_BLOCK)

(insn 5260 5259 5261 523 (set (reg:SI 2508)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1174 [0x496])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1174 [0x496])
            ] 29)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 5261 5260 5262 523 (set (reg:SI 2507)
        (reg:SI 2508)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82]  <var_decl 0x41d4acc0 *.LC11>)
        (nil)))

(insn 5262 5261 5263 523 (set (reg:SI 2510)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1175 [0x497])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1175 [0x497])
            ] 29)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 5263 5262 5264 523 (set (reg/f:SI 2509)
        (reg:SI 2510)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 5264 5263 5265 523 (set (reg:SI 2512)
        (plus:SI (reg/f:SI 2509)
            (const_int 1792 [0x700]))) src/switch_core_media.c:3639 -1
     (nil))

(insn 5265 5264 5266 523 (set (reg:SI 2511)
        (plus:SI (reg:SI 2512)
            (const_int 8 [0x8]))) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2509)
            (const_int 1800 [0x708]))
        (nil)))

(insn 5266 5265 5267 523 (set (reg:SI 2513)
        (const_int 3639 [0xe37])) src/switch_core_media.c:3639 -1
     (nil))

(insn 5267 5266 5268 523 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 1025 [ session ])) src/switch_core_media.c:3639 -1
     (nil))

(insn 5268 5267 5269 523 (set (reg:SI 2514)
        (const_int 7 [0x7])) src/switch_core_media.c:3639 -1
     (nil))

(insn 5269 5268 5270 523 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2514)) src/switch_core_media.c:3639 -1
     (nil))

(insn 5270 5269 5271 523 (set (reg:SI 2516)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC371") [flags 0x82]  <var_decl 0x4041f2a0 *.LC371>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1176 [0x498])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1176 [0x498])
            ] 29)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC371") [flags 0x82]  <var_decl 0x4041f2a0 *.LC371>)
        (nil)))

(insn 5271 5270 5272 523 (set (reg/f:SI 2515)
        (reg:SI 2516)) src/switch_core_media.c:3639 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC371") [flags 0x82]  <var_decl 0x4041f2a0 *.LC371>)
        (nil)))

(insn 5272 5271 5273 523 (set (mem:SI (plus:SI (reg/f:SI 131 virtual-outgoing-args)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 2515)) src/switch_core_media.c:3639 -1
     (nil))

(insn 5273 5272 5274 523 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) src/switch_core_media.c:3639 -1
     (nil))

(insn 5274 5273 5275 523 (set (reg:SI 1 r1)
        (reg:SI 2507)) src/switch_core_media.c:3639 -1
     (nil))

(insn 5275 5274 5276 523 (set (reg:SI 2 r2)
        (reg:SI 2511)) src/switch_core_media.c:3639 -1
     (nil))

(insn 5276 5275 5277 523 (set (reg:SI 3 r3)
        (reg:SI 2513)) src/switch_core_media.c:3639 -1
     (nil))

(call_insn 5277 5276 5278 523 (parallel [
            (call (mem:SI (symbol_ref:SI ("switch_log_printf") [flags 0x41]  <function_decl 0x4075a380 switch_log_printf>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3639 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 5278 5277 5279 523 (set (reg:SI 2517)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 1025 [ session ])
                (const_int 24 [0x18])) [2 session_161(D)->channel+0 S4 A32])) src/switch_core_media.c:3640 -1
     (nil))

(insn 5279 5278 5280 523 (set (reg:SI 2519)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1177 [0x499])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1177 [0x499])
            ] 29)) src/switch_core_media.c:3640 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 5280 5279 5281 523 (set (reg:SI 2518)
        (reg:SI 2519)) src/switch_core_media.c:3640 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC352") [flags 0x82]  <var_decl 0x404189c0 *.LC352>)
        (nil)))

(insn 5281 5280 5282 523 (set (reg:SI 2521)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC372") [flags 0x82]  <var_decl 0x4041f300 *.LC372>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1178 [0x49a])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1178 [0x49a])
            ] 29)) src/switch_core_media.c:3640 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC372") [flags 0x82]  <var_decl 0x4041f300 *.LC372>)
        (nil)))

(insn 5282 5281 5283 523 (set (reg:SI 2520)
        (reg:SI 2521)) src/switch_core_media.c:3640 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC372") [flags 0x82]  <var_decl 0x4041f300 *.LC372>)
        (nil)))

(insn 5283 5282 5284 523 (set (reg:SI 0 r0)
        (reg:SI 2517)) src/switch_core_media.c:3640 -1
     (nil))

(insn 5284 5283 5285 523 (set (reg:SI 1 r1)
        (reg:SI 2518)) src/switch_core_media.c:3640 -1
     (nil))

(insn 5285 5284 5286 523 (set (reg:SI 2 r2)
        (reg:SI 2520)) src/switch_core_media.c:3640 -1
     (nil))

(insn 5286 5285 5287 523 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) src/switch_core_media.c:3640 -1
     (nil))

(call_insn 5287 5286 5288 523 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_channel_set_variable_var_check") [flags 0x41]  <function_decl 0x4083db00 switch_channel_set_variable_var_check>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3640 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 5288 5287 5289 523 (set (reg:SI 2522)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3641 -1
     (nil))

(insn 5289 5288 5290 523 (set (reg/f:SI 686 [ D.44471 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2522)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3641 -1
     (nil))

(insn 5290 5289 5291 523 (set (reg:SI 2523)
        (const_int 1 [0x1])) src/switch_core_media.c:3641 -1
     (nil))

(insn 5291 5290 5292 523 (set (mem/s:SI (plus:SI (reg/f:SI 686 [ D.44471 ])
                (const_int 136 [0x88])) [30 D.44471_861->dtmf_type+0 S4 A32])
        (reg:SI 2523)) src/switch_core_media.c:3641 -1
     (nil))

(insn 5292 5291 5293 523 (set (reg:SI 2524)
        (const_int 0 [0])) src/switch_core_media.c:3642 -1
     (nil))

(insn 5293 5292 5294 523 (set (reg:QI 2525)
        (subreg:QI (reg:SI 2524) 0)) src/switch_core_media.c:3642 -1
     (nil))

(insn 5294 5293 5295 523 (set (mem/s:QI (plus:SI (reg/f:SI 686 [ D.44471 ])
                (const_int 120 [0x78])) [0 D.44471_861->te+0 S1 A32])
        (reg:QI 2525)) src/switch_core_media.c:3642 -1
     (nil))

(insn 5295 5294 5296 523 (set (reg:SI 2526)
        (const_int 0 [0])) src/switch_core_media.c:3642 -1
     (nil))

(insn 5296 5295 5297 523 (set (reg:QI 2527)
        (subreg:QI (reg:SI 2526) 0)) src/switch_core_media.c:3642 -1
     (nil))

(insn 5297 5296 5298 523 (set (mem/s:QI (plus:SI (reg/f:SI 686 [ D.44471 ])
                (const_int 121 [0x79])) [0 D.44471_861->recv_te+0 S1 A8])
        (reg:QI 2527)) src/switch_core_media.c:3642 -1
     (nil))

(debug_insn 5298 5297 5299 523 (var_location:QI D#12 (mem/s/j:QI (plus:SI (reg/f:SI 686 [ D.44471 ])
            (const_int 121 [0x79])) [0 D.44471_861->recv_te+0 S1 A8])) src/switch_core_media.c:3642 -1
     (nil))

(debug_insn 5299 5298 5300 523 (var_location:QI te (debug_expr:QI D#12)) src/switch_core_media.c:3642 -1
     (nil))

(jump_insn 5300 5299 5301 523 (set (pc)
        (label_ref 5095)) src/switch_core_media.c:3642 -1
     (nil)
 -> 5095)

(barrier 5301 5300 5302)

(code_label 5302 5301 5303 524 1483 "" [1 uses])

(note 5303 5302 5304 524 [bb 524] NOTE_INSN_BASIC_BLOCK)

(insn 5304 5303 5305 524 (set (reg:SI 2529)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (symbol_ref/v/f:SI ("*.LC373") [flags 0x82]  <var_decl 0x4042bf00 *.LC373>)
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1179 [0x49b])
                                        ] 21)
                                    (const_int 8 [0x8])))
                        ] 27))
                (const_int 1179 [0x49b])
            ] 29)) src/switch_core_media.c:3689 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC373") [flags 0x82]  <var_decl 0x4042bf00 *.LC373>)
        (nil)))

(insn 5305 5304 5306 524 (set (reg:SI 2528)
        (reg:SI 2529)) src/switch_core_media.c:3689 -1
     (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC373") [flags 0x82]  <var_decl 0x4042bf00 *.LC373>)
        (nil)))

(insn 5306 5305 5307 524 (set (reg:SI 0 r0)
        (reg:SI 2528)) src/switch_core_media.c:3689 -1
     (nil))

(insn 5307 5306 5308 524 (set (reg:SI 1 r1)
        (reg/f:SI 705 [ D.44619 ])) src/switch_core_media.c:3689 -1
     (nil))

(call_insn 5308 5307 5309 524 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("switch_stristr") [flags 0x41]  <function_decl 0x40815080 switch_stristr>) [0 S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) src/switch_core_media.c:3689 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 5309 5308 5311 524 (set (reg/f:SI 706 [ D.45160 ])
        (reg:SI 0 r0)) src/switch_core_media.c:3689 -1
     (nil))

(insn 5311 5309 5312 524 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 706 [ D.45160 ])
            (const_int 0 [0]))) src/switch_core_media.c:3689 -1
     (nil))

(jump_insn 5312 5311 5316 524 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5310)
            (pc))) src/switch_core_media.c:3689 -1
     (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil))
 -> 5310)

(note 5316 5312 5314 525 [bb 525] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5314 5316 5315 525 (set (pc)
        (label_ref 5313)) src/switch_core_media.c:3689 -1
     (nil)
 -> 5313)

(barrier 5315 5314 5317)

(code_label 5317 5315 5318 526 1485 "" [1 uses])

(note 5318 5317 5320 526 [bb 526] NOTE_INSN_BASIC_BLOCK)

(insn 5320 5318 5321 526 (set (reg:SI 2531)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3708 -1
     (nil))

(insn 5321 5320 5322 526 (set (reg/f:SI 2530)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2531)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3708 -1
     (nil))

(insn 5322 5321 5323 526 (set (reg:SI 2533)
        (mem/s:SI (plus:SI (reg/f:SI 2530)
                (const_int 16 [0x10])) [28 D.44471_964->ndlb+0 S4 A32])) src/switch_core_media.c:3708 -1
     (nil))

(insn 5323 5322 5324 526 (set (reg:SI 2532)
        (and:SI (reg:SI 2533)
            (const_int 4 [0x4]))) src/switch_core_media.c:3708 -1
     (nil))

(insn 5324 5323 5325 526 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2532)
            (const_int 0 [0]))) src/switch_core_media.c:3708 -1
     (nil))

(jump_insn 5325 5324 5328 526 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5319)
            (pc))) src/switch_core_media.c:3708 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 5319)

(note 5328 5325 5326 527 [bb 527] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5326 5328 5327 527 (set (pc)
        (label_ref 4535)) src/switch_core_media.c:3708 -1
     (nil)
 -> 4535)

(barrier 5327 5326 5329)

(code_label 5329 5327 5330 528 1486 "" [3 uses])

(note 5330 5329 5332 528 [bb 528] NOTE_INSN_BASIC_BLOCK)

(insn 5332 5330 5333 528 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 188 [ got_webrtc ])
            (const_int 0 [0]))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5333 5332 5334 528 (set (reg:SI 2535)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5334 5333 5335 528 (set (reg:QI 2534)
        (subreg:QI (reg:SI 2535) 0)) src/switch_core_media.c:3710 -1
     (nil))

(insn 5335 5334 5336 528 (set (reg:SI 2537)
        (mem/s:SI (plus:SI (reg/v/f:SI 813 [ m ])
                (const_int 28 [0x1c])) [44 m_1764->m_proto+0 S4 A32])) src/switch_core_media.c:3710 -1
     (nil))

(insn 5336 5335 5337 528 (set (reg:SI 2539)
        (const_int 257 [0x101])) src/switch_core_media.c:3710 -1
     (nil))

(insn 5337 5336 5338 528 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2537)
            (reg:SI 2539))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5338 5337 5339 528 (set (reg:SI 2538)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0]))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5339 5338 5340 528 (set (reg:QI 2536)
        (subreg:QI (reg:SI 2538) 0)) src/switch_core_media.c:3710 -1
     (nil))

(insn 5340 5339 5341 528 (set (reg:SI 2540)
        (and:SI (subreg:SI (reg:QI 2534) 0)
            (subreg:SI (reg:QI 2536) 0))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5341 5340 5342 528 (set (reg:QI 2541)
        (subreg:QI (reg:SI 2540) 0)) src/switch_core_media.c:3710 -1
     (nil))

(insn 5342 5341 5343 528 (set (reg:SI 2542)
        (zero_extend:SI (reg:QI 2541))) src/switch_core_media.c:3710 -1
     (nil))

(insn 5343 5342 5344 528 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2542)
            (const_int 0 [0]))) src/switch_core_media.c:3710 -1
     (nil))

(jump_insn 5344 5343 5345 528 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 5331)
            (pc))) src/switch_core_media.c:3710 -1
     (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil))
 -> 5331)

(note 5345 5344 5346 529 [bb 529] NOTE_INSN_BASIC_BLOCK)

(insn 5346 5345 5347 529 (set (reg/f:SI 720 [ prephitmp.1031 ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 507 [ attr ])
                (const_int 12 [0xc])) [2 attr_619->a_value+0 S4 A32])) src/switch_core_media.c:3710 -1
     (nil))

(jump_insn 5347 5346 5348 529 (set (pc)
        (label_ref 4535)) src/switch_core_media.c:3710 -1
     (nil)
 -> 4535)

(barrier 5348 5347 5349)

(code_label 5349 5348 5350 530 1495 "" [1 uses])

(note 5350 5349 5351 530 [bb 530] NOTE_INSN_BASIC_BLOCK)

(insn 5351 5350 5352 530 (set (reg:SI 2544)
        (const_int 23800 [0x5cf8])) src/switch_core_media.c:3745 -1
     (nil))

(insn 5352 5351 5353 530 (set (reg/f:SI 2543)
        (mem/s/f:SI (plus:SI (reg/v/f:SI 233 [ smh ])
                (reg:SI 2544)) [2 smh_186->mparams+0 S4 A32])) src/switch_core_media.c:3745 -1
     (nil))

(insn 5353 5352 5354 530 (set (reg:SI 2546)
        (mem/s:SI (plus:SI (reg/f:SI 2543)
                (const_int 16 [0x10])) [28 D.44471_998->ndlb+0 S4 A32])) src/switch_core_media.c:3745 -1
     (nil))

(insn 5354 5353 5355 530 (set (reg:SI 2545)
        (and:SI (reg:SI 2546)
            (const_int 1 [0x1]))) src/switch_core_media.c:3745 -1
     (nil))

(insn 5355 5354 5356 530 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2545)
            (const_int 0 [0]))) src/switch_core_media.c:3745 -1
     (nil))

(jump_insn 5356 5355 5359 530 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0]))
            (label_ref 4642)
            (pc))) src/switch_core_media.c:3745 -1
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 4642)

(note 5359 5356 5357 531 [bb 531] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5357 5359 5358 531 (set (pc)
        (label_ref 4657)) src/switch_core_media.c:3745 -1
     (nil)
 -> 4657)

(barrier 5358 5357 5360)

(code_label 5360 5358 5361 532 1397 "" [2 uses])

(note 5361 5360 57 532 [bb 532] NOTE_INSN_BASIC_BLOCK)

(insn 57 5361 58 532 (set (reg/v:SI 162 [ maxptime ])
        (reg/v:SI 164 [ dmaxptime ])) src/switch_core_media.c:3239 -1
     (nil))

(insn 58 57 5362 532 (set (reg/v:SI 158 [ ptime ])
        (reg/v:SI 160 [ dptime ])) src/switch_core_media.c:3239 -1
     (nil))

(jump_insn 5362 58 5363 532 (set (pc)
        (label_ref 2399)) src/switch_core_media.c:3745 -1
     (nil)
 -> 2399)

(barrier 5363 5362 5364)

(code_label 5364 5363 5365 533 1479 "" [2 uses])

(note 5365 5364 5366 533 [bb 533] NOTE_INSN_BASIC_BLOCK)

(jump_insn 5366 5365 5367 533 (set (pc)
        (label_ref 4563)) src/switch_core_media.c:3745 -1
     (nil)
 -> 4563)

(barrier 5367 5366 5373)

(note 5373 5367 5370 534 [bb 534] NOTE_INSN_BASIC_BLOCK)

(insn 5370 5373 5371 534 (clobber (reg/i:SI 0 r0)) src/switch_core_media.c:3860 -1
     (nil))

(insn 5371 5370 5368 534 (clobber (reg:SI 1024 [ <retval> ])) src/switch_core_media.c:3860 -1
     (nil))

(code_label 5368 5371 5583 535 1329 "" [1 uses])

(note 5583 5368 5369 535 [bb 535] NOTE_INSN_BASIC_BLOCK)

(insn 5369 5583 5372 535 (set (reg/i:SI 0 r0)
        (reg:SI 1024 [ <retval> ])) src/switch_core_media.c:3860 -1
     (nil))

(insn 5372 5369 0 535 (use (reg/i:SI 0 r0)) src/switch_core_media.c:3860 -1
     (nil))
